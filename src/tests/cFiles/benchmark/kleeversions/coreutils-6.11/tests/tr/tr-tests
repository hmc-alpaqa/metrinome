#! /bin/sh
# This script was generated automatically by mk-script.
case $# in
  0) xx='tr';;
  *) xx="$1";;
esac
test "$VERBOSE" && echo=echo || echo=:
$echo testing program: $xx
errors=0
test "$srcdir" || srcdir=.
test "$VERBOSE" && $xx --version 2> /dev/null

# Make sure we get English translations.
LANGUAGE=C
export LANGUAGE
LC_ALL=C
export LC_ALL
LANG=C
export LANG

cat $srcdir/1.I | $xx 'abcd' '[]*]' > 1.O 2> 1.E
code=$?
if test $code != 0; then
  $echo "Test 1(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 1.O $srcdir/1.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 1(|)"; fi;;
    1) $echo "Test 1(|) failed: files 1.O and $srcdir/1.X differ" 1>&2
       (diff -c 1.O $srcdir/1.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 1(|) may have failed." 1>&2
       $echo The command "cmp 1.O $srcdir/1.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 1.E || rm -f 1.E
$xx 'abcd' '[]*]' < $srcdir/1.I > 1.O 2> 1.E
code=$?
if test $code != 0; then
  $echo "Test 1(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 1.O $srcdir/1.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 1(<)"; fi;;
    1) $echo "Test 1(<) failed: files 1.O and $srcdir/1.X differ" 1>&2
       (diff -c 1.O $srcdir/1.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 1(<) may have failed." 1>&2
       $echo The command "cmp 1.O $srcdir/1.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 1.E || rm -f 1.E
cat $srcdir/2.I | $xx 'abc' '[%*]xyz' > 2.O 2> 2.E
code=$?
if test $code != 0; then
  $echo "Test 2(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 2.O $srcdir/2.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 2(|)"; fi;;
    1) $echo "Test 2(|) failed: files 2.O and $srcdir/2.X differ" 1>&2
       (diff -c 2.O $srcdir/2.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 2(|) may have failed." 1>&2
       $echo The command "cmp 2.O $srcdir/2.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 2.E || rm -f 2.E
$xx 'abc' '[%*]xyz' < $srcdir/2.I > 2.O 2> 2.E
code=$?
if test $code != 0; then
  $echo "Test 2(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 2.O $srcdir/2.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 2(<)"; fi;;
    1) $echo "Test 2(<) failed: files 2.O and $srcdir/2.X differ" 1>&2
       (diff -c 2.O $srcdir/2.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 2(<) may have failed." 1>&2
       $echo The command "cmp 2.O $srcdir/2.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 2.E || rm -f 2.E
cat $srcdir/3.I | $xx '' '[.*]' > 3.O 2> 3.E
code=$?
if test $code != 0; then
  $echo "Test 3(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 3.O $srcdir/3.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 3(|)"; fi;;
    1) $echo "Test 3(|) failed: files 3.O and $srcdir/3.X differ" 1>&2
       (diff -c 3.O $srcdir/3.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 3(|) may have failed." 1>&2
       $echo The command "cmp 3.O $srcdir/3.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 3.E || rm -f 3.E
$xx '' '[.*]' < $srcdir/3.I > 3.O 2> 3.E
code=$?
if test $code != 0; then
  $echo "Test 3(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 3.O $srcdir/3.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 3(<)"; fi;;
    1) $echo "Test 3(<) failed: files 3.O and $srcdir/3.X differ" 1>&2
       (diff -c 3.O $srcdir/3.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 3(<) may have failed." 1>&2
       $echo The command "cmp 3.O $srcdir/3.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 3.E || rm -f 3.E
cat $srcdir/4.I | $xx -t 'abcd' 'xy' > 4.O 2> 4.E
code=$?
if test $code != 0; then
  $echo "Test 4(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 4.O $srcdir/4.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 4(|)"; fi;;
    1) $echo "Test 4(|) failed: files 4.O and $srcdir/4.X differ" 1>&2
       (diff -c 4.O $srcdir/4.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 4(|) may have failed." 1>&2
       $echo The command "cmp 4.O $srcdir/4.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 4.E || rm -f 4.E
$xx -t 'abcd' 'xy' < $srcdir/4.I > 4.O 2> 4.E
code=$?
if test $code != 0; then
  $echo "Test 4(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 4.O $srcdir/4.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 4(<)"; fi;;
    1) $echo "Test 4(<) failed: files 4.O and $srcdir/4.X differ" 1>&2
       (diff -c 4.O $srcdir/4.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 4(<) may have failed." 1>&2
       $echo The command "cmp 4.O $srcdir/4.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 4.E || rm -f 4.E
cat $srcdir/5.I | $xx 'abcd' 'xy' > 5.O 2> 5.E
code=$?
if test $code != 0; then
  $echo "Test 5(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 5.O $srcdir/5.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 5(|)"; fi;;
    1) $echo "Test 5(|) failed: files 5.O and $srcdir/5.X differ" 1>&2
       (diff -c 5.O $srcdir/5.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 5(|) may have failed." 1>&2
       $echo The command "cmp 5.O $srcdir/5.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 5.E || rm -f 5.E
$xx 'abcd' 'xy' < $srcdir/5.I > 5.O 2> 5.E
code=$?
if test $code != 0; then
  $echo "Test 5(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 5.O $srcdir/5.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 5(<)"; fi;;
    1) $echo "Test 5(<) failed: files 5.O and $srcdir/5.X differ" 1>&2
       (diff -c 5.O $srcdir/5.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 5(<) may have failed." 1>&2
       $echo The command "cmp 5.O $srcdir/5.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 5.E || rm -f 5.E
cat $srcdir/6.I | $xx 'abcd' 'x[y*]' > 6.O 2> 6.E
code=$?
if test $code != 0; then
  $echo "Test 6(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 6.O $srcdir/6.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 6(|)"; fi;;
    1) $echo "Test 6(|) failed: files 6.O and $srcdir/6.X differ" 1>&2
       (diff -c 6.O $srcdir/6.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 6(|) may have failed." 1>&2
       $echo The command "cmp 6.O $srcdir/6.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 6.E || rm -f 6.E
$xx 'abcd' 'x[y*]' < $srcdir/6.I > 6.O 2> 6.E
code=$?
if test $code != 0; then
  $echo "Test 6(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 6.O $srcdir/6.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 6(<)"; fi;;
    1) $echo "Test 6(<) failed: files 6.O and $srcdir/6.X differ" 1>&2
       (diff -c 6.O $srcdir/6.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 6(<) may have failed." 1>&2
       $echo The command "cmp 6.O $srcdir/6.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 6.E || rm -f 6.E
cat $srcdir/7.I | $xx -s 'a-p' '%[.*]$' > 7.O 2> 7.E
code=$?
if test $code != 0; then
  $echo "Test 7(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 7.O $srcdir/7.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 7(|)"; fi;;
    1) $echo "Test 7(|) failed: files 7.O and $srcdir/7.X differ" 1>&2
       (diff -c 7.O $srcdir/7.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 7(|) may have failed." 1>&2
       $echo The command "cmp 7.O $srcdir/7.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 7.E || rm -f 7.E
$xx -s 'a-p' '%[.*]$' < $srcdir/7.I > 7.O 2> 7.E
code=$?
if test $code != 0; then
  $echo "Test 7(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 7.O $srcdir/7.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 7(<)"; fi;;
    1) $echo "Test 7(<) failed: files 7.O and $srcdir/7.X differ" 1>&2
       (diff -c 7.O $srcdir/7.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 7(<) may have failed." 1>&2
       $echo The command "cmp 7.O $srcdir/7.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 7.E || rm -f 7.E
cat $srcdir/8.I | $xx -s 'a-p' '[.*]$' > 8.O 2> 8.E
code=$?
if test $code != 0; then
  $echo "Test 8(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 8.O $srcdir/8.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 8(|)"; fi;;
    1) $echo "Test 8(|) failed: files 8.O and $srcdir/8.X differ" 1>&2
       (diff -c 8.O $srcdir/8.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 8(|) may have failed." 1>&2
       $echo The command "cmp 8.O $srcdir/8.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 8.E || rm -f 8.E
$xx -s 'a-p' '[.*]$' < $srcdir/8.I > 8.O 2> 8.E
code=$?
if test $code != 0; then
  $echo "Test 8(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 8.O $srcdir/8.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 8(<)"; fi;;
    1) $echo "Test 8(<) failed: files 8.O and $srcdir/8.X differ" 1>&2
       (diff -c 8.O $srcdir/8.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 8(<) may have failed." 1>&2
       $echo The command "cmp 8.O $srcdir/8.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 8.E || rm -f 8.E
cat $srcdir/9.I | $xx -s 'a-p' '%[.*]' > 9.O 2> 9.E
code=$?
if test $code != 0; then
  $echo "Test 9(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 9.O $srcdir/9.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 9(|)"; fi;;
    1) $echo "Test 9(|) failed: files 9.O and $srcdir/9.X differ" 1>&2
       (diff -c 9.O $srcdir/9.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 9(|) may have failed." 1>&2
       $echo The command "cmp 9.O $srcdir/9.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 9.E || rm -f 9.E
$xx -s 'a-p' '%[.*]' < $srcdir/9.I > 9.O 2> 9.E
code=$?
if test $code != 0; then
  $echo "Test 9(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 9.O $srcdir/9.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed 9(<)"; fi;;
    1) $echo "Test 9(<) failed: files 9.O and $srcdir/9.X differ" 1>&2
       (diff -c 9.O $srcdir/9.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test 9(<) may have failed." 1>&2
       $echo The command "cmp 9.O $srcdir/9.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s 9.E || rm -f 9.E
cat $srcdir/a.I | $xx -s '[a-z]' > a.O 2> a.E
code=$?
if test $code != 0; then
  $echo "Test a(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp a.O $srcdir/a.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed a(|)"; fi;;
    1) $echo "Test a(|) failed: files a.O and $srcdir/a.X differ" 1>&2
       (diff -c a.O $srcdir/a.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test a(|) may have failed." 1>&2
       $echo The command "cmp a.O $srcdir/a.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s a.E || rm -f a.E
$xx -s '[a-z]' < $srcdir/a.I > a.O 2> a.E
code=$?
if test $code != 0; then
  $echo "Test a(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp a.O $srcdir/a.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed a(<)"; fi;;
    1) $echo "Test a(<) failed: files a.O and $srcdir/a.X differ" 1>&2
       (diff -c a.O $srcdir/a.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test a(<) may have failed." 1>&2
       $echo The command "cmp a.O $srcdir/a.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s a.E || rm -f a.E
cat $srcdir/b.I | $xx -s '[a-c]' > b.O 2> b.E
code=$?
if test $code != 0; then
  $echo "Test b(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b.O $srcdir/b.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed b(|)"; fi;;
    1) $echo "Test b(|) failed: files b.O and $srcdir/b.X differ" 1>&2
       (diff -c b.O $srcdir/b.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test b(|) may have failed." 1>&2
       $echo The command "cmp b.O $srcdir/b.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s b.E || rm -f b.E
$xx -s '[a-c]' < $srcdir/b.I > b.O 2> b.E
code=$?
if test $code != 0; then
  $echo "Test b(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b.O $srcdir/b.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed b(<)"; fi;;
    1) $echo "Test b(<) failed: files b.O and $srcdir/b.X differ" 1>&2
       (diff -c b.O $srcdir/b.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test b(<) may have failed." 1>&2
       $echo The command "cmp b.O $srcdir/b.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s b.E || rm -f b.E
cat $srcdir/c.I | $xx -s '[a-b]' > c.O 2> c.E
code=$?
if test $code != 0; then
  $echo "Test c(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp c.O $srcdir/c.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed c(|)"; fi;;
    1) $echo "Test c(|) failed: files c.O and $srcdir/c.X differ" 1>&2
       (diff -c c.O $srcdir/c.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test c(|) may have failed." 1>&2
       $echo The command "cmp c.O $srcdir/c.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s c.E || rm -f c.E
$xx -s '[a-b]' < $srcdir/c.I > c.O 2> c.E
code=$?
if test $code != 0; then
  $echo "Test c(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp c.O $srcdir/c.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed c(<)"; fi;;
    1) $echo "Test c(<) failed: files c.O and $srcdir/c.X differ" 1>&2
       (diff -c c.O $srcdir/c.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test c(<) may have failed." 1>&2
       $echo The command "cmp c.O $srcdir/c.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s c.E || rm -f c.E
cat $srcdir/d.I | $xx -s '[b-c]' > d.O 2> d.E
code=$?
if test $code != 0; then
  $echo "Test d(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp d.O $srcdir/d.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed d(|)"; fi;;
    1) $echo "Test d(|) failed: files d.O and $srcdir/d.X differ" 1>&2
       (diff -c d.O $srcdir/d.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test d(|) may have failed." 1>&2
       $echo The command "cmp d.O $srcdir/d.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s d.E || rm -f d.E
$xx -s '[b-c]' < $srcdir/d.I > d.O 2> d.E
code=$?
if test $code != 0; then
  $echo "Test d(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp d.O $srcdir/d.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed d(<)"; fi;;
    1) $echo "Test d(<) failed: files d.O and $srcdir/d.X differ" 1>&2
       (diff -c d.O $srcdir/d.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test d(<) may have failed." 1>&2
       $echo The command "cmp d.O $srcdir/d.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s d.E || rm -f d.E
cat $srcdir/e.I | $xx -s '[\0-\5]' > e.O 2> e.E
code=$?
if test $code != 0; then
  $echo "Test e(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp e.O $srcdir/e.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed e(|)"; fi;;
    1) $echo "Test e(|) failed: files e.O and $srcdir/e.X differ" 1>&2
       (diff -c e.O $srcdir/e.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test e(|) may have failed." 1>&2
       $echo The command "cmp e.O $srcdir/e.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s e.E || rm -f e.E
$xx -s '[\0-\5]' < $srcdir/e.I > e.O 2> e.E
code=$?
if test $code != 0; then
  $echo "Test e(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp e.O $srcdir/e.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed e(<)"; fi;;
    1) $echo "Test e(<) failed: files e.O and $srcdir/e.X differ" 1>&2
       (diff -c e.O $srcdir/e.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test e(<) may have failed." 1>&2
       $echo The command "cmp e.O $srcdir/e.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s e.E || rm -f e.E
cat $srcdir/f.I | $xx -d '[=[=]' > f.O 2> f.E
code=$?
if test $code != 0; then
  $echo "Test f(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp f.O $srcdir/f.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed f(|)"; fi;;
    1) $echo "Test f(|) failed: files f.O and $srcdir/f.X differ" 1>&2
       (diff -c f.O $srcdir/f.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test f(|) may have failed." 1>&2
       $echo The command "cmp f.O $srcdir/f.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s f.E || rm -f f.E
$xx -d '[=[=]' < $srcdir/f.I > f.O 2> f.E
code=$?
if test $code != 0; then
  $echo "Test f(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp f.O $srcdir/f.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed f(<)"; fi;;
    1) $echo "Test f(<) failed: files f.O and $srcdir/f.X differ" 1>&2
       (diff -c f.O $srcdir/f.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test f(<) may have failed." 1>&2
       $echo The command "cmp f.O $srcdir/f.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s f.E || rm -f f.E
cat $srcdir/g.I | $xx -d '[=]=]' > g.O 2> g.E
code=$?
if test $code != 0; then
  $echo "Test g(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp g.O $srcdir/g.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed g(|)"; fi;;
    1) $echo "Test g(|) failed: files g.O and $srcdir/g.X differ" 1>&2
       (diff -c g.O $srcdir/g.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test g(|) may have failed." 1>&2
       $echo The command "cmp g.O $srcdir/g.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s g.E || rm -f g.E
$xx -d '[=]=]' < $srcdir/g.I > g.O 2> g.E
code=$?
if test $code != 0; then
  $echo "Test g(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp g.O $srcdir/g.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed g(<)"; fi;;
    1) $echo "Test g(<) failed: files g.O and $srcdir/g.X differ" 1>&2
       (diff -c g.O $srcdir/g.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test g(<) may have failed." 1>&2
       $echo The command "cmp g.O $srcdir/g.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s g.E || rm -f g.E
cat $srcdir/h.I | $xx -d '[:xdigit:]' > h.O 2> h.E
code=$?
if test $code != 0; then
  $echo "Test h(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp h.O $srcdir/h.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed h(|)"; fi;;
    1) $echo "Test h(|) failed: files h.O and $srcdir/h.X differ" 1>&2
       (diff -c h.O $srcdir/h.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test h(|) may have failed." 1>&2
       $echo The command "cmp h.O $srcdir/h.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s h.E || rm -f h.E
$xx -d '[:xdigit:]' < $srcdir/h.I > h.O 2> h.E
code=$?
if test $code != 0; then
  $echo "Test h(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp h.O $srcdir/h.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed h(<)"; fi;;
    1) $echo "Test h(<) failed: files h.O and $srcdir/h.X differ" 1>&2
       (diff -c h.O $srcdir/h.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test h(<) may have failed." 1>&2
       $echo The command "cmp h.O $srcdir/h.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s h.E || rm -f h.E
cat $srcdir/i.I | $xx -d '[:xdigit:]' > i.O 2> i.E
code=$?
if test $code != 0; then
  $echo "Test i(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp i.O $srcdir/i.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed i(|)"; fi;;
    1) $echo "Test i(|) failed: files i.O and $srcdir/i.X differ" 1>&2
       (diff -c i.O $srcdir/i.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test i(|) may have failed." 1>&2
       $echo The command "cmp i.O $srcdir/i.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s i.E || rm -f i.E
$xx -d '[:xdigit:]' < $srcdir/i.I > i.O 2> i.E
code=$?
if test $code != 0; then
  $echo "Test i(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp i.O $srcdir/i.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed i(<)"; fi;;
    1) $echo "Test i(<) failed: files i.O and $srcdir/i.X differ" 1>&2
       (diff -c i.O $srcdir/i.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test i(<) may have failed." 1>&2
       $echo The command "cmp i.O $srcdir/i.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s i.E || rm -f i.E
cat $srcdir/j.I | $xx -d '[:digit:]' > j.O 2> j.E
code=$?
if test $code != 0; then
  $echo "Test j(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp j.O $srcdir/j.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed j(|)"; fi;;
    1) $echo "Test j(|) failed: files j.O and $srcdir/j.X differ" 1>&2
       (diff -c j.O $srcdir/j.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test j(|) may have failed." 1>&2
       $echo The command "cmp j.O $srcdir/j.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s j.E || rm -f j.E
$xx -d '[:digit:]' < $srcdir/j.I > j.O 2> j.E
code=$?
if test $code != 0; then
  $echo "Test j(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp j.O $srcdir/j.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed j(<)"; fi;;
    1) $echo "Test j(<) failed: files j.O and $srcdir/j.X differ" 1>&2
       (diff -c j.O $srcdir/j.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test j(<) may have failed." 1>&2
       $echo The command "cmp j.O $srcdir/j.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s j.E || rm -f j.E
cat $srcdir/k.I | $xx -d '[:digit:]' > k.O 2> k.E
code=$?
if test $code != 0; then
  $echo "Test k(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp k.O $srcdir/k.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed k(|)"; fi;;
    1) $echo "Test k(|) failed: files k.O and $srcdir/k.X differ" 1>&2
       (diff -c k.O $srcdir/k.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test k(|) may have failed." 1>&2
       $echo The command "cmp k.O $srcdir/k.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s k.E || rm -f k.E
$xx -d '[:digit:]' < $srcdir/k.I > k.O 2> k.E
code=$?
if test $code != 0; then
  $echo "Test k(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp k.O $srcdir/k.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed k(<)"; fi;;
    1) $echo "Test k(<) failed: files k.O and $srcdir/k.X differ" 1>&2
       (diff -c k.O $srcdir/k.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test k(<) may have failed." 1>&2
       $echo The command "cmp k.O $srcdir/k.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s k.E || rm -f k.E
cat $srcdir/l.I | $xx -d '[:lower:]' > l.O 2> l.E
code=$?
if test $code != 0; then
  $echo "Test l(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp l.O $srcdir/l.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed l(|)"; fi;;
    1) $echo "Test l(|) failed: files l.O and $srcdir/l.X differ" 1>&2
       (diff -c l.O $srcdir/l.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test l(|) may have failed." 1>&2
       $echo The command "cmp l.O $srcdir/l.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s l.E || rm -f l.E
$xx -d '[:lower:]' < $srcdir/l.I > l.O 2> l.E
code=$?
if test $code != 0; then
  $echo "Test l(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp l.O $srcdir/l.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed l(<)"; fi;;
    1) $echo "Test l(<) failed: files l.O and $srcdir/l.X differ" 1>&2
       (diff -c l.O $srcdir/l.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test l(<) may have failed." 1>&2
       $echo The command "cmp l.O $srcdir/l.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s l.E || rm -f l.E
cat $srcdir/m.I | $xx -d '[:upper:]' > m.O 2> m.E
code=$?
if test $code != 0; then
  $echo "Test m(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp m.O $srcdir/m.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed m(|)"; fi;;
    1) $echo "Test m(|) failed: files m.O and $srcdir/m.X differ" 1>&2
       (diff -c m.O $srcdir/m.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test m(|) may have failed." 1>&2
       $echo The command "cmp m.O $srcdir/m.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s m.E || rm -f m.E
$xx -d '[:upper:]' < $srcdir/m.I > m.O 2> m.E
code=$?
if test $code != 0; then
  $echo "Test m(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp m.O $srcdir/m.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed m(<)"; fi;;
    1) $echo "Test m(<) failed: files m.O and $srcdir/m.X differ" 1>&2
       (diff -c m.O $srcdir/m.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test m(<) may have failed." 1>&2
       $echo The command "cmp m.O $srcdir/m.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s m.E || rm -f m.E
cat $srcdir/n.I | $xx -d '[:lower:][:upper:]' > n.O 2> n.E
code=$?
if test $code != 0; then
  $echo "Test n(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp n.O $srcdir/n.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed n(|)"; fi;;
    1) $echo "Test n(|) failed: files n.O and $srcdir/n.X differ" 1>&2
       (diff -c n.O $srcdir/n.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test n(|) may have failed." 1>&2
       $echo The command "cmp n.O $srcdir/n.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s n.E || rm -f n.E
$xx -d '[:lower:][:upper:]' < $srcdir/n.I > n.O 2> n.E
code=$?
if test $code != 0; then
  $echo "Test n(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp n.O $srcdir/n.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed n(<)"; fi;;
    1) $echo "Test n(<) failed: files n.O and $srcdir/n.X differ" 1>&2
       (diff -c n.O $srcdir/n.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test n(<) may have failed." 1>&2
       $echo The command "cmp n.O $srcdir/n.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s n.E || rm -f n.E
cat $srcdir/o.I | $xx -d '[:alpha:]' > o.O 2> o.E
code=$?
if test $code != 0; then
  $echo "Test o(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp o.O $srcdir/o.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed o(|)"; fi;;
    1) $echo "Test o(|) failed: files o.O and $srcdir/o.X differ" 1>&2
       (diff -c o.O $srcdir/o.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test o(|) may have failed." 1>&2
       $echo The command "cmp o.O $srcdir/o.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s o.E || rm -f o.E
$xx -d '[:alpha:]' < $srcdir/o.I > o.O 2> o.E
code=$?
if test $code != 0; then
  $echo "Test o(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp o.O $srcdir/o.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed o(<)"; fi;;
    1) $echo "Test o(<) failed: files o.O and $srcdir/o.X differ" 1>&2
       (diff -c o.O $srcdir/o.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test o(<) may have failed." 1>&2
       $echo The command "cmp o.O $srcdir/o.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s o.E || rm -f o.E
cat $srcdir/p.I | $xx -d '[:alnum:]' > p.O 2> p.E
code=$?
if test $code != 0; then
  $echo "Test p(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp p.O $srcdir/p.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed p(|)"; fi;;
    1) $echo "Test p(|) failed: files p.O and $srcdir/p.X differ" 1>&2
       (diff -c p.O $srcdir/p.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test p(|) may have failed." 1>&2
       $echo The command "cmp p.O $srcdir/p.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s p.E || rm -f p.E
$xx -d '[:alnum:]' < $srcdir/p.I > p.O 2> p.E
code=$?
if test $code != 0; then
  $echo "Test p(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp p.O $srcdir/p.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed p(<)"; fi;;
    1) $echo "Test p(<) failed: files p.O and $srcdir/p.X differ" 1>&2
       (diff -c p.O $srcdir/p.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test p(<) may have failed." 1>&2
       $echo The command "cmp p.O $srcdir/p.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s p.E || rm -f p.E
cat $srcdir/q.I | $xx -d '[:alnum:]' > q.O 2> q.E
code=$?
if test $code != 0; then
  $echo "Test q(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp q.O $srcdir/q.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed q(|)"; fi;;
    1) $echo "Test q(|) failed: files q.O and $srcdir/q.X differ" 1>&2
       (diff -c q.O $srcdir/q.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test q(|) may have failed." 1>&2
       $echo The command "cmp q.O $srcdir/q.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s q.E || rm -f q.E
$xx -d '[:alnum:]' < $srcdir/q.I > q.O 2> q.E
code=$?
if test $code != 0; then
  $echo "Test q(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp q.O $srcdir/q.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed q(<)"; fi;;
    1) $echo "Test q(<) failed: files q.O and $srcdir/q.X differ" 1>&2
       (diff -c q.O $srcdir/q.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test q(<) may have failed." 1>&2
       $echo The command "cmp q.O $srcdir/q.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s q.E || rm -f q.E
cat $srcdir/r.I | $xx -ds '[:alnum:]' '.' > r.O 2> r.E
code=$?
if test $code != 0; then
  $echo "Test r(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp r.O $srcdir/r.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed r(|)"; fi;;
    1) $echo "Test r(|) failed: files r.O and $srcdir/r.X differ" 1>&2
       (diff -c r.O $srcdir/r.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test r(|) may have failed." 1>&2
       $echo The command "cmp r.O $srcdir/r.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s r.E || rm -f r.E
$xx -ds '[:alnum:]' '.' < $srcdir/r.I > r.O 2> r.E
code=$?
if test $code != 0; then
  $echo "Test r(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp r.O $srcdir/r.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed r(<)"; fi;;
    1) $echo "Test r(<) failed: files r.O and $srcdir/r.X differ" 1>&2
       (diff -c r.O $srcdir/r.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test r(<) may have failed." 1>&2
       $echo The command "cmp r.O $srcdir/r.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s r.E || rm -f r.E
cat $srcdir/s.I | $xx -cs '[:alnum:]' '\n' > s.O 2> s.E
code=$?
if test $code != 0; then
  $echo "Test s(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp s.O $srcdir/s.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed s(|)"; fi;;
    1) $echo "Test s(|) failed: files s.O and $srcdir/s.X differ" 1>&2
       (diff -c s.O $srcdir/s.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test s(|) may have failed." 1>&2
       $echo The command "cmp s.O $srcdir/s.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s s.E || rm -f s.E
$xx -cs '[:alnum:]' '\n' < $srcdir/s.I > s.O 2> s.E
code=$?
if test $code != 0; then
  $echo "Test s(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp s.O $srcdir/s.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed s(<)"; fi;;
    1) $echo "Test s(<) failed: files s.O and $srcdir/s.X differ" 1>&2
       (diff -c s.O $srcdir/s.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test s(<) may have failed." 1>&2
       $echo The command "cmp s.O $srcdir/s.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s s.E || rm -f s.E
cat $srcdir/t.I | $xx -cs '[:alnum:]' '[\n*]' > t.O 2> t.E
code=$?
if test $code != 0; then
  $echo "Test t(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp t.O $srcdir/t.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed t(|)"; fi;;
    1) $echo "Test t(|) failed: files t.O and $srcdir/t.X differ" 1>&2
       (diff -c t.O $srcdir/t.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test t(|) may have failed." 1>&2
       $echo The command "cmp t.O $srcdir/t.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s t.E || rm -f t.E
$xx -cs '[:alnum:]' '[\n*]' < $srcdir/t.I > t.O 2> t.E
code=$?
if test $code != 0; then
  $echo "Test t(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp t.O $srcdir/t.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed t(<)"; fi;;
    1) $echo "Test t(<) failed: files t.O and $srcdir/t.X differ" 1>&2
       (diff -c t.O $srcdir/t.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test t(<) may have failed." 1>&2
       $echo The command "cmp t.O $srcdir/t.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s t.E || rm -f t.E
cat $srcdir/u.I | $xx -ds 'b' 'a' > u.O 2> u.E
code=$?
if test $code != 0; then
  $echo "Test u(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp u.O $srcdir/u.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed u(|)"; fi;;
    1) $echo "Test u(|) failed: files u.O and $srcdir/u.X differ" 1>&2
       (diff -c u.O $srcdir/u.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test u(|) may have failed." 1>&2
       $echo The command "cmp u.O $srcdir/u.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s u.E || rm -f u.E
$xx -ds 'b' 'a' < $srcdir/u.I > u.O 2> u.E
code=$?
if test $code != 0; then
  $echo "Test u(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp u.O $srcdir/u.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed u(<)"; fi;;
    1) $echo "Test u(<) failed: files u.O and $srcdir/u.X differ" 1>&2
       (diff -c u.O $srcdir/u.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test u(<) may have failed." 1>&2
       $echo The command "cmp u.O $srcdir/u.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s u.E || rm -f u.E
cat $srcdir/v.I | $xx -ds '[:xdigit:]' 'Z' > v.O 2> v.E
code=$?
if test $code != 0; then
  $echo "Test v(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp v.O $srcdir/v.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed v(|)"; fi;;
    1) $echo "Test v(|) failed: files v.O and $srcdir/v.X differ" 1>&2
       (diff -c v.O $srcdir/v.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test v(|) may have failed." 1>&2
       $echo The command "cmp v.O $srcdir/v.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s v.E || rm -f v.E
$xx -ds '[:xdigit:]' 'Z' < $srcdir/v.I > v.O 2> v.E
code=$?
if test $code != 0; then
  $echo "Test v(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp v.O $srcdir/v.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed v(<)"; fi;;
    1) $echo "Test v(<) failed: files v.O and $srcdir/v.X differ" 1>&2
       (diff -c v.O $srcdir/v.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test v(<) may have failed." 1>&2
       $echo The command "cmp v.O $srcdir/v.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s v.E || rm -f v.E
cat $srcdir/w.I | $xx -ds '\350' '\345' > w.O 2> w.E
code=$?
if test $code != 0; then
  $echo "Test w(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp w.O $srcdir/w.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed w(|)"; fi;;
    1) $echo "Test w(|) failed: files w.O and $srcdir/w.X differ" 1>&2
       (diff -c w.O $srcdir/w.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test w(|) may have failed." 1>&2
       $echo The command "cmp w.O $srcdir/w.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s w.E || rm -f w.E
$xx -ds '\350' '\345' < $srcdir/w.I > w.O 2> w.E
code=$?
if test $code != 0; then
  $echo "Test w(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp w.O $srcdir/w.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed w(<)"; fi;;
    1) $echo "Test w(<) failed: files w.O and $srcdir/w.X differ" 1>&2
       (diff -c w.O $srcdir/w.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test w(<) may have failed." 1>&2
       $echo The command "cmp w.O $srcdir/w.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s w.E || rm -f w.E
cat $srcdir/x.I | $xx -s 'abcdefghijklmn' '[:*016]' > x.O 2> x.E
code=$?
if test $code != 0; then
  $echo "Test x(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp x.O $srcdir/x.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed x(|)"; fi;;
    1) $echo "Test x(|) failed: files x.O and $srcdir/x.X differ" 1>&2
       (diff -c x.O $srcdir/x.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test x(|) may have failed." 1>&2
       $echo The command "cmp x.O $srcdir/x.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s x.E || rm -f x.E
$xx -s 'abcdefghijklmn' '[:*016]' < $srcdir/x.I > x.O 2> x.E
code=$?
if test $code != 0; then
  $echo "Test x(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp x.O $srcdir/x.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed x(<)"; fi;;
    1) $echo "Test x(<) failed: files x.O and $srcdir/x.X differ" 1>&2
       (diff -c x.O $srcdir/x.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test x(<) may have failed." 1>&2
       $echo The command "cmp x.O $srcdir/x.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s x.E || rm -f x.E
cat $srcdir/y.I | $xx -d 'a-z' > y.O 2> y.E
code=$?
if test $code != 0; then
  $echo "Test y(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp y.O $srcdir/y.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed y(|)"; fi;;
    1) $echo "Test y(|) failed: files y.O and $srcdir/y.X differ" 1>&2
       (diff -c y.O $srcdir/y.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test y(|) may have failed." 1>&2
       $echo The command "cmp y.O $srcdir/y.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s y.E || rm -f y.E
$xx -d 'a-z' < $srcdir/y.I > y.O 2> y.E
code=$?
if test $code != 0; then
  $echo "Test y(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp y.O $srcdir/y.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed y(<)"; fi;;
    1) $echo "Test y(<) failed: files y.O and $srcdir/y.X differ" 1>&2
       (diff -c y.O $srcdir/y.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test y(<) may have failed." 1>&2
       $echo The command "cmp y.O $srcdir/y.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s y.E || rm -f y.E
cat $srcdir/z.I | $xx -ds 'a-z' '$.' > z.O 2> z.E
code=$?
if test $code != 0; then
  $echo "Test z(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp z.O $srcdir/z.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed z(|)"; fi;;
    1) $echo "Test z(|) failed: files z.O and $srcdir/z.X differ" 1>&2
       (diff -c z.O $srcdir/z.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test z(|) may have failed." 1>&2
       $echo The command "cmp z.O $srcdir/z.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s z.E || rm -f z.E
$xx -ds 'a-z' '$.' < $srcdir/z.I > z.O 2> z.E
code=$?
if test $code != 0; then
  $echo "Test z(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp z.O $srcdir/z.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed z(<)"; fi;;
    1) $echo "Test z(<) failed: files z.O and $srcdir/z.X differ" 1>&2
       (diff -c z.O $srcdir/z.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test z(<) may have failed." 1>&2
       $echo The command "cmp z.O $srcdir/z.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s z.E || rm -f z.E
cat $srcdir/range-a-a.I | $xx 'a-a' 'z' > range-a-a.O 2> range-a-a.E
code=$?
if test $code != 0; then
  $echo "Test range-a-a(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp range-a-a.O $srcdir/range-a-a.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed range-a-a(|)"; fi;;
    1) $echo "Test range-a-a(|) failed: files range-a-a.O and $srcdir/range-a-a.X differ" 1>&2
       (diff -c range-a-a.O $srcdir/range-a-a.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test range-a-a(|) may have failed." 1>&2
       $echo The command "cmp range-a-a.O $srcdir/range-a-a.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s range-a-a.E || rm -f range-a-a.E
$xx 'a-a' 'z' < $srcdir/range-a-a.I > range-a-a.O 2> range-a-a.E
code=$?
if test $code != 0; then
  $echo "Test range-a-a(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp range-a-a.O $srcdir/range-a-a.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed range-a-a(<)"; fi;;
    1) $echo "Test range-a-a(<) failed: files range-a-a.O and $srcdir/range-a-a.X differ" 1>&2
       (diff -c range-a-a.O $srcdir/range-a-a.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test range-a-a(<) may have failed." 1>&2
       $echo The command "cmp range-a-a.O $srcdir/range-a-a.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s range-a-a.E || rm -f range-a-a.E
cat $srcdir/null.I | $xx 'a' '''' > null.O 2> null.E
code=$?
if test $code != 1; then
  $echo "Test null(|) failed: $xx return code $code differs from expected value 1" 1>&2
  errors=`expr $errors + 1`
else
  cmp null.O $srcdir/null.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed null(|)"; fi;;
    1) $echo "Test null(|) failed: files null.O and $srcdir/null.X differ" 1>&2
       (diff -c null.O $srcdir/null.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test null(|) may have failed." 1>&2
       $echo The command "cmp null.O $srcdir/null.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s null.E || rm -f null.E
$xx 'a' '''' < $srcdir/null.I > null.O 2> null.E
code=$?
if test $code != 1; then
  $echo "Test null(<) failed: $xx return code $code differs from expected value 1" 1>&2
  errors=`expr $errors + 1`
else
  cmp null.O $srcdir/null.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed null(<)"; fi;;
    1) $echo "Test null(<) failed: files null.O and $srcdir/null.X differ" 1>&2
       (diff -c null.O $srcdir/null.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test null(<) may have failed." 1>&2
       $echo The command "cmp null.O $srcdir/null.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s null.E || rm -f null.E
cat $srcdir/upcase.I | $xx '[:lower:]' '[:upper:]' > upcase.O 2> upcase.E
code=$?
if test $code != 0; then
  $echo "Test upcase(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp upcase.O $srcdir/upcase.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed upcase(|)"; fi;;
    1) $echo "Test upcase(|) failed: files upcase.O and $srcdir/upcase.X differ" 1>&2
       (diff -c upcase.O $srcdir/upcase.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test upcase(|) may have failed." 1>&2
       $echo The command "cmp upcase.O $srcdir/upcase.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s upcase.E || rm -f upcase.E
$xx '[:lower:]' '[:upper:]' < $srcdir/upcase.I > upcase.O 2> upcase.E
code=$?
if test $code != 0; then
  $echo "Test upcase(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp upcase.O $srcdir/upcase.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed upcase(<)"; fi;;
    1) $echo "Test upcase(<) failed: files upcase.O and $srcdir/upcase.X differ" 1>&2
       (diff -c upcase.O $srcdir/upcase.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test upcase(<) may have failed." 1>&2
       $echo The command "cmp upcase.O $srcdir/upcase.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s upcase.E || rm -f upcase.E
cat $srcdir/dncase.I | $xx '[:upper:]' '[:lower:]' > dncase.O 2> dncase.E
code=$?
if test $code != 0; then
  $echo "Test dncase(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp dncase.O $srcdir/dncase.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed dncase(|)"; fi;;
    1) $echo "Test dncase(|) failed: files dncase.O and $srcdir/dncase.X differ" 1>&2
       (diff -c dncase.O $srcdir/dncase.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test dncase(|) may have failed." 1>&2
       $echo The command "cmp dncase.O $srcdir/dncase.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s dncase.E || rm -f dncase.E
$xx '[:upper:]' '[:lower:]' < $srcdir/dncase.I > dncase.O 2> dncase.E
code=$?
if test $code != 0; then
  $echo "Test dncase(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp dncase.O $srcdir/dncase.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed dncase(<)"; fi;;
    1) $echo "Test dncase(<) failed: files dncase.O and $srcdir/dncase.X differ" 1>&2
       (diff -c dncase.O $srcdir/dncase.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test dncase(<) may have failed." 1>&2
       $echo The command "cmp dncase.O $srcdir/dncase.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s dncase.E || rm -f dncase.E
cat $srcdir/rep-cclass.I | $xx 'a[=*2][=c=]' 'xyyz' > rep-cclass.O 2> rep-cclass.E
code=$?
if test $code != 0; then
  $echo "Test rep-cclass(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp rep-cclass.O $srcdir/rep-cclass.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed rep-cclass(|)"; fi;;
    1) $echo "Test rep-cclass(|) failed: files rep-cclass.O and $srcdir/rep-cclass.X differ" 1>&2
       (diff -c rep-cclass.O $srcdir/rep-cclass.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test rep-cclass(|) may have failed." 1>&2
       $echo The command "cmp rep-cclass.O $srcdir/rep-cclass.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s rep-cclass.E || rm -f rep-cclass.E
$xx 'a[=*2][=c=]' 'xyyz' < $srcdir/rep-cclass.I > rep-cclass.O 2> rep-cclass.E
code=$?
if test $code != 0; then
  $echo "Test rep-cclass(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp rep-cclass.O $srcdir/rep-cclass.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed rep-cclass(<)"; fi;;
    1) $echo "Test rep-cclass(<) failed: files rep-cclass.O and $srcdir/rep-cclass.X differ" 1>&2
       (diff -c rep-cclass.O $srcdir/rep-cclass.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test rep-cclass(<) may have failed." 1>&2
       $echo The command "cmp rep-cclass.O $srcdir/rep-cclass.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s rep-cclass.E || rm -f rep-cclass.E
cat $srcdir/rep-1.I | $xx '[:*3][:digit:]' 'a-m' > rep-1.O 2> rep-1.E
code=$?
if test $code != 0; then
  $echo "Test rep-1(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp rep-1.O $srcdir/rep-1.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed rep-1(|)"; fi;;
    1) $echo "Test rep-1(|) failed: files rep-1.O and $srcdir/rep-1.X differ" 1>&2
       (diff -c rep-1.O $srcdir/rep-1.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test rep-1(|) may have failed." 1>&2
       $echo The command "cmp rep-1.O $srcdir/rep-1.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s rep-1.E || rm -f rep-1.E
$xx '[:*3][:digit:]' 'a-m' < $srcdir/rep-1.I > rep-1.O 2> rep-1.E
code=$?
if test $code != 0; then
  $echo "Test rep-1(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp rep-1.O $srcdir/rep-1.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed rep-1(<)"; fi;;
    1) $echo "Test rep-1(<) failed: files rep-1.O and $srcdir/rep-1.X differ" 1>&2
       (diff -c rep-1.O $srcdir/rep-1.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test rep-1(<) may have failed." 1>&2
       $echo The command "cmp rep-1.O $srcdir/rep-1.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s rep-1.E || rm -f rep-1.E
cat $srcdir/rep-2.I | $xx 'a[b*512]c' '1[x*]2' > rep-2.O 2> rep-2.E
code=$?
if test $code != 0; then
  $echo "Test rep-2(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp rep-2.O $srcdir/rep-2.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed rep-2(|)"; fi;;
    1) $echo "Test rep-2(|) failed: files rep-2.O and $srcdir/rep-2.X differ" 1>&2
       (diff -c rep-2.O $srcdir/rep-2.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test rep-2(|) may have failed." 1>&2
       $echo The command "cmp rep-2.O $srcdir/rep-2.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s rep-2.E || rm -f rep-2.E
$xx 'a[b*512]c' '1[x*]2' < $srcdir/rep-2.I > rep-2.O 2> rep-2.E
code=$?
if test $code != 0; then
  $echo "Test rep-2(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp rep-2.O $srcdir/rep-2.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed rep-2(<)"; fi;;
    1) $echo "Test rep-2(<) failed: files rep-2.O and $srcdir/rep-2.X differ" 1>&2
       (diff -c rep-2.O $srcdir/rep-2.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test rep-2(<) may have failed." 1>&2
       $echo The command "cmp rep-2.O $srcdir/rep-2.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s rep-2.E || rm -f rep-2.E
cat $srcdir/rep-3.I | $xx 'a[b*513]c' '1[x*]2' > rep-3.O 2> rep-3.E
code=$?
if test $code != 0; then
  $echo "Test rep-3(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp rep-3.O $srcdir/rep-3.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed rep-3(|)"; fi;;
    1) $echo "Test rep-3(|) failed: files rep-3.O and $srcdir/rep-3.X differ" 1>&2
       (diff -c rep-3.O $srcdir/rep-3.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test rep-3(|) may have failed." 1>&2
       $echo The command "cmp rep-3.O $srcdir/rep-3.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s rep-3.E || rm -f rep-3.E
$xx 'a[b*513]c' '1[x*]2' < $srcdir/rep-3.I > rep-3.O 2> rep-3.E
code=$?
if test $code != 0; then
  $echo "Test rep-3(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp rep-3.O $srcdir/rep-3.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed rep-3(<)"; fi;;
    1) $echo "Test rep-3(<) failed: files rep-3.O and $srcdir/rep-3.X differ" 1>&2
       (diff -c rep-3.O $srcdir/rep-3.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test rep-3(<) may have failed." 1>&2
       $echo The command "cmp rep-3.O $srcdir/rep-3.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s rep-3.E || rm -f rep-3.E
cat $srcdir/o-rep-1.I | $xx '[b*08]' '[x*]' > o-rep-1.O 2> o-rep-1.E
code=$?
if test $code != 1; then
  $echo "Test o-rep-1(|) failed: $xx return code $code differs from expected value 1" 1>&2
  errors=`expr $errors + 1`
else
  cmp o-rep-1.O $srcdir/o-rep-1.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed o-rep-1(|)"; fi;;
    1) $echo "Test o-rep-1(|) failed: files o-rep-1.O and $srcdir/o-rep-1.X differ" 1>&2
       (diff -c o-rep-1.O $srcdir/o-rep-1.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test o-rep-1(|) may have failed." 1>&2
       $echo The command "cmp o-rep-1.O $srcdir/o-rep-1.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s o-rep-1.E || rm -f o-rep-1.E
$xx '[b*08]' '[x*]' < $srcdir/o-rep-1.I > o-rep-1.O 2> o-rep-1.E
code=$?
if test $code != 1; then
  $echo "Test o-rep-1(<) failed: $xx return code $code differs from expected value 1" 1>&2
  errors=`expr $errors + 1`
else
  cmp o-rep-1.O $srcdir/o-rep-1.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed o-rep-1(<)"; fi;;
    1) $echo "Test o-rep-1(<) failed: files o-rep-1.O and $srcdir/o-rep-1.X differ" 1>&2
       (diff -c o-rep-1.O $srcdir/o-rep-1.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test o-rep-1(<) may have failed." 1>&2
       $echo The command "cmp o-rep-1.O $srcdir/o-rep-1.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s o-rep-1.E || rm -f o-rep-1.E
cat $srcdir/o-rep-2.I | $xx '[b*010]cd' '[a*7]BC[x*]' > o-rep-2.O 2> o-rep-2.E
code=$?
if test $code != 0; then
  $echo "Test o-rep-2(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp o-rep-2.O $srcdir/o-rep-2.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed o-rep-2(|)"; fi;;
    1) $echo "Test o-rep-2(|) failed: files o-rep-2.O and $srcdir/o-rep-2.X differ" 1>&2
       (diff -c o-rep-2.O $srcdir/o-rep-2.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test o-rep-2(|) may have failed." 1>&2
       $echo The command "cmp o-rep-2.O $srcdir/o-rep-2.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s o-rep-2.E || rm -f o-rep-2.E
$xx '[b*010]cd' '[a*7]BC[x*]' < $srcdir/o-rep-2.I > o-rep-2.O 2> o-rep-2.E
code=$?
if test $code != 0; then
  $echo "Test o-rep-2(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp o-rep-2.O $srcdir/o-rep-2.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed o-rep-2(<)"; fi;;
    1) $echo "Test o-rep-2(<) failed: files o-rep-2.O and $srcdir/o-rep-2.X differ" 1>&2
       (diff -c o-rep-2.O $srcdir/o-rep-2.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test o-rep-2(<) may have failed." 1>&2
       $echo The command "cmp o-rep-2.O $srcdir/o-rep-2.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s o-rep-2.E || rm -f o-rep-2.E
cat $srcdir/esc.I | $xx 'a\-z' 'A-Z' > esc.O 2> esc.E
code=$?
if test $code != 0; then
  $echo "Test esc(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp esc.O $srcdir/esc.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed esc(|)"; fi;;
    1) $echo "Test esc(|) failed: files esc.O and $srcdir/esc.X differ" 1>&2
       (diff -c esc.O $srcdir/esc.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test esc(|) may have failed." 1>&2
       $echo The command "cmp esc.O $srcdir/esc.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s esc.E || rm -f esc.E
$xx 'a\-z' 'A-Z' < $srcdir/esc.I > esc.O 2> esc.E
code=$?
if test $code != 0; then
  $echo "Test esc(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp esc.O $srcdir/esc.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed esc(<)"; fi;;
    1) $echo "Test esc(<) failed: files esc.O and $srcdir/esc.X differ" 1>&2
       (diff -c esc.O $srcdir/esc.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test esc(<) may have failed." 1>&2
       $echo The command "cmp esc.O $srcdir/esc.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s esc.E || rm -f esc.E
cat $srcdir/bs-055.I | $xx 'a\055b' def > bs-055.O 2> bs-055.E
code=$?
if test $code != 0; then
  $echo "Test bs-055(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp bs-055.O $srcdir/bs-055.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed bs-055(|)"; fi;;
    1) $echo "Test bs-055(|) failed: files bs-055.O and $srcdir/bs-055.X differ" 1>&2
       (diff -c bs-055.O $srcdir/bs-055.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test bs-055(|) may have failed." 1>&2
       $echo The command "cmp bs-055.O $srcdir/bs-055.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s bs-055.E || rm -f bs-055.E
$xx 'a\055b' def < $srcdir/bs-055.I > bs-055.O 2> bs-055.E
code=$?
if test $code != 0; then
  $echo "Test bs-055(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp bs-055.O $srcdir/bs-055.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed bs-055(<)"; fi;;
    1) $echo "Test bs-055(<) failed: files bs-055.O and $srcdir/bs-055.X differ" 1>&2
       (diff -c bs-055.O $srcdir/bs-055.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test bs-055(<) may have failed." 1>&2
       $echo The command "cmp bs-055.O $srcdir/bs-055.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s bs-055.E || rm -f bs-055.E
cat $srcdir/bs-at-end.I | $xx '\' x > bs-at-end.O 2> bs-at-end.E
code=$?
if test $code != 0; then
  $echo "Test bs-at-end(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp bs-at-end.O $srcdir/bs-at-end.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed bs-at-end(|)"; fi;;
    1) $echo "Test bs-at-end(|) failed: files bs-at-end.O and $srcdir/bs-at-end.X differ" 1>&2
       (diff -c bs-at-end.O $srcdir/bs-at-end.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test bs-at-end(|) may have failed." 1>&2
       $echo The command "cmp bs-at-end.O $srcdir/bs-at-end.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s bs-at-end.E || rm -f bs-at-end.E
$xx '\' x < $srcdir/bs-at-end.I > bs-at-end.O 2> bs-at-end.E
code=$?
if test $code != 0; then
  $echo "Test bs-at-end(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp bs-at-end.O $srcdir/bs-at-end.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed bs-at-end(<)"; fi;;
    1) $echo "Test bs-at-end(<) failed: files bs-at-end.O and $srcdir/bs-at-end.X differ" 1>&2
       (diff -c bs-at-end.O $srcdir/bs-at-end.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test bs-at-end(<) may have failed." 1>&2
       $echo The command "cmp bs-at-end.O $srcdir/bs-at-end.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s bs-at-end.E || rm -f bs-at-end.E
cat $srcdir/ross-0a.I | $xx -cs '[:upper:]' 'X[Y*]' > ross-0a.O 2> ross-0a.E
code=$?
if test $code != 1; then
  $echo "Test ross-0a(|) failed: $xx return code $code differs from expected value 1" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-0a.O $srcdir/ross-0a.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-0a(|)"; fi;;
    1) $echo "Test ross-0a(|) failed: files ross-0a.O and $srcdir/ross-0a.X differ" 1>&2
       (diff -c ross-0a.O $srcdir/ross-0a.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-0a(|) may have failed." 1>&2
       $echo The command "cmp ross-0a.O $srcdir/ross-0a.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-0a.E || rm -f ross-0a.E
$xx -cs '[:upper:]' 'X[Y*]' < $srcdir/ross-0a.I > ross-0a.O 2> ross-0a.E
code=$?
if test $code != 1; then
  $echo "Test ross-0a(<) failed: $xx return code $code differs from expected value 1" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-0a.O $srcdir/ross-0a.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-0a(<)"; fi;;
    1) $echo "Test ross-0a(<) failed: files ross-0a.O and $srcdir/ross-0a.X differ" 1>&2
       (diff -c ross-0a.O $srcdir/ross-0a.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-0a(<) may have failed." 1>&2
       $echo The command "cmp ross-0a.O $srcdir/ross-0a.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-0a.E || rm -f ross-0a.E
cat $srcdir/ross-0b.I | $xx -cs '[:cntrl:]' 'X[Y*]' > ross-0b.O 2> ross-0b.E
code=$?
if test $code != 1; then
  $echo "Test ross-0b(|) failed: $xx return code $code differs from expected value 1" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-0b.O $srcdir/ross-0b.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-0b(|)"; fi;;
    1) $echo "Test ross-0b(|) failed: files ross-0b.O and $srcdir/ross-0b.X differ" 1>&2
       (diff -c ross-0b.O $srcdir/ross-0b.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-0b(|) may have failed." 1>&2
       $echo The command "cmp ross-0b.O $srcdir/ross-0b.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-0b.E || rm -f ross-0b.E
$xx -cs '[:cntrl:]' 'X[Y*]' < $srcdir/ross-0b.I > ross-0b.O 2> ross-0b.E
code=$?
if test $code != 1; then
  $echo "Test ross-0b(<) failed: $xx return code $code differs from expected value 1" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-0b.O $srcdir/ross-0b.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-0b(<)"; fi;;
    1) $echo "Test ross-0b(<) failed: files ross-0b.O and $srcdir/ross-0b.X differ" 1>&2
       (diff -c ross-0b.O $srcdir/ross-0b.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-0b(<) may have failed." 1>&2
       $echo The command "cmp ross-0b.O $srcdir/ross-0b.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-0b.E || rm -f ross-0b.E
cat $srcdir/ross-1a.I | $xx -cs '[:upper:]' '[X*]' > ross-1a.O 2> ross-1a.E
code=$?
if test $code != 0; then
  $echo "Test ross-1a(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-1a.O $srcdir/ross-1a.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-1a(|)"; fi;;
    1) $echo "Test ross-1a(|) failed: files ross-1a.O and $srcdir/ross-1a.X differ" 1>&2
       (diff -c ross-1a.O $srcdir/ross-1a.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-1a(|) may have failed." 1>&2
       $echo The command "cmp ross-1a.O $srcdir/ross-1a.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-1a.E || rm -f ross-1a.E
$xx -cs '[:upper:]' '[X*]' < $srcdir/ross-1a.I > ross-1a.O 2> ross-1a.E
code=$?
if test $code != 0; then
  $echo "Test ross-1a(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-1a.O $srcdir/ross-1a.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-1a(<)"; fi;;
    1) $echo "Test ross-1a(<) failed: files ross-1a.O and $srcdir/ross-1a.X differ" 1>&2
       (diff -c ross-1a.O $srcdir/ross-1a.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-1a(<) may have failed." 1>&2
       $echo The command "cmp ross-1a.O $srcdir/ross-1a.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-1a.E || rm -f ross-1a.E
cat $srcdir/ross-1b.I | $xx -cs '[:upper:][:digit:]' '[Z*]' > ross-1b.O 2> ross-1b.E
code=$?
if test $code != 0; then
  $echo "Test ross-1b(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-1b.O $srcdir/ross-1b.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-1b(|)"; fi;;
    1) $echo "Test ross-1b(|) failed: files ross-1b.O and $srcdir/ross-1b.X differ" 1>&2
       (diff -c ross-1b.O $srcdir/ross-1b.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-1b(|) may have failed." 1>&2
       $echo The command "cmp ross-1b.O $srcdir/ross-1b.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-1b.E || rm -f ross-1b.E
$xx -cs '[:upper:][:digit:]' '[Z*]' < $srcdir/ross-1b.I > ross-1b.O 2> ross-1b.E
code=$?
if test $code != 0; then
  $echo "Test ross-1b(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-1b.O $srcdir/ross-1b.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-1b(<)"; fi;;
    1) $echo "Test ross-1b(<) failed: files ross-1b.O and $srcdir/ross-1b.X differ" 1>&2
       (diff -c ross-1b.O $srcdir/ross-1b.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-1b(<) may have failed." 1>&2
       $echo The command "cmp ross-1b.O $srcdir/ross-1b.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-1b.E || rm -f ross-1b.E
cat $srcdir/ross-2.I | $xx -dcs '[:lower:]' 'n-rs-z' > ross-2.O 2> ross-2.E
code=$?
if test $code != 0; then
  $echo "Test ross-2(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-2.O $srcdir/ross-2.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-2(|)"; fi;;
    1) $echo "Test ross-2(|) failed: files ross-2.O and $srcdir/ross-2.X differ" 1>&2
       (diff -c ross-2.O $srcdir/ross-2.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-2(|) may have failed." 1>&2
       $echo The command "cmp ross-2.O $srcdir/ross-2.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-2.E || rm -f ross-2.E
$xx -dcs '[:lower:]' 'n-rs-z' < $srcdir/ross-2.I > ross-2.O 2> ross-2.E
code=$?
if test $code != 0; then
  $echo "Test ross-2(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-2.O $srcdir/ross-2.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-2(<)"; fi;;
    1) $echo "Test ross-2(<) failed: files ross-2.O and $srcdir/ross-2.X differ" 1>&2
       (diff -c ross-2.O $srcdir/ross-2.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-2(<) may have failed." 1>&2
       $echo The command "cmp ross-2.O $srcdir/ross-2.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-2.E || rm -f ross-2.E
cat $srcdir/ross-3.I | $xx -ds '[:xdigit:]' '[:alnum:]' > ross-3.O 2> ross-3.E
code=$?
if test $code != 0; then
  $echo "Test ross-3(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-3.O $srcdir/ross-3.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-3(|)"; fi;;
    1) $echo "Test ross-3(|) failed: files ross-3.O and $srcdir/ross-3.X differ" 1>&2
       (diff -c ross-3.O $srcdir/ross-3.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-3(|) may have failed." 1>&2
       $echo The command "cmp ross-3.O $srcdir/ross-3.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-3.E || rm -f ross-3.E
$xx -ds '[:xdigit:]' '[:alnum:]' < $srcdir/ross-3.I > ross-3.O 2> ross-3.E
code=$?
if test $code != 0; then
  $echo "Test ross-3(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-3.O $srcdir/ross-3.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-3(<)"; fi;;
    1) $echo "Test ross-3(<) failed: files ross-3.O and $srcdir/ross-3.X differ" 1>&2
       (diff -c ross-3.O $srcdir/ross-3.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-3(<) may have failed." 1>&2
       $echo The command "cmp ross-3.O $srcdir/ross-3.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-3.E || rm -f ross-3.E
cat $srcdir/ross-4.I | $xx -dcs '[:alnum:]' '[:digit:]' > ross-4.O 2> ross-4.E
code=$?
if test $code != 0; then
  $echo "Test ross-4(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-4.O $srcdir/ross-4.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-4(|)"; fi;;
    1) $echo "Test ross-4(|) failed: files ross-4.O and $srcdir/ross-4.X differ" 1>&2
       (diff -c ross-4.O $srcdir/ross-4.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-4(|) may have failed." 1>&2
       $echo The command "cmp ross-4.O $srcdir/ross-4.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-4.E || rm -f ross-4.E
$xx -dcs '[:alnum:]' '[:digit:]' < $srcdir/ross-4.I > ross-4.O 2> ross-4.E
code=$?
if test $code != 0; then
  $echo "Test ross-4(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-4.O $srcdir/ross-4.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-4(<)"; fi;;
    1) $echo "Test ross-4(<) failed: files ross-4.O and $srcdir/ross-4.X differ" 1>&2
       (diff -c ross-4.O $srcdir/ross-4.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-4(<) may have failed." 1>&2
       $echo The command "cmp ross-4.O $srcdir/ross-4.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-4.E || rm -f ross-4.E
cat $srcdir/ross-5.I | $xx -dc '[:lower:]' > ross-5.O 2> ross-5.E
code=$?
if test $code != 0; then
  $echo "Test ross-5(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-5.O $srcdir/ross-5.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-5(|)"; fi;;
    1) $echo "Test ross-5(|) failed: files ross-5.O and $srcdir/ross-5.X differ" 1>&2
       (diff -c ross-5.O $srcdir/ross-5.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-5(|) may have failed." 1>&2
       $echo The command "cmp ross-5.O $srcdir/ross-5.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-5.E || rm -f ross-5.E
$xx -dc '[:lower:]' < $srcdir/ross-5.I > ross-5.O 2> ross-5.E
code=$?
if test $code != 0; then
  $echo "Test ross-5(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-5.O $srcdir/ross-5.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-5(<)"; fi;;
    1) $echo "Test ross-5(<) failed: files ross-5.O and $srcdir/ross-5.X differ" 1>&2
       (diff -c ross-5.O $srcdir/ross-5.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-5(<) may have failed." 1>&2
       $echo The command "cmp ross-5.O $srcdir/ross-5.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-5.E || rm -f ross-5.E
cat $srcdir/ross-6.I | $xx -dc '[:upper:]' > ross-6.O 2> ross-6.E
code=$?
if test $code != 0; then
  $echo "Test ross-6(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-6.O $srcdir/ross-6.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-6(|)"; fi;;
    1) $echo "Test ross-6(|) failed: files ross-6.O and $srcdir/ross-6.X differ" 1>&2
       (diff -c ross-6.O $srcdir/ross-6.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-6(|) may have failed." 1>&2
       $echo The command "cmp ross-6.O $srcdir/ross-6.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-6.E || rm -f ross-6.E
$xx -dc '[:upper:]' < $srcdir/ross-6.I > ross-6.O 2> ross-6.E
code=$?
if test $code != 0; then
  $echo "Test ross-6(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp ross-6.O $srcdir/ross-6.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed ross-6(<)"; fi;;
    1) $echo "Test ross-6(<) failed: files ross-6.O and $srcdir/ross-6.X differ" 1>&2
       (diff -c ross-6.O $srcdir/ross-6.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test ross-6(<) may have failed." 1>&2
       $echo The command "cmp ross-6.O $srcdir/ross-6.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s ross-6.E || rm -f ross-6.E
cat $srcdir/empty-eq.I | $xx '[==]' x > empty-eq.O 2> empty-eq.E
code=$?
if test $code != 1; then
  $echo "Test empty-eq(|) failed: $xx return code $code differs from expected value 1" 1>&2
  errors=`expr $errors + 1`
else
  cmp empty-eq.O $srcdir/empty-eq.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed empty-eq(|)"; fi;;
    1) $echo "Test empty-eq(|) failed: files empty-eq.O and $srcdir/empty-eq.X differ" 1>&2
       (diff -c empty-eq.O $srcdir/empty-eq.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test empty-eq(|) may have failed." 1>&2
       $echo The command "cmp empty-eq.O $srcdir/empty-eq.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s empty-eq.E || rm -f empty-eq.E
$xx '[==]' x < $srcdir/empty-eq.I > empty-eq.O 2> empty-eq.E
code=$?
if test $code != 1; then
  $echo "Test empty-eq(<) failed: $xx return code $code differs from expected value 1" 1>&2
  errors=`expr $errors + 1`
else
  cmp empty-eq.O $srcdir/empty-eq.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed empty-eq(<)"; fi;;
    1) $echo "Test empty-eq(<) failed: files empty-eq.O and $srcdir/empty-eq.X differ" 1>&2
       (diff -c empty-eq.O $srcdir/empty-eq.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test empty-eq(<) may have failed." 1>&2
       $echo The command "cmp empty-eq.O $srcdir/empty-eq.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s empty-eq.E || rm -f empty-eq.E
cat $srcdir/empty-cc.I | $xx '[::]' x > empty-cc.O 2> empty-cc.E
code=$?
if test $code != 1; then
  $echo "Test empty-cc(|) failed: $xx return code $code differs from expected value 1" 1>&2
  errors=`expr $errors + 1`
else
  cmp empty-cc.O $srcdir/empty-cc.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed empty-cc(|)"; fi;;
    1) $echo "Test empty-cc(|) failed: files empty-cc.O and $srcdir/empty-cc.X differ" 1>&2
       (diff -c empty-cc.O $srcdir/empty-cc.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test empty-cc(|) may have failed." 1>&2
       $echo The command "cmp empty-cc.O $srcdir/empty-cc.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s empty-cc.E || rm -f empty-cc.E
$xx '[::]' x < $srcdir/empty-cc.I > empty-cc.O 2> empty-cc.E
code=$?
if test $code != 1; then
  $echo "Test empty-cc(<) failed: $xx return code $code differs from expected value 1" 1>&2
  errors=`expr $errors + 1`
else
  cmp empty-cc.O $srcdir/empty-cc.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed empty-cc(<)"; fi;;
    1) $echo "Test empty-cc(<) failed: files empty-cc.O and $srcdir/empty-cc.X differ" 1>&2
       (diff -c empty-cc.O $srcdir/empty-cc.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test empty-cc(<) may have failed." 1>&2
       $echo The command "cmp empty-cc.O $srcdir/empty-cc.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s empty-cc.E || rm -f empty-cc.E
cat $srcdir/repeat-bs-9.I | $xx abc '[b*\9]' > repeat-bs-9.O 2> repeat-bs-9.E
code=$?
if test $code != 0; then
  $echo "Test repeat-bs-9(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp repeat-bs-9.O $srcdir/repeat-bs-9.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed repeat-bs-9(|)"; fi;;
    1) $echo "Test repeat-bs-9(|) failed: files repeat-bs-9.O and $srcdir/repeat-bs-9.X differ" 1>&2
       (diff -c repeat-bs-9.O $srcdir/repeat-bs-9.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test repeat-bs-9(|) may have failed." 1>&2
       $echo The command "cmp repeat-bs-9.O $srcdir/repeat-bs-9.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s repeat-bs-9.E || rm -f repeat-bs-9.E
$xx abc '[b*\9]' < $srcdir/repeat-bs-9.I > repeat-bs-9.O 2> repeat-bs-9.E
code=$?
if test $code != 0; then
  $echo "Test repeat-bs-9(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp repeat-bs-9.O $srcdir/repeat-bs-9.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed repeat-bs-9(<)"; fi;;
    1) $echo "Test repeat-bs-9(<) failed: files repeat-bs-9.O and $srcdir/repeat-bs-9.X differ" 1>&2
       (diff -c repeat-bs-9.O $srcdir/repeat-bs-9.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test repeat-bs-9(<) may have failed." 1>&2
       $echo The command "cmp repeat-bs-9.O $srcdir/repeat-bs-9.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s repeat-bs-9.E || rm -f repeat-bs-9.E
cat $srcdir/repeat-0.I | $xx abc '[b*0]' > repeat-0.O 2> repeat-0.E
code=$?
if test $code != 0; then
  $echo "Test repeat-0(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp repeat-0.O $srcdir/repeat-0.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed repeat-0(|)"; fi;;
    1) $echo "Test repeat-0(|) failed: files repeat-0.O and $srcdir/repeat-0.X differ" 1>&2
       (diff -c repeat-0.O $srcdir/repeat-0.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test repeat-0(|) may have failed." 1>&2
       $echo The command "cmp repeat-0.O $srcdir/repeat-0.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s repeat-0.E || rm -f repeat-0.E
$xx abc '[b*0]' < $srcdir/repeat-0.I > repeat-0.O 2> repeat-0.E
code=$?
if test $code != 0; then
  $echo "Test repeat-0(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp repeat-0.O $srcdir/repeat-0.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed repeat-0(<)"; fi;;
    1) $echo "Test repeat-0(<) failed: files repeat-0.O and $srcdir/repeat-0.X differ" 1>&2
       (diff -c repeat-0.O $srcdir/repeat-0.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test repeat-0(<) may have failed." 1>&2
       $echo The command "cmp repeat-0.O $srcdir/repeat-0.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s repeat-0.E || rm -f repeat-0.E
cat $srcdir/repeat-zeros.I | $xx abc '[b*00000000000000000000]' > repeat-zeros.O 2> repeat-zeros.E
code=$?
if test $code != 0; then
  $echo "Test repeat-zeros(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp repeat-zeros.O $srcdir/repeat-zeros.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed repeat-zeros(|)"; fi;;
    1) $echo "Test repeat-zeros(|) failed: files repeat-zeros.O and $srcdir/repeat-zeros.X differ" 1>&2
       (diff -c repeat-zeros.O $srcdir/repeat-zeros.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test repeat-zeros(|) may have failed." 1>&2
       $echo The command "cmp repeat-zeros.O $srcdir/repeat-zeros.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s repeat-zeros.E || rm -f repeat-zeros.E
$xx abc '[b*00000000000000000000]' < $srcdir/repeat-zeros.I > repeat-zeros.O 2> repeat-zeros.E
code=$?
if test $code != 0; then
  $echo "Test repeat-zeros(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp repeat-zeros.O $srcdir/repeat-zeros.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed repeat-zeros(<)"; fi;;
    1) $echo "Test repeat-zeros(<) failed: files repeat-zeros.O and $srcdir/repeat-zeros.X differ" 1>&2
       (diff -c repeat-zeros.O $srcdir/repeat-zeros.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test repeat-zeros(<) may have failed." 1>&2
       $echo The command "cmp repeat-zeros.O $srcdir/repeat-zeros.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s repeat-zeros.E || rm -f repeat-zeros.E
cat $srcdir/repeat-compl.I | $xx -c '[a*65536]\n' '[b*]' > repeat-compl.O 2> repeat-compl.E
code=$?
if test $code != 0; then
  $echo "Test repeat-compl(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp repeat-compl.O $srcdir/repeat-compl.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed repeat-compl(|)"; fi;;
    1) $echo "Test repeat-compl(|) failed: files repeat-compl.O and $srcdir/repeat-compl.X differ" 1>&2
       (diff -c repeat-compl.O $srcdir/repeat-compl.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test repeat-compl(|) may have failed." 1>&2
       $echo The command "cmp repeat-compl.O $srcdir/repeat-compl.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s repeat-compl.E || rm -f repeat-compl.E
$xx -c '[a*65536]\n' '[b*]' < $srcdir/repeat-compl.I > repeat-compl.O 2> repeat-compl.E
code=$?
if test $code != 0; then
  $echo "Test repeat-compl(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp repeat-compl.O $srcdir/repeat-compl.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed repeat-compl(<)"; fi;;
    1) $echo "Test repeat-compl(<) failed: files repeat-compl.O and $srcdir/repeat-compl.X differ" 1>&2
       (diff -c repeat-compl.O $srcdir/repeat-compl.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test repeat-compl(<) may have failed." 1>&2
       $echo The command "cmp repeat-compl.O $srcdir/repeat-compl.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s repeat-compl.E || rm -f repeat-compl.E
cat $srcdir/repeat-xC.I | $xx -C '[a*65536]\n' '[b*]' > repeat-xC.O 2> repeat-xC.E
code=$?
if test $code != 0; then
  $echo "Test repeat-xC(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp repeat-xC.O $srcdir/repeat-xC.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed repeat-xC(|)"; fi;;
    1) $echo "Test repeat-xC(|) failed: files repeat-xC.O and $srcdir/repeat-xC.X differ" 1>&2
       (diff -c repeat-xC.O $srcdir/repeat-xC.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test repeat-xC(|) may have failed." 1>&2
       $echo The command "cmp repeat-xC.O $srcdir/repeat-xC.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s repeat-xC.E || rm -f repeat-xC.E
$xx -C '[a*65536]\n' '[b*]' < $srcdir/repeat-xC.I > repeat-xC.O 2> repeat-xC.E
code=$?
if test $code != 0; then
  $echo "Test repeat-xC(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp repeat-xC.O $srcdir/repeat-xC.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed repeat-xC(<)"; fi;;
    1) $echo "Test repeat-xC(<) failed: files repeat-xC.O and $srcdir/repeat-xC.X differ" 1>&2
       (diff -c repeat-xC.O $srcdir/repeat-xC.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test repeat-xC(<) may have failed." 1>&2
       $echo The command "cmp repeat-xC.O $srcdir/repeat-xC.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s repeat-xC.E || rm -f repeat-xC.E
cat $srcdir/fowler-1.I | $xx ah -H > fowler-1.O 2> fowler-1.E
code=$?
if test $code != 0; then
  $echo "Test fowler-1(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp fowler-1.O $srcdir/fowler-1.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed fowler-1(|)"; fi;;
    1) $echo "Test fowler-1(|) failed: files fowler-1.O and $srcdir/fowler-1.X differ" 1>&2
       (diff -c fowler-1.O $srcdir/fowler-1.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test fowler-1(|) may have failed." 1>&2
       $echo The command "cmp fowler-1.O $srcdir/fowler-1.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s fowler-1.E || rm -f fowler-1.E
$xx ah -H < $srcdir/fowler-1.I > fowler-1.O 2> fowler-1.E
code=$?
if test $code != 0; then
  $echo "Test fowler-1(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp fowler-1.O $srcdir/fowler-1.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed fowler-1(<)"; fi;;
    1) $echo "Test fowler-1(<) failed: files fowler-1.O and $srcdir/fowler-1.X differ" 1>&2
       (diff -c fowler-1.O $srcdir/fowler-1.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test fowler-1(<) may have failed." 1>&2
       $echo The command "cmp fowler-1.O $srcdir/fowler-1.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s fowler-1.E || rm -f fowler-1.E
cat $srcdir/no-abort-1.I | $xx -c a '[b*256]' > no-abort-1.O 2> no-abort-1.E
code=$?
if test $code != 0; then
  $echo "Test no-abort-1(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp no-abort-1.O $srcdir/no-abort-1.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed no-abort-1(|)"; fi;;
    1) $echo "Test no-abort-1(|) failed: files no-abort-1.O and $srcdir/no-abort-1.X differ" 1>&2
       (diff -c no-abort-1.O $srcdir/no-abort-1.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test no-abort-1(|) may have failed." 1>&2
       $echo The command "cmp no-abort-1.O $srcdir/no-abort-1.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s no-abort-1.E || rm -f no-abort-1.E
$xx -c a '[b*256]' < $srcdir/no-abort-1.I > no-abort-1.O 2> no-abort-1.E
code=$?
if test $code != 0; then
  $echo "Test no-abort-1(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp no-abort-1.O $srcdir/no-abort-1.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed no-abort-1(<)"; fi;;
    1) $echo "Test no-abort-1(<) failed: files no-abort-1.O and $srcdir/no-abort-1.X differ" 1>&2
       (diff -c no-abort-1.O $srcdir/no-abort-1.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test no-abort-1(<) may have failed." 1>&2
       $echo The command "cmp no-abort-1.O $srcdir/no-abort-1.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s no-abort-1.E || rm -f no-abort-1.E
cat $srcdir/s1-lower.I | $xx '[:lower:]' '[.*]' > s1-lower.O 2> s1-lower.E
code=$?
if test $code != 0; then
  $echo "Test s1-lower(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp s1-lower.O $srcdir/s1-lower.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed s1-lower(|)"; fi;;
    1) $echo "Test s1-lower(|) failed: files s1-lower.O and $srcdir/s1-lower.X differ" 1>&2
       (diff -c s1-lower.O $srcdir/s1-lower.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test s1-lower(|) may have failed." 1>&2
       $echo The command "cmp s1-lower.O $srcdir/s1-lower.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s s1-lower.E || rm -f s1-lower.E
$xx '[:lower:]' '[.*]' < $srcdir/s1-lower.I > s1-lower.O 2> s1-lower.E
code=$?
if test $code != 0; then
  $echo "Test s1-lower(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp s1-lower.O $srcdir/s1-lower.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed s1-lower(<)"; fi;;
    1) $echo "Test s1-lower(<) failed: files s1-lower.O and $srcdir/s1-lower.X differ" 1>&2
       (diff -c s1-lower.O $srcdir/s1-lower.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test s1-lower(<) may have failed." 1>&2
       $echo The command "cmp s1-lower.O $srcdir/s1-lower.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s s1-lower.E || rm -f s1-lower.E
cat $srcdir/s1-upper.I | $xx '[:upper:]' '[.*]' > s1-upper.O 2> s1-upper.E
code=$?
if test $code != 0; then
  $echo "Test s1-upper(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp s1-upper.O $srcdir/s1-upper.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed s1-upper(|)"; fi;;
    1) $echo "Test s1-upper(|) failed: files s1-upper.O and $srcdir/s1-upper.X differ" 1>&2
       (diff -c s1-upper.O $srcdir/s1-upper.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test s1-upper(|) may have failed." 1>&2
       $echo The command "cmp s1-upper.O $srcdir/s1-upper.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s s1-upper.E || rm -f s1-upper.E
$xx '[:upper:]' '[.*]' < $srcdir/s1-upper.I > s1-upper.O 2> s1-upper.E
code=$?
if test $code != 0; then
  $echo "Test s1-upper(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp s1-upper.O $srcdir/s1-upper.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed s1-upper(<)"; fi;;
    1) $echo "Test s1-upper(<) failed: files s1-upper.O and $srcdir/s1-upper.X differ" 1>&2
       (diff -c s1-upper.O $srcdir/s1-upper.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test s1-upper(<) may have failed." 1>&2
       $echo The command "cmp s1-upper.O $srcdir/s1-upper.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s s1-upper.E || rm -f s1-upper.E
cat $srcdir/tolower-F.I | LC_CTYPE=en_US.ISO-8859-1 $xx '[:upper:]' '[:lower:]' > tolower-F.O 2> tolower-F.E
code=$?
if test $code != 0; then
  $echo "Test tolower-F(LC_CTYPE=en_US.ISO-8859-1:|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp tolower-F.O $srcdir/tolower-F.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed tolower-F(LC_CTYPE=en_US.ISO-8859-1:|)"; fi;;
    1) $echo "Test tolower-F(LC_CTYPE=en_US.ISO-8859-1:|) failed: files tolower-F.O and $srcdir/tolower-F.X differ" 1>&2
       (diff -c tolower-F.O $srcdir/tolower-F.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test tolower-F(LC_CTYPE=en_US.ISO-8859-1:|) may have failed." 1>&2
       $echo The command "cmp tolower-F.O $srcdir/tolower-F.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s tolower-F.E || rm -f tolower-F.E
LC_CTYPE=en_US.ISO-8859-1 $xx '[:upper:]' '[:lower:]' < $srcdir/tolower-F.I > tolower-F.O 2> tolower-F.E
code=$?
if test $code != 0; then
  $echo "Test tolower-F(LC_CTYPE=en_US.ISO-8859-1:<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp tolower-F.O $srcdir/tolower-F.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed tolower-F(LC_CTYPE=en_US.ISO-8859-1:<)"; fi;;
    1) $echo "Test tolower-F(LC_CTYPE=en_US.ISO-8859-1:<) failed: files tolower-F.O and $srcdir/tolower-F.X differ" 1>&2
       (diff -c tolower-F.O $srcdir/tolower-F.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test tolower-F(LC_CTYPE=en_US.ISO-8859-1:<) may have failed." 1>&2
       $echo The command "cmp tolower-F.O $srcdir/tolower-F.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s tolower-F.E || rm -f tolower-F.E
cat $srcdir/upcase-xtra.I | $xx '[:lower:].' '[:upper:]x' > upcase-xtra.O 2> upcase-xtra.E
code=$?
if test $code != 0; then
  $echo "Test upcase-xtra(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp upcase-xtra.O $srcdir/upcase-xtra.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed upcase-xtra(|)"; fi;;
    1) $echo "Test upcase-xtra(|) failed: files upcase-xtra.O and $srcdir/upcase-xtra.X differ" 1>&2
       (diff -c upcase-xtra.O $srcdir/upcase-xtra.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test upcase-xtra(|) may have failed." 1>&2
       $echo The command "cmp upcase-xtra.O $srcdir/upcase-xtra.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s upcase-xtra.E || rm -f upcase-xtra.E
$xx '[:lower:].' '[:upper:]x' < $srcdir/upcase-xtra.I > upcase-xtra.O 2> upcase-xtra.E
code=$?
if test $code != 0; then
  $echo "Test upcase-xtra(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp upcase-xtra.O $srcdir/upcase-xtra.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed upcase-xtra(<)"; fi;;
    1) $echo "Test upcase-xtra(<) failed: files upcase-xtra.O and $srcdir/upcase-xtra.X differ" 1>&2
       (diff -c upcase-xtra.O $srcdir/upcase-xtra.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test upcase-xtra(<) may have failed." 1>&2
       $echo The command "cmp upcase-xtra.O $srcdir/upcase-xtra.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s upcase-xtra.E || rm -f upcase-xtra.E
cat $srcdir/dncase-xtra.I | $xx '[:upper:].' '[:lower:]x' > dncase-xtra.O 2> dncase-xtra.E
code=$?
if test $code != 0; then
  $echo "Test dncase-xtra(|) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp dncase-xtra.O $srcdir/dncase-xtra.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed dncase-xtra(|)"; fi;;
    1) $echo "Test dncase-xtra(|) failed: files dncase-xtra.O and $srcdir/dncase-xtra.X differ" 1>&2
       (diff -c dncase-xtra.O $srcdir/dncase-xtra.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test dncase-xtra(|) may have failed." 1>&2
       $echo The command "cmp dncase-xtra.O $srcdir/dncase-xtra.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s dncase-xtra.E || rm -f dncase-xtra.E
$xx '[:upper:].' '[:lower:]x' < $srcdir/dncase-xtra.I > dncase-xtra.O 2> dncase-xtra.E
code=$?
if test $code != 0; then
  $echo "Test dncase-xtra(<) failed: $xx return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp dncase-xtra.O $srcdir/dncase-xtra.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE"; then $echo "passed dncase-xtra(<)"; fi;;
    1) $echo "Test dncase-xtra(<) failed: files dncase-xtra.O and $srcdir/dncase-xtra.X differ" 1>&2
       (diff -c dncase-xtra.O $srcdir/dncase-xtra.X) 2> /dev/null
       errors=`expr $errors + 1`;;
    2) $echo "Test dncase-xtra(<) may have failed." 1>&2
       $echo The command "cmp dncase-xtra.O $srcdir/dncase-xtra.X" failed. 1>&2
       errors=`expr $errors + 1`;;
  esac
fi
test -s dncase-xtra.E || rm -f dncase-xtra.E
if test $errors = 0; then
  $echo Passed all 142 tests. 1>&2
else
  $echo Failed $errors tests. 1>&2
fi
test $errors = 0 || errors=1
exit $errors
