#!/bin/sh
# Newline tests for "md5sum".

# Copyright (C) 1999, 2000, 2003, 2005, 2007 Free Software Foundation, Inc.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

: ${srcdir=.}
. $srcdir/../require-perl

# See if we can create a filename that contains a newline.
# Be careful to do it in a subshell so that we can redirect the
# error output if it fails.
(> 'a
b') 2> /dev/null \
  && filename_may_contain_newline=yes \
  || filename_may_contain_newline=no
rm -f 'a
b'

if test $filename_may_contain_newline = no; then
  skip_test_ "failed to create newline-containing file name"
fi

me=`echo $0|sed 's,.*/,,'`
exec $PERL -w -I$srcdir/.. -MCoreutils -M"CuTmpdir qw($me)" -- - <<\EOF
require 5.003;
use strict;

(my $program_name = $0) =~ s|.*/||;

# Turn off localisation of executable's ouput.
@ENV{qw(LANGUAGE LANG LC_ALL)} = ('C') x 3;

my $degenerate = "d41d8cd98f00b204e9800998ecf8427e";
my $t = '--text';

my @Tests =
    (
     ['newline', $t, {IN=> {"a\nb"=> ''}}, {OUT=>"\\$degenerate  a\\nb\n"}],
    );

my $save_temps = $ENV{DEBUG};
my $verbose = $ENV{VERBOSE};

my $prog = 'md5sum';
my $fail = run_tests ($program_name, $prog, \@Tests, $save_temps, $verbose);
exit $fail;
EOF
