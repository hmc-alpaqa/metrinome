#!/bin/sh
# Test use of compression by sort

# Copyright (C) 2007 Free Software Foundation, Inc.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if test "$VERBOSE" = yes; then
  set -x
  sort --version
fi

. $srcdir/../test-lib.sh

seq -w 2000 > exp || framework_failure
tac exp > in || framework_failure
SORT="$abs_top_builddir/src/sort"

# Ensure that $TMPDIR is valid.
TMPDIR=.; export TMPDIR

fail=0

# This should force the use of temp files compressed with the default gzip
sort -S 1k in > out || fail=1
compare exp out || fail=1

# Create our own gzip program that will be used as the default
cat <<\EOF > gzip || fail=1
#!/bin/sh
tr 41 14
touch ok
EOF

chmod +x gzip

# This will find our new gzip in PATH
PATH=.:$PATH sort -S 1k --compress-program=gzip in > out || fail=1
compare exp out || fail=1
test -f ok || fail=1
rm -f ok

# This is to make sure it works with no compression.
PATH=.:$PATH sort -S 1k in > out || fail=1
compare exp out || fail=1
test -f ok && fail=1

# This is to make sure we can use something other than gzip
mv gzip dzip || fail=1
sort --compress-program=./dzip -S 1k in > out || fail=1
compare exp out || fail=1
test -f ok || fail=1
rm -f ok

# Make sure it can find other programs in PATH correctly
PATH=.:$PATH sort --compress-program=dzip -S 1k in > out || fail=1
compare exp out || fail=1
test -f ok || fail=1
rm -f dzip ok

# This is to make sure sort functions if it can't find the default gzip
PATH=. "$SORT" -S 1k in > out || fail=1
compare exp out || fail=1

(exit $fail); exit $fail
