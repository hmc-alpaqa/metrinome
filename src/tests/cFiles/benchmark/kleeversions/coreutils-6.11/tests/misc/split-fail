#!/bin/sh
# split must fail when given length/count of zero.

# Copyright (C) 2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if test "$VERBOSE" = yes; then
  set -x
  split --version
fi

. $srcdir/../lang-default
. $srcdir/../test-lib.sh

touch in || framework_failure

fail=0

split -a 0 in 2> /dev/null || fail=1
split -b 0 in 2> /dev/null && fail=1
split -C 0 in 2> /dev/null && fail=1
split -l 0 in 2> /dev/null && fail=1

# Make sure -C doesn't create empty files.
rm -f x?? || fail=1
echo x | split -C 1 || fail=1
test -f xaa && test -f xab || fail=1
test -f xac && fail=1

# Make sure that the obsolete -N notation still works
split -1 in 2> /dev/null || fail=1

# Then make sure that -0 evokes a failure.
split -0 in 2> /dev/null && fail=1

# Ensure that split --lines=N and --bytes=N work for N=2^32,
# assuming our host supports integers that wide.
if _4gb=`expr 4294967296 + 0 2>/dev/null`; then
  split --lines=$_4gb in || fail=1
  split --bytes=$_4gb in || fail=1
fi

# Currently (coreutils-5.0.1) split --line-bytes=M fails
# with `invalid number of bytes' for M=2^32 or larger.  Actually,
# the limit is SIZE_MAX, which is 2^32 on 32-bit systems.
# On 64-bit systems, there's no problem with a count of 2^32,
# So disable this test in order to avoid the `failure' on 64-bit systems.
#split --line-bytes=$_4gb 2> /dev/null in && fail=1

# Make sure that a huge obsolete option evokes the right failure.
split -99999999999999999991 2> out && fail=1

# On losing systems (x86 Solaris 5.9 c89), we get a message like this:
#   split: line count option -9999999999... is too large
# while on most, we get this:
#   split: line count option -99999999999999999991... is too large
# so map them both to -99*.
sed 's/99[19]*/99*/' out > out-t
mv -f out-t out

cat <<\EOF > exp
split: line count option -99*... is too large
EOF
compare out exp || fail=1


(exit $fail); exit $fail
