#!/bin/sh
# Ensure that hard-linked files are counted (and listed) only once.
# Likewise for excluded directories.
# Ensure that hard links _are_ listed twice when using --count-links.

# Copyright (C) 2003, 2006-2007 Free Software Foundation, Inc.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if test "$VERBOSE" = yes; then
  set -x
  du --version
fi

. $srcdir/../lang-default
. $srcdir/../test-lib.sh

mkdir -p dir/sub
( cd dir && { echo non-empty > f1; ln f1 f2; echo non-empty > sub/F; } )

fail=0

# Note that for this first test, we transform f1 or f2
# (whichever name we find first) to f_.  That is necessary because,
# depending on the type of file system, du could encounter either of those
# two hard-linked files first, thus listing that one and not the other.
du -a --exclude=sub dir \
  | sed 's/^[0-9][0-9]*	//' | sed 's/f[12]/f_/' > out || fail=1
echo === >> out
du -a --exclude=sub --count-links dir \
  | sed 's/^[0-9][0-9]*	//' | sort -r >> out || fail=1
cat <<\EOF > exp
dir/f_
dir
===
dir/f2
dir/f1
dir
EOF

compare out exp || fail=1

(exit $fail); exit $fail
