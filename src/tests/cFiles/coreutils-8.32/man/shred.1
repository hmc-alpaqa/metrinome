.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.
.TH SHRED "1" "March 2020" "GNU coreutils 8.32" "User Commands"
.SH NAME
shred \- overwrite a file to hide its contents, and optionally delete it
.SH SYNOPSIS
.B shred
[\fI\,OPTION\/\fR]... \fI\,FILE\/\fR...
.SH DESCRIPTION
.\" Add any additional description here
.PP
Overwrite the specified FILE(s) repeatedly, in order to make it harder
for even very expensive hardware probing to recover the data.
.PP
If FILE is \-, shred standard output.
.PP
Mandatory arguments to long options are mandatory for short options too.
.TP
\fB\-f\fR, \fB\-\-force\fR
change permissions to allow writing if necessary
.TP
\fB\-n\fR, \fB\-\-iterations\fR=\fI\,N\/\fR
overwrite N times instead of the default (3)
.TP
\fB\-\-random\-source\fR=\fI\,FILE\/\fR
get random bytes from FILE
.TP
\fB\-s\fR, \fB\-\-size\fR=\fI\,N\/\fR
shred this many bytes (suffixes like K, M, G accepted)
.TP
\fB\-u\fR
deallocate and remove file after overwriting
.TP
\fB\-\-remove\fR[=\fI\,HOW\/\fR]
like \fB\-u\fR but give control on HOW to delete;  See below
.TP
\fB\-v\fR, \fB\-\-verbose\fR
show progress
.TP
\fB\-x\fR, \fB\-\-exact\fR
do not round file sizes up to the next full block;
.IP
this is the default for non\-regular files
.TP
\fB\-z\fR, \fB\-\-zero\fR
add a final overwrite with zeros to hide shredding
.TP
\fB\-\-help\fR
display this help and exit
.TP
\fB\-\-version\fR
output version information and exit
.PP
Delete FILE(s) if \fB\-\-remove\fR (\fB\-u\fR) is specified.  The default is not to remove
the files because it is common to operate on device files like \fI\,/dev/hda\/\fP,
and those files usually should not be removed.
The optional HOW parameter indicates how to remove a directory entry:
\&'unlink' => use a standard unlink call.
\&'wipe' => also first obfuscate bytes in the name.
\&'wipesync' => also sync each obfuscated byte to disk.
The default mode is 'wipesync', but note it can be expensive.
.PP
CAUTION: shred assumes the file system and hardware overwrite data in place.
Although this is common, many platforms operate otherwise.  Also, backups
and mirrors may contain unremovable copies that will let a shredded file
be recovered later.  See the GNU coreutils manual for details.
.SH AUTHOR
Written by Colin Plumb.
.SH "REPORTING BUGS"
GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
.br
Report any translation bugs to <https://translationproject.org/team/>
.SH COPYRIGHT
Copyright \(co 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
Full documentation <https://www.gnu.org/software/coreutils/shred>
.br
or available locally via: info \(aq(coreutils) shred invocation\(aq
