.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.
.TH LN "1" "March 2020" "GNU coreutils 8.32" "User Commands"
.SH NAME
ln \- make links between files
.SH SYNOPSIS
.B ln
[\fI\,OPTION\/\fR]... [\fI\,-T\/\fR] \fI\,TARGET LINK_NAME\/\fR
.br
.B ln
[\fI\,OPTION\/\fR]... \fI\,TARGET\/\fR
.br
.B ln
[\fI\,OPTION\/\fR]... \fI\,TARGET\/\fR... \fI\,DIRECTORY\/\fR
.br
.B ln
[\fI\,OPTION\/\fR]... \fI\,-t DIRECTORY TARGET\/\fR...
.SH DESCRIPTION
.\" Add any additional description here
.PP
In the 1st form, create a link to TARGET with the name LINK_NAME.
In the 2nd form, create a link to TARGET in the current directory.
In the 3rd and 4th forms, create links to each TARGET in DIRECTORY.
Create hard links by default, symbolic links with \fB\-\-symbolic\fR.
By default, each destination (name of new link) should not already exist.
When creating hard links, each TARGET must exist.  Symbolic links
can hold arbitrary text; if later resolved, a relative link is
interpreted in relation to its parent directory.
.PP
Mandatory arguments to long options are mandatory for short options too.
.TP
\fB\-\-backup\fR[=\fI\,CONTROL\/\fR]
make a backup of each existing destination file
.TP
\fB\-b\fR
like \fB\-\-backup\fR but does not accept an argument
.TP
\fB\-d\fR, \fB\-F\fR, \fB\-\-directory\fR
allow the superuser to attempt to hard link
directories (note: will probably fail due to
system restrictions, even for the superuser)
.TP
\fB\-f\fR, \fB\-\-force\fR
remove existing destination files
.TP
\fB\-i\fR, \fB\-\-interactive\fR
prompt whether to remove destinations
.TP
\fB\-L\fR, \fB\-\-logical\fR
dereference TARGETs that are symbolic links
.TP
\fB\-n\fR, \fB\-\-no\-dereference\fR
treat LINK_NAME as a normal file if
it is a symbolic link to a directory
.TP
\fB\-P\fR, \fB\-\-physical\fR
make hard links directly to symbolic links
.TP
\fB\-r\fR, \fB\-\-relative\fR
create symbolic links relative to link location
.TP
\fB\-s\fR, \fB\-\-symbolic\fR
make symbolic links instead of hard links
.TP
\fB\-S\fR, \fB\-\-suffix\fR=\fI\,SUFFIX\/\fR
override the usual backup suffix
.TP
\fB\-t\fR, \fB\-\-target\-directory\fR=\fI\,DIRECTORY\/\fR
specify the DIRECTORY in which to create
the links
.TP
\fB\-T\fR, \fB\-\-no\-target\-directory\fR
treat LINK_NAME as a normal file always
.TP
\fB\-v\fR, \fB\-\-verbose\fR
print name of each linked file
.TP
\fB\-\-help\fR
display this help and exit
.TP
\fB\-\-version\fR
output version information and exit
.PP
The backup suffix is '~', unless set with \fB\-\-suffix\fR or SIMPLE_BACKUP_SUFFIX.
The version control method may be selected via the \fB\-\-backup\fR option or through
the VERSION_CONTROL environment variable.  Here are the values:
.TP
none, off
never make backups (even if \fB\-\-backup\fR is given)
.TP
numbered, t
make numbered backups
.TP
existing, nil
numbered if numbered backups exist, simple otherwise
.TP
simple, never
always make simple backups
.PP
Using \fB\-s\fR ignores \fB\-L\fR and \fB\-P\fR.  Otherwise, the last option specified controls
behavior when a TARGET is a symbolic link, defaulting to \fB\-L\fR.
.SH AUTHOR
Written by Mike Parker and David MacKenzie.
.SH "REPORTING BUGS"
GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
.br
Report any translation bugs to <https://translationproject.org/team/>
.SH COPYRIGHT
Copyright \(co 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
link(2), symlink(2)
.PP
.br
Full documentation <https://www.gnu.org/software/coreutils/ln>
.br
or available locally via: info \(aq(coreutils) ln invocation\(aq
