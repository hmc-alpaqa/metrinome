digraph "CFG for '_obstack_begin_worker' function" {
	label="CFG for '_obstack_begin_worker' function";

	Node0x23336f0 [shape=record,label="{%3:\l  %4 = alloca %struct.obstack*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca %struct._obstack_chunk*, align 8\l  %8 = alloca i32, align 4\l  store %struct.obstack* %0, %struct.obstack** %4, align 8, !tbaa !1781\l  call void @llvm.dbg.declare(metadata %struct.obstack** %4, metadata !1774,\l... metadata !DIExpression()), !dbg !1785\l  store i64 %1, i64* %5, align 8, !tbaa !1786\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !1775, metadata\l... !DIExpression()), !dbg !1788\l  store i64 %2, i64* %6, align 8, !tbaa !1786\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1776, metadata\l... !DIExpression()), !dbg !1789\l  %9 = bitcast %struct._obstack_chunk** %7 to i8*, !dbg !1790\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #14, !dbg !1790\l  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %7, metadata\l... !1777, metadata !DIExpression()), !dbg !1791\l  %10 = load i64, i64* %6, align 8, !dbg !1792, !tbaa !1786\l  %11 = icmp eq i64 %10, 0, !dbg !1794\l  br i1 %11, label %12, label %13, !dbg !1795\l|{<s0>T|<s1>F}}"];
	Node0x23336f0:s0 -> Node0x2335510;
	Node0x23336f0:s1 -> Node0x2335560;
	Node0x2335510 [shape=record,label="{%12:\l\l  store i64 16, i64* %6, align 8, !dbg !1796, !tbaa !1786\l  br label %13, !dbg !1797\l}"];
	Node0x2335510 -> Node0x2335560;
	Node0x2335560 [shape=record,label="{%13:\l\l  %14 = load i64, i64* %5, align 8, !dbg !1798, !tbaa !1786\l  %15 = icmp eq i64 %14, 0, !dbg !1799\l  br i1 %15, label %16, label %22, !dbg !1800\l|{<s0>T|<s1>F}}"];
	Node0x2335560:s0 -> Node0x23355b0;
	Node0x2335560:s1 -> Node0x2335600;
	Node0x23355b0 [shape=record,label="{%16:\l\l  %17 = bitcast i32* %8 to i8*, !dbg !1801\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #14, !dbg !1801\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !1778, metadata\l... !DIExpression()), !dbg !1802\l  store i32 32, i32* %8, align 4, !dbg !1802, !tbaa !1803\l  %18 = load i32, i32* %8, align 4, !dbg !1805, !tbaa !1803\l  %19 = sub nsw i32 4096, %18, !dbg !1806\l  %20 = sext i32 %19 to i64, !dbg !1807\l  store i64 %20, i64* %5, align 8, !dbg !1808, !tbaa !1786\l  %21 = bitcast i32* %8 to i8*, !dbg !1809\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %21) #14, !dbg !1809\l  br label %22, !dbg !1810\l}"];
	Node0x23355b0 -> Node0x2335600;
	Node0x2335600 [shape=record,label="{%22:\l\l  %23 = load i64, i64* %5, align 8, !dbg !1811, !tbaa !1786\l  %24 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1812,\l... !tbaa !1781\l  %25 = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0,\l... i32 0, !dbg !1813\l  store i64 %23, i64* %25, align 8, !dbg !1814, !tbaa !1815\l  %26 = load i64, i64* %6, align 8, !dbg !1817, !tbaa !1786\l  %27 = sub i64 %26, 1, !dbg !1818\l  %28 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1819,\l... !tbaa !1781\l  %29 = getelementptr inbounds %struct.obstack, %struct.obstack* %28, i32 0,\l... i32 6, !dbg !1820\l  store i64 %27, i64* %29, align 8, !dbg !1821, !tbaa !1822\l  %30 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1823,\l... !tbaa !1781\l  %31 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1824,\l... !tbaa !1781\l  %32 = getelementptr inbounds %struct.obstack, %struct.obstack* %31, i32 0,\l... i32 0, !dbg !1825\l  %33 = load i64, i64* %32, align 8, !dbg !1825, !tbaa !1815\l  %34 = call i8* @call_chunkfun(%struct.obstack* %30, i64 %33), !dbg !1826\l  %35 = bitcast i8* %34 to %struct._obstack_chunk*, !dbg !1826\l  %36 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1827,\l... !tbaa !1781\l  %37 = getelementptr inbounds %struct.obstack, %struct.obstack* %36, i32 0,\l... i32 1, !dbg !1828\l  store %struct._obstack_chunk* %35, %struct._obstack_chunk** %37, align 8,\l... !dbg !1829, !tbaa !1830\l  store %struct._obstack_chunk* %35, %struct._obstack_chunk** %7, align 8,\l... !dbg !1831, !tbaa !1781\l  %38 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8,\l... !dbg !1832, !tbaa !1781\l  %39 = icmp ne %struct._obstack_chunk* %38, null, !dbg !1832\l  br i1 %39, label %42, label %40, !dbg !1834\l|{<s0>T|<s1>F}}"];
	Node0x2335600:s0 -> Node0x23356a0;
	Node0x2335600:s1 -> Node0x2335650;
	Node0x2335650 [shape=record,label="{%40:\l\l  %41 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg\l... !1835, !tbaa !1781\l  call void %41() #15, !dbg !1836\l  unreachable, !dbg !1836\l}"];
	Node0x23356a0 [shape=record,label="{%42:\l\l  %43 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8,\l... !dbg !1837, !tbaa !1781\l  %44 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %43, i32 0, i32 2, !dbg !1837\l  %45 = getelementptr inbounds [0 x i8], [0 x i8]* %44, i32 0, i32 0, !dbg\l... !1837\l  %46 = ptrtoint i8* %45 to i64, !dbg !1837\l  %47 = sub i64 %46, 0, !dbg !1837\l  %48 = load i64, i64* %6, align 8, !dbg !1837, !tbaa !1786\l  %49 = sub i64 %48, 1, !dbg !1837\l  %50 = add i64 %47, %49, !dbg !1837\l  %51 = load i64, i64* %6, align 8, !dbg !1837, !tbaa !1786\l  %52 = sub i64 %51, 1, !dbg !1837\l  %53 = xor i64 %52, -1, !dbg !1837\l  %54 = and i64 %50, %53, !dbg !1837\l  %55 = getelementptr inbounds i8, i8* null, i64 %54, !dbg !1837\l  %56 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1838,\l... !tbaa !1781\l  %57 = getelementptr inbounds %struct.obstack, %struct.obstack* %56, i32 0,\l... i32 2, !dbg !1839\l  store i8* %55, i8** %57, align 8, !dbg !1840, !tbaa !1841\l  %58 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1842,\l... !tbaa !1781\l  %59 = getelementptr inbounds %struct.obstack, %struct.obstack* %58, i32 0,\l... i32 3, !dbg !1843\l  store i8* %55, i8** %59, align 8, !dbg !1844, !tbaa !1845\l  %60 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8,\l... !dbg !1846, !tbaa !1781\l  %61 = bitcast %struct._obstack_chunk* %60 to i8*, !dbg !1847\l  %62 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1848,\l... !tbaa !1781\l  %63 = getelementptr inbounds %struct.obstack, %struct.obstack* %62, i32 0,\l... i32 0, !dbg !1849\l  %64 = load i64, i64* %63, align 8, !dbg !1849, !tbaa !1815\l  %65 = getelementptr inbounds i8, i8* %61, i64 %64, !dbg !1850\l  %66 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8,\l... !dbg !1851, !tbaa !1781\l  %67 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %66, i32 0, i32 0, !dbg !1852\l  store i8* %65, i8** %67, align 8, !dbg !1853, !tbaa !1781\l  %68 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1854,\l... !tbaa !1781\l  %69 = getelementptr inbounds %struct.obstack, %struct.obstack* %68, i32 0,\l... i32 4, !dbg !1855\l  store i8* %65, i8** %69, align 8, !dbg !1856, !tbaa !1857\l  %70 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8,\l... !dbg !1858, !tbaa !1781\l  %71 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %70, i32 0, i32 1, !dbg !1859\l  store %struct._obstack_chunk* null, %struct._obstack_chunk** %71, align 8,\l... !dbg !1860, !tbaa !1781\l  %72 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1861,\l... !tbaa !1781\l  %73 = getelementptr inbounds %struct.obstack, %struct.obstack* %72, i32 0,\l... i32 10, !dbg !1862\l  %74 = load i8, i8* %73, align 8, !dbg !1863\l  %75 = and i8 %74, -3, !dbg !1863\l  store i8 %75, i8* %73, align 8, !dbg !1863\l  %76 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1864,\l... !tbaa !1781\l  %77 = getelementptr inbounds %struct.obstack, %struct.obstack* %76, i32 0,\l... i32 10, !dbg !1865\l  %78 = load i8, i8* %77, align 8, !dbg !1866\l  %79 = and i8 %78, -5, !dbg !1866\l  store i8 %79, i8* %77, align 8, !dbg !1866\l  %80 = bitcast %struct._obstack_chunk** %7 to i8*, !dbg !1867\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %80) #14, !dbg !1867\l  ret i32 1, !dbg !1868\l}"];
}
