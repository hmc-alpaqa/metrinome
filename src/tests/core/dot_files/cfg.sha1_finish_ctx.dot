digraph "CFG for 'sha1_finish_ctx' function" {
	label="CFG for 'sha1_finish_ctx' function";

	Node0x9459e0 [shape=record,label="{%2:\l  %3 = alloca %struct.sha1_ctx*, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i64, align 8\l  store %struct.sha1_ctx* %0, %struct.sha1_ctx** %3, align 8, !tbaa !794\l  call void @llvm.dbg.declare(metadata %struct.sha1_ctx** %3, metadata !790,\l... metadata !DIExpression()), !dbg !798\l  store i8* %1, i8** %4, align 8, !tbaa !794\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !791, metadata\l... !DIExpression()), !dbg !799\l  %7 = bitcast i32* %5 to i8*, !dbg !800\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #12, !dbg !800\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !792, metadata\l... !DIExpression()), !dbg !801\l  %8 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !802,\l... !tbaa !794\l  %9 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %8, i32 0,\l... i32 6, !dbg !803\l  %10 = load i32, i32* %9, align 4, !dbg !803, !tbaa !804\l  store i32 %10, i32* %5, align 4, !dbg !801, !tbaa !807\l  %11 = bitcast i64* %6 to i8*, !dbg !808\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #12, !dbg !808\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !793, metadata\l... !DIExpression()), !dbg !809\l  %12 = load i32, i32* %5, align 4, !dbg !810, !tbaa !807\l  %13 = icmp ult i32 %12, 56, !dbg !811\l  %14 = zext i1 %13 to i64, !dbg !812\l  %15 = select i1 %13, i32 16, i32 32, !dbg !812\l  %16 = sext i32 %15 to i64, !dbg !812\l  store i64 %16, i64* %6, align 8, !dbg !809, !tbaa !813\l  %17 = load i32, i32* %5, align 4, !dbg !815, !tbaa !807\l  %18 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !816,\l... !tbaa !794\l  %19 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %18, i32 0,\l... i32 5, !dbg !817\l  %20 = getelementptr inbounds [2 x i32], [2 x i32]* %19, i64 0, i64 0, !dbg\l... !816\l  %21 = load i32, i32* %20, align 4, !dbg !818, !tbaa !807\l  %22 = add i32 %21, %17, !dbg !818\l  store i32 %22, i32* %20, align 4, !dbg !818, !tbaa !807\l  %23 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !819,\l... !tbaa !794\l  %24 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %23, i32 0,\l... i32 5, !dbg !821\l  %25 = getelementptr inbounds [2 x i32], [2 x i32]* %24, i64 0, i64 0, !dbg\l... !819\l  %26 = load i32, i32* %25, align 4, !dbg !819, !tbaa !807\l  %27 = load i32, i32* %5, align 4, !dbg !822, !tbaa !807\l  %28 = icmp ult i32 %26, %27, !dbg !823\l  br i1 %28, label %29, label %35, !dbg !824\l|{<s0>T|<s1>F}}"];
	Node0x9459e0:s0 -> Node0x9b8fc0;
	Node0x9459e0:s1 -> Node0x9b9010;
	Node0x9b8fc0 [shape=record,label="{%29:\l\l  %30 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !825,\l... !tbaa !794\l  %31 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %30, i32 0,\l... i32 5, !dbg !826\l  %32 = getelementptr inbounds [2 x i32], [2 x i32]* %31, i64 0, i64 1, !dbg\l... !825\l  %33 = load i32, i32* %32, align 4, !dbg !827, !tbaa !807\l  %34 = add i32 %33, 1, !dbg !827\l  store i32 %34, i32* %32, align 4, !dbg !827, !tbaa !807\l  br label %35, !dbg !827\l}"];
	Node0x9b8fc0 -> Node0x9b9010;
	Node0x9b9010 [shape=record,label="{%35:\l\l  %36 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !828,\l... !tbaa !794\l  %37 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %36, i32 0,\l... i32 5, !dbg !828\l  %38 = getelementptr inbounds [2 x i32], [2 x i32]* %37, i64 0, i64 1, !dbg\l... !828\l  %39 = load i32, i32* %38, align 4, !dbg !828, !tbaa !807\l  %40 = shl i32 %39, 3, !dbg !828\l  %41 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !828,\l... !tbaa !794\l  %42 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %41, i32 0,\l... i32 5, !dbg !828\l  %43 = getelementptr inbounds [2 x i32], [2 x i32]* %42, i64 0, i64 0, !dbg\l... !828\l  %44 = load i32, i32* %43, align 4, !dbg !828, !tbaa !807\l  %45 = lshr i32 %44, 29, !dbg !828\l  %46 = or i32 %40, %45, !dbg !828\l  %47 = call i32 @__bswap_32(i32 %46), !dbg !828\l  %48 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !829,\l... !tbaa !794\l  %49 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %48, i32 0,\l... i32 7, !dbg !830\l  %50 = load i64, i64* %6, align 8, !dbg !831, !tbaa !813\l  %51 = sub i64 %50, 2, !dbg !832\l  %52 = getelementptr inbounds [32 x i32], [32 x i32]* %49, i64 0, i64 %51,\l... !dbg !829\l  store i32 %47, i32* %52, align 4, !dbg !833, !tbaa !807\l  %53 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !834,\l... !tbaa !794\l  %54 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %53, i32 0,\l... i32 5, !dbg !834\l  %55 = getelementptr inbounds [2 x i32], [2 x i32]* %54, i64 0, i64 0, !dbg\l... !834\l  %56 = load i32, i32* %55, align 4, !dbg !834, !tbaa !807\l  %57 = shl i32 %56, 3, !dbg !834\l  %58 = call i32 @__bswap_32(i32 %57), !dbg !834\l  %59 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !835,\l... !tbaa !794\l  %60 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %59, i32 0,\l... i32 7, !dbg !836\l  %61 = load i64, i64* %6, align 8, !dbg !837, !tbaa !813\l  %62 = sub i64 %61, 1, !dbg !838\l  %63 = getelementptr inbounds [32 x i32], [32 x i32]* %60, i64 0, i64 %62,\l... !dbg !835\l  store i32 %58, i32* %63, align 4, !dbg !839, !tbaa !807\l  %64 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !840,\l... !tbaa !794\l  %65 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %64, i32 0,\l... i32 7, !dbg !841\l  %66 = getelementptr inbounds [32 x i32], [32 x i32]* %65, i32 0, i32 0, !dbg\l... !842\l  %67 = bitcast i32* %66 to i8*, !dbg !842\l  %68 = load i32, i32* %5, align 4, !dbg !843, !tbaa !807\l  %69 = zext i32 %68 to i64, !dbg !842\l  %70 = getelementptr inbounds i8, i8* %67, i64 %69, !dbg !842\l  %71 = load i64, i64* %6, align 8, !dbg !844, !tbaa !813\l  %72 = sub i64 %71, 2, !dbg !845\l  %73 = mul i64 %72, 4, !dbg !846\l  %74 = load i32, i32* %5, align 4, !dbg !847, !tbaa !807\l  %75 = zext i32 %74 to i64, !dbg !847\l  %76 = sub i64 %73, %75, !dbg !848\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 16\l... getelementptr inbounds ([64 x i8], [64 x i8]* bitcast (\<\{ i8, [63 x i8] \}\>*\l... @fillbuf to [64 x i8]*), i32 0, i32 0), i64 %76, i1 false), !dbg !849\l  %77 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !850,\l... !tbaa !794\l  %78 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %77, i32 0,\l... i32 7, !dbg !851\l  %79 = getelementptr inbounds [32 x i32], [32 x i32]* %78, i32 0, i32 0, !dbg\l... !850\l  %80 = bitcast i32* %79 to i8*, !dbg !850\l  %81 = load i64, i64* %6, align 8, !dbg !852, !tbaa !813\l  %82 = mul i64 %81, 4, !dbg !853\l  %83 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !854,\l... !tbaa !794\l  call void @sha1_process_block(i8* %80, i64 %82, %struct.sha1_ctx* %83), !dbg\l... !855\l  %84 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !856,\l... !tbaa !794\l  %85 = load i8*, i8** %4, align 8, !dbg !857, !tbaa !794\l  %86 = call i8* @sha1_read_ctx(%struct.sha1_ctx* %84, i8* %85), !dbg !858\l  %87 = bitcast i64* %6 to i8*, !dbg !859\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87) #12, !dbg !859\l  %88 = bitcast i32* %5 to i8*, !dbg !859\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %88) #12, !dbg !859\l  ret i8* %86, !dbg !860\l}"];
}
