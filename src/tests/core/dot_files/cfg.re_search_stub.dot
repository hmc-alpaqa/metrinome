digraph "CFG for 're_search_stub' function" {
	label="CFG for 're_search_stub' function";

	Node0x103ec00 [shape=record,label="{%8:\l  %9 = alloca i64, align 8\l  %10 = alloca %struct.re_pattern_buffer*, align 8\l  %11 = alloca i8*, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca %struct.re_registers*, align 8\l  %17 = alloca i8, align 1\l  %18 = alloca i32, align 4\l  %19 = alloca %struct.regmatch_t*, align 8\l  %20 = alloca i64, align 8\l  %21 = alloca i64, align 8\l  %22 = alloca i32, align 4\l  %23 = alloca %struct.re_dfa_t*, align 8\l  %24 = alloca i64, align 8\l  %25 = alloca i32, align 4\l  store %struct.re_pattern_buffer* %0, %struct.re_pattern_buffer** %10, align\l... 8, !tbaa !1081\l  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %10,\l... metadata !1066, metadata !DIExpression()), !dbg !1085\l  store i8* %1, i8** %11, align 8, !tbaa !1081\l  call void @llvm.dbg.declare(metadata i8** %11, metadata !1067, metadata\l... !DIExpression()), !dbg !1086\l  store i64 %2, i64* %12, align 8, !tbaa !1087\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1068, metadata\l... !DIExpression()), !dbg !1089\l  store i64 %3, i64* %13, align 8, !tbaa !1087\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !1069, metadata\l... !DIExpression()), !dbg !1090\l  store i64 %4, i64* %14, align 8, !tbaa !1087\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !1070, metadata\l... !DIExpression()), !dbg !1091\l  store i64 %5, i64* %15, align 8, !tbaa !1087\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !1071, metadata\l... !DIExpression()), !dbg !1092\l  store %struct.re_registers* %6, %struct.re_registers** %16, align 8, !tbaa\l... !1081\l  call void @llvm.dbg.declare(metadata %struct.re_registers** %16, metadata\l... !1072, metadata !DIExpression()), !dbg !1093\l  %26 = zext i1 %7 to i8\l  store i8 %26, i8* %17, align 1, !tbaa !1094\l  call void @llvm.dbg.declare(metadata i8* %17, metadata !1073, metadata\l... !DIExpression()), !dbg !1096\l  %27 = bitcast i32* %18 to i8*, !dbg !1097\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #12, !dbg !1097\l  call void @llvm.dbg.declare(metadata i32* %18, metadata !1074, metadata\l... !DIExpression()), !dbg !1098\l  %28 = bitcast %struct.regmatch_t** %19 to i8*, !dbg !1099\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #12, !dbg !1099\l  call void @llvm.dbg.declare(metadata %struct.regmatch_t** %19, metadata\l... !1075, metadata !DIExpression()), !dbg !1100\l  %29 = bitcast i64* %20 to i8*, !dbg !1101\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #12, !dbg !1101\l  call void @llvm.dbg.declare(metadata i64* %20, metadata !1076, metadata\l... !DIExpression()), !dbg !1102\l  %30 = bitcast i64* %21 to i8*, !dbg !1103\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #12, !dbg !1103\l  call void @llvm.dbg.declare(metadata i64* %21, metadata !1077, metadata\l... !DIExpression()), !dbg !1104\l  %31 = bitcast i32* %22 to i8*, !dbg !1105\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #12, !dbg !1105\l  call void @llvm.dbg.declare(metadata i32* %22, metadata !1078, metadata\l... !DIExpression()), !dbg !1106\l  store i32 0, i32* %22, align 4, !dbg !1106, !tbaa !1107\l  %32 = bitcast %struct.re_dfa_t** %23 to i8*, !dbg !1109\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #12, !dbg !1109\l  call void @llvm.dbg.declare(metadata %struct.re_dfa_t** %23, metadata !1079,\l... metadata !DIExpression()), !dbg !1110\l  %33 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %10,\l... align 8, !dbg !1111, !tbaa !1081\l  %34 = getelementptr inbounds %struct.re_pattern_buffer,\l... %struct.re_pattern_buffer* %33, i32 0, i32 0, !dbg !1112\l  %35 = load %struct.re_dfa_t*, %struct.re_dfa_t** %34, align 8, !dbg !1112,\l... !tbaa !1113\l  store %struct.re_dfa_t* %35, %struct.re_dfa_t** %23, align 8, !dbg !1110,\l... !tbaa !1081\l  %36 = bitcast i64* %24 to i8*, !dbg !1115\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #12, !dbg !1115\l  call void @llvm.dbg.declare(metadata i64* %24, metadata !1080, metadata\l... !DIExpression()), !dbg !1116\l  %37 = load i64, i64* %13, align 8, !dbg !1117, !tbaa !1087\l  %38 = load i64, i64* %14, align 8, !dbg !1118, !tbaa !1087\l  %39 = add nsw i64 %37, %38, !dbg !1119\l  store i64 %39, i64* %24, align 8, !dbg !1116, !tbaa !1087\l  %40 = load i64, i64* %13, align 8, !dbg !1120, !tbaa !1087\l  %41 = icmp slt i64 %40, 0, !dbg !1120\l  br i1 %41, label %46, label %42, !dbg !1120\l|{<s0>T|<s1>F}}"];
	Node0x103ec00:s0 -> Node0x1040280;
	Node0x103ec00:s1 -> Node0x1040230;
	Node0x1040230 [shape=record,label="{%42:\l\l  %43 = load i64, i64* %13, align 8, !dbg !1120, !tbaa !1087\l  %44 = load i64, i64* %12, align 8, !dbg !1120, !tbaa !1087\l  %45 = icmp sgt i64 %43, %44, !dbg !1120\l  br label %46, !dbg !1120\l}"];
	Node0x1040230 -> Node0x1040280;
	Node0x1040280 [shape=record,label="{%46:\l\l  %47 = phi i1 [ true, %8 ], [ %45, %42 ]\l  %48 = zext i1 %47 to i32, !dbg !1120\l  %49 = sext i32 %48 to i64, !dbg !1120\l  %50 = call i64 @llvm.expect.i64(i64 %49, i64 0), !dbg !1120\l  %51 = icmp ne i64 %50, 0, !dbg !1120\l  br i1 %51, label %52, label %53, !dbg !1122\l|{<s0>T|<s1>F}}"];
	Node0x1040280:s0 -> Node0x10402d0;
	Node0x1040280:s1 -> Node0x1040320;
	Node0x10402d0 [shape=record,label="{%52:\l\l  store i64 -1, i64* %9, align 8, !dbg !1123\l  store i32 1, i32* %25, align 4\l  br label %298, !dbg !1123\l}"];
	Node0x10402d0 -> Node0x1041270;
	Node0x1040320 [shape=record,label="{%53:\l\l  %54 = load i64, i64* %12, align 8, !dbg !1124, !tbaa !1087\l  %55 = load i64, i64* %24, align 8, !dbg !1124, !tbaa !1087\l  %56 = icmp slt i64 %54, %55, !dbg !1124\l  br i1 %56, label %66, label %57, !dbg !1124\l|{<s0>T|<s1>F}}"];
	Node0x1040320:s0 -> Node0x1040460;
	Node0x1040320:s1 -> Node0x1040370;
	Node0x1040370 [shape=record,label="{%57:\l\l  %58 = load i64, i64* %14, align 8, !dbg !1124, !tbaa !1087\l  %59 = icmp sle i64 0, %58, !dbg !1124\l  br i1 %59, label %60, label %64, !dbg !1124\l|{<s0>T|<s1>F}}"];
	Node0x1040370:s0 -> Node0x10403c0;
	Node0x1040370:s1 -> Node0x1040410;
	Node0x10403c0 [shape=record,label="{%60:\l\l  %61 = load i64, i64* %24, align 8, !dbg !1124, !tbaa !1087\l  %62 = load i64, i64* %13, align 8, !dbg !1124, !tbaa !1087\l  %63 = icmp slt i64 %61, %62, !dbg !1124\l  br label %64\l}"];
	Node0x10403c0 -> Node0x1040410;
	Node0x1040410 [shape=record,label="{%64:\l\l  %65 = phi i1 [ false, %57 ], [ %63, %60 ], !dbg !1126\l  br label %66, !dbg !1124\l}"];
	Node0x1040410 -> Node0x1040460;
	Node0x1040460 [shape=record,label="{%66:\l\l  %67 = phi i1 [ true, %53 ], [ %65, %64 ]\l  %68 = zext i1 %67 to i32, !dbg !1124\l  %69 = sext i32 %68 to i64, !dbg !1124\l  %70 = call i64 @llvm.expect.i64(i64 %69, i64 0), !dbg !1124\l  %71 = icmp ne i64 %70, 0, !dbg !1124\l  br i1 %71, label %72, label %74, !dbg !1127\l|{<s0>T|<s1>F}}"];
	Node0x1040460:s0 -> Node0x10404b0;
	Node0x1040460:s1 -> Node0x1040500;
	Node0x10404b0 [shape=record,label="{%72:\l\l  %73 = load i64, i64* %12, align 8, !dbg !1128, !tbaa !1087\l  store i64 %73, i64* %24, align 8, !dbg !1129, !tbaa !1087\l  br label %94, !dbg !1130\l}"];
	Node0x10404b0 -> Node0x1040730;
	Node0x1040500 [shape=record,label="{%74:\l\l  %75 = load i64, i64* %24, align 8, !dbg !1131, !tbaa !1087\l  %76 = icmp slt i64 %75, 0, !dbg !1131\l  br i1 %76, label %86, label %77, !dbg !1131\l|{<s0>T|<s1>F}}"];
	Node0x1040500:s0 -> Node0x1040640;
	Node0x1040500:s1 -> Node0x1040550;
	Node0x1040550 [shape=record,label="{%77:\l\l  %78 = load i64, i64* %14, align 8, !dbg !1131, !tbaa !1087\l  %79 = icmp slt i64 %78, 0, !dbg !1131\l  br i1 %79, label %80, label %84, !dbg !1131\l|{<s0>T|<s1>F}}"];
	Node0x1040550:s0 -> Node0x10405a0;
	Node0x1040550:s1 -> Node0x10405f0;
	Node0x10405a0 [shape=record,label="{%80:\l\l  %81 = load i64, i64* %13, align 8, !dbg !1131, !tbaa !1087\l  %82 = load i64, i64* %24, align 8, !dbg !1131, !tbaa !1087\l  %83 = icmp sle i64 %81, %82, !dbg !1131\l  br label %84\l}"];
	Node0x10405a0 -> Node0x10405f0;
	Node0x10405f0 [shape=record,label="{%84:\l\l  %85 = phi i1 [ false, %77 ], [ %83, %80 ], !dbg !1133\l  br label %86, !dbg !1131\l}"];
	Node0x10405f0 -> Node0x1040640;
	Node0x1040640 [shape=record,label="{%86:\l\l  %87 = phi i1 [ true, %74 ], [ %85, %84 ]\l  %88 = zext i1 %87 to i32, !dbg !1131\l  %89 = sext i32 %88 to i64, !dbg !1131\l  %90 = call i64 @llvm.expect.i64(i64 %89, i64 0), !dbg !1131\l  %91 = icmp ne i64 %90, 0, !dbg !1131\l  br i1 %91, label %92, label %93, !dbg !1134\l|{<s0>T|<s1>F}}"];
	Node0x1040640:s0 -> Node0x1040690;
	Node0x1040640:s1 -> Node0x10406e0;
	Node0x1040690 [shape=record,label="{%92:\l\l  store i64 0, i64* %24, align 8, !dbg !1135, !tbaa !1087\l  br label %93, !dbg !1136\l}"];
	Node0x1040690 -> Node0x10406e0;
	Node0x10406e0 [shape=record,label="{%93:\l\l  br label %94\l}"];
	Node0x10406e0 -> Node0x1040730;
	Node0x1040730 [shape=record,label="{%94:\l\l  %95 = load %struct.re_dfa_t*, %struct.re_dfa_t** %23, align 8, !dbg !1137,\l... !tbaa !1081\l  %96 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %10,\l... align 8, !dbg !1138, !tbaa !1081\l  %97 = getelementptr inbounds %struct.re_pattern_buffer,\l... %struct.re_pattern_buffer* %96, i32 0, i32 7, !dbg !1139\l  %98 = load i8, i8* %97, align 8, !dbg !1139\l  %99 = lshr i8 %98, 5, !dbg !1139\l  %100 = and i8 %99, 1, !dbg !1139\l  %101 = zext i8 %100 to i32, !dbg !1139\l  %102 = icmp ne i32 %101, 0, !dbg !1140\l  %103 = zext i1 %102 to i64, !dbg !1140\l  %104 = select i1 %102, i32 1, i32 0, !dbg !1140\l  %105 = load i32, i32* %22, align 4, !dbg !1141, !tbaa !1107\l  %106 = or i32 %105, %104, !dbg !1141\l  store i32 %106, i32* %22, align 4, !dbg !1141, !tbaa !1107\l  %107 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %10,\l... align 8, !dbg !1142, !tbaa !1081\l  %108 = getelementptr inbounds %struct.re_pattern_buffer,\l... %struct.re_pattern_buffer* %107, i32 0, i32 7, !dbg !1143\l  %109 = load i8, i8* %108, align 8, !dbg !1143\l  %110 = lshr i8 %109, 6, !dbg !1143\l  %111 = and i8 %110, 1, !dbg !1143\l  %112 = zext i8 %111 to i32, !dbg !1143\l  %113 = icmp ne i32 %112, 0, !dbg !1144\l  %114 = zext i1 %113 to i64, !dbg !1144\l  %115 = select i1 %113, i32 2, i32 0, !dbg !1144\l  %116 = load i32, i32* %22, align 4, !dbg !1145, !tbaa !1107\l  %117 = or i32 %116, %115, !dbg !1145\l  store i32 %117, i32* %22, align 4, !dbg !1145, !tbaa !1107\l  %118 = load i64, i64* %13, align 8, !dbg !1146, !tbaa !1087\l  %119 = load i64, i64* %24, align 8, !dbg !1148, !tbaa !1087\l  %120 = icmp slt i64 %118, %119, !dbg !1149\l  br i1 %120, label %121, label %137, !dbg !1150\l|{<s0>T|<s1>F}}"];
	Node0x1040730:s0 -> Node0x1040780;
	Node0x1040730:s1 -> Node0x1040870;
	Node0x1040780 [shape=record,label="{%121:\l\l  %122 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %10,\l... align 8, !dbg !1151, !tbaa !1081\l  %123 = getelementptr inbounds %struct.re_pattern_buffer,\l... %struct.re_pattern_buffer* %122, i32 0, i32 4, !dbg !1152\l  %124 = load i8*, i8** %123, align 8, !dbg !1152, !tbaa !1153\l  %125 = icmp ne i8* %124, null, !dbg !1154\l  br i1 %125, label %126, label %137, !dbg !1155\l|{<s0>T|<s1>F}}"];
	Node0x1040780:s0 -> Node0x10407d0;
	Node0x1040780:s1 -> Node0x1040870;
	Node0x10407d0 [shape=record,label="{%126:\l\l  %127 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %10,\l... align 8, !dbg !1156, !tbaa !1081\l  %128 = getelementptr inbounds %struct.re_pattern_buffer,\l... %struct.re_pattern_buffer* %127, i32 0, i32 7, !dbg !1157\l  %129 = load i8, i8* %128, align 8, !dbg !1157\l  %130 = lshr i8 %129, 3, !dbg !1157\l  %131 = and i8 %130, 1, !dbg !1157\l  %132 = zext i8 %131 to i32, !dbg !1157\l  %133 = icmp ne i32 %132, 0, !dbg !1156\l  br i1 %133, label %137, label %134, !dbg !1158\l|{<s0>T|<s1>F}}"];
	Node0x10407d0:s0 -> Node0x1040870;
	Node0x10407d0:s1 -> Node0x1040820;
	Node0x1040820 [shape=record,label="{%134:\l\l  %135 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %10,\l... align 8, !dbg !1159, !tbaa !1081\l  %136 = call i32 @rpl_re_compile_fastmap(%struct.re_pattern_buffer* %135),\l... !dbg !1160\l  br label %137, !dbg !1160\l}"];
	Node0x1040820 -> Node0x1040870;
	Node0x1040870 [shape=record,label="{%137:\l\l  %138 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %10,\l... align 8, !dbg !1161, !tbaa !1081\l  %139 = getelementptr inbounds %struct.re_pattern_buffer,\l... %struct.re_pattern_buffer* %138, i32 0, i32 7, !dbg !1161\l  %140 = load i8, i8* %139, align 8, !dbg !1161\l  %141 = lshr i8 %140, 4, !dbg !1161\l  %142 = and i8 %141, 1, !dbg !1161\l  %143 = zext i8 %142 to i32, !dbg !1161\l  %144 = zext i32 %143 to i64, !dbg !1161\l  %145 = call i64 @llvm.expect.i64(i64 %144, i64 0), !dbg !1161\l  %146 = icmp ne i64 %145, 0, !dbg !1161\l  br i1 %146, label %147, label %148, !dbg !1163\l|{<s0>T|<s1>F}}"];
	Node0x1040870:s0 -> Node0x10408c0;
	Node0x1040870:s1 -> Node0x1040910;
	Node0x10408c0 [shape=record,label="{%147:\l\l  store %struct.re_registers* null, %struct.re_registers** %16, align 8, !dbg\l... !1164, !tbaa !1081\l  br label %148, !dbg !1165\l}"];
	Node0x10408c0 -> Node0x1040910;
	Node0x1040910 [shape=record,label="{%148:\l\l  %149 = load %struct.re_registers*, %struct.re_registers** %16, align 8, !dbg\l... !1166, !tbaa !1081\l  %150 = icmp eq %struct.re_registers* %149, null, !dbg !1168\l  br i1 %150, label %151, label %152, !dbg !1169\l|{<s0>T|<s1>F}}"];
	Node0x1040910:s0 -> Node0x1040960;
	Node0x1040910:s1 -> Node0x10409b0;
	Node0x1040960 [shape=record,label="{%151:\l\l  store i64 1, i64* %20, align 8, !dbg !1170, !tbaa !1087\l  br label %192, !dbg !1171\l}"];
	Node0x1040960 -> Node0x1040c30;
	Node0x10409b0 [shape=record,label="{%152:\l\l  %153 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %10,\l... align 8, !dbg !1172, !tbaa !1081\l  %154 = getelementptr inbounds %struct.re_pattern_buffer,\l... %struct.re_pattern_buffer* %153, i32 0, i32 7, !dbg !1172\l  %155 = load i8, i8* %154, align 8, !dbg !1172\l  %156 = lshr i8 %155, 1, !dbg !1172\l  %157 = and i8 %156, 3, !dbg !1172\l  %158 = zext i8 %157 to i32, !dbg !1172\l  %159 = icmp eq i32 %158, 2, !dbg !1172\l  br i1 %159, label %160, label %168, !dbg !1172\l|{<s0>T|<s1>F}}"];
	Node0x10409b0:s0 -> Node0x1040a00;
	Node0x10409b0:s1 -> Node0x1040a50;
	Node0x1040a00 [shape=record,label="{%160:\l\l  %161 = load %struct.re_registers*, %struct.re_registers** %16, align 8, !dbg\l... !1172, !tbaa !1081\l  %162 = getelementptr inbounds %struct.re_registers, %struct.re_registers*\l... %161, i32 0, i32 0, !dbg !1172\l  %163 = load i64, i64* %162, align 8, !dbg !1172, !tbaa !1174\l  %164 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %10,\l... align 8, !dbg !1172, !tbaa !1081\l  %165 = getelementptr inbounds %struct.re_pattern_buffer,\l... %struct.re_pattern_buffer* %164, i32 0, i32 6, !dbg !1172\l  %166 = load i64, i64* %165, align 8, !dbg !1172, !tbaa !1176\l  %167 = icmp ule i64 %163, %166, !dbg !1172\l  br label %168\l}"];
	Node0x1040a00 -> Node0x1040a50;
	Node0x1040a50 [shape=record,label="{%168:\l\l  %169 = phi i1 [ false, %152 ], [ %167, %160 ], !dbg !1177\l  %170 = zext i1 %169 to i32, !dbg !1172\l  %171 = sext i32 %170 to i64, !dbg !1172\l  %172 = call i64 @llvm.expect.i64(i64 %171, i64 0), !dbg !1172\l  %173 = icmp ne i64 %172, 0, !dbg !1172\l  br i1 %173, label %174, label %186, !dbg !1178\l|{<s0>T|<s1>F}}"];
	Node0x1040a50:s0 -> Node0x1040aa0;
	Node0x1040a50:s1 -> Node0x1040b90;
	Node0x1040aa0 [shape=record,label="{%174:\l\l  %175 = load %struct.re_registers*, %struct.re_registers** %16, align 8, !dbg\l... !1179, !tbaa !1081\l  %176 = getelementptr inbounds %struct.re_registers, %struct.re_registers*\l... %175, i32 0, i32 0, !dbg !1181\l  %177 = load i64, i64* %176, align 8, !dbg !1181, !tbaa !1174\l  store i64 %177, i64* %20, align 8, !dbg !1182, !tbaa !1087\l  %178 = load i64, i64* %20, align 8, !dbg !1183, !tbaa !1087\l  %179 = icmp slt i64 %178, 1, !dbg !1183\l  %180 = zext i1 %179 to i32, !dbg !1183\l  %181 = sext i32 %180 to i64, !dbg !1183\l  %182 = call i64 @llvm.expect.i64(i64 %181, i64 0), !dbg !1183\l  %183 = icmp ne i64 %182, 0, !dbg !1183\l  br i1 %183, label %184, label %185, !dbg !1185\l|{<s0>T|<s1>F}}"];
	Node0x1040aa0:s0 -> Node0x1040af0;
	Node0x1040aa0:s1 -> Node0x1040b40;
	Node0x1040af0 [shape=record,label="{%184:\l\l  store %struct.re_registers* null, %struct.re_registers** %16, align 8, !dbg\l... !1186, !tbaa !1081\l  store i64 1, i64* %20, align 8, !dbg !1188, !tbaa !1087\l  br label %185, !dbg !1189\l}"];
	Node0x1040af0 -> Node0x1040b40;
	Node0x1040b40 [shape=record,label="{%185:\l\l  br label %191, !dbg !1190\l}"];
	Node0x1040b40 -> Node0x1040be0;
	Node0x1040b90 [shape=record,label="{%186:\l\l  %187 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %10,\l... align 8, !dbg !1191, !tbaa !1081\l  %188 = getelementptr inbounds %struct.re_pattern_buffer,\l... %struct.re_pattern_buffer* %187, i32 0, i32 6, !dbg !1192\l  %189 = load i64, i64* %188, align 8, !dbg !1192, !tbaa !1176\l  %190 = add i64 %189, 1, !dbg !1193\l  store i64 %190, i64* %20, align 8, !dbg !1194, !tbaa !1087\l  br label %191\l}"];
	Node0x1040b90 -> Node0x1040be0;
	Node0x1040be0 [shape=record,label="{%191:\l\l  br label %192\l}"];
	Node0x1040be0 -> Node0x1040c30;
	Node0x1040c30 [shape=record,label="{%192:\l\l  %193 = load i64, i64* %20, align 8, !dbg !1195, !tbaa !1087\l  %194 = mul i64 %193, 16, !dbg !1195\l  %195 = call noalias i8* @malloc(i64 %194) #12, !dbg !1195\l  %196 = bitcast i8* %195 to %struct.regmatch_t*, !dbg !1195\l  store %struct.regmatch_t* %196, %struct.regmatch_t** %19, align 8, !dbg\l... !1196, !tbaa !1081\l  %197 = load %struct.regmatch_t*, %struct.regmatch_t** %19, align 8, !dbg\l... !1197, !tbaa !1081\l  %198 = icmp eq %struct.regmatch_t* %197, null, !dbg !1197\l  %199 = zext i1 %198 to i32, !dbg !1197\l  %200 = sext i32 %199 to i64, !dbg !1197\l  %201 = call i64 @llvm.expect.i64(i64 %200, i64 0), !dbg !1197\l  %202 = icmp ne i64 %201, 0, !dbg !1197\l  br i1 %202, label %203, label %204, !dbg !1199\l|{<s0>T|<s1>F}}"];
	Node0x1040c30:s0 -> Node0x1040c80;
	Node0x1040c30:s1 -> Node0x1040cd0;
	Node0x1040c80 [shape=record,label="{%203:\l\l  store i64 -2, i64* %21, align 8, !dbg !1200, !tbaa !1087\l  br label %296, !dbg !1202\l}"];
	Node0x1040c80 -> Node0x1041220;
	Node0x1040cd0 [shape=record,label="{%204:\l\l  %205 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %10,\l... align 8, !dbg !1203, !tbaa !1081\l  %206 = load i8*, i8** %11, align 8, !dbg !1204, !tbaa !1081\l  %207 = load i64, i64* %12, align 8, !dbg !1205, !tbaa !1087\l  %208 = load i64, i64* %13, align 8, !dbg !1206, !tbaa !1087\l  %209 = load i64, i64* %24, align 8, !dbg !1207, !tbaa !1087\l  %210 = load i64, i64* %15, align 8, !dbg !1208, !tbaa !1087\l  %211 = load i64, i64* %20, align 8, !dbg !1209, !tbaa !1087\l  %212 = load %struct.regmatch_t*, %struct.regmatch_t** %19, align 8, !dbg\l... !1210, !tbaa !1081\l  %213 = load i32, i32* %22, align 4, !dbg !1211, !tbaa !1107\l  %214 = call i32 @re_search_internal(%struct.re_pattern_buffer* %205, i8*\l... %206, i64 %207, i64 %208, i64 %209, i64 %210, i64 %211, %struct.regmatch_t*\l... %212, i32 %213), !dbg !1212\l  store i32 %214, i32* %18, align 4, !dbg !1213, !tbaa !1214\l  store i64 0, i64* %21, align 8, !dbg !1215, !tbaa !1087\l  %215 = load i32, i32* %18, align 4, !dbg !1216, !tbaa !1214\l  %216 = icmp ne i32 %215, 0, !dbg !1218\l  br i1 %216, label %217, label %223, !dbg !1219\l|{<s0>T|<s1>F}}"];
	Node0x1040cd0:s0 -> Node0x1040d20;
	Node0x1040cd0:s1 -> Node0x1040d70;
	Node0x1040d20 [shape=record,label="{%217:\l\l  %218 = load i32, i32* %18, align 4, !dbg !1220, !tbaa !1214\l  %219 = icmp eq i32 %218, 1, !dbg !1221\l  %220 = zext i1 %219 to i64, !dbg !1220\l  %221 = select i1 %219, i32 -1, i32 -2, !dbg !1220\l  %222 = sext i32 %221 to i64, !dbg !1220\l  store i64 %222, i64* %21, align 8, !dbg !1222, !tbaa !1087\l  br label %260, !dbg !1223\l}"];
	Node0x1040d20 -> Node0x1040f00;
	Node0x1040d70 [shape=record,label="{%223:\l\l  %224 = load %struct.re_registers*, %struct.re_registers** %16, align 8, !dbg\l... !1224, !tbaa !1081\l  %225 = icmp ne %struct.re_registers* %224, null, !dbg !1226\l  br i1 %225, label %226, label %259, !dbg !1227\l|{<s0>T|<s1>F}}"];
	Node0x1040d70:s0 -> Node0x1040dc0;
	Node0x1040d70:s1 -> Node0x1040eb0;
	Node0x1040dc0 [shape=record,label="{%226:\l\l  %227 = load %struct.re_registers*, %struct.re_registers** %16, align 8, !dbg\l... !1228, !tbaa !1081\l  %228 = load %struct.regmatch_t*, %struct.regmatch_t** %19, align 8, !dbg\l... !1230, !tbaa !1081\l  %229 = load i64, i64* %20, align 8, !dbg !1231, !tbaa !1087\l  %230 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %10,\l... align 8, !dbg !1232, !tbaa !1081\l  %231 = getelementptr inbounds %struct.re_pattern_buffer,\l... %struct.re_pattern_buffer* %230, i32 0, i32 7, !dbg !1233\l  %232 = load i8, i8* %231, align 8, !dbg !1233\l  %233 = lshr i8 %232, 1, !dbg !1233\l  %234 = and i8 %233, 3, !dbg !1233\l  %235 = zext i8 %234 to i32, !dbg !1233\l  %236 = call i32 @re_copy_regs(%struct.re_registers* %227,\l... %struct.regmatch_t* %228, i64 %229, i32 %235), !dbg !1234\l  %237 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %10,\l... align 8, !dbg !1235, !tbaa !1081\l  %238 = getelementptr inbounds %struct.re_pattern_buffer,\l... %struct.re_pattern_buffer* %237, i32 0, i32 7, !dbg !1236\l  %239 = trunc i32 %236 to i8, !dbg !1237\l  %240 = load i8, i8* %238, align 8, !dbg !1237\l  %241 = and i8 %239, 3, !dbg !1237\l  %242 = shl i8 %241, 1, !dbg !1237\l  %243 = and i8 %240, -7, !dbg !1237\l  %244 = or i8 %243, %242, !dbg !1237\l  store i8 %244, i8* %238, align 8, !dbg !1237\l  %245 = zext i8 %241 to i32, !dbg !1237\l  %246 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %10,\l... align 8, !dbg !1238, !tbaa !1081\l  %247 = getelementptr inbounds %struct.re_pattern_buffer,\l... %struct.re_pattern_buffer* %246, i32 0, i32 7, !dbg !1238\l  %248 = load i8, i8* %247, align 8, !dbg !1238\l  %249 = lshr i8 %248, 1, !dbg !1238\l  %250 = and i8 %249, 3, !dbg !1238\l  %251 = zext i8 %250 to i32, !dbg !1238\l  %252 = icmp eq i32 %251, 0, !dbg !1238\l  %253 = zext i1 %252 to i32, !dbg !1238\l  %254 = sext i32 %253 to i64, !dbg !1238\l  %255 = call i64 @llvm.expect.i64(i64 %254, i64 0), !dbg !1238\l  %256 = icmp ne i64 %255, 0, !dbg !1238\l  br i1 %256, label %257, label %258, !dbg !1240\l|{<s0>T|<s1>F}}"];
	Node0x1040dc0:s0 -> Node0x1040e10;
	Node0x1040dc0:s1 -> Node0x1040e60;
	Node0x1040e10 [shape=record,label="{%257:\l\l  store i64 -2, i64* %21, align 8, !dbg !1241, !tbaa !1087\l  br label %258, !dbg !1242\l}"];
	Node0x1040e10 -> Node0x1040e60;
	Node0x1040e60 [shape=record,label="{%258:\l\l  br label %259, !dbg !1243\l}"];
	Node0x1040e60 -> Node0x1040eb0;
	Node0x1040eb0 [shape=record,label="{%259:\l\l  br label %260\l}"];
	Node0x1040eb0 -> Node0x1040f00;
	Node0x1040f00 [shape=record,label="{%260:\l\l  %261 = load i64, i64* %21, align 8, !dbg !1244, !tbaa !1087\l  %262 = icmp eq i64 %261, 0, !dbg !1244\l  %263 = zext i1 %262 to i32, !dbg !1244\l  %264 = sext i32 %263 to i64, !dbg !1244\l  %265 = call i64 @llvm.expect.i64(i64 %264, i64 1), !dbg !1244\l  %266 = icmp ne i64 %265, 0, !dbg !1244\l  br i1 %266, label %267, label %293, !dbg !1246\l|{<s0>T|<s1>F}}"];
	Node0x1040f00:s0 -> Node0x1040f50;
	Node0x1040f00:s1 -> Node0x10411d0;
	Node0x1040f50 [shape=record,label="{%267:\l\l  %268 = load i8, i8* %17, align 1, !dbg !1247, !tbaa !1094, !range !1250\l  %269 = trunc i8 %268 to i1, !dbg !1247\l  br i1 %269, label %270, label %287, !dbg !1251\l|{<s0>T|<s1>F}}"];
	Node0x1040f50:s0 -> Node0x1040fa0;
	Node0x1040f50:s1 -> Node0x1041130;
	Node0x1040fa0 [shape=record,label="{%270:\l\l  %271 = load %struct.regmatch_t*, %struct.regmatch_t** %19, align 8, !dbg\l... !1252, !tbaa !1081\l  %272 = getelementptr inbounds %struct.regmatch_t, %struct.regmatch_t* %271,\l... i64 0, !dbg !1252\l  %273 = getelementptr inbounds %struct.regmatch_t, %struct.regmatch_t* %272,\l... i32 0, i32 0, !dbg !1252\l  %274 = load i64, i64* %273, align 8, !dbg !1252, !tbaa !1254\l  %275 = load i64, i64* %13, align 8, !dbg !1252, !tbaa !1087\l  %276 = icmp eq i64 %274, %275, !dbg !1252\l  br i1 %276, label %277, label %278, !dbg !1252\l|{<s0>T|<s1>F}}"];
	Node0x1040fa0:s0 -> Node0x1040ff0;
	Node0x1040fa0:s1 -> Node0x1041040;
	Node0x1040ff0 [shape=record,label="{%277:\l\l  br label %280, !dbg !1252\l}"];
	Node0x1040ff0 -> Node0x10410e0;
	Node0x1041040 [shape=record,label="{%278:\l\l  unreachable, !dbg !1252\l}"];
	Node0x1041090 [shape=record,label="{%279:                                                  \l  br label %280, !dbg !1252\l}"];
	Node0x1041090 -> Node0x10410e0;
	Node0x10410e0 [shape=record,label="{%280:\l\l  %281 = load %struct.regmatch_t*, %struct.regmatch_t** %19, align 8, !dbg\l... !1256, !tbaa !1081\l  %282 = getelementptr inbounds %struct.regmatch_t, %struct.regmatch_t* %281,\l... i64 0, !dbg !1256\l  %283 = getelementptr inbounds %struct.regmatch_t, %struct.regmatch_t* %282,\l... i32 0, i32 1, !dbg !1257\l  %284 = load i64, i64* %283, align 8, !dbg !1257, !tbaa !1258\l  %285 = load i64, i64* %13, align 8, !dbg !1259, !tbaa !1087\l  %286 = sub nsw i64 %284, %285, !dbg !1260\l  store i64 %286, i64* %21, align 8, !dbg !1261, !tbaa !1087\l  br label %292, !dbg !1262\l}"];
	Node0x10410e0 -> Node0x1041180;
	Node0x1041130 [shape=record,label="{%287:\l\l  %288 = load %struct.regmatch_t*, %struct.regmatch_t** %19, align 8, !dbg\l... !1263, !tbaa !1081\l  %289 = getelementptr inbounds %struct.regmatch_t, %struct.regmatch_t* %288,\l... i64 0, !dbg !1263\l  %290 = getelementptr inbounds %struct.regmatch_t, %struct.regmatch_t* %289,\l... i32 0, i32 0, !dbg !1264\l  %291 = load i64, i64* %290, align 8, !dbg !1264, !tbaa !1254\l  store i64 %291, i64* %21, align 8, !dbg !1265, !tbaa !1087\l  br label %292\l}"];
	Node0x1041130 -> Node0x1041180;
	Node0x1041180 [shape=record,label="{%292:\l\l  br label %293, !dbg !1266\l}"];
	Node0x1041180 -> Node0x10411d0;
	Node0x10411d0 [shape=record,label="{%293:\l\l  %294 = load %struct.regmatch_t*, %struct.regmatch_t** %19, align 8, !dbg\l... !1267, !tbaa !1081\l  %295 = bitcast %struct.regmatch_t* %294 to i8*, !dbg !1267\l  call void @free(i8* %295) #12, !dbg !1267\l  br label %296, !dbg !1267\l}"];
	Node0x10411d0 -> Node0x1041220;
	Node0x1041220 [shape=record,label="{%296:\l\l  %297 = load i64, i64* %21, align 8, !dbg !1268, !tbaa !1087\l  store i64 %297, i64* %9, align 8, !dbg !1269\l  store i32 1, i32* %25, align 4\l  br label %298, !dbg !1269\l}"];
	Node0x1041220 -> Node0x1041270;
	Node0x1041270 [shape=record,label="{%298:\l\l  %299 = bitcast i64* %24 to i8*, !dbg !1270\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %299) #12, !dbg !1270\l  %300 = bitcast %struct.re_dfa_t** %23 to i8*, !dbg !1270\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %300) #12, !dbg !1270\l  %301 = bitcast i32* %22 to i8*, !dbg !1270\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %301) #12, !dbg !1270\l  %302 = bitcast i64* %21 to i8*, !dbg !1270\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %302) #12, !dbg !1270\l  %303 = bitcast i64* %20 to i8*, !dbg !1270\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %303) #12, !dbg !1270\l  %304 = bitcast %struct.regmatch_t** %19 to i8*, !dbg !1270\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %304) #12, !dbg !1270\l  %305 = bitcast i32* %18 to i8*, !dbg !1270\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %305) #12, !dbg !1270\l  %306 = load i64, i64* %9, align 8, !dbg !1270\l  ret i64 %306, !dbg !1270\l}"];
}
