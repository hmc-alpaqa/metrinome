digraph "CFG for 'sha256_process_bytes' function" {
	label="CFG for 'sha256_process_bytes' function";

	Node0xe51a70 [shape=record,label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca %struct.sha256_ctx*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  store i8* %0, i8** %4, align 8, !tbaa !810\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !800, metadata\l... !DIExpression()), !dbg !814\l  store i64 %1, i64* %5, align 8, !tbaa !815\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !801, metadata\l... !DIExpression()), !dbg !817\l  store %struct.sha256_ctx* %2, %struct.sha256_ctx** %6, align 8, !tbaa !810\l  call void @llvm.dbg.declare(metadata %struct.sha256_ctx** %6, metadata !802,\l... metadata !DIExpression()), !dbg !818\l  %10 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg !819,\l... !tbaa !810\l  %11 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %10,\l... i32 0, i32 2, !dbg !820\l  %12 = load i64, i64* %11, align 8, !dbg !820, !tbaa !821\l  %13 = icmp ne i64 %12, 0, !dbg !823\l  br i1 %13, label %14, label %87, !dbg !824\l|{<s0>T|<s1>F}}"];
	Node0xe51a70:s0 -> Node0xe454d0;
	Node0xe51a70:s1 -> Node0xe456b0;
	Node0xe454d0 [shape=record,label="{%14:\l\l  %15 = bitcast i64* %7 to i8*, !dbg !825\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #12, !dbg !825\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !803, metadata\l... !DIExpression()), !dbg !826\l  %16 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg !827,\l... !tbaa !810\l  %17 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %16,\l... i32 0, i32 2, !dbg !828\l  %18 = load i64, i64* %17, align 8, !dbg !828, !tbaa !821\l  store i64 %18, i64* %7, align 8, !dbg !826, !tbaa !815\l  %19 = bitcast i64* %8 to i8*, !dbg !829\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #12, !dbg !829\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !806, metadata\l... !DIExpression()), !dbg !830\l  %20 = load i64, i64* %7, align 8, !dbg !831, !tbaa !815\l  %21 = sub i64 128, %20, !dbg !832\l  %22 = load i64, i64* %5, align 8, !dbg !833, !tbaa !815\l  %23 = icmp ugt i64 %21, %22, !dbg !834\l  br i1 %23, label %24, label %26, !dbg !835\l|{<s0>T|<s1>F}}"];
	Node0xe454d0:s0 -> Node0xe45520;
	Node0xe454d0:s1 -> Node0xe45570;
	Node0xe45520 [shape=record,label="{%24:\l\l  %25 = load i64, i64* %5, align 8, !dbg !836, !tbaa !815\l  br label %29, !dbg !835\l}"];
	Node0xe45520 -> Node0xe455c0;
	Node0xe45570 [shape=record,label="{%26:\l\l  %27 = load i64, i64* %7, align 8, !dbg !837, !tbaa !815\l  %28 = sub i64 128, %27, !dbg !838\l  br label %29, !dbg !835\l}"];
	Node0xe45570 -> Node0xe455c0;
	Node0xe455c0 [shape=record,label="{%29:\l\l  %30 = phi i64 [ %25, %24 ], [ %28, %26 ], !dbg !835\l  store i64 %30, i64* %8, align 8, !dbg !830, !tbaa !815\l  %31 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg !839,\l... !tbaa !810\l  %32 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %31,\l... i32 0, i32 3, !dbg !840\l  %33 = getelementptr inbounds [32 x i32], [32 x i32]* %32, i32 0, i32 0, !dbg\l... !841\l  %34 = bitcast i32* %33 to i8*, !dbg !841\l  %35 = load i64, i64* %7, align 8, !dbg !842, !tbaa !815\l  %36 = getelementptr inbounds i8, i8* %34, i64 %35, !dbg !841\l  %37 = load i8*, i8** %4, align 8, !dbg !843, !tbaa !810\l  %38 = load i64, i64* %8, align 8, !dbg !844, !tbaa !815\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %37, i64\l... %38, i1 false), !dbg !845\l  %39 = load i64, i64* %8, align 8, !dbg !846, !tbaa !815\l  %40 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg !847,\l... !tbaa !810\l  %41 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %40,\l... i32 0, i32 2, !dbg !848\l  %42 = load i64, i64* %41, align 8, !dbg !849, !tbaa !821\l  %43 = add i64 %42, %39, !dbg !849\l  store i64 %43, i64* %41, align 8, !dbg !849, !tbaa !821\l  %44 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg !850,\l... !tbaa !810\l  %45 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %44,\l... i32 0, i32 2, !dbg !852\l  %46 = load i64, i64* %45, align 8, !dbg !852, !tbaa !821\l  %47 = icmp ugt i64 %46, 64, !dbg !853\l  br i1 %47, label %48, label %78, !dbg !854\l|{<s0>T|<s1>F}}"];
	Node0xe455c0:s0 -> Node0xe45610;
	Node0xe455c0:s1 -> Node0xe45660;
	Node0xe45610 [shape=record,label="{%48:\l\l  %49 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg !855,\l... !tbaa !810\l  %50 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %49,\l... i32 0, i32 3, !dbg !857\l  %51 = getelementptr inbounds [32 x i32], [32 x i32]* %50, i32 0, i32 0, !dbg\l... !855\l  %52 = bitcast i32* %51 to i8*, !dbg !855\l  %53 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg !858,\l... !tbaa !810\l  %54 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %53,\l... i32 0, i32 2, !dbg !859\l  %55 = load i64, i64* %54, align 8, !dbg !859, !tbaa !821\l  %56 = and i64 %55, -64, !dbg !860\l  %57 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg !861,\l... !tbaa !810\l  call void @sha256_process_block(i8* %52, i64 %56, %struct.sha256_ctx* %57),\l... !dbg !862\l  %58 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg !863,\l... !tbaa !810\l  %59 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %58,\l... i32 0, i32 2, !dbg !864\l  %60 = load i64, i64* %59, align 8, !dbg !865, !tbaa !821\l  %61 = and i64 %60, 63, !dbg !865\l  store i64 %61, i64* %59, align 8, !dbg !865, !tbaa !821\l  %62 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg !866,\l... !tbaa !810\l  %63 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %62,\l... i32 0, i32 3, !dbg !867\l  %64 = getelementptr inbounds [32 x i32], [32 x i32]* %63, i32 0, i32 0, !dbg\l... !868\l  %65 = bitcast i32* %64 to i8*, !dbg !868\l  %66 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg !869,\l... !tbaa !810\l  %67 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %66,\l... i32 0, i32 3, !dbg !870\l  %68 = getelementptr inbounds [32 x i32], [32 x i32]* %67, i32 0, i32 0, !dbg\l... !871\l  %69 = bitcast i32* %68 to i8*, !dbg !871\l  %70 = load i64, i64* %7, align 8, !dbg !872, !tbaa !815\l  %71 = load i64, i64* %8, align 8, !dbg !873, !tbaa !815\l  %72 = add i64 %70, %71, !dbg !874\l  %73 = and i64 %72, -64, !dbg !875\l  %74 = getelementptr inbounds i8, i8* %69, i64 %73, !dbg !871\l  %75 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg !876,\l... !tbaa !810\l  %76 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %75,\l... i32 0, i32 2, !dbg !877\l  %77 = load i64, i64* %76, align 8, !dbg !877, !tbaa !821\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 1 %74, i64\l... %77, i1 false), !dbg !868\l  br label %78, !dbg !878\l}"];
	Node0xe45610 -> Node0xe45660;
	Node0xe45660 [shape=record,label="{%78:\l\l  %79 = load i8*, i8** %4, align 8, !dbg !879, !tbaa !810\l  %80 = load i64, i64* %8, align 8, !dbg !880, !tbaa !815\l  %81 = getelementptr inbounds i8, i8* %79, i64 %80, !dbg !881\l  store i8* %81, i8** %4, align 8, !dbg !882, !tbaa !810\l  %82 = load i64, i64* %8, align 8, !dbg !883, !tbaa !815\l  %83 = load i64, i64* %5, align 8, !dbg !884, !tbaa !815\l  %84 = sub i64 %83, %82, !dbg !884\l  store i64 %84, i64* %5, align 8, !dbg !884, !tbaa !815\l  %85 = bitcast i64* %8 to i8*, !dbg !885\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #12, !dbg !885\l  %86 = bitcast i64* %7 to i8*, !dbg !885\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #12, !dbg !885\l  br label %87, !dbg !886\l}"];
	Node0xe45660 -> Node0xe456b0;
	Node0xe456b0 [shape=record,label="{%87:\l\l  %88 = load i64, i64* %5, align 8, !dbg !887, !tbaa !815\l  %89 = icmp uge i64 %88, 64, !dbg !889\l  br i1 %89, label %90, label %123, !dbg !890\l|{<s0>T|<s1>F}}"];
	Node0xe456b0:s0 -> Node0xe45700;
	Node0xe456b0:s1 -> Node0xe45930;
	Node0xe45700 [shape=record,label="{%90:\l\l  %91 = load i8*, i8** %4, align 8, !dbg !891, !tbaa !810\l  %92 = ptrtoint i8* %91 to i64, !dbg !891\l  %93 = urem i64 %92, 4, !dbg !891\l  %94 = icmp ne i64 %93, 0, !dbg !891\l  br i1 %94, label %95, label %111, !dbg !894\l|{<s0>T|<s1>F}}"];
	Node0xe45700:s0 -> Node0xe45750;
	Node0xe45700:s1 -> Node0xe45890;
	Node0xe45750 [shape=record,label="{%95:\l\l  br label %96, !dbg !895\l}"];
	Node0xe45750 -> Node0xe457a0;
	Node0xe457a0 [shape=record,label="{%96:\l\l  %97 = load i64, i64* %5, align 8, !dbg !896, !tbaa !815\l  %98 = icmp ugt i64 %97, 64, !dbg !897\l  br i1 %98, label %99, label %110, !dbg !895\l|{<s0>T|<s1>F}}"];
	Node0xe457a0:s0 -> Node0xe457f0;
	Node0xe457a0:s1 -> Node0xe45840;
	Node0xe457f0 [shape=record,label="{%99:\l\l  %100 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg\l... !898, !tbaa !810\l  %101 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %100,\l... i32 0, i32 3, !dbg !900\l  %102 = getelementptr inbounds [32 x i32], [32 x i32]* %101, i32 0, i32 0,\l... !dbg !901\l  %103 = bitcast i32* %102 to i8*, !dbg !901\l  %104 = load i8*, i8** %4, align 8, !dbg !902, !tbaa !810\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 1 %104, i64\l... 64, i1 false), !dbg !901\l  %105 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg\l... !903, !tbaa !810\l  call void @sha256_process_block(i8* %103, i64 64, %struct.sha256_ctx* %105),\l... !dbg !904\l  %106 = load i8*, i8** %4, align 8, !dbg !905, !tbaa !810\l  %107 = getelementptr inbounds i8, i8* %106, i64 64, !dbg !906\l  store i8* %107, i8** %4, align 8, !dbg !907, !tbaa !810\l  %108 = load i64, i64* %5, align 8, !dbg !908, !tbaa !815\l  %109 = sub i64 %108, 64, !dbg !908\l  store i64 %109, i64* %5, align 8, !dbg !908, !tbaa !815\l  br label %96, !dbg !895, !llvm.loop !909\l}"];
	Node0xe457f0 -> Node0xe457a0;
	Node0xe45840 [shape=record,label="{%110:\l\l  br label %122, !dbg !895\l}"];
	Node0xe45840 -> Node0xe458e0;
	Node0xe45890 [shape=record,label="{%111:\l\l  %112 = load i8*, i8** %4, align 8, !dbg !911, !tbaa !810\l  %113 = load i64, i64* %5, align 8, !dbg !913, !tbaa !815\l  %114 = and i64 %113, -64, !dbg !914\l  %115 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg\l... !915, !tbaa !810\l  call void @sha256_process_block(i8* %112, i64 %114, %struct.sha256_ctx*\l... %115), !dbg !916\l  %116 = load i8*, i8** %4, align 8, !dbg !917, !tbaa !810\l  %117 = load i64, i64* %5, align 8, !dbg !918, !tbaa !815\l  %118 = and i64 %117, -64, !dbg !919\l  %119 = getelementptr inbounds i8, i8* %116, i64 %118, !dbg !920\l  store i8* %119, i8** %4, align 8, !dbg !921, !tbaa !810\l  %120 = load i64, i64* %5, align 8, !dbg !922, !tbaa !815\l  %121 = and i64 %120, 63, !dbg !922\l  store i64 %121, i64* %5, align 8, !dbg !922, !tbaa !815\l  br label %122\l}"];
	Node0xe45890 -> Node0xe458e0;
	Node0xe458e0 [shape=record,label="{%122:\l\l  br label %123, !dbg !923\l}"];
	Node0xe458e0 -> Node0xe45930;
	Node0xe45930 [shape=record,label="{%123:\l\l  %124 = load i64, i64* %5, align 8, !dbg !924, !tbaa !815\l  %125 = icmp ugt i64 %124, 0, !dbg !925\l  br i1 %125, label %126, label %166, !dbg !926\l|{<s0>T|<s1>F}}"];
	Node0xe45930:s0 -> Node0xe45980;
	Node0xe45930:s1 -> Node0xe45a70;
	Node0xe45980 [shape=record,label="{%126:\l\l  %127 = bitcast i64* %9 to i8*, !dbg !927\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %127) #12, !dbg !927\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !807, metadata\l... !DIExpression()), !dbg !928\l  %128 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg\l... !929, !tbaa !810\l  %129 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %128,\l... i32 0, i32 2, !dbg !930\l  %130 = load i64, i64* %129, align 8, !dbg !930, !tbaa !821\l  store i64 %130, i64* %9, align 8, !dbg !928, !tbaa !815\l  %131 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg\l... !931, !tbaa !810\l  %132 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %131,\l... i32 0, i32 3, !dbg !932\l  %133 = getelementptr inbounds [32 x i32], [32 x i32]* %132, i32 0, i32 0,\l... !dbg !933\l  %134 = bitcast i32* %133 to i8*, !dbg !933\l  %135 = load i64, i64* %9, align 8, !dbg !934, !tbaa !815\l  %136 = getelementptr inbounds i8, i8* %134, i64 %135, !dbg !933\l  %137 = load i8*, i8** %4, align 8, !dbg !935, !tbaa !810\l  %138 = load i64, i64* %5, align 8, !dbg !936, !tbaa !815\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %136, i8* align 1 %137, i64\l... %138, i1 false), !dbg !937\l  %139 = load i64, i64* %5, align 8, !dbg !938, !tbaa !815\l  %140 = load i64, i64* %9, align 8, !dbg !939, !tbaa !815\l  %141 = add i64 %140, %139, !dbg !939\l  store i64 %141, i64* %9, align 8, !dbg !939, !tbaa !815\l  %142 = load i64, i64* %9, align 8, !dbg !940, !tbaa !815\l  %143 = icmp uge i64 %142, 64, !dbg !942\l  br i1 %143, label %144, label %161, !dbg !943\l|{<s0>T|<s1>F}}"];
	Node0xe45980:s0 -> Node0xe459d0;
	Node0xe45980:s1 -> Node0xe45a20;
	Node0xe459d0 [shape=record,label="{%144:\l\l  %145 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg\l... !944, !tbaa !810\l  %146 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %145,\l... i32 0, i32 3, !dbg !946\l  %147 = getelementptr inbounds [32 x i32], [32 x i32]* %146, i32 0, i32 0,\l... !dbg !944\l  %148 = bitcast i32* %147 to i8*, !dbg !944\l  %149 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg\l... !947, !tbaa !810\l  call void @sha256_process_block(i8* %148, i64 64, %struct.sha256_ctx* %149),\l... !dbg !948\l  %150 = load i64, i64* %9, align 8, !dbg !949, !tbaa !815\l  %151 = sub i64 %150, 64, !dbg !949\l  store i64 %151, i64* %9, align 8, !dbg !949, !tbaa !815\l  %152 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg\l... !950, !tbaa !810\l  %153 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %152,\l... i32 0, i32 3, !dbg !951\l  %154 = getelementptr inbounds [32 x i32], [32 x i32]* %153, i32 0, i32 0,\l... !dbg !952\l  %155 = bitcast i32* %154 to i8*, !dbg !952\l  %156 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg\l... !953, !tbaa !810\l  %157 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %156,\l... i32 0, i32 3, !dbg !954\l  %158 = getelementptr inbounds [32 x i32], [32 x i32]* %157, i64 0, i64 16,\l... !dbg !953\l  %159 = bitcast i32* %158 to i8*, !dbg !952\l  %160 = load i64, i64* %9, align 8, !dbg !955, !tbaa !815\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %159, i64\l... %160, i1 false), !dbg !952\l  br label %161, !dbg !956\l}"];
	Node0xe459d0 -> Node0xe45a20;
	Node0xe45a20 [shape=record,label="{%161:\l\l  %162 = load i64, i64* %9, align 8, !dbg !957, !tbaa !815\l  %163 = load %struct.sha256_ctx*, %struct.sha256_ctx** %6, align 8, !dbg\l... !958, !tbaa !810\l  %164 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %163,\l... i32 0, i32 2, !dbg !959\l  store i64 %162, i64* %164, align 8, !dbg !960, !tbaa !821\l  %165 = bitcast i64* %9 to i8*, !dbg !961\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #12, !dbg !961\l  br label %166, !dbg !962\l}"];
	Node0xe45a20 -> Node0xe45a70;
	Node0xe45a70 [shape=record,label="{%166:\l\l  ret void, !dbg !963\l}"];
}
