digraph "CFG for 'output' function" {
	label="CFG for 'output' function";

	Node0x120d840 [shape=record,label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i32, align 4\l  store i8* %0, i8** %3, align 8, !tbaa !1150\l  call void @llvm.dbg.declare(metadata i8** %3, metadata !201, metadata\l... !DIExpression()), !dbg !1154\l  store i8* %1, i8** %4, align 8, !tbaa !1150\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !202, metadata\l... !DIExpression()), !dbg !1155\l  %8 = bitcast i64* %5 to i8*, !dbg !1156\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #11, !dbg !1156\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !203, metadata\l... !DIExpression()), !dbg !1157\l  %9 = load i8*, i8** %4, align 8, !dbg !1158, !tbaa !1150\l  %10 = load i8*, i8** %3, align 8, !dbg !1159, !tbaa !1150\l  %11 = ptrtoint i8* %9 to i64, !dbg !1160\l  %12 = ptrtoint i8* %10 to i64, !dbg !1160\l  %13 = sub i64 %11, %12, !dbg !1160\l  store i64 %13, i64* %5, align 8, !dbg !1157, !tbaa !1161\l  %14 = bitcast i64* %6 to i8*, !dbg !1163\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #11, !dbg !1163\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !204, metadata\l... !DIExpression()), !dbg !1164\l  %15 = load i64, i64* @output.bytes_in_buffer, align 8, !dbg !1165, !tbaa\l... !1161\l  %16 = sub i64 8192, %15, !dbg !1166\l  store i64 %16, i64* %6, align 8, !dbg !1164, !tbaa !1161\l  %17 = load i8*, i8** %3, align 8, !dbg !1167, !tbaa !1150\l  %18 = icmp eq i8* %17, null, !dbg !1169\l  br i1 %18, label %19, label %23, !dbg !1170\l|{<s0>T|<s1>F}}"];
	Node0x120d840:s0 -> Node0x120d890;
	Node0x120d840:s1 -> Node0x120d8e0;
	Node0x120d890 [shape=record,label="{%19:\l\l  %20 = load i64, i64* @output.bytes_in_buffer, align 8, !dbg !1171, !tbaa\l... !1161\l  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg\l... !1171, !tbaa !1150\l  %22 = call i64 @fwrite_unlocked(i8* getelementptr inbounds ([8192 x i8],\l... [8192 x i8]* @output.buffer, i32 0, i32 0), i64 1, i64 %20, %struct._IO_FILE*\l... %21), !dbg !1171\l  store i64 0, i64* @output.bytes_in_buffer, align 8, !dbg !1173, !tbaa !1161\l  store i32 1, i32* %7, align 4\l  br label %49, !dbg !1174\l}"];
	Node0x120d890 -> Node0x120da20;
	Node0x120d8e0 [shape=record,label="{%23:\l\l  br label %24, !dbg !1175\l}"];
	Node0x120d8e0 -> Node0x120d930;
	Node0x120d930 [shape=record,label="{%24:\l\l  %25 = load i64, i64* %5, align 8, !dbg !1176, !tbaa !1161\l  %26 = load i64, i64* %6, align 8, !dbg !1177, !tbaa !1161\l  %27 = icmp uge i64 %25, %26, !dbg !1178\l  br i1 %27, label %28, label %41, !dbg !1175\l|{<s0>T|<s1>F}}"];
	Node0x120d930:s0 -> Node0x120d980;
	Node0x120d930:s1 -> Node0x120d9d0;
	Node0x120d980 [shape=record,label="{%28:\l\l  %29 = load i64, i64* @output.bytes_in_buffer, align 8, !dbg !1179, !tbaa\l... !1161\l  %30 = getelementptr inbounds i8, i8* getelementptr inbounds ([8192 x i8],\l... [8192 x i8]* @output.buffer, i32 0, i32 0), i64 %29, !dbg !1181\l  %31 = load i8*, i8** %3, align 8, !dbg !1182, !tbaa !1150\l  %32 = load i64, i64* %6, align 8, !dbg !1183, !tbaa !1161\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64\l... %32, i1 false), !dbg !1184\l  %33 = load i64, i64* %6, align 8, !dbg !1185, !tbaa !1161\l  %34 = load i64, i64* %5, align 8, !dbg !1186, !tbaa !1161\l  %35 = sub i64 %34, %33, !dbg !1186\l  store i64 %35, i64* %5, align 8, !dbg !1186, !tbaa !1161\l  %36 = load i64, i64* %6, align 8, !dbg !1187, !tbaa !1161\l  %37 = load i8*, i8** %3, align 8, !dbg !1188, !tbaa !1150\l  %38 = getelementptr inbounds i8, i8* %37, i64 %36, !dbg !1188\l  store i8* %38, i8** %3, align 8, !dbg !1188, !tbaa !1150\l  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg\l... !1189, !tbaa !1150\l  %40 = call i64 @fwrite_unlocked(i8* getelementptr inbounds ([8192 x i8],\l... [8192 x i8]* @output.buffer, i32 0, i32 0), i64 1, i64 8192,\l... %struct._IO_FILE* %39), !dbg !1189\l  store i64 0, i64* @output.bytes_in_buffer, align 8, !dbg !1190, !tbaa !1161\l  store i64 8192, i64* %6, align 8, !dbg !1191, !tbaa !1161\l  br label %24, !dbg !1175, !llvm.loop !1192\l}"];
	Node0x120d980 -> Node0x120d930;
	Node0x120d9d0 [shape=record,label="{%41:\l\l  %42 = load i64, i64* @output.bytes_in_buffer, align 8, !dbg !1194, !tbaa\l... !1161\l  %43 = getelementptr inbounds i8, i8* getelementptr inbounds ([8192 x i8],\l... [8192 x i8]* @output.buffer, i32 0, i32 0), i64 %42, !dbg !1195\l  %44 = load i8*, i8** %3, align 8, !dbg !1196, !tbaa !1150\l  %45 = load i64, i64* %5, align 8, !dbg !1197, !tbaa !1161\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 %44, i64\l... %45, i1 false), !dbg !1198\l  %46 = load i64, i64* %5, align 8, !dbg !1199, !tbaa !1161\l  %47 = load i64, i64* @output.bytes_in_buffer, align 8, !dbg !1200, !tbaa\l... !1161\l  %48 = add i64 %47, %46, !dbg !1200\l  store i64 %48, i64* @output.bytes_in_buffer, align 8, !dbg !1200, !tbaa !1161\l  store i32 0, i32* %7, align 4, !dbg !1201\l  br label %49, !dbg !1201\l}"];
	Node0x120d9d0 -> Node0x120da20;
	Node0x120da20 [shape=record,label="{%49:\l\l  %50 = bitcast i64* %6 to i8*, !dbg !1201\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #11, !dbg !1201\l  %51 = bitcast i64* %5 to i8*, !dbg !1201\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #11, !dbg !1201\l  %52 = load i32, i32* %7, align 4\l  switch i32 %52, label %54 [\l    i32 0, label %53\l    i32 1, label %53\l  ]\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0x120da20:s0 -> Node0x120dac0;
	Node0x120da20:s1 -> Node0x120da70;
	Node0x120da20:s2 -> Node0x120da70;
	Node0x120da70 [shape=record,label="{%53:\l\l  ret void, !dbg !1201\l}"];
	Node0x120dac0 [shape=record,label="{%54:\l\l  unreachable\l}"];
}
