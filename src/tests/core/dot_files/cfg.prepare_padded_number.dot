digraph "CFG for 'prepare_padded_number' function" {
	label="CFG for 'prepare_padded_number' function";

	Node0xae2910 [shape=record,label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca x86_fp80, align 16\l  %5 = alloca i64, align 8\l  %6 = alloca [128 x i8], align 16\l  %7 = alloca i64, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = alloca i64, align 8\l  store x86_fp80 %0, x86_fp80* %4, align 16, !tbaa !853\l  call void @llvm.dbg.declare(metadata x86_fp80* %4, metadata !842, metadata\l... !DIExpression()), !dbg !857\l  store i64 %1, i64* %5, align 8, !tbaa !858\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !843, metadata\l... !DIExpression()), !dbg !860\l  %11 = bitcast [128 x i8]* %6 to i8*, !dbg !861\l  call void @llvm.lifetime.start.p0i8(i64 128, i8* %11) #13, !dbg !861\l  call void @llvm.dbg.declare(metadata [128 x i8]* %6, metadata !844, metadata\l... !DIExpression()), !dbg !862\l  %12 = bitcast i64* %7 to i8*, !dbg !863\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13, !dbg !863\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !848, metadata\l... !DIExpression()), !dbg !864\l  %13 = load i64, i64* @user_precision, align 8, !dbg !865, !tbaa !858\l  %14 = icmp eq i64 %13, -1, !dbg !866\l  br i1 %14, label %15, label %17, !dbg !865\l|{<s0>T|<s1>F}}"];
	Node0xae2910:s0 -> Node0xae2ad0;
	Node0xae2910:s1 -> Node0xae2b20;
	Node0xae2ad0 [shape=record,label="{%15:\l\l  %16 = load i64, i64* %5, align 8, !dbg !867, !tbaa !858\l  br label %19, !dbg !865\l}"];
	Node0xae2ad0 -> Node0xae2b70;
	Node0xae2b20 [shape=record,label="{%17:\l\l  %18 = load i64, i64* @user_precision, align 8, !dbg !868, !tbaa !858\l  br label %19, !dbg !865\l}"];
	Node0xae2b20 -> Node0xae2b70;
	Node0xae2b70 [shape=record,label="{%19:\l\l  %20 = phi i64 [ %16, %15 ], [ %18, %17 ], !dbg !865\l  store i64 %20, i64* %7, align 8, !dbg !864, !tbaa !858\l  %21 = bitcast i32* %8 to i8*, !dbg !869\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #13, !dbg !869\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !849, metadata\l... !DIExpression()), !dbg !870\l  %22 = load x86_fp80, x86_fp80* %4, align 16, !dbg !871, !tbaa !853\l  %23 = call x86_fp80 @expld(x86_fp80 %22, i32 10, i32* %8), !dbg !872\l  %24 = load i32, i32* @scale_to, align 4, !dbg !873, !tbaa !875\l  %25 = icmp eq i32 %24, 0, !dbg !876\l  br i1 %25, label %26, label %47, !dbg !877\l|{<s0>T|<s1>F}}"];
	Node0xae2b70:s0 -> Node0xae2bc0;
	Node0xae2b70:s1 -> Node0xae2df0;
	Node0xae2bc0 [shape=record,label="{%26:\l\l  %27 = load i32, i32* %8, align 4, !dbg !878, !tbaa !879\l  %28 = zext i32 %27 to i64, !dbg !878\l  %29 = load i64, i64* %7, align 8, !dbg !881, !tbaa !858\l  %30 = add i64 %28, %29, !dbg !882\l  %31 = icmp ugt i64 %30, 18, !dbg !883\l  br i1 %31, label %32, label %47, !dbg !884\l|{<s0>T|<s1>F}}"];
	Node0xae2bc0:s0 -> Node0xae2c10;
	Node0xae2bc0:s1 -> Node0xae2df0;
	Node0xae2c10 [shape=record,label="{%32:\l\l  %33 = load i32, i32* @inval_style, align 4, !dbg !885, !tbaa !875\l  %34 = icmp ne i32 %33, 3, !dbg !888\l  br i1 %34, label %35, label %46, !dbg !889\l|{<s0>T|<s1>F}}"];
	Node0xae2c10:s0 -> Node0xae2c60;
	Node0xae2c10:s1 -> Node0xae2da0;
	Node0xae2c60 [shape=record,label="{%35:\l\l  %36 = load i64, i64* %7, align 8, !dbg !890, !tbaa !858\l  %37 = icmp ne i64 %36, 0, !dbg !890\l  br i1 %37, label %38, label %42, !dbg !893\l|{<s0>T|<s1>F}}"];
	Node0xae2c60:s0 -> Node0xae2cb0;
	Node0xae2c60:s1 -> Node0xae2d00;
	Node0xae2cb0 [shape=record,label="{%38:\l\l  %39 = load i32, i32* @conv_exit_code, align 4, !dbg !894, !tbaa !879\l  %40 = load x86_fp80, x86_fp80* %4, align 16, !dbg !895, !tbaa !853\l  %41 = load i64, i64* %7, align 8, !dbg !896, !tbaa !858\l  call void (i32, i32, i8*, ...) @error(i32 %39, i32 0, i8* getelementptr\l... inbounds ([73 x i8], [73 x i8]* @.str.132, i32 0, i32 0), x86_fp80 %40, i64\l... %41), !dbg !897\l  br label %45, !dbg !897\l}"];
	Node0xae2cb0 -> Node0xae2d50;
	Node0xae2d00 [shape=record,label="{%42:\l\l  %43 = load i32, i32* @conv_exit_code, align 4, !dbg !898, !tbaa !879\l  %44 = load x86_fp80, x86_fp80* %4, align 16, !dbg !899, !tbaa !853\l  call void (i32, i32, i8*, ...) @error(i32 %43, i32 0, i8* getelementptr\l... inbounds ([59 x i8], [59 x i8]* @.str.133, i32 0, i32 0), x86_fp80 %44), !dbg\l... !900\l  br label %45\l}"];
	Node0xae2d00 -> Node0xae2d50;
	Node0xae2d50 [shape=record,label="{%45:\l\l  br label %46, !dbg !901\l}"];
	Node0xae2d50 -> Node0xae2da0;
	Node0xae2da0 [shape=record,label="{%46:\l\l  store i32 0, i32* %3, align 4, !dbg !902\l  store i32 1, i32* %9, align 4\l  br label %123, !dbg !902\l}"];
	Node0xae2da0 -> Node0xae3480;
	Node0xae2df0 [shape=record,label="{%47:\l\l  %48 = load i32, i32* %8, align 4, !dbg !903, !tbaa !879\l  %49 = icmp ugt i32 %48, 26, !dbg !905\l  br i1 %49, label %50, label %57, !dbg !906\l|{<s0>T|<s1>F}}"];
	Node0xae2df0:s0 -> Node0xae2e40;
	Node0xae2df0:s1 -> Node0xae2f30;
	Node0xae2e40 [shape=record,label="{%50:\l\l  %51 = load i32, i32* @inval_style, align 4, !dbg !907, !tbaa !875\l  %52 = icmp ne i32 %51, 3, !dbg !910\l  br i1 %52, label %53, label %56, !dbg !911\l|{<s0>T|<s1>F}}"];
	Node0xae2e40:s0 -> Node0xae2e90;
	Node0xae2e40:s1 -> Node0xae2ee0;
	Node0xae2e90 [shape=record,label="{%53:\l\l  %54 = load i32, i32* @conv_exit_code, align 4, !dbg !912, !tbaa !879\l  %55 = load x86_fp80, x86_fp80* %4, align 16, !dbg !913, !tbaa !853\l  call void (i32, i32, i8*, ...) @error(i32 %54, i32 0, i8* getelementptr\l... inbounds ([67 x i8], [67 x i8]* @.str.134, i32 0, i32 0), x86_fp80 %55), !dbg\l... !914\l  br label %56, !dbg !914\l}"];
	Node0xae2e90 -> Node0xae2ee0;
	Node0xae2ee0 [shape=record,label="{%56:\l\l  store i32 0, i32* %3, align 4, !dbg !915\l  store i32 1, i32* %9, align 4\l  br label %123, !dbg !915\l}"];
	Node0xae2ee0 -> Node0xae3480;
	Node0xae2f30 [shape=record,label="{%57:\l\l  %58 = load x86_fp80, x86_fp80* %4, align 16, !dbg !916, !tbaa !853\l  %59 = load i64, i64* %7, align 8, !dbg !917, !tbaa !858\l  %60 = trunc i64 %59 to i32, !dbg !917\l  %61 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !918\l  %62 = load i32, i32* @scale_to, align 4, !dbg !919, !tbaa !875\l  %63 = load i32, i32* @grouping, align 4, !dbg !920, !tbaa !879\l  %64 = load i32, i32* @round_style, align 4, !dbg !921, !tbaa !875\l  call void @double_to_human(x86_fp80 %58, i32 %60, i8* %61, i64 128, i32 %62,\l... i32 %63, i32 %64), !dbg !922\l  %65 = load i8*, i8** @suffix, align 8, !dbg !923, !tbaa !925\l  %66 = icmp ne i8* %65, null, !dbg !923\l  br i1 %66, label %67, label %75, !dbg !927\l|{<s0>T|<s1>F}}"];
	Node0xae2f30:s0 -> Node0xae2f80;
	Node0xae2f30:s1 -> Node0xae2fd0;
	Node0xae2f80 [shape=record,label="{%67:\l\l  %68 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !928\l  %69 = load i8*, i8** @suffix, align 8, !dbg !929, !tbaa !925\l  %70 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !930\l  %71 = call i64 @strlen(i8* %70) #14, !dbg !931\l  %72 = sub i64 128, %71, !dbg !932\l  %73 = sub i64 %72, 1, !dbg !933\l  %74 = call i8* @strncat(i8* %68, i8* %69, i64 %73) #13, !dbg !934\l  br label %75, !dbg !934\l}"];
	Node0xae2f80 -> Node0xae2fd0;
	Node0xae2fd0 [shape=record,label="{%75:\l\l  br label %76, !dbg !935\l}"];
	Node0xae2fd0 -> Node0xae3020;
	Node0xae3020 [shape=record,label="{%76:\l\l  %77 = load i8, i8* @dev_debug, align 1, !dbg !936, !tbaa !939, !range !941\l  %78 = trunc i8 %77 to i1, !dbg !936\l  br i1 %78, label %79, label %85, !dbg !942\l|{<s0>T|<s1>F}}"];
	Node0xae3020:s0 -> Node0xae3070;
	Node0xae3020:s1 -> Node0xae30c0;
	Node0xae3070 [shape=record,label="{%79:\l\l  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg\l... !936, !tbaa !925\l  %81 = load x86_fp80, x86_fp80* %4, align 16, !dbg !936, !tbaa !853\l  %82 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !936\l  %83 = call i8* @quote(i8* %82), !dbg !936\l  %84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80,\l... i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.135, i32 0, i32 0),\l... x86_fp80 %81, i8* %83), !dbg !936\l  br label %85, !dbg !936\l}"];
	Node0xae3070 -> Node0xae30c0;
	Node0xae30c0 [shape=record,label="{%85:\l\l  br label %86, !dbg !942\l}"];
	Node0xae30c0 -> Node0xae3110;
	Node0xae3110 [shape=record,label="{%86:\l\l  br label %87, !dbg !942\l}"];
	Node0xae3110 -> Node0xae3160;
	Node0xae3160 [shape=record,label="{%87:\l\l  %88 = load i64, i64* @padding_width, align 8, !dbg !943, !tbaa !858\l  %89 = icmp ne i64 %88, 0, !dbg !943\l  br i1 %89, label %90, label %115, !dbg !944\l|{<s0>T|<s1>F}}"];
	Node0xae3160:s0 -> Node0xae31b0;
	Node0xae3160:s1 -> Node0xae33e0;
	Node0xae31b0 [shape=record,label="{%90:\l\l  %91 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !945\l  %92 = call i64 @strlen(i8* %91) #14, !dbg !946\l  %93 = load i64, i64* @padding_width, align 8, !dbg !947, !tbaa !858\l  %94 = icmp ult i64 %92, %93, !dbg !948\l  br i1 %94, label %95, label %115, !dbg !949\l|{<s0>T|<s1>F}}"];
	Node0xae31b0:s0 -> Node0xae3200;
	Node0xae31b0:s1 -> Node0xae33e0;
	Node0xae3200 [shape=record,label="{%95:\l\l  %96 = bitcast i64* %10 to i8*, !dbg !950\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %96) #13, !dbg !950\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !850, metadata\l... !DIExpression()), !dbg !951\l  %97 = load i64, i64* @padding_width, align 8, !dbg !952, !tbaa !858\l  store i64 %97, i64* %10, align 8, !dbg !951, !tbaa !858\l  %98 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !953\l  %99 = load i8*, i8** @padding_buffer, align 8, !dbg !954, !tbaa !925\l  %100 = load i64, i64* @padding_buffer_size, align 8, !dbg !955, !tbaa !858\l  %101 = load i32, i32* @padding_alignment, align 4, !dbg !956, !tbaa !875\l  %102 = call i64 @mbsalign(i8* %98, i8* %99, i64 %100, i64* %10, i32 %101,\l... i32 2), !dbg !957\l  br label %103, !dbg !958\l}"];
	Node0xae3200 -> Node0xae3250;
	Node0xae3250 [shape=record,label="{%103:\l\l  %104 = load i8, i8* @dev_debug, align 1, !dbg !959, !tbaa !939, !range !941\l  %105 = trunc i8 %104 to i1, !dbg !959\l  br i1 %105, label %106, label %111, !dbg !962\l|{<s0>T|<s1>F}}"];
	Node0xae3250:s0 -> Node0xae32a0;
	Node0xae3250:s1 -> Node0xae32f0;
	Node0xae32a0 [shape=record,label="{%106:\l\l  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg\l... !959, !tbaa !925\l  %108 = load i8*, i8** @padding_buffer, align 8, !dbg !959, !tbaa !925\l  %109 = call i8* @quote(i8* %108), !dbg !959\l  %110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %107, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.136, i32 0, i32\l... 0), i8* %109), !dbg !959\l  br label %111, !dbg !959\l}"];
	Node0xae32a0 -> Node0xae32f0;
	Node0xae32f0 [shape=record,label="{%111:\l\l  br label %112, !dbg !962\l}"];
	Node0xae32f0 -> Node0xae3340;
	Node0xae3340 [shape=record,label="{%112:\l\l  br label %113, !dbg !962\l}"];
	Node0xae3340 -> Node0xae3390;
	Node0xae3390 [shape=record,label="{%113:\l\l  %114 = bitcast i64* %10 to i8*, !dbg !963\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %114) #13, !dbg !963\l  br label %122, !dbg !964\l}"];
	Node0xae3390 -> Node0xae3430;
	Node0xae33e0 [shape=record,label="{%115:\l\l  %116 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !965\l  %117 = call i64 @strlen(i8* %116) #14, !dbg !967\l  %118 = add i64 %117, 1, !dbg !968\l  call void @setup_padding_buffer(i64 %118), !dbg !969\l  %119 = load i8*, i8** @padding_buffer, align 8, !dbg !970, !tbaa !925\l  %120 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !971\l  %121 = call i8* @strcpy(i8* %119, i8* %120) #13, !dbg !972\l  br label %122\l}"];
	Node0xae33e0 -> Node0xae3430;
	Node0xae3430 [shape=record,label="{%122:\l\l  store i32 1, i32* %3, align 4, !dbg !973\l  store i32 1, i32* %9, align 4\l  br label %123, !dbg !973\l}"];
	Node0xae3430 -> Node0xae3480;
	Node0xae3480 [shape=record,label="{%123:\l\l  %124 = bitcast i32* %8 to i8*, !dbg !974\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %124) #13, !dbg !974\l  %125 = bitcast i64* %7 to i8*, !dbg !974\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #13, !dbg !974\l  %126 = bitcast [128 x i8]* %6 to i8*, !dbg !974\l  call void @llvm.lifetime.end.p0i8(i64 128, i8* %126) #13, !dbg !974\l  %127 = load i32, i32* %3, align 4, !dbg !974\l  ret i32 %127, !dbg !974\l}"];
}
