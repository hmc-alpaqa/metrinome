digraph "CFG for 'mbsnwidth' function" {
	label="CFG for 'mbsnwidth' function";

	Node0x16acaa0 [shape=record,label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca i8*, align 8\l  %9 = alloca i8*, align 8\l  %10 = alloca i32, align 4\l  %11 = alloca %struct.__mbstate_t, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca i64, align 8\l  %14 = alloca i32, align 4\l  %15 = alloca i32, align 4\l  %16 = alloca i8, align 1\l  store i8* %0, i8** %5, align 8, !tbaa !1040\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !1007, metadata\l... !DIExpression()), !dbg !1044\l  store i64 %1, i64* %6, align 8, !tbaa !1045\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1008, metadata\l... !DIExpression()), !dbg !1047\l  store i32 %2, i32* %7, align 4, !tbaa !1048\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !1009, metadata\l... !DIExpression()), !dbg !1050\l  %17 = bitcast i8** %8 to i8*, !dbg !1051\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13, !dbg !1051\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1010, metadata\l... !DIExpression()), !dbg !1052\l  %18 = load i8*, i8** %5, align 8, !dbg !1053, !tbaa !1040\l  store i8* %18, i8** %8, align 8, !dbg !1052, !tbaa !1040\l  %19 = bitcast i8** %9 to i8*, !dbg !1054\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13, !dbg !1054\l  call void @llvm.dbg.declare(metadata i8** %9, metadata !1011, metadata\l... !DIExpression()), !dbg !1055\l  %20 = load i8*, i8** %8, align 8, !dbg !1056, !tbaa !1040\l  %21 = load i64, i64* %6, align 8, !dbg !1057, !tbaa !1045\l  %22 = getelementptr inbounds i8, i8* %20, i64 %21, !dbg !1058\l  store i8* %22, i8** %9, align 8, !dbg !1055, !tbaa !1040\l  %23 = bitcast i32* %10 to i8*, !dbg !1059\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #13, !dbg !1059\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !1012, metadata\l... !DIExpression()), !dbg !1060\l  store i32 0, i32* %10, align 4, !dbg !1061, !tbaa !1048\l  %24 = call i64 @__ctype_get_mb_cur_max() #13, !dbg !1062\l  %25 = icmp ugt i64 %24, 1, !dbg !1063\l  br i1 %25, label %26, label %137, !dbg !1064\l|{<s0>T|<s1>F}}"];
	Node0x16acaa0:s0 -> Node0x16ad860;
	Node0x16acaa0:s1 -> Node0x16ae3a0;
	Node0x16ad860 [shape=record,label="{%26:\l\l  br label %27, !dbg !1065\l}"];
	Node0x16ad860 -> Node0x16ad8b0;
	Node0x16ad8b0 [shape=record,label="{%27:\l\l  %28 = load i8*, i8** %8, align 8, !dbg !1066, !tbaa !1040\l  %29 = load i8*, i8** %9, align 8, !dbg !1067, !tbaa !1040\l  %30 = icmp ult i8* %28, %29, !dbg !1068\l  br i1 %30, label %31, label %135, !dbg !1065\l|{<s0>T|<s1>F}}"];
	Node0x16ad8b0:s0 -> Node0x16ad900;
	Node0x16ad8b0:s1 -> Node0x16ae350;
	Node0x16ad900 [shape=record,label="{%31:\l\l  %32 = load i8*, i8** %8, align 8, !dbg !1069, !tbaa !1040\l  %33 = load i8, i8* %32, align 1, !dbg !1070, !tbaa !1071\l  %34 = sext i8 %33 to i32, !dbg !1070\l  switch i32 %34, label %40 [\l    i32 32, label %35\l    i32 33, label %35\l    i32 34, label %35\l    i32 35, label %35\l    i32 37, label %35\l    i32 38, label %35\l    i32 39, label %35\l    i32 40, label %35\l    i32 41, label %35\l    i32 42, label %35\l    i32 43, label %35\l    i32 44, label %35\l    i32 45, label %35\l    i32 46, label %35\l    i32 47, label %35\l    i32 48, label %35\l    i32 49, label %35\l    i32 50, label %35\l    i32 51, label %35\l    i32 52, label %35\l    i32 53, label %35\l    i32 54, label %35\l    i32 55, label %35\l    i32 56, label %35\l    i32 57, label %35\l    i32 58, label %35\l    i32 59, label %35\l    i32 60, label %35\l    i32 61, label %35\l    i32 62, label %35\l    i32 63, label %35\l    i32 65, label %35\l    i32 66, label %35\l    i32 67, label %35\l    i32 68, label %35\l    i32 69, label %35\l    i32 70, label %35\l    i32 71, label %35\l    i32 72, label %35\l    i32 73, label %35\l    i32 74, label %35\l    i32 75, label %35\l    i32 76, label %35\l    i32 77, label %35\l    i32 78, label %35\l    i32 79, label %35\l    i32 80, label %35\l    i32 81, label %35\l    i32 82, label %35\l    i32 83, label %35\l    i32 84, label %35\l    i32 85, label %35\l    i32 86, label %35\l    i32 87, label %35\l    i32 88, label %35\l    i32 89, label %35\l    i32 90, label %35\l    i32 91, label %35\l    i32 92, label %35\l    i32 93, label %35\l    i32 94, label %35\l    i32 95, label %35\l    i32 97, label %35\l    i32 98, label %35\l    i32 99, label %35\l    i32 100, label %35\l    i32 101, label %35\l    i32 102, label %35\l    i32 103, label %35\l    i32 104, label %35\l    i32 105, label %35\l    i32 106, label %35\l    i32 107, label %35\l    i32 108, label %35\l    i32 109, label %35\l    i32 110, label %35\l    i32 111, label %35\l    i32 112, label %35\l    i32 113, label %35\l    i32 114, label %35\l    i32 115, label %35\l    i32 116, label %35\l    i32 117, label %35\l    i32 118, label %35\l    i32 119, label %35\l    i32 120, label %35\l    i32 121, label %35\l    i32 122, label %35\l    i32 123, label %35\l    i32 124, label %35\l    i32 125, label %35\l    i32 126, label %35\l  ], !dbg !1072\l|{<s0>def|<s1>32|<s2>33|<s3>34|<s4>35|<s5>37|<s6>38|<s7>39|<s8>40|<s9>41|<s10>42|<s11>43|<s12>44|<s13>45|<s14>46|<s15>47|<s16>48|<s17>49|<s18>50|<s19>51|<s20>52|<s21>53|<s22>54|<s23>55|<s24>56|<s25>57|<s26>58|<s27>59|<s28>60|<s29>61|<s30>62|<s31>63|<s32>65|<s33>66|<s34>67|<s35>68|<s36>69|<s37>70|<s38>71|<s39>72|<s40>73|<s41>74|<s42>75|<s43>76|<s44>77|<s45>78|<s46>79|<s47>80|<s48>81|<s49>82|<s50>83|<s51>84|<s52>85|<s53>86|<s54>87|<s55>88|<s56>89|<s57>90|<s58>91|<s59>92|<s60>93|<s61>94|<s62>95|<s63>97|<s64>truncated...}}"];
	Node0x16ad900:s0 -> Node0x16ad9a0;
	Node0x16ad900:s1 -> Node0x16ad950;
	Node0x16ad900:s2 -> Node0x16ad950;
	Node0x16ad900:s3 -> Node0x16ad950;
	Node0x16ad900:s4 -> Node0x16ad950;
	Node0x16ad900:s5 -> Node0x16ad950;
	Node0x16ad900:s6 -> Node0x16ad950;
	Node0x16ad900:s7 -> Node0x16ad950;
	Node0x16ad900:s8 -> Node0x16ad950;
	Node0x16ad900:s9 -> Node0x16ad950;
	Node0x16ad900:s10 -> Node0x16ad950;
	Node0x16ad900:s11 -> Node0x16ad950;
	Node0x16ad900:s12 -> Node0x16ad950;
	Node0x16ad900:s13 -> Node0x16ad950;
	Node0x16ad900:s14 -> Node0x16ad950;
	Node0x16ad900:s15 -> Node0x16ad950;
	Node0x16ad900:s16 -> Node0x16ad950;
	Node0x16ad900:s17 -> Node0x16ad950;
	Node0x16ad900:s18 -> Node0x16ad950;
	Node0x16ad900:s19 -> Node0x16ad950;
	Node0x16ad900:s20 -> Node0x16ad950;
	Node0x16ad900:s21 -> Node0x16ad950;
	Node0x16ad900:s22 -> Node0x16ad950;
	Node0x16ad900:s23 -> Node0x16ad950;
	Node0x16ad900:s24 -> Node0x16ad950;
	Node0x16ad900:s25 -> Node0x16ad950;
	Node0x16ad900:s26 -> Node0x16ad950;
	Node0x16ad900:s27 -> Node0x16ad950;
	Node0x16ad900:s28 -> Node0x16ad950;
	Node0x16ad900:s29 -> Node0x16ad950;
	Node0x16ad900:s30 -> Node0x16ad950;
	Node0x16ad900:s31 -> Node0x16ad950;
	Node0x16ad900:s32 -> Node0x16ad950;
	Node0x16ad900:s33 -> Node0x16ad950;
	Node0x16ad900:s34 -> Node0x16ad950;
	Node0x16ad900:s35 -> Node0x16ad950;
	Node0x16ad900:s36 -> Node0x16ad950;
	Node0x16ad900:s37 -> Node0x16ad950;
	Node0x16ad900:s38 -> Node0x16ad950;
	Node0x16ad900:s39 -> Node0x16ad950;
	Node0x16ad900:s40 -> Node0x16ad950;
	Node0x16ad900:s41 -> Node0x16ad950;
	Node0x16ad900:s42 -> Node0x16ad950;
	Node0x16ad900:s43 -> Node0x16ad950;
	Node0x16ad900:s44 -> Node0x16ad950;
	Node0x16ad900:s45 -> Node0x16ad950;
	Node0x16ad900:s46 -> Node0x16ad950;
	Node0x16ad900:s47 -> Node0x16ad950;
	Node0x16ad900:s48 -> Node0x16ad950;
	Node0x16ad900:s49 -> Node0x16ad950;
	Node0x16ad900:s50 -> Node0x16ad950;
	Node0x16ad900:s51 -> Node0x16ad950;
	Node0x16ad900:s52 -> Node0x16ad950;
	Node0x16ad900:s53 -> Node0x16ad950;
	Node0x16ad900:s54 -> Node0x16ad950;
	Node0x16ad900:s55 -> Node0x16ad950;
	Node0x16ad900:s56 -> Node0x16ad950;
	Node0x16ad900:s57 -> Node0x16ad950;
	Node0x16ad900:s58 -> Node0x16ad950;
	Node0x16ad900:s59 -> Node0x16ad950;
	Node0x16ad900:s60 -> Node0x16ad950;
	Node0x16ad900:s61 -> Node0x16ad950;
	Node0x16ad900:s62 -> Node0x16ad950;
	Node0x16ad900:s63 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad900:s64 -> Node0x16ad950;
	Node0x16ad950 [shape=record,label="{%35:\l\l  %36 = load i8*, i8** %8, align 8, !dbg !1073, !tbaa !1040\l  %37 = getelementptr inbounds i8, i8* %36, i32 1, !dbg !1073\l  store i8* %37, i8** %8, align 8, !dbg !1073, !tbaa !1040\l  %38 = load i32, i32* %10, align 4, !dbg !1074, !tbaa !1048\l  %39 = add nsw i32 %38, 1, !dbg !1074\l  store i32 %39, i32* %10, align 4, !dbg !1074, !tbaa !1048\l  br label %134, !dbg !1075\l}"];
	Node0x16ad950 -> Node0x16ae300;
	Node0x16ad9a0 [shape=record,label="{%40:\l\l  %41 = bitcast %struct.__mbstate_t* %11 to i8*, !dbg !1076\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13, !dbg !1076\l  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %11, metadata\l... !1013, metadata !DIExpression()), !dbg !1077\l  %42 = bitcast %struct.__mbstate_t* %11 to i8*, !dbg !1078\l  call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 8, i1 false),\l... !dbg !1078\l  br label %43, !dbg !1079\l}"];
	Node0x16ad9a0 -> Node0x16ad9f0;
	Node0x16ad9f0 [shape=record,label="{%43:\l\l  %44 = bitcast i32* %12 to i8*, !dbg !1080\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #13, !dbg !1080\l  call void @llvm.dbg.declare(metadata i32* %12, metadata !1033, metadata\l... !DIExpression()), !dbg !1081\l  %45 = bitcast i64* %13 to i8*, !dbg !1082\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13, !dbg !1082\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !1036, metadata\l... !DIExpression()), !dbg !1083\l  %46 = bitcast i32* %14 to i8*, !dbg !1084\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #13, !dbg !1084\l  call void @llvm.dbg.declare(metadata i32* %14, metadata !1037, metadata\l... !DIExpression()), !dbg !1085\l  %47 = load i8*, i8** %8, align 8, !dbg !1086, !tbaa !1040\l  %48 = load i8*, i8** %9, align 8, !dbg !1087, !tbaa !1040\l  %49 = load i8*, i8** %8, align 8, !dbg !1088, !tbaa !1040\l  %50 = ptrtoint i8* %48 to i64, !dbg !1089\l  %51 = ptrtoint i8* %49 to i64, !dbg !1089\l  %52 = sub i64 %50, %51, !dbg !1089\l  %53 = call i64 @rpl_mbrtowc(i32* %12, i8* %47, i64 %52, %struct.__mbstate_t*\l... %11), !dbg !1090\l  store i64 %53, i64* %13, align 8, !dbg !1091, !tbaa !1045\l  %54 = load i64, i64* %13, align 8, !dbg !1092, !tbaa !1045\l  %55 = icmp eq i64 %54, -1, !dbg !1094\l  br i1 %55, label %56, label %66, !dbg !1095\l|{<s0>T|<s1>F}}"];
	Node0x16ad9f0:s0 -> Node0x16ada40;
	Node0x16ad9f0:s1 -> Node0x16adb30;
	Node0x16ada40 [shape=record,label="{%56:\l\l  %57 = load i32, i32* %7, align 4, !dbg !1096, !tbaa !1048\l  %58 = and i32 %57, 1, !dbg !1099\l  %59 = icmp ne i32 %58, 0, !dbg !1099\l  br i1 %59, label %65, label %60, !dbg !1100\l|{<s0>T|<s1>F}}"];
	Node0x16ada40:s0 -> Node0x16adae0;
	Node0x16ada40:s1 -> Node0x16ada90;
	Node0x16ada90 [shape=record,label="{%60:\l\l  %61 = load i8*, i8** %8, align 8, !dbg !1101, !tbaa !1040\l  %62 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !1101\l  store i8* %62, i8** %8, align 8, !dbg !1101, !tbaa !1040\l  %63 = load i32, i32* %10, align 4, !dbg !1103, !tbaa !1048\l  %64 = add nsw i32 %63, 1, !dbg !1103\l  store i32 %64, i32* %10, align 4, !dbg !1103, !tbaa !1048\l  store i32 5, i32* %15, align 4\l  br label %119, !dbg !1104\l}"];
	Node0x16ada90 -> Node0x16ae120;
	Node0x16adae0 [shape=record,label="{%65:\l\l  store i32 -1, i32* %4, align 4, !dbg !1105\l  store i32 1, i32* %15, align 4\l  br label %119, !dbg !1105\l}"];
	Node0x16adae0 -> Node0x16ae120;
	Node0x16adb30 [shape=record,label="{%66:\l\l  %67 = load i64, i64* %13, align 8, !dbg !1106, !tbaa !1045\l  %68 = icmp eq i64 %67, -2, !dbg !1108\l  br i1 %68, label %69, label %78, !dbg !1109\l|{<s0>T|<s1>F}}"];
	Node0x16adb30:s0 -> Node0x16adb80;
	Node0x16adb30:s1 -> Node0x16adc70;
	Node0x16adb80 [shape=record,label="{%69:\l\l  %70 = load i32, i32* %7, align 4, !dbg !1110, !tbaa !1048\l  %71 = and i32 %70, 1, !dbg !1113\l  %72 = icmp ne i32 %71, 0, !dbg !1113\l  br i1 %72, label %77, label %73, !dbg !1114\l|{<s0>T|<s1>F}}"];
	Node0x16adb80:s0 -> Node0x16adc20;
	Node0x16adb80:s1 -> Node0x16adbd0;
	Node0x16adbd0 [shape=record,label="{%73:\l\l  %74 = load i8*, i8** %9, align 8, !dbg !1115, !tbaa !1040\l  store i8* %74, i8** %8, align 8, !dbg !1117, !tbaa !1040\l  %75 = load i32, i32* %10, align 4, !dbg !1118, !tbaa !1048\l  %76 = add nsw i32 %75, 1, !dbg !1118\l  store i32 %76, i32* %10, align 4, !dbg !1118, !tbaa !1048\l  store i32 5, i32* %15, align 4\l  br label %119, !dbg !1119\l}"];
	Node0x16adbd0 -> Node0x16ae120;
	Node0x16adc20 [shape=record,label="{%77:\l\l  store i32 -1, i32* %4, align 4, !dbg !1120\l  store i32 1, i32* %15, align 4\l  br label %119, !dbg !1120\l}"];
	Node0x16adc20 -> Node0x16ae120;
	Node0x16adc70 [shape=record,label="{%78:\l\l  %79 = load i64, i64* %13, align 8, !dbg !1121, !tbaa !1045\l  %80 = icmp eq i64 %79, 0, !dbg !1123\l  br i1 %80, label %81, label %82, !dbg !1124\l|{<s0>T|<s1>F}}"];
	Node0x16adc70:s0 -> Node0x16adcc0;
	Node0x16adc70:s1 -> Node0x16add10;
	Node0x16adcc0 [shape=record,label="{%81:\l\l  store i64 1, i64* %13, align 8, !dbg !1125, !tbaa !1045\l  br label %82, !dbg !1126\l}"];
	Node0x16adcc0 -> Node0x16add10;
	Node0x16add10 [shape=record,label="{%82:\l\l  %83 = load i32, i32* %12, align 4, !dbg !1127, !tbaa !1048\l  %84 = call i32 @wcwidth(i32 %83) #13, !dbg !1128\l  store i32 %84, i32* %14, align 4, !dbg !1129, !tbaa !1048\l  %85 = load i32, i32* %14, align 4, !dbg !1130, !tbaa !1048\l  %86 = icmp sge i32 %85, 0, !dbg !1132\l  br i1 %86, label %87, label %97, !dbg !1133\l|{<s0>T|<s1>F}}"];
	Node0x16add10:s0 -> Node0x16add60;
	Node0x16add10:s1 -> Node0x16ade50;
	Node0x16add60 [shape=record,label="{%87:\l\l  %88 = load i32, i32* %14, align 4, !dbg !1134, !tbaa !1048\l  %89 = load i32, i32* %10, align 4, !dbg !1137, !tbaa !1048\l  %90 = sub nsw i32 2147483647, %89, !dbg !1138\l  %91 = icmp sgt i32 %88, %90, !dbg !1139\l  br i1 %91, label %92, label %93, !dbg !1140\l|{<s0>T|<s1>F}}"];
	Node0x16add60:s0 -> Node0x16addb0;
	Node0x16add60:s1 -> Node0x16ade00;
	Node0x16addb0 [shape=record,label="{%92:\l\l  store i32 7, i32* %15, align 4\l  br label %119, !dbg !1141\l}"];
	Node0x16addb0 -> Node0x16ae120;
	Node0x16ade00 [shape=record,label="{%93:\l\l  %94 = load i32, i32* %14, align 4, !dbg !1142, !tbaa !1048\l  %95 = load i32, i32* %10, align 4, !dbg !1143, !tbaa !1048\l  %96 = add nsw i32 %95, %94, !dbg !1143\l  store i32 %96, i32* %10, align 4, !dbg !1143, !tbaa !1048\l  br label %115, !dbg !1144\l}"];
	Node0x16ade00 -> Node0x16ae0d0;
	Node0x16ade50 [shape=record,label="{%97:\l\l  %98 = load i32, i32* %7, align 4, !dbg !1145, !tbaa !1048\l  %99 = and i32 %98, 2, !dbg !1147\l  %100 = icmp ne i32 %99, 0, !dbg !1147\l  br i1 %100, label %113, label %101, !dbg !1148\l|{<s0>T|<s1>F}}"];
	Node0x16ade50:s0 -> Node0x16ae030;
	Node0x16ade50:s1 -> Node0x16adea0;
	Node0x16adea0 [shape=record,label="{%101:\l\l  %102 = load i32, i32* %12, align 4, !dbg !1149, !tbaa !1048\l  %103 = call i32 @iswcntrl(i32 %102) #13, !dbg !1152\l  %104 = icmp ne i32 %103, 0, !dbg !1152\l  br i1 %104, label %112, label %105, !dbg !1153\l|{<s0>T|<s1>F}}"];
	Node0x16adea0:s0 -> Node0x16adfe0;
	Node0x16adea0:s1 -> Node0x16adef0;
	Node0x16adef0 [shape=record,label="{%105:\l\l  %106 = load i32, i32* %10, align 4, !dbg !1154, !tbaa !1048\l  %107 = icmp eq i32 %106, 2147483647, !dbg !1157\l  br i1 %107, label %108, label %109, !dbg !1158\l|{<s0>T|<s1>F}}"];
	Node0x16adef0:s0 -> Node0x16adf40;
	Node0x16adef0:s1 -> Node0x16adf90;
	Node0x16adf40 [shape=record,label="{%108:\l\l  store i32 7, i32* %15, align 4\l  br label %119, !dbg !1159\l}"];
	Node0x16adf40 -> Node0x16ae120;
	Node0x16adf90 [shape=record,label="{%109:\l\l  %110 = load i32, i32* %10, align 4, !dbg !1160, !tbaa !1048\l  %111 = add nsw i32 %110, 1, !dbg !1160\l  store i32 %111, i32* %10, align 4, !dbg !1160, !tbaa !1048\l  br label %112, !dbg !1161\l}"];
	Node0x16adf90 -> Node0x16adfe0;
	Node0x16adfe0 [shape=record,label="{%112:\l\l  br label %114, !dbg !1162\l}"];
	Node0x16adfe0 -> Node0x16ae080;
	Node0x16ae030 [shape=record,label="{%113:\l\l  store i32 -1, i32* %4, align 4, !dbg !1163\l  store i32 1, i32* %15, align 4\l  br label %119, !dbg !1163\l}"];
	Node0x16ae030 -> Node0x16ae120;
	Node0x16ae080 [shape=record,label="{%114:\l\l  br label %115\l}"];
	Node0x16ae080 -> Node0x16ae0d0;
	Node0x16ae0d0 [shape=record,label="{%115:\l\l  %116 = load i64, i64* %13, align 8, !dbg !1164, !tbaa !1045\l  %117 = load i8*, i8** %8, align 8, !dbg !1165, !tbaa !1040\l  %118 = getelementptr inbounds i8, i8* %117, i64 %116, !dbg !1165\l  store i8* %118, i8** %8, align 8, !dbg !1165, !tbaa !1040\l  store i32 0, i32* %15, align 4, !dbg !1166\l  br label %119, !dbg !1166\l}"];
	Node0x16ae0d0 -> Node0x16ae120;
	Node0x16ae120 [shape=record,label="{%119:\l\l  %120 = bitcast i32* %14 to i8*, !dbg !1166\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %120) #13, !dbg !1166\l  %121 = bitcast i64* %13 to i8*, !dbg !1166\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %121) #13, !dbg !1166\l  %122 = bitcast i32* %12 to i8*, !dbg !1166\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %122) #13, !dbg !1166\l  %123 = load i32, i32* %15, align 4\l  switch i32 %123, label %130 [\l    i32 0, label %124\l    i32 5, label %129\l  ]\l|{<s0>def|<s1>0|<s2>5}}"];
	Node0x16ae120:s0 -> Node0x16ae260;
	Node0x16ae120:s1 -> Node0x16ae170;
	Node0x16ae120:s2 -> Node0x16ae210;
	Node0x16ae170 [shape=record,label="{%124:\l\l  br label %125, !dbg !1167\l}"];
	Node0x16ae170 -> Node0x16ae1c0;
	Node0x16ae1c0 [shape=record,label="{%125:\l\l  %126 = call i32 @mbsinit(%struct.__mbstate_t* %11) #14, !dbg !1168\l  %127 = icmp ne i32 %126, 0, !dbg !1169\l  %128 = xor i1 %127, true, !dbg !1169\l  br i1 %128, label %43, label %129, !dbg !1167, !llvm.loop !1170\l|{<s0>T|<s1>F}}"];
	Node0x16ae1c0:s0 -> Node0x16ad9f0;
	Node0x16ae1c0:s1 -> Node0x16ae210;
	Node0x16ae210 [shape=record,label="{%129:\l\l  store i32 0, i32* %15, align 4, !dbg !1172\l  br label %130, !dbg !1172\l}"];
	Node0x16ae210 -> Node0x16ae260;
	Node0x16ae260 [shape=record,label="{%130:\l\l  %131 = bitcast %struct.__mbstate_t* %11 to i8*, !dbg !1172\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %131) #13, !dbg !1172\l  %132 = load i32, i32* %15, align 4\l  switch i32 %132, label %195 [\l    i32 0, label %133\l    i32 7, label %194\l  ]\l|{<s0>def|<s1>0|<s2>7}}"];
	Node0x16ae260:s0 -> Node0x16ae990;
	Node0x16ae260:s1 -> Node0x16ae2b0;
	Node0x16ae260:s2 -> Node0x16ae940;
	Node0x16ae2b0 [shape=record,label="{%133:\l\l  br label %134, !dbg !1173\l}"];
	Node0x16ae2b0 -> Node0x16ae300;
	Node0x16ae300 [shape=record,label="{%134:\l\l  br label %27, !dbg !1065, !llvm.loop !1174\l}"];
	Node0x16ae300 -> Node0x16ad8b0;
	Node0x16ae350 [shape=record,label="{%135:\l\l  %136 = load i32, i32* %10, align 4, !dbg !1176, !tbaa !1048\l  store i32 %136, i32* %4, align 4, !dbg !1177\l  store i32 1, i32* %15, align 4\l  br label %195, !dbg !1177\l}"];
	Node0x16ae350 -> Node0x16ae990;
	Node0x16ae3a0 [shape=record,label="{%137:\l\l  br label %138, !dbg !1178\l}"];
	Node0x16ae3a0 -> Node0x16ae3f0;
	Node0x16ae3f0 [shape=record,label="{%138:\l\l  %139 = load i8*, i8** %8, align 8, !dbg !1179, !tbaa !1040\l  %140 = load i8*, i8** %9, align 8, !dbg !1180, !tbaa !1040\l  %141 = icmp ult i8* %139, %140, !dbg !1181\l  br i1 %141, label %142, label %192, !dbg !1178\l|{<s0>T|<s1>F}}"];
	Node0x16ae3f0:s0 -> Node0x16ae440;
	Node0x16ae3f0:s1 -> Node0x16ae8f0;
	Node0x16ae440 [shape=record,label="{%142:\l\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13, !dbg !1182\l  call void @llvm.dbg.declare(metadata i8* %16, metadata !1038, metadata\l... !DIExpression()), !dbg !1183\l  %143 = load i8*, i8** %8, align 8, !dbg !1184, !tbaa !1040\l  %144 = getelementptr inbounds i8, i8* %143, i32 1, !dbg !1184\l  store i8* %144, i8** %8, align 8, !dbg !1184, !tbaa !1040\l  %145 = load i8, i8* %143, align 1, !dbg !1185, !tbaa !1071\l  store i8 %145, i8* %16, align 1, !dbg !1183, !tbaa !1071\l  %146 = call i16** @__ctype_b_loc() #15, !dbg !1186\l  %147 = load i16*, i16** %146, align 8, !dbg !1186, !tbaa !1040\l  %148 = load i8, i8* %16, align 1, !dbg !1186, !tbaa !1071\l  %149 = zext i8 %148 to i32, !dbg !1186\l  %150 = sext i32 %149 to i64, !dbg !1186\l  %151 = getelementptr inbounds i16, i16* %147, i64 %150, !dbg !1186\l  %152 = load i16, i16* %151, align 2, !dbg !1186, !tbaa !1188\l  %153 = zext i16 %152 to i32, !dbg !1186\l  %154 = and i32 %153, 16384, !dbg !1186\l  %155 = icmp ne i32 %154, 0, !dbg !1186\l  br i1 %155, label %156, label %163, !dbg !1190\l|{<s0>T|<s1>F}}"];
	Node0x16ae440:s0 -> Node0x16ae490;
	Node0x16ae440:s1 -> Node0x16ae580;
	Node0x16ae490 [shape=record,label="{%156:\l\l  %157 = load i32, i32* %10, align 4, !dbg !1191, !tbaa !1048\l  %158 = icmp eq i32 %157, 2147483647, !dbg !1194\l  br i1 %158, label %159, label %160, !dbg !1195\l|{<s0>T|<s1>F}}"];
	Node0x16ae490:s0 -> Node0x16ae4e0;
	Node0x16ae490:s1 -> Node0x16ae530;
	Node0x16ae4e0 [shape=record,label="{%159:\l\l  store i32 7, i32* %15, align 4\l  br label %189, !dbg !1196\l}"];
	Node0x16ae4e0 -> Node0x16ae850;
	Node0x16ae530 [shape=record,label="{%160:\l\l  %161 = load i32, i32* %10, align 4, !dbg !1197, !tbaa !1048\l  %162 = add nsw i32 %161, 1, !dbg !1197\l  store i32 %162, i32* %10, align 4, !dbg !1197, !tbaa !1048\l  br label %188, !dbg !1198\l}"];
	Node0x16ae530 -> Node0x16ae800;
	Node0x16ae580 [shape=record,label="{%163:\l\l  %164 = load i32, i32* %7, align 4, !dbg !1199, !tbaa !1048\l  %165 = and i32 %164, 2, !dbg !1201\l  %166 = icmp ne i32 %165, 0, !dbg !1201\l  br i1 %166, label %186, label %167, !dbg !1202\l|{<s0>T|<s1>F}}"];
	Node0x16ae580:s0 -> Node0x16ae760;
	Node0x16ae580:s1 -> Node0x16ae5d0;
	Node0x16ae5d0 [shape=record,label="{%167:\l\l  %168 = call i16** @__ctype_b_loc() #15, !dbg !1203\l  %169 = load i16*, i16** %168, align 8, !dbg !1203, !tbaa !1040\l  %170 = load i8, i8* %16, align 1, !dbg !1203, !tbaa !1071\l  %171 = zext i8 %170 to i32, !dbg !1203\l  %172 = sext i32 %171 to i64, !dbg !1203\l  %173 = getelementptr inbounds i16, i16* %169, i64 %172, !dbg !1203\l  %174 = load i16, i16* %173, align 2, !dbg !1203, !tbaa !1188\l  %175 = zext i16 %174 to i32, !dbg !1203\l  %176 = and i32 %175, 2, !dbg !1203\l  %177 = icmp ne i32 %176, 0, !dbg !1203\l  br i1 %177, label %185, label %178, !dbg !1206\l|{<s0>T|<s1>F}}"];
	Node0x16ae5d0:s0 -> Node0x16ae710;
	Node0x16ae5d0:s1 -> Node0x16ae620;
	Node0x16ae620 [shape=record,label="{%178:\l\l  %179 = load i32, i32* %10, align 4, !dbg !1207, !tbaa !1048\l  %180 = icmp eq i32 %179, 2147483647, !dbg !1210\l  br i1 %180, label %181, label %182, !dbg !1211\l|{<s0>T|<s1>F}}"];
	Node0x16ae620:s0 -> Node0x16ae670;
	Node0x16ae620:s1 -> Node0x16ae6c0;
	Node0x16ae670 [shape=record,label="{%181:\l\l  store i32 7, i32* %15, align 4\l  br label %189, !dbg !1212\l}"];
	Node0x16ae670 -> Node0x16ae850;
	Node0x16ae6c0 [shape=record,label="{%182:\l\l  %183 = load i32, i32* %10, align 4, !dbg !1213, !tbaa !1048\l  %184 = add nsw i32 %183, 1, !dbg !1213\l  store i32 %184, i32* %10, align 4, !dbg !1213, !tbaa !1048\l  br label %185, !dbg !1214\l}"];
	Node0x16ae6c0 -> Node0x16ae710;
	Node0x16ae710 [shape=record,label="{%185:\l\l  br label %187, !dbg !1215\l}"];
	Node0x16ae710 -> Node0x16ae7b0;
	Node0x16ae760 [shape=record,label="{%186:\l\l  store i32 -1, i32* %4, align 4, !dbg !1216\l  store i32 1, i32* %15, align 4\l  br label %189, !dbg !1216\l}"];
	Node0x16ae760 -> Node0x16ae850;
	Node0x16ae7b0 [shape=record,label="{%187:\l\l  br label %188\l}"];
	Node0x16ae7b0 -> Node0x16ae800;
	Node0x16ae800 [shape=record,label="{%188:\l\l  store i32 0, i32* %15, align 4, !dbg !1217\l  br label %189, !dbg !1217\l}"];
	Node0x16ae800 -> Node0x16ae850;
	Node0x16ae850 [shape=record,label="{%189:\l\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13, !dbg !1217\l  %190 = load i32, i32* %15, align 4\l  switch i32 %190, label %195 [\l    i32 0, label %191\l    i32 7, label %194\l  ]\l|{<s0>def|<s1>0|<s2>7}}"];
	Node0x16ae850:s0 -> Node0x16ae990;
	Node0x16ae850:s1 -> Node0x16ae8a0;
	Node0x16ae850:s2 -> Node0x16ae940;
	Node0x16ae8a0 [shape=record,label="{%191:\l\l  br label %138, !dbg !1178, !llvm.loop !1218\l}"];
	Node0x16ae8a0 -> Node0x16ae3f0;
	Node0x16ae8f0 [shape=record,label="{%192:\l\l  %193 = load i32, i32* %10, align 4, !dbg !1219, !tbaa !1048\l  store i32 %193, i32* %4, align 4, !dbg !1220\l  store i32 1, i32* %15, align 4\l  br label %195, !dbg !1220\l}"];
	Node0x16ae8f0 -> Node0x16ae990;
	Node0x16ae940 [shape=record,label="{%194:\l\l  store i32 2147483647, i32* %4, align 4, !dbg !1221\l  store i32 1, i32* %15, align 4\l  br label %195, !dbg !1221\l}"];
	Node0x16ae940 -> Node0x16ae990;
	Node0x16ae990 [shape=record,label="{%195:\l\l  %196 = bitcast i32* %10 to i8*, !dbg !1222\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13, !dbg !1222\l  %197 = bitcast i8** %9 to i8*, !dbg !1222\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #13, !dbg !1222\l  %198 = bitcast i8** %8 to i8*, !dbg !1222\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #13, !dbg !1222\l  %199 = load i32, i32* %4, align 4, !dbg !1222\l  ret i32 %199, !dbg !1222\l}"];
}
