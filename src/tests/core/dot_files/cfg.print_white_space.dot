digraph "CFG for 'print_white_space' function" {
	label="CFG for 'print_white_space' function";

	Node0x15bf530 [shape=record,label="{%0:\l  %1 = alloca i32, align 4\l  %2 = alloca i32, align 4\l  %3 = alloca i32, align 4\l  %4 = bitcast i32* %1 to i8*, !dbg !1010\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #13, !dbg !1010\l  call void @llvm.dbg.declare(metadata i32* %1, metadata !1007, metadata\l... !DIExpression()), !dbg !1011\l  %5 = bitcast i32* %2 to i8*, !dbg !1012\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #13, !dbg !1012\l  call void @llvm.dbg.declare(metadata i32* %2, metadata !1008, metadata\l... !DIExpression()), !dbg !1013\l  %6 = load i32, i32* @output_position, align 4, !dbg !1014, !tbaa !1015\l  store i32 %6, i32* %2, align 4, !dbg !1013, !tbaa !1015\l  %7 = bitcast i32* %3 to i8*, !dbg !1019\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #13, !dbg !1019\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !1009, metadata\l... !DIExpression()), !dbg !1020\l  %8 = load i32, i32* %2, align 4, !dbg !1021, !tbaa !1015\l  %9 = load i32, i32* @spaces_not_printed, align 4, !dbg !1022, !tbaa !1015\l  %10 = add nsw i32 %8, %9, !dbg !1023\l  store i32 %10, i32* %3, align 4, !dbg !1020, !tbaa !1015\l  br label %11, !dbg !1024\l}"];
	Node0x15bf530 -> Node0x15bf580;
	Node0x15bf580 [shape=record,label="{%11:\l\l  %12 = load i32, i32* %3, align 4, !dbg !1025, !tbaa !1015\l  %13 = load i32, i32* %2, align 4, !dbg !1026, !tbaa !1015\l  %14 = sub nsw i32 %12, %13, !dbg !1027\l  %15 = icmp sgt i32 %14, 1, !dbg !1028\l  br i1 %15, label %16, label %26, !dbg !1029\l|{<s0>T|<s1>F}}"];
	Node0x15bf580:s0 -> Node0x15bf5d0;
	Node0x15bf580:s1 -> Node0x15bf620;
	Node0x15bf5d0 [shape=record,label="{%16:\l\l  %17 = load i32, i32* %2, align 4, !dbg !1030, !tbaa !1015\l  %18 = load i32, i32* @chars_per_output_tab, align 4, !dbg !1030, !tbaa !1015\l  %19 = load i32, i32* %2, align 4, !dbg !1030, !tbaa !1015\l  %20 = load i32, i32* @chars_per_output_tab, align 4, !dbg !1030, !tbaa !1015\l  %21 = srem i32 %19, %20, !dbg !1030\l  %22 = sub nsw i32 %18, %21, !dbg !1030\l  %23 = add nsw i32 %17, %22, !dbg !1030\l  store i32 %23, i32* %1, align 4, !dbg !1031, !tbaa !1015\l  %24 = load i32, i32* %3, align 4, !dbg !1032, !tbaa !1015\l  %25 = icmp sle i32 %23, %24, !dbg !1033\l  br label %26\l}"];
	Node0x15bf5d0 -> Node0x15bf620;
	Node0x15bf620 [shape=record,label="{%26:\l\l  %27 = phi i1 [ false, %11 ], [ %25, %16 ], !dbg !1034\l  br i1 %27, label %28, label %33, !dbg !1024\l|{<s0>T|<s1>F}}"];
	Node0x15bf620:s0 -> Node0x15bf670;
	Node0x15bf620:s1 -> Node0x15bf6c0;
	Node0x15bf670 [shape=record,label="{%28:\l\l  %29 = load i8, i8* @output_tab_char, align 1, !dbg !1035, !tbaa !1037\l  %30 = sext i8 %29 to i32, !dbg !1035\l  %31 = call i32 @putchar_unlocked(i32 %30), !dbg !1035\l  %32 = load i32, i32* %1, align 4, !dbg !1038, !tbaa !1015\l  store i32 %32, i32* %2, align 4, !dbg !1039, !tbaa !1015\l  br label %11, !dbg !1024, !llvm.loop !1040\l}"];
	Node0x15bf670 -> Node0x15bf580;
	Node0x15bf6c0 [shape=record,label="{%33:\l\l  br label %34, !dbg !1042\l}"];
	Node0x15bf6c0 -> Node0x15bf710;
	Node0x15bf710 [shape=record,label="{%34:\l\l  %35 = load i32, i32* %2, align 4, !dbg !1043, !tbaa !1015\l  %36 = add nsw i32 %35, 1, !dbg !1043\l  store i32 %36, i32* %2, align 4, !dbg !1043, !tbaa !1015\l  %37 = load i32, i32* %3, align 4, !dbg !1044, !tbaa !1015\l  %38 = icmp sle i32 %36, %37, !dbg !1045\l  br i1 %38, label %39, label %41, !dbg !1042\l|{<s0>T|<s1>F}}"];
	Node0x15bf710:s0 -> Node0x15bf760;
	Node0x15bf710:s1 -> Node0x15bf7b0;
	Node0x15bf760 [shape=record,label="{%39:\l\l  %40 = call i32 @putchar_unlocked(i32 32), !dbg !1046\l  br label %34, !dbg !1042, !llvm.loop !1047\l}"];
	Node0x15bf760 -> Node0x15bf710;
	Node0x15bf7b0 [shape=record,label="{%41:\l\l  %42 = load i32, i32* %3, align 4, !dbg !1048, !tbaa !1015\l  store i32 %42, i32* @output_position, align 4, !dbg !1049, !tbaa !1015\l  store i32 0, i32* @spaces_not_printed, align 4, !dbg !1050, !tbaa !1015\l  %43 = bitcast i32* %3 to i8*, !dbg !1051\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %43) #13, !dbg !1051\l  %44 = bitcast i32* %2 to i8*, !dbg !1051\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %44) #13, !dbg !1051\l  %45 = bitcast i32* %1 to i8*, !dbg !1051\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %45) #13, !dbg !1051\l  ret void, !dbg !1051\l}"];
}
