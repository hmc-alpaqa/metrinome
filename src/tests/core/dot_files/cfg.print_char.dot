digraph "CFG for 'print_char' function" {
	label="CFG for 'print_char' function";

	Node0x16809e0 [shape=record,label="{%1:\l  %2 = alloca i8, align 1\l  store i8 %0, i8* %2, align 1, !tbaa !1006\l  call void @llvm.dbg.declare(metadata i8* %2, metadata !1005, metadata\l... !DIExpression()), !dbg !1009\l  %3 = load i8, i8* @tabify_output, align 1, !dbg !1010, !tbaa !1012, !range\l... !1014\l  %4 = trunc i8 %3 to i1, !dbg !1010\l  br i1 %4, label %5, label %41, !dbg !1015\l|{<s0>T|<s1>F}}"];
	Node0x16809e0:s0 -> Node0x1680ae0;
	Node0x16809e0:s1 -> Node0x1680e50;
	Node0x1680ae0 [shape=record,label="{%5:\l\l  %6 = load i8, i8* %2, align 1, !dbg !1016, !tbaa !1006\l  %7 = sext i8 %6 to i32, !dbg !1016\l  %8 = icmp eq i32 %7, 32, !dbg !1019\l  br i1 %8, label %9, label %12, !dbg !1020\l|{<s0>T|<s1>F}}"];
	Node0x1680ae0:s0 -> Node0x1680b30;
	Node0x1680ae0:s1 -> Node0x1680b80;
	Node0x1680b30 [shape=record,label="{%9:\l\l  %10 = load i32, i32* @spaces_not_printed, align 4, !dbg !1021, !tbaa !1023\l  %11 = add nsw i32 %10, 1, !dbg !1021\l  store i32 %11, i32* @spaces_not_printed, align 4, !dbg !1021, !tbaa !1023\l  br label %45, !dbg !1025\l}"];
	Node0x1680b30 -> Node0x1680ea0;
	Node0x1680b80 [shape=record,label="{%12:\l\l  %13 = load i32, i32* @spaces_not_printed, align 4, !dbg !1026, !tbaa !1023\l  %14 = icmp sgt i32 %13, 0, !dbg !1028\l  br i1 %14, label %15, label %16, !dbg !1029\l|{<s0>T|<s1>F}}"];
	Node0x1680b80:s0 -> Node0x1680bd0;
	Node0x1680b80:s1 -> Node0x1680c20;
	Node0x1680bd0 [shape=record,label="{%15:\l\l  call void @print_white_space(), !dbg !1030\l  br label %16, !dbg !1030\l}"];
	Node0x1680bd0 -> Node0x1680c20;
	Node0x1680c20 [shape=record,label="{%16:\l\l  br label %17\l}"];
	Node0x1680c20 -> Node0x1680c70;
	Node0x1680c70 [shape=record,label="{%17:\l\l  %18 = call i16** @__ctype_b_loc() #14, !dbg !1031\l  %19 = load i16*, i16** %18, align 8, !dbg !1031, !tbaa !1033\l  %20 = load i8, i8* %2, align 1, !dbg !1031, !tbaa !1006\l  %21 = call zeroext i8 @to_uchar(i8 signext %20), !dbg !1031\l  %22 = zext i8 %21 to i32, !dbg !1031\l  %23 = sext i32 %22 to i64, !dbg !1031\l  %24 = getelementptr inbounds i16, i16* %19, i64 %23, !dbg !1031\l  %25 = load i16, i16* %24, align 2, !dbg !1031, !tbaa !1035\l  %26 = zext i16 %25 to i32, !dbg !1031\l  %27 = and i32 %26, 16384, !dbg !1031\l  %28 = icmp ne i32 %27, 0, !dbg !1031\l  br i1 %28, label %37, label %29, !dbg !1037\l|{<s0>T|<s1>F}}"];
	Node0x1680c70:s0 -> Node0x1680db0;
	Node0x1680c70:s1 -> Node0x1680cc0;
	Node0x1680cc0 [shape=record,label="{%29:\l\l  %30 = load i8, i8* %2, align 1, !dbg !1038, !tbaa !1006\l  %31 = sext i8 %30 to i32, !dbg !1038\l  %32 = icmp eq i32 %31, 8, !dbg !1041\l  br i1 %32, label %33, label %36, !dbg !1042\l|{<s0>T|<s1>F}}"];
	Node0x1680cc0:s0 -> Node0x1680d10;
	Node0x1680cc0:s1 -> Node0x1680d60;
	Node0x1680d10 [shape=record,label="{%33:\l\l  %34 = load i32, i32* @output_position, align 4, !dbg !1043, !tbaa !1023\l  %35 = add nsw i32 %34, -1, !dbg !1043\l  store i32 %35, i32* @output_position, align 4, !dbg !1043, !tbaa !1023\l  br label %36, !dbg !1043\l}"];
	Node0x1680d10 -> Node0x1680d60;
	Node0x1680d60 [shape=record,label="{%36:\l\l  br label %40, !dbg !1044\l}"];
	Node0x1680d60 -> Node0x1680e00;
	Node0x1680db0 [shape=record,label="{%37:\l\l  %38 = load i32, i32* @output_position, align 4, !dbg !1045, !tbaa !1023\l  %39 = add nsw i32 %38, 1, !dbg !1045\l  store i32 %39, i32* @output_position, align 4, !dbg !1045, !tbaa !1023\l  br label %40\l}"];
	Node0x1680db0 -> Node0x1680e00;
	Node0x1680e00 [shape=record,label="{%40:\l\l  br label %41, !dbg !1046\l}"];
	Node0x1680e00 -> Node0x1680e50;
	Node0x1680e50 [shape=record,label="{%41:\l\l  %42 = load i8, i8* %2, align 1, !dbg !1047, !tbaa !1006\l  %43 = sext i8 %42 to i32, !dbg !1047\l  %44 = call i32 @putchar_unlocked(i32 %43), !dbg !1047\l  br label %45, !dbg !1048\l}"];
	Node0x1680e50 -> Node0x1680ea0;
	Node0x1680ea0 [shape=record,label="{%45:\l\l  ret void, !dbg !1048\l}"];
}
