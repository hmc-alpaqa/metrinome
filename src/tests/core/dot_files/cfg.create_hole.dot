digraph "CFG for 'create_hole' function" {
	label="CFG for 'create_hole' function";

	Node0x2678550 [shape=record,label="{%4:\l  %5 = alloca i1, align 1\l  %6 = alloca i32, align 4\l  %7 = alloca i8*, align 8\l  %8 = alloca i8, align 1\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i32, align 4\l  store i32 %0, i32* %6, align 4, !tbaa !133\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !128, metadata\l... !DIExpression()), !dbg !137\l  store i8* %1, i8** %7, align 8, !tbaa !138\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !129, metadata\l... !DIExpression()), !dbg !140\l  %12 = zext i1 %2 to i8\l  store i8 %12, i8* %8, align 1, !tbaa !141\l  call void @llvm.dbg.declare(metadata i8* %8, metadata !130, metadata\l... !DIExpression()), !dbg !143\l  store i64 %3, i64* %9, align 8, !tbaa !144\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !131, metadata\l... !DIExpression()), !dbg !146\l  %13 = bitcast i64* %10 to i8*, !dbg !147\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #12, !dbg !147\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !132, metadata\l... !DIExpression()), !dbg !148\l  %14 = load i32, i32* %6, align 4, !dbg !149, !tbaa !133\l  %15 = load i64, i64* %9, align 8, !dbg !150, !tbaa !144\l  %16 = call i64 @lseek(i32 %14, i64 %15, i32 1) #12, !dbg !151\l  store i64 %16, i64* %10, align 8, !dbg !148, !tbaa !144\l  %17 = load i64, i64* %10, align 8, !dbg !152, !tbaa !144\l  %18 = icmp slt i64 %17, 0, !dbg !154\l  br i1 %18, label %19, label %24, !dbg !155\l|{<s0>T|<s1>F}}"];
	Node0x2678550:s0 -> Node0x26792a0;
	Node0x2678550:s1 -> Node0x26792f0;
	Node0x26792a0 [shape=record,label="{%19:\l\l  %20 = call i32* @__errno_location() #11, !dbg !156\l  %21 = load i32, i32* %20, align 4, !dbg !156, !tbaa !133\l  %22 = load i8*, i8** %7, align 8, !dbg !158, !tbaa !138\l  %23 = call i8* @quotearg_style(i32 4, i8* %22), !dbg !158\l  call void (i32, i32, i8*, ...) @error(i32 0, i32 %21, i8* getelementptr\l... inbounds ([16 x i8], [16 x i8]* @.str.69, i32 0, i32 0), i8* %23), !dbg !159\l  store i1 false, i1* %5, align 1, !dbg !160\l  store i32 1, i32* %11, align 4\l  br label %41, !dbg !160\l}"];
	Node0x26792a0 -> Node0x2679430;
	Node0x26792f0 [shape=record,label="{%24:\l\l  %25 = load i8, i8* %8, align 1, !dbg !161, !tbaa !141, !range !163\l  %26 = trunc i8 %25 to i1, !dbg !161\l  br i1 %26, label %27, label %40, !dbg !164\l|{<s0>T|<s1>F}}"];
	Node0x26792f0:s0 -> Node0x2679340;
	Node0x26792f0:s1 -> Node0x26793e0;
	Node0x2679340 [shape=record,label="{%27:\l\l  %28 = load i32, i32* %6, align 4, !dbg !165, !tbaa !133\l  %29 = load i64, i64* %10, align 8, !dbg !166, !tbaa !144\l  %30 = load i64, i64* %9, align 8, !dbg !167, !tbaa !144\l  %31 = sub nsw i64 %29, %30, !dbg !168\l  %32 = load i64, i64* %9, align 8, !dbg !169, !tbaa !144\l  %33 = call i32 @punch_hole(i32 %28, i64 %31, i64 %32), !dbg !170\l  %34 = icmp slt i32 %33, 0, !dbg !171\l  br i1 %34, label %35, label %40, !dbg !172\l|{<s0>T|<s1>F}}"];
	Node0x2679340:s0 -> Node0x2679390;
	Node0x2679340:s1 -> Node0x26793e0;
	Node0x2679390 [shape=record,label="{%35:\l\l  %36 = call i32* @__errno_location() #11, !dbg !173\l  %37 = load i32, i32* %36, align 4, !dbg !173, !tbaa !133\l  %38 = load i8*, i8** %7, align 8, !dbg !175, !tbaa !138\l  %39 = call i8* @quotearg_style(i32 4, i8* %38), !dbg !175\l  call void (i32, i32, i8*, ...) @error(i32 0, i32 %37, i8* getelementptr\l... inbounds ([22 x i8], [22 x i8]* @.str.71, i32 0, i32 0), i8* %39), !dbg !176\l  store i1 false, i1* %5, align 1, !dbg !177\l  store i32 1, i32* %11, align 4\l  br label %41, !dbg !177\l}"];
	Node0x2679390 -> Node0x2679430;
	Node0x26793e0 [shape=record,label="{%40:\l\l  store i1 true, i1* %5, align 1, !dbg !178\l  store i32 1, i32* %11, align 4\l  br label %41, !dbg !178\l}"];
	Node0x26793e0 -> Node0x2679430;
	Node0x2679430 [shape=record,label="{%41:\l\l  %42 = bitcast i64* %10 to i8*, !dbg !179\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #12, !dbg !179\l  %43 = load i1, i1* %5, align 1, !dbg !179\l  ret i1 %43, !dbg !179\l}"];
}
