digraph "CFG for 'next_prime' function" {
	label="CFG for 'next_prime' function";

	Node0x24f18f0 [shape=record,label="{%1:\l  %2 = alloca i64, align 8\l  store i64 %0, i64* %2, align 8, !tbaa !692\l  call void @llvm.dbg.declare(metadata i64* %2, metadata !691, metadata\l... !DIExpression()), !dbg !696\l  %3 = load i64, i64* %2, align 8, !dbg !697, !tbaa !692\l  %4 = icmp ult i64 %3, 10, !dbg !699\l  br i1 %4, label %5, label %6, !dbg !700\l|{<s0>T|<s1>F}}"];
	Node0x24f18f0:s0 -> Node0x24f1940;
	Node0x24f18f0:s1 -> Node0x24f1990;
	Node0x24f1940 [shape=record,label="{%5:\l\l  store i64 10, i64* %2, align 8, !dbg !701, !tbaa !692\l  br label %6, !dbg !702\l}"];
	Node0x24f1940 -> Node0x24f1990;
	Node0x24f1990 [shape=record,label="{%6:\l\l  %7 = load i64, i64* %2, align 8, !dbg !703, !tbaa !692\l  %8 = or i64 %7, 1, !dbg !703\l  store i64 %8, i64* %2, align 8, !dbg !703, !tbaa !692\l  br label %9, !dbg !704\l}"];
	Node0x24f1990 -> Node0x24f19e0;
	Node0x24f19e0 [shape=record,label="{%9:\l\l  %10 = load i64, i64* %2, align 8, !dbg !705, !tbaa !692\l  %11 = icmp ne i64 -1, %10, !dbg !706\l  br i1 %11, label %12, label %16, !dbg !707\l|{<s0>T|<s1>F}}"];
	Node0x24f19e0:s0 -> Node0x24f1a30;
	Node0x24f19e0:s1 -> Node0x24f1a80;
	Node0x24f1a30 [shape=record,label="{%12:\l\l  %13 = load i64, i64* %2, align 8, !dbg !708, !tbaa !692\l  %14 = call zeroext i1 @is_prime(i64 %13) #14, !dbg !709\l  %15 = xor i1 %14, true, !dbg !710\l  br label %16\l}"];
	Node0x24f1a30 -> Node0x24f1a80;
	Node0x24f1a80 [shape=record,label="{%16:\l\l  %17 = phi i1 [ false, %9 ], [ %15, %12 ], !dbg !711\l  br i1 %17, label %18, label %21, !dbg !704\l|{<s0>T|<s1>F}}"];
	Node0x24f1a80:s0 -> Node0x24f1ad0;
	Node0x24f1a80:s1 -> Node0x24f1b20;
	Node0x24f1ad0 [shape=record,label="{%18:\l\l  %19 = load i64, i64* %2, align 8, !dbg !712, !tbaa !692\l  %20 = add i64 %19, 2, !dbg !712\l  store i64 %20, i64* %2, align 8, !dbg !712, !tbaa !692\l  br label %9, !dbg !704, !llvm.loop !713\l}"];
	Node0x24f1ad0 -> Node0x24f19e0;
	Node0x24f1b20 [shape=record,label="{%21:\l\l  %22 = load i64, i64* %2, align 8, !dbg !715, !tbaa !692\l  ret i64 %22, !dbg !716\l}"];
}
