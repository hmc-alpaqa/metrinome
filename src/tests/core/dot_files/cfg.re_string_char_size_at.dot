digraph "CFG for 're_string_char_size_at' function" {
	label="CFG for 're_string_char_size_at' function";

	Node0xcaef90 [shape=record,label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca %struct.re_string_t*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store %struct.re_string_t* %0, %struct.re_string_t** %4, align 8, !tbaa !1108\l  call void @llvm.dbg.declare(metadata %struct.re_string_t** %4, metadata\l... !1105, metadata !DIExpression()), !dbg !1112\l  store i64 %1, i64* %5, align 8, !tbaa !1113\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !1106, metadata\l... !DIExpression()), !dbg !1115\l  %8 = bitcast i32* %6 to i8*, !dbg !1116\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #12, !dbg !1116\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !1107, metadata\l... !DIExpression()), !dbg !1117\l  %9 = load %struct.re_string_t*, %struct.re_string_t** %4, align 8, !dbg\l... !1118, !tbaa !1108\l  %10 = getelementptr inbounds %struct.re_string_t, %struct.re_string_t* %9,\l... i32 0, i32 24, !dbg !1120\l  %11 = load i32, i32* %10, align 8, !dbg !1120, !tbaa !1121\l  %12 = icmp eq i32 %11, 1, !dbg !1125\l  br i1 %12, label %13, label %14, !dbg !1126\l|{<s0>T|<s1>F}}"];
	Node0xcaef90:s0 -> Node0xcaf0a0;
	Node0xcaef90:s1 -> Node0xcaf0f0;
	Node0xcaf0a0 [shape=record,label="{%13:\l\l  store i32 1, i32* %3, align 4, !dbg !1127\l  store i32 1, i32* %7, align 4\l  br label %42, !dbg !1127\l}"];
	Node0xcaf0a0 -> Node0xcaf320;
	Node0xcaf0f0 [shape=record,label="{%14:\l\l  store i32 1, i32* %6, align 4, !dbg !1128, !tbaa !1130\l  br label %15, !dbg !1131\l}"];
	Node0xcaf0f0 -> Node0xcaf140;
	Node0xcaf140 [shape=record,label="{%15:\l\l  %16 = load i64, i64* %5, align 8, !dbg !1132, !tbaa !1113\l  %17 = load i32, i32* %6, align 4, !dbg !1134, !tbaa !1130\l  %18 = sext i32 %17 to i64, !dbg !1134\l  %19 = add nsw i64 %16, %18, !dbg !1135\l  %20 = load %struct.re_string_t*, %struct.re_string_t** %4, align 8, !dbg\l... !1136, !tbaa !1108\l  %21 = getelementptr inbounds %struct.re_string_t, %struct.re_string_t* %20,\l... i32 0, i32 6, !dbg !1137\l  %22 = load i64, i64* %21, align 8, !dbg !1137, !tbaa !1138\l  %23 = icmp slt i64 %19, %22, !dbg !1139\l  br i1 %23, label %24, label %40, !dbg !1140\l|{<s0>T|<s1>F}}"];
	Node0xcaf140:s0 -> Node0xcaf190;
	Node0xcaf140:s1 -> Node0xcaf2d0;
	Node0xcaf190 [shape=record,label="{%24:\l\l  %25 = load %struct.re_string_t*, %struct.re_string_t** %4, align 8, !dbg\l... !1141, !tbaa !1108\l  %26 = getelementptr inbounds %struct.re_string_t, %struct.re_string_t* %25,\l... i32 0, i32 2, !dbg !1143\l  %27 = load i32*, i32** %26, align 8, !dbg !1143, !tbaa !1144\l  %28 = load i64, i64* %5, align 8, !dbg !1145, !tbaa !1113\l  %29 = load i32, i32* %6, align 4, !dbg !1146, !tbaa !1130\l  %30 = sext i32 %29 to i64, !dbg !1146\l  %31 = add nsw i64 %28, %30, !dbg !1147\l  %32 = getelementptr inbounds i32, i32* %27, i64 %31, !dbg !1141\l  %33 = load i32, i32* %32, align 4, !dbg !1141, !tbaa !1130\l  %34 = icmp ne i32 %33, -1, !dbg !1148\l  br i1 %34, label %35, label %36, !dbg !1149\l|{<s0>T|<s1>F}}"];
	Node0xcaf190:s0 -> Node0xcaf1e0;
	Node0xcaf190:s1 -> Node0xcaf230;
	Node0xcaf1e0 [shape=record,label="{%35:\l\l  br label %40, !dbg !1150\l}"];
	Node0xcaf1e0 -> Node0xcaf2d0;
	Node0xcaf230 [shape=record,label="{%36:\l\l  br label %37, !dbg !1151\l}"];
	Node0xcaf230 -> Node0xcaf280;
	Node0xcaf280 [shape=record,label="{%37:\l\l  %38 = load i32, i32* %6, align 4, !dbg !1152, !tbaa !1130\l  %39 = add nsw i32 %38, 1, !dbg !1152\l  store i32 %39, i32* %6, align 4, !dbg !1152, !tbaa !1130\l  br label %15, !dbg !1153, !llvm.loop !1154\l}"];
	Node0xcaf280 -> Node0xcaf140;
	Node0xcaf2d0 [shape=record,label="{%40:\l\l  %41 = load i32, i32* %6, align 4, !dbg !1156, !tbaa !1130\l  store i32 %41, i32* %3, align 4, !dbg !1157\l  store i32 1, i32* %7, align 4\l  br label %42, !dbg !1157\l}"];
	Node0xcaf2d0 -> Node0xcaf320;
	Node0xcaf320 [shape=record,label="{%42:\l\l  %43 = bitcast i32* %6 to i8*, !dbg !1158\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %43) #12, !dbg !1158\l  %44 = load i32, i32* %3, align 4, !dbg !1158\l  ret i32 %44, !dbg !1158\l}"];
}
