digraph "CFG for 'indent' function" {
	label="CFG for 'indent' function";

	Node0x23ecef0 [shape=record,label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  store i64 %0, i64* %3, align 8, !tbaa !1399\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !1397, metadata\l... !DIExpression()), !dbg !1403\l  store i64 %1, i64* %4, align 8, !tbaa !1399\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !1398, metadata\l... !DIExpression()), !dbg !1404\l  br label %5, !dbg !1405\l}"];
	Node0x23ecef0 -> Node0x23ecf40;
	Node0x23ecf40 [shape=record,label="{%5:\l\l  %6 = load i64, i64* %3, align 8, !dbg !1406, !tbaa !1399\l  %7 = load i64, i64* %4, align 8, !dbg !1407, !tbaa !1399\l  %8 = icmp ult i64 %6, %7, !dbg !1408\l  br i1 %8, label %9, label %35, !dbg !1405\l|{<s0>T|<s1>F}}"];
	Node0x23ecf40:s0 -> Node0x23ecf90;
	Node0x23ecf40:s1 -> Node0x23ed120;
	Node0x23ecf90 [shape=record,label="{%9:\l\l  %10 = load i64, i64* @tabsize, align 8, !dbg !1409, !tbaa !1399\l  %11 = icmp ne i64 %10, 0, !dbg !1412\l  br i1 %11, label %12, label %30, !dbg !1413\l|{<s0>T|<s1>F}}"];
	Node0x23ecf90:s0 -> Node0x23ecfe0;
	Node0x23ecf90:s1 -> Node0x23ed080;
	Node0x23ecfe0 [shape=record,label="{%12:\l\l  %13 = load i64, i64* %4, align 8, !dbg !1414, !tbaa !1399\l  %14 = load i64, i64* @tabsize, align 8, !dbg !1415, !tbaa !1399\l  %15 = udiv i64 %13, %14, !dbg !1416\l  %16 = load i64, i64* %3, align 8, !dbg !1417, !tbaa !1399\l  %17 = add i64 %16, 1, !dbg !1418\l  %18 = load i64, i64* @tabsize, align 8, !dbg !1419, !tbaa !1399\l  %19 = udiv i64 %17, %18, !dbg !1420\l  %20 = icmp ugt i64 %15, %19, !dbg !1421\l  br i1 %20, label %21, label %30, !dbg !1422\l|{<s0>T|<s1>F}}"];
	Node0x23ecfe0:s0 -> Node0x23ed030;
	Node0x23ecfe0:s1 -> Node0x23ed080;
	Node0x23ed030 [shape=record,label="{%21:\l\l  %22 = call i32 @putchar_unlocked(i32 9), !dbg !1423\l  %23 = load i64, i64* @tabsize, align 8, !dbg !1425, !tbaa !1399\l  %24 = load i64, i64* %3, align 8, !dbg !1426, !tbaa !1399\l  %25 = load i64, i64* @tabsize, align 8, !dbg !1427, !tbaa !1399\l  %26 = urem i64 %24, %25, !dbg !1428\l  %27 = sub i64 %23, %26, !dbg !1429\l  %28 = load i64, i64* %3, align 8, !dbg !1430, !tbaa !1399\l  %29 = add i64 %28, %27, !dbg !1430\l  store i64 %29, i64* %3, align 8, !dbg !1430, !tbaa !1399\l  br label %34, !dbg !1431\l}"];
	Node0x23ed030 -> Node0x23ed0d0;
	Node0x23ed080 [shape=record,label="{%30:\l\l  %31 = call i32 @putchar_unlocked(i32 32), !dbg !1432\l  %32 = load i64, i64* %3, align 8, !dbg !1434, !tbaa !1399\l  %33 = add i64 %32, 1, !dbg !1434\l  store i64 %33, i64* %3, align 8, !dbg !1434, !tbaa !1399\l  br label %34\l}"];
	Node0x23ed080 -> Node0x23ed0d0;
	Node0x23ed0d0 [shape=record,label="{%34:\l\l  br label %5, !dbg !1405, !llvm.loop !1435\l}"];
	Node0x23ed0d0 -> Node0x23ecf40;
	Node0x23ed120 [shape=record,label="{%35:\l\l  ret void, !dbg !1437\l}"];
}
