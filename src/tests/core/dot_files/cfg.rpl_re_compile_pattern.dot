digraph "CFG for 'rpl_re_compile_pattern' function" {
	label="CFG for 'rpl_re_compile_pattern' function";

	Node0xa8f080 [shape=record,label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca %struct.re_pattern_buffer*, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  store i8* %0, i8** %5, align 8, !tbaa !1064\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !1060, metadata\l... !DIExpression()), !dbg !1068\l  store i64 %1, i64* %6, align 8, !tbaa !1069\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1061, metadata\l... !DIExpression()), !dbg !1071\l  store %struct.re_pattern_buffer* %2, %struct.re_pattern_buffer** %7, align\l... 8, !tbaa !1064\l  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %7,\l... metadata !1062, metadata !DIExpression()), !dbg !1072\l  %10 = bitcast i32* %8 to i8*, !dbg !1073\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #12, !dbg !1073\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !1063, metadata\l... !DIExpression()), !dbg !1074\l  %11 = load i64, i64* @rpl_re_syntax_options, align 8, !dbg !1075, !tbaa !1069\l  %12 = and i64 %11, 33554432, !dbg !1076\l  %13 = icmp ne i64 %12, 0, !dbg !1077\l  %14 = xor i1 %13, true, !dbg !1077\l  %15 = xor i1 %14, true, !dbg !1078\l  %16 = zext i1 %15 to i32, !dbg !1078\l  %17 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %7, align\l... 8, !dbg !1079, !tbaa !1064\l  %18 = getelementptr inbounds %struct.re_pattern_buffer,\l... %struct.re_pattern_buffer* %17, i32 0, i32 7, !dbg !1080\l  %19 = trunc i32 %16 to i8, !dbg !1081\l  %20 = load i8, i8* %18, align 8, !dbg !1081\l  %21 = and i8 %19, 1, !dbg !1081\l  %22 = shl i8 %21, 4, !dbg !1081\l  %23 = and i8 %20, -17, !dbg !1081\l  %24 = or i8 %23, %22, !dbg !1081\l  store i8 %24, i8* %18, align 8, !dbg !1081\l  %25 = zext i8 %21 to i32, !dbg !1081\l  %26 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %7, align\l... 8, !dbg !1082, !tbaa !1064\l  %27 = getelementptr inbounds %struct.re_pattern_buffer,\l... %struct.re_pattern_buffer* %26, i32 0, i32 7, !dbg !1083\l  %28 = load i8, i8* %27, align 8, !dbg !1084\l  %29 = and i8 %28, 127, !dbg !1084\l  %30 = or i8 %29, -128, !dbg !1084\l  store i8 %30, i8* %27, align 8, !dbg !1084\l  %31 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %7, align\l... 8, !dbg !1085, !tbaa !1064\l  %32 = load i8*, i8** %5, align 8, !dbg !1086, !tbaa !1064\l  %33 = load i64, i64* %6, align 8, !dbg !1087, !tbaa !1069\l  %34 = load i64, i64* @rpl_re_syntax_options, align 8, !dbg !1088, !tbaa !1069\l  %35 = call i32 @re_compile_internal(%struct.re_pattern_buffer* %31, i8* %32,\l... i64 %33, i64 %34), !dbg !1089\l  store i32 %35, i32* %8, align 4, !dbg !1090, !tbaa !1091\l  %36 = load i32, i32* %8, align 4, !dbg !1092, !tbaa !1091\l  %37 = icmp ne i32 %36, 0, !dbg !1092\l  br i1 %37, label %39, label %38, !dbg !1094\l|{<s0>T|<s1>F}}"];
	Node0xa8f080:s0 -> Node0xa94290;
	Node0xa8f080:s1 -> Node0xa90bf0;
	Node0xa90bf0 [shape=record,label="{%38:\l\l  store i8* null, i8** %4, align 8, !dbg !1095\l  store i32 1, i32* %9, align 4\l  br label %45, !dbg !1095\l}"];
	Node0xa90bf0 -> Node0xa942e0;
	Node0xa94290 [shape=record,label="{%39:\l\l  %40 = load i32, i32* %8, align 4, !dbg !1096, !tbaa !1091\l  %41 = sext i32 %40 to i64, !dbg !1096\l  %42 = getelementptr inbounds [17 x i64], [17 x i64]* @__re_error_msgid_idx,\l... i64 0, i64 %41, !dbg !1096\l  %43 = load i64, i64* %42, align 8, !dbg !1096, !tbaa !1069\l  %44 = getelementptr inbounds i8, i8* getelementptr inbounds ([382 x i8],\l... [382 x i8]* @__re_error_msgid, i32 0, i32 0), i64 %43, !dbg !1096\l  store i8* %44, i8** %4, align 8, !dbg !1097\l  store i32 1, i32* %9, align 4\l  br label %45, !dbg !1097\l}"];
	Node0xa94290 -> Node0xa942e0;
	Node0xa942e0 [shape=record,label="{%45:\l\l  %46 = bitcast i32* %8 to i8*, !dbg !1098\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %46) #12, !dbg !1098\l  %47 = load i8*, i8** %4, align 8, !dbg !1098\l  ret i8* %47, !dbg !1098\l}"];
}
