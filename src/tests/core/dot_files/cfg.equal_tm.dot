digraph "CFG for 'equal_tm' function" {
	label="CFG for 'equal_tm' function";

	Node0x22c5280 [shape=record,label="{%2:\l  %3 = alloca %struct.tm*, align 8\l  %4 = alloca %struct.tm*, align 8\l  store %struct.tm* %0, %struct.tm** %3, align 8, !tbaa !705\l  call void @llvm.dbg.declare(metadata %struct.tm** %3, metadata !703,\l... metadata !DIExpression()), !dbg !709\l  store %struct.tm* %1, %struct.tm** %4, align 8, !tbaa !705\l  call void @llvm.dbg.declare(metadata %struct.tm** %4, metadata !704,\l... metadata !DIExpression()), !dbg !710\l  %5 = load %struct.tm*, %struct.tm** %3, align 8, !dbg !711, !tbaa !705\l  %6 = getelementptr inbounds %struct.tm, %struct.tm* %5, i32 0, i32 0, !dbg\l... !712\l  %7 = load i32, i32* %6, align 8, !dbg !712, !tbaa !713\l  %8 = load %struct.tm*, %struct.tm** %4, align 8, !dbg !717, !tbaa !705\l  %9 = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 0, !dbg\l... !718\l  %10 = load i32, i32* %9, align 8, !dbg !718, !tbaa !713\l  %11 = xor i32 %7, %10, !dbg !719\l  %12 = load %struct.tm*, %struct.tm** %3, align 8, !dbg !720, !tbaa !705\l  %13 = getelementptr inbounds %struct.tm, %struct.tm* %12, i32 0, i32 1, !dbg\l... !721\l  %14 = load i32, i32* %13, align 4, !dbg !721, !tbaa !722\l  %15 = load %struct.tm*, %struct.tm** %4, align 8, !dbg !723, !tbaa !705\l  %16 = getelementptr inbounds %struct.tm, %struct.tm* %15, i32 0, i32 1, !dbg\l... !724\l  %17 = load i32, i32* %16, align 4, !dbg !724, !tbaa !722\l  %18 = xor i32 %14, %17, !dbg !725\l  %19 = or i32 %11, %18, !dbg !726\l  %20 = load %struct.tm*, %struct.tm** %3, align 8, !dbg !727, !tbaa !705\l  %21 = getelementptr inbounds %struct.tm, %struct.tm* %20, i32 0, i32 2, !dbg\l... !728\l  %22 = load i32, i32* %21, align 8, !dbg !728, !tbaa !729\l  %23 = load %struct.tm*, %struct.tm** %4, align 8, !dbg !730, !tbaa !705\l  %24 = getelementptr inbounds %struct.tm, %struct.tm* %23, i32 0, i32 2, !dbg\l... !731\l  %25 = load i32, i32* %24, align 8, !dbg !731, !tbaa !729\l  %26 = xor i32 %22, %25, !dbg !732\l  %27 = or i32 %19, %26, !dbg !733\l  %28 = load %struct.tm*, %struct.tm** %3, align 8, !dbg !734, !tbaa !705\l  %29 = getelementptr inbounds %struct.tm, %struct.tm* %28, i32 0, i32 3, !dbg\l... !735\l  %30 = load i32, i32* %29, align 4, !dbg !735, !tbaa !736\l  %31 = load %struct.tm*, %struct.tm** %4, align 8, !dbg !737, !tbaa !705\l  %32 = getelementptr inbounds %struct.tm, %struct.tm* %31, i32 0, i32 3, !dbg\l... !738\l  %33 = load i32, i32* %32, align 4, !dbg !738, !tbaa !736\l  %34 = xor i32 %30, %33, !dbg !739\l  %35 = or i32 %27, %34, !dbg !740\l  %36 = load %struct.tm*, %struct.tm** %3, align 8, !dbg !741, !tbaa !705\l  %37 = getelementptr inbounds %struct.tm, %struct.tm* %36, i32 0, i32 4, !dbg\l... !742\l  %38 = load i32, i32* %37, align 8, !dbg !742, !tbaa !743\l  %39 = load %struct.tm*, %struct.tm** %4, align 8, !dbg !744, !tbaa !705\l  %40 = getelementptr inbounds %struct.tm, %struct.tm* %39, i32 0, i32 4, !dbg\l... !745\l  %41 = load i32, i32* %40, align 8, !dbg !745, !tbaa !743\l  %42 = xor i32 %38, %41, !dbg !746\l  %43 = or i32 %35, %42, !dbg !747\l  %44 = load %struct.tm*, %struct.tm** %3, align 8, !dbg !748, !tbaa !705\l  %45 = getelementptr inbounds %struct.tm, %struct.tm* %44, i32 0, i32 5, !dbg\l... !749\l  %46 = load i32, i32* %45, align 4, !dbg !749, !tbaa !750\l  %47 = load %struct.tm*, %struct.tm** %4, align 8, !dbg !751, !tbaa !705\l  %48 = getelementptr inbounds %struct.tm, %struct.tm* %47, i32 0, i32 5, !dbg\l... !752\l  %49 = load i32, i32* %48, align 4, !dbg !752, !tbaa !750\l  %50 = xor i32 %46, %49, !dbg !753\l  %51 = or i32 %43, %50, !dbg !754\l  %52 = load %struct.tm*, %struct.tm** %3, align 8, !dbg !755, !tbaa !705\l  %53 = getelementptr inbounds %struct.tm, %struct.tm* %52, i32 0, i32 8, !dbg\l... !756\l  %54 = load i32, i32* %53, align 8, !dbg !756, !tbaa !757\l  %55 = load %struct.tm*, %struct.tm** %4, align 8, !dbg !758, !tbaa !705\l  %56 = getelementptr inbounds %struct.tm, %struct.tm* %55, i32 0, i32 8, !dbg\l... !759\l  %57 = load i32, i32* %56, align 8, !dbg !759, !tbaa !757\l  %58 = call zeroext i1 @isdst_differ(i32 %54, i32 %57), !dbg !760\l  %59 = zext i1 %58 to i32, !dbg !760\l  %60 = or i32 %51, %59, !dbg !761\l  %61 = icmp ne i32 %60, 0, !dbg !762\l  %62 = xor i1 %61, true, !dbg !762\l  %63 = zext i1 %62 to i32, !dbg !762\l  ret i32 %63, !dbg !763\l}"];
}
