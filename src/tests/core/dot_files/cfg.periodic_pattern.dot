digraph "CFG for 'periodic_pattern' function" {
	label="CFG for 'periodic_pattern' function";

	Node0x131e360 [shape=record,label="{%1:\l  %2 = alloca i1, align 1\l  %3 = alloca i32, align 4\l  %4 = alloca [3 x i8], align 1\l  %5 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4, !tbaa !810\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !806, metadata\l... !DIExpression()), !dbg !814\l  %6 = load i32, i32* %3, align 4, !dbg !815, !tbaa !810\l  %7 = icmp sle i32 %6, 0, !dbg !817\l  br i1 %7, label %8, label %9, !dbg !818\l|{<s0>T|<s1>F}}"];
	Node0x131e360:s0 -> Node0x131e420;
	Node0x131e360:s1 -> Node0x131e470;
	Node0x131e420 [shape=record,label="{%8:\l\l  store i1 false, i1* %2, align 1, !dbg !819\l  br label %51, !dbg !819\l}"];
	Node0x131e420 -> Node0x131e560;
	Node0x131e470 [shape=record,label="{%9:\l\l  %10 = bitcast [3 x i8]* %4 to i8*, !dbg !820\l  call void @llvm.lifetime.start.p0i8(i64 3, i8* %10) #12, !dbg !820\l  call void @llvm.dbg.declare(metadata [3 x i8]* %4, metadata !807, metadata\l... !DIExpression()), !dbg !821\l  %11 = bitcast i32* %5 to i8*, !dbg !822\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #12, !dbg !822\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !809, metadata\l... !DIExpression()), !dbg !823\l  %12 = load i32, i32* %3, align 4, !dbg !824, !tbaa !810\l  %13 = and i32 %12, 4095, !dbg !825\l  store i32 %13, i32* %5, align 4, !dbg !823, !tbaa !810\l  %14 = load i32, i32* %5, align 4, !dbg !826, !tbaa !810\l  %15 = shl i32 %14, 12, !dbg !827\l  %16 = load i32, i32* %5, align 4, !dbg !828, !tbaa !810\l  %17 = or i32 %16, %15, !dbg !828\l  store i32 %17, i32* %5, align 4, !dbg !828, !tbaa !810\l  %18 = load i32, i32* %5, align 4, !dbg !829, !tbaa !810\l  %19 = lshr i32 %18, 4, !dbg !830\l  %20 = and i32 %19, 255, !dbg !831\l  %21 = trunc i32 %20 to i8, !dbg !832\l  %22 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0, !dbg !833\l  store i8 %21, i8* %22, align 1, !dbg !834, !tbaa !835\l  %23 = load i32, i32* %5, align 4, !dbg !836, !tbaa !810\l  %24 = lshr i32 %23, 8, !dbg !837\l  %25 = and i32 %24, 255, !dbg !838\l  %26 = trunc i32 %25 to i8, !dbg !839\l  %27 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 1, !dbg !840\l  store i8 %26, i8* %27, align 1, !dbg !841, !tbaa !835\l  %28 = load i32, i32* %5, align 4, !dbg !842, !tbaa !810\l  %29 = and i32 %28, 255, !dbg !843\l  %30 = trunc i32 %29 to i8, !dbg !842\l  %31 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 2, !dbg !844\l  store i8 %30, i8* %31, align 1, !dbg !845, !tbaa !835\l  %32 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0, !dbg !846\l  %33 = load i8, i8* %32, align 1, !dbg !846, !tbaa !835\l  %34 = zext i8 %33 to i32, !dbg !846\l  %35 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 1, !dbg !847\l  %36 = load i8, i8* %35, align 1, !dbg !847, !tbaa !835\l  %37 = zext i8 %36 to i32, !dbg !847\l  %38 = icmp ne i32 %34, %37, !dbg !848\l  br i1 %38, label %47, label %39, !dbg !849\l|{<s0>T|<s1>F}}"];
	Node0x131e470:s0 -> Node0x131e510;
	Node0x131e470:s1 -> Node0x131e4c0;
	Node0x131e4c0 [shape=record,label="{%39:\l\l  %40 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0, !dbg !850\l  %41 = load i8, i8* %40, align 1, !dbg !850, !tbaa !835\l  %42 = zext i8 %41 to i32, !dbg !850\l  %43 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 2, !dbg !851\l  %44 = load i8, i8* %43, align 1, !dbg !851, !tbaa !835\l  %45 = zext i8 %44 to i32, !dbg !851\l  %46 = icmp ne i32 %42, %45, !dbg !852\l  br label %47, !dbg !849\l}"];
	Node0x131e4c0 -> Node0x131e510;
	Node0x131e510 [shape=record,label="{%47:\l\l  %48 = phi i1 [ true, %9 ], [ %46, %39 ]\l  store i1 %48, i1* %2, align 1, !dbg !853\l  %49 = bitcast i32* %5 to i8*, !dbg !854\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %49) #12, !dbg !854\l  %50 = bitcast [3 x i8]* %4 to i8*, !dbg !854\l  call void @llvm.lifetime.end.p0i8(i64 3, i8* %50) #12, !dbg !854\l  br label %51\l}"];
	Node0x131e510 -> Node0x131e560;
	Node0x131e560 [shape=record,label="{%51:\l\l  %52 = load i1, i1* %2, align 1, !dbg !854\l  ret i1 %52, !dbg !854\l}"];
}
