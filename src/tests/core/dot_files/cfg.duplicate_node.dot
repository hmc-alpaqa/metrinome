digraph "CFG for 'duplicate_node' function" {
	label="CFG for 'duplicate_node' function";

	Node0xb97a50 [shape=record,label="{%3:\l  %4 = alloca %struct.re_dfa_t*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i64, align 8\l  store %struct.re_dfa_t* %0, %struct.re_dfa_t** %4, align 8, !tbaa !1063\l  call void @llvm.dbg.declare(metadata %struct.re_dfa_t** %4, metadata !1059,\l... metadata !DIExpression()), !dbg !1067\l  store i64 %1, i64* %5, align 8, !tbaa !1068\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !1060, metadata\l... !DIExpression()), !dbg !1070\l  store i32 %2, i32* %6, align 4, !tbaa !1071\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !1061, metadata\l... !DIExpression()), !dbg !1073\l  %8 = bitcast i64* %7 to i8*, !dbg !1074\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #12, !dbg !1074\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1062, metadata\l... !DIExpression()), !dbg !1075\l  %9 = load %struct.re_dfa_t*, %struct.re_dfa_t** %4, align 8, !dbg !1076,\l... !tbaa !1063\l  %10 = load %struct.re_dfa_t*, %struct.re_dfa_t** %4, align 8, !dbg !1077,\l... !tbaa !1063\l  %11 = getelementptr inbounds %struct.re_dfa_t, %struct.re_dfa_t* %10, i32 0,\l... i32 0, !dbg !1078\l  %12 = load %struct.re_token_t*, %struct.re_token_t** %11, align 8, !dbg\l... !1078, !tbaa !1079\l  %13 = load i64, i64* %5, align 8, !dbg !1081, !tbaa !1068\l  %14 = getelementptr inbounds %struct.re_token_t, %struct.re_token_t* %12,\l... i64 %13, !dbg !1077\l  %15 = bitcast %struct.re_token_t* %14 to \{ i64*, i64 \}*, !dbg !1082\l  %16 = getelementptr inbounds \{ i64*, i64 \}, \{ i64*, i64 \}* %15, i32 0, i32\l... 0, !dbg !1082\l  %17 = load i64*, i64** %16, align 8, !dbg !1082\l  %18 = getelementptr inbounds \{ i64*, i64 \}, \{ i64*, i64 \}* %15, i32 0, i32\l... 1, !dbg !1082\l  %19 = load i64, i64* %18, align 8, !dbg !1082\l  %20 = call i64 @re_dfa_add_node(%struct.re_dfa_t* %9, i64* %17, i64 %19),\l... !dbg !1082\l  store i64 %20, i64* %7, align 8, !dbg !1075, !tbaa !1068\l  %21 = load i64, i64* %7, align 8, !dbg !1083, !tbaa !1068\l  %22 = icmp ne i64 %21, -1, !dbg !1083\l  %23 = zext i1 %22 to i32, !dbg !1083\l  %24 = sext i32 %23 to i64, !dbg !1083\l  %25 = call i64 @llvm.expect.i64(i64 %24, i64 1), !dbg !1083\l  %26 = icmp ne i64 %25, 0, !dbg !1083\l  br i1 %26, label %27, label %83, !dbg !1085\l|{<s0>T|<s1>F}}"];
	Node0xb97a50:s0 -> Node0xb99930;
	Node0xb97a50:s1 -> Node0xb99980;
	Node0xb99930 [shape=record,label="{%27:\l\l  %28 = load i32, i32* %6, align 4, !dbg !1086, !tbaa !1071\l  %29 = load %struct.re_dfa_t*, %struct.re_dfa_t** %4, align 8, !dbg !1088,\l... !tbaa !1063\l  %30 = getelementptr inbounds %struct.re_dfa_t, %struct.re_dfa_t* %29, i32 0,\l... i32 0, !dbg !1089\l  %31 = load %struct.re_token_t*, %struct.re_token_t** %30, align 8, !dbg\l... !1089, !tbaa !1079\l  %32 = load i64, i64* %7, align 8, !dbg !1090, !tbaa !1068\l  %33 = getelementptr inbounds %struct.re_token_t, %struct.re_token_t* %31,\l... i64 %32, !dbg !1088\l  %34 = getelementptr inbounds %struct.re_token_t, %struct.re_token_t* %33,\l... i32 0, i32 1, !dbg !1091\l  %35 = bitcast i24* %34 to i32*, !dbg !1091\l  %36 = load i32, i32* %35, align 8, !dbg !1092\l  %37 = and i32 %28, 1023, !dbg !1092\l  %38 = shl i32 %37, 8, !dbg !1092\l  %39 = and i32 %36, -261889, !dbg !1092\l  %40 = or i32 %39, %38, !dbg !1092\l  store i32 %40, i32* %35, align 8, !dbg !1092\l  %41 = load %struct.re_dfa_t*, %struct.re_dfa_t** %4, align 8, !dbg !1093,\l... !tbaa !1063\l  %42 = getelementptr inbounds %struct.re_dfa_t, %struct.re_dfa_t* %41, i32 0,\l... i32 0, !dbg !1094\l  %43 = load %struct.re_token_t*, %struct.re_token_t** %42, align 8, !dbg\l... !1094, !tbaa !1079\l  %44 = load i64, i64* %5, align 8, !dbg !1095, !tbaa !1068\l  %45 = getelementptr inbounds %struct.re_token_t, %struct.re_token_t* %43,\l... i64 %44, !dbg !1093\l  %46 = getelementptr inbounds %struct.re_token_t, %struct.re_token_t* %45,\l... i32 0, i32 1, !dbg !1096\l  %47 = bitcast i24* %46 to i32*, !dbg !1096\l  %48 = load i32, i32* %47, align 8, !dbg !1096\l  %49 = lshr i32 %48, 8, !dbg !1096\l  %50 = and i32 %49, 1023, !dbg !1096\l  %51 = load %struct.re_dfa_t*, %struct.re_dfa_t** %4, align 8, !dbg !1097,\l... !tbaa !1063\l  %52 = getelementptr inbounds %struct.re_dfa_t, %struct.re_dfa_t* %51, i32 0,\l... i32 0, !dbg !1098\l  %53 = load %struct.re_token_t*, %struct.re_token_t** %52, align 8, !dbg\l... !1098, !tbaa !1079\l  %54 = load i64, i64* %7, align 8, !dbg !1099, !tbaa !1068\l  %55 = getelementptr inbounds %struct.re_token_t, %struct.re_token_t* %53,\l... i64 %54, !dbg !1097\l  %56 = getelementptr inbounds %struct.re_token_t, %struct.re_token_t* %55,\l... i32 0, i32 1, !dbg !1100\l  %57 = bitcast i24* %56 to i32*, !dbg !1100\l  %58 = load i32, i32* %57, align 8, !dbg !1101\l  %59 = lshr i32 %58, 8, !dbg !1101\l  %60 = and i32 %59, 1023, !dbg !1101\l  %61 = or i32 %60, %50, !dbg !1101\l  %62 = load i32, i32* %57, align 8, !dbg !1101\l  %63 = and i32 %61, 1023, !dbg !1101\l  %64 = shl i32 %63, 8, !dbg !1101\l  %65 = and i32 %62, -261889, !dbg !1101\l  %66 = or i32 %65, %64, !dbg !1101\l  store i32 %66, i32* %57, align 8, !dbg !1101\l  %67 = load %struct.re_dfa_t*, %struct.re_dfa_t** %4, align 8, !dbg !1102,\l... !tbaa !1063\l  %68 = getelementptr inbounds %struct.re_dfa_t, %struct.re_dfa_t* %67, i32 0,\l... i32 0, !dbg !1103\l  %69 = load %struct.re_token_t*, %struct.re_token_t** %68, align 8, !dbg\l... !1103, !tbaa !1079\l  %70 = load i64, i64* %7, align 8, !dbg !1104, !tbaa !1068\l  %71 = getelementptr inbounds %struct.re_token_t, %struct.re_token_t* %69,\l... i64 %70, !dbg !1102\l  %72 = getelementptr inbounds %struct.re_token_t, %struct.re_token_t* %71,\l... i32 0, i32 1, !dbg !1105\l  %73 = bitcast i24* %72 to i32*, !dbg !1105\l  %74 = load i32, i32* %73, align 8, !dbg !1106\l  %75 = and i32 %74, -262145, !dbg !1106\l  %76 = or i32 %75, 262144, !dbg !1106\l  store i32 %76, i32* %73, align 8, !dbg !1106\l  %77 = load i64, i64* %5, align 8, !dbg !1107, !tbaa !1068\l  %78 = load %struct.re_dfa_t*, %struct.re_dfa_t** %4, align 8, !dbg !1108,\l... !tbaa !1063\l  %79 = getelementptr inbounds %struct.re_dfa_t, %struct.re_dfa_t* %78, i32 0,\l... i32 4, !dbg !1109\l  %80 = load i64*, i64** %79, align 8, !dbg !1109, !tbaa !1110\l  %81 = load i64, i64* %7, align 8, !dbg !1111, !tbaa !1068\l  %82 = getelementptr inbounds i64, i64* %80, i64 %81, !dbg !1108\l  store i64 %77, i64* %82, align 8, !dbg !1112, !tbaa !1068\l  br label %83, !dbg !1113\l}"];
	Node0xb99930 -> Node0xb99980;
	Node0xb99980 [shape=record,label="{%83:\l\l  %84 = load i64, i64* %7, align 8, !dbg !1114, !tbaa !1068\l  %85 = bitcast i64* %7 to i8*, !dbg !1115\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #12, !dbg !1115\l  ret i64 %84, !dbg !1116\l}"];
}
