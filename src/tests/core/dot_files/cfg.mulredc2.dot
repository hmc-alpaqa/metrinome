digraph "CFG for 'mulredc2' function" {
	label="CFG for 'mulredc2' function";

	Node0x174b670 [shape=record,label="{%8:\l  %9 = alloca i64*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i64, align 8\l  %18 = alloca i64, align 8\l  %19 = alloca i64, align 8\l  %20 = alloca i64, align 8\l  %21 = alloca i64, align 8\l  %22 = alloca i64, align 8\l  %23 = alloca i64, align 8\l  %24 = alloca i64, align 8\l  %25 = alloca i64, align 8\l  store i64* %0, i64** %9, align 8, !tbaa !750\l  call void @llvm.dbg.declare(metadata i64** %9, metadata !733, metadata\l... !DIExpression()), !dbg !754\l  store i64 %1, i64* %10, align 8, !tbaa !755\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !734, metadata\l... !DIExpression()), !dbg !757\l  store i64 %2, i64* %11, align 8, !tbaa !755\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !735, metadata\l... !DIExpression()), !dbg !758\l  store i64 %3, i64* %12, align 8, !tbaa !755\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !736, metadata\l... !DIExpression()), !dbg !759\l  store i64 %4, i64* %13, align 8, !tbaa !755\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !737, metadata\l... !DIExpression()), !dbg !760\l  store i64 %5, i64* %14, align 8, !tbaa !755\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !738, metadata\l... !DIExpression()), !dbg !761\l  store i64 %6, i64* %15, align 8, !tbaa !755\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !739, metadata\l... !DIExpression()), !dbg !762\l  store i64 %7, i64* %16, align 8, !tbaa !755\l  call void @llvm.dbg.declare(metadata i64* %16, metadata !740, metadata\l... !DIExpression()), !dbg !763\l  %26 = bitcast i64* %17 to i8*, !dbg !764\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #14, !dbg !764\l  call void @llvm.dbg.declare(metadata i64* %17, metadata !741, metadata\l... !DIExpression()), !dbg !765\l  %27 = bitcast i64* %18 to i8*, !dbg !764\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #14, !dbg !764\l  call void @llvm.dbg.declare(metadata i64* %18, metadata !742, metadata\l... !DIExpression()), !dbg !766\l  %28 = bitcast i64* %19 to i8*, !dbg !764\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #14, !dbg !764\l  call void @llvm.dbg.declare(metadata i64* %19, metadata !743, metadata\l... !DIExpression()), !dbg !767\l  %29 = bitcast i64* %20 to i8*, !dbg !764\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #14, !dbg !764\l  call void @llvm.dbg.declare(metadata i64* %20, metadata !744, metadata\l... !DIExpression()), !dbg !768\l  %30 = bitcast i64* %21 to i8*, !dbg !764\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #14, !dbg !764\l  call void @llvm.dbg.declare(metadata i64* %21, metadata !745, metadata\l... !DIExpression()), !dbg !769\l  %31 = bitcast i64* %22 to i8*, !dbg !764\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #14, !dbg !764\l  call void @llvm.dbg.declare(metadata i64* %22, metadata !746, metadata\l... !DIExpression()), !dbg !770\l  %32 = bitcast i64* %23 to i8*, !dbg !764\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #14, !dbg !764\l  call void @llvm.dbg.declare(metadata i64* %23, metadata !747, metadata\l... !DIExpression()), !dbg !771\l  %33 = bitcast i64* %24 to i8*, !dbg !764\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #14, !dbg !764\l  call void @llvm.dbg.declare(metadata i64* %24, metadata !748, metadata\l... !DIExpression()), !dbg !772\l  %34 = bitcast i64* %25 to i8*, !dbg !764\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #14, !dbg !764\l  call void @llvm.dbg.declare(metadata i64* %25, metadata !749, metadata\l... !DIExpression()), !dbg !773\l  %35 = load i64, i64* %16, align 8, !dbg !774, !tbaa !755\l  %36 = sub i64 0, %35, !dbg !775\l  store i64 %36, i64* %16, align 8, !dbg !776, !tbaa !755\l  %37 = load i64, i64* %10, align 8, !dbg !777, !tbaa !755\l  %38 = lshr i64 %37, 63, !dbg !777\l  %39 = icmp eq i64 %38, 0, !dbg !777\l  br i1 %39, label %40, label %41, !dbg !780\l|{<s0>T|<s1>F}}"];
	Node0x174b670:s0 -> Node0x174b890;
	Node0x174b670:s1 -> Node0x174b8e0;
	Node0x174b890 [shape=record,label="{%40:\l\l  br label %42, !dbg !780\l}"];
	Node0x174b890 -> Node0x174b930;
	Node0x174b8e0 [shape=record,label="{%41:\l\l  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]*\l... @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]*\l... @.str.39, i32 0, i32 0), i32 999, i8* getelementptr inbounds ([109 x i8],\l... [109 x i8]* @__PRETTY_FUNCTION__.mulredc2, i32 0, i32 0)) #15, !dbg !777\l  unreachable, !dbg !777\l}"];
	Node0x174b930 [shape=record,label="{%42:\l\l  %43 = load i64, i64* %12, align 8, !dbg !781, !tbaa !755\l  %44 = lshr i64 %43, 63, !dbg !781\l  %45 = icmp eq i64 %44, 0, !dbg !781\l  br i1 %45, label %46, label %47, !dbg !784\l|{<s0>T|<s1>F}}"];
	Node0x174b930:s0 -> Node0x174b980;
	Node0x174b930:s1 -> Node0x174b9d0;
	Node0x174b980 [shape=record,label="{%46:\l\l  br label %48, !dbg !784\l}"];
	Node0x174b980 -> Node0x174ba20;
	Node0x174b9d0 [shape=record,label="{%47:\l\l  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]*\l... @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]*\l... @.str.39, i32 0, i32 0), i32 1000, i8* getelementptr inbounds ([109 x i8],\l... [109 x i8]* @__PRETTY_FUNCTION__.mulredc2, i32 0, i32 0)) #15, !dbg !781\l  unreachable, !dbg !781\l}"];
	Node0x174ba20 [shape=record,label="{%48:\l\l  %49 = load i64, i64* %14, align 8, !dbg !785, !tbaa !755\l  %50 = lshr i64 %49, 63, !dbg !785\l  %51 = icmp eq i64 %50, 0, !dbg !785\l  br i1 %51, label %52, label %53, !dbg !788\l|{<s0>T|<s1>F}}"];
	Node0x174ba20:s0 -> Node0x174ba70;
	Node0x174ba20:s1 -> Node0x174bac0;
	Node0x174ba70 [shape=record,label="{%52:\l\l  br label %54, !dbg !788\l}"];
	Node0x174ba70 -> Node0x174bb10;
	Node0x174bac0 [shape=record,label="{%53:\l\l  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]*\l... @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]*\l... @.str.39, i32 0, i32 0), i32 1001, i8* getelementptr inbounds ([109 x i8],\l... [109 x i8]* @__PRETTY_FUNCTION__.mulredc2, i32 0, i32 0)) #15, !dbg !785\l  unreachable, !dbg !785\l}"];
	Node0x174bb10 [shape=record,label="{%54:\l\l  %55 = load i64, i64* %11, align 8, !dbg !789, !tbaa !755\l  %56 = load i64, i64* %13, align 8, !dbg !789, !tbaa !755\l  %57 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %55, i64 %56) #16, !dbg\l... !789, !srcloc !790\l  %58 = extractvalue \{ i64, i64 \} %57, 0, !dbg !789\l  %59 = extractvalue \{ i64, i64 \} %57, 1, !dbg !789\l  store i64 %58, i64* %23, align 8, !dbg !789, !tbaa !755\l  store i64 %59, i64* %22, align 8, !dbg !789, !tbaa !755\l  %60 = load i64, i64* %11, align 8, !dbg !791, !tbaa !755\l  %61 = load i64, i64* %12, align 8, !dbg !791, !tbaa !755\l  %62 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %60, i64 %61) #16, !dbg\l... !791, !srcloc !792\l  %63 = extractvalue \{ i64, i64 \} %62, 0, !dbg !791\l  %64 = extractvalue \{ i64, i64 \} %62, 1, !dbg !791\l  store i64 %63, i64* %18, align 8, !dbg !791, !tbaa !755\l  store i64 %64, i64* %17, align 8, !dbg !791, !tbaa !755\l  %65 = load i64, i64* %16, align 8, !dbg !793, !tbaa !755\l  %66 = load i64, i64* %23, align 8, !dbg !794, !tbaa !755\l  %67 = mul i64 %65, %66, !dbg !795\l  store i64 %67, i64* %19, align 8, !dbg !796, !tbaa !755\l  %68 = load i64, i64* %19, align 8, !dbg !797, !tbaa !755\l  %69 = load i64, i64* %15, align 8, !dbg !797, !tbaa !755\l  %70 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %68, i64 %69) #16, !dbg\l... !797, !srcloc !798\l  %71 = extractvalue \{ i64, i64 \} %70, 0, !dbg !797\l  %72 = extractvalue \{ i64, i64 \} %70, 1, !dbg !797\l  store i64 %71, i64* %21, align 8, !dbg !797, !tbaa !755\l  store i64 %72, i64* %20, align 8, !dbg !797, !tbaa !755\l  %73 = load i64, i64* %19, align 8, !dbg !799, !tbaa !755\l  %74 = load i64, i64* %14, align 8, !dbg !799, !tbaa !755\l  %75 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %73, i64 %74) #16, !dbg\l... !799, !srcloc !800\l  %76 = extractvalue \{ i64, i64 \} %75, 0, !dbg !799\l  %77 = extractvalue \{ i64, i64 \} %75, 1, !dbg !799\l  store i64 %76, i64* %25, align 8, !dbg !799, !tbaa !755\l  store i64 %77, i64* %24, align 8, !dbg !799, !tbaa !755\l  %78 = load i64, i64* %23, align 8, !dbg !801, !tbaa !755\l  %79 = icmp ne i64 %78, 0, !dbg !802\l  %80 = zext i1 %79 to i32, !dbg !802\l  %81 = sext i32 %80 to i64, !dbg !803\l  %82 = load i64, i64* %18, align 8, !dbg !804, !tbaa !755\l  %83 = add i64 %82, %81, !dbg !804\l  store i64 %83, i64* %18, align 8, !dbg !804, !tbaa !755\l  %84 = load i64, i64* %17, align 8, !dbg !805, !tbaa !755\l  %85 = load i64, i64* %18, align 8, !dbg !805, !tbaa !755\l  %86 = load i64, i64* %20, align 8, !dbg !805, !tbaa !755\l  %87 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %84, i64 0, i64 %85,\l... i64 %86) #16, !dbg !805, !srcloc !806\l  %88 = extractvalue \{ i64, i64 \} %87, 0, !dbg !805\l  %89 = extractvalue \{ i64, i64 \} %87, 1, !dbg !805\l  store i64 %88, i64* %17, align 8, !dbg !805, !tbaa !755\l  store i64 %89, i64* %18, align 8, !dbg !805, !tbaa !755\l  %90 = load i64, i64* %17, align 8, !dbg !807, !tbaa !755\l  %91 = load i64, i64* %18, align 8, !dbg !807, !tbaa !755\l  %92 = load i64, i64* %22, align 8, !dbg !807, !tbaa !755\l  %93 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %90, i64 0, i64 %91,\l... i64 %92) #16, !dbg !807, !srcloc !808\l  %94 = extractvalue \{ i64, i64 \} %93, 0, !dbg !807\l  %95 = extractvalue \{ i64, i64 \} %93, 1, !dbg !807\l  store i64 %94, i64* %17, align 8, !dbg !807, !tbaa !755\l  store i64 %95, i64* %18, align 8, !dbg !807, !tbaa !755\l  %96 = load i64, i64* %17, align 8, !dbg !809, !tbaa !755\l  %97 = load i64, i64* %24, align 8, !dbg !809, !tbaa !755\l  %98 = load i64, i64* %18, align 8, !dbg !809, !tbaa !755\l  %99 = load i64, i64* %25, align 8, !dbg !809, !tbaa !755\l  %100 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %96, i64 %97, i64 %98,\l... i64 %99) #16, !dbg !809, !srcloc !810\l  %101 = extractvalue \{ i64, i64 \} %100, 0, !dbg !809\l  %102 = extractvalue \{ i64, i64 \} %100, 1, !dbg !809\l  store i64 %101, i64* %17, align 8, !dbg !809, !tbaa !755\l  store i64 %102, i64* %18, align 8, !dbg !809, !tbaa !755\l  %103 = load i64, i64* %10, align 8, !dbg !811, !tbaa !755\l  %104 = load i64, i64* %13, align 8, !dbg !811, !tbaa !755\l  %105 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %103, i64 %104) #16, !dbg\l... !811, !srcloc !812\l  %106 = extractvalue \{ i64, i64 \} %105, 0, !dbg !811\l  %107 = extractvalue \{ i64, i64 \} %105, 1, !dbg !811\l  store i64 %106, i64* %23, align 8, !dbg !811, !tbaa !755\l  store i64 %107, i64* %22, align 8, !dbg !811, !tbaa !755\l  %108 = load i64, i64* %10, align 8, !dbg !813, !tbaa !755\l  %109 = load i64, i64* %12, align 8, !dbg !813, !tbaa !755\l  %110 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %108, i64 %109) #16, !dbg\l... !813, !srcloc !814\l  %111 = extractvalue \{ i64, i64 \} %110, 0, !dbg !813\l  %112 = extractvalue \{ i64, i64 \} %110, 1, !dbg !813\l  store i64 %111, i64* %25, align 8, !dbg !813, !tbaa !755\l  store i64 %112, i64* %24, align 8, !dbg !813, !tbaa !755\l  %113 = load i64, i64* %22, align 8, !dbg !815, !tbaa !755\l  %114 = load i64, i64* %23, align 8, !dbg !815, !tbaa !755\l  %115 = load i64, i64* %18, align 8, !dbg !815, !tbaa !755\l  %116 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %113, i64 0, i64 %114,\l... i64 %115) #16, !dbg !815, !srcloc !816\l  %117 = extractvalue \{ i64, i64 \} %116, 0, !dbg !815\l  %118 = extractvalue \{ i64, i64 \} %116, 1, !dbg !815\l  store i64 %117, i64* %22, align 8, !dbg !815, !tbaa !755\l  store i64 %118, i64* %23, align 8, !dbg !815, !tbaa !755\l  %119 = load i64, i64* %16, align 8, !dbg !817, !tbaa !755\l  %120 = load i64, i64* %23, align 8, !dbg !818, !tbaa !755\l  %121 = mul i64 %119, %120, !dbg !819\l  store i64 %121, i64* %19, align 8, !dbg !820, !tbaa !755\l  %122 = load i64, i64* %24, align 8, !dbg !821, !tbaa !755\l  %123 = load i64, i64* %25, align 8, !dbg !821, !tbaa !755\l  %124 = load i64, i64* %17, align 8, !dbg !821, !tbaa !755\l  %125 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %122, i64 0, i64 %123,\l... i64 %124) #16, !dbg !821, !srcloc !822\l  %126 = extractvalue \{ i64, i64 \} %125, 0, !dbg !821\l  %127 = extractvalue \{ i64, i64 \} %125, 1, !dbg !821\l  store i64 %126, i64* %17, align 8, !dbg !821, !tbaa !755\l  store i64 %127, i64* %18, align 8, !dbg !821, !tbaa !755\l  %128 = load i64, i64* %19, align 8, !dbg !823, !tbaa !755\l  %129 = load i64, i64* %15, align 8, !dbg !823, !tbaa !755\l  %130 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %128, i64 %129) #16, !dbg\l... !823, !srcloc !824\l  %131 = extractvalue \{ i64, i64 \} %130, 0, !dbg !823\l  %132 = extractvalue \{ i64, i64 \} %130, 1, !dbg !823\l  store i64 %131, i64* %21, align 8, !dbg !823, !tbaa !755\l  store i64 %132, i64* %20, align 8, !dbg !823, !tbaa !755\l  %133 = load i64, i64* %19, align 8, !dbg !825, !tbaa !755\l  %134 = load i64, i64* %14, align 8, !dbg !825, !tbaa !755\l  %135 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %133, i64 %134) #16, !dbg\l... !825, !srcloc !826\l  %136 = extractvalue \{ i64, i64 \} %135, 0, !dbg !825\l  %137 = extractvalue \{ i64, i64 \} %135, 1, !dbg !825\l  store i64 %136, i64* %25, align 8, !dbg !825, !tbaa !755\l  store i64 %137, i64* %24, align 8, !dbg !825, !tbaa !755\l  %138 = load i64, i64* %23, align 8, !dbg !827, !tbaa !755\l  %139 = icmp ne i64 %138, 0, !dbg !828\l  %140 = zext i1 %139 to i32, !dbg !828\l  %141 = sext i32 %140 to i64, !dbg !829\l  %142 = load i64, i64* %18, align 8, !dbg !830, !tbaa !755\l  %143 = add i64 %142, %141, !dbg !830\l  store i64 %143, i64* %18, align 8, !dbg !830, !tbaa !755\l  %144 = load i64, i64* %17, align 8, !dbg !831, !tbaa !755\l  %145 = load i64, i64* %18, align 8, !dbg !831, !tbaa !755\l  %146 = load i64, i64* %20, align 8, !dbg !831, !tbaa !755\l  %147 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %144, i64 0, i64 %145,\l... i64 %146) #16, !dbg !831, !srcloc !832\l  %148 = extractvalue \{ i64, i64 \} %147, 0, !dbg !831\l  %149 = extractvalue \{ i64, i64 \} %147, 1, !dbg !831\l  store i64 %148, i64* %17, align 8, !dbg !831, !tbaa !755\l  store i64 %149, i64* %18, align 8, !dbg !831, !tbaa !755\l  %150 = load i64, i64* %17, align 8, !dbg !833, !tbaa !755\l  %151 = load i64, i64* %18, align 8, !dbg !833, !tbaa !755\l  %152 = load i64, i64* %22, align 8, !dbg !833, !tbaa !755\l  %153 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %150, i64 0, i64 %151,\l... i64 %152) #16, !dbg !833, !srcloc !834\l  %154 = extractvalue \{ i64, i64 \} %153, 0, !dbg !833\l  %155 = extractvalue \{ i64, i64 \} %153, 1, !dbg !833\l  store i64 %154, i64* %17, align 8, !dbg !833, !tbaa !755\l  store i64 %155, i64* %18, align 8, !dbg !833, !tbaa !755\l  %156 = load i64, i64* %17, align 8, !dbg !835, !tbaa !755\l  %157 = load i64, i64* %24, align 8, !dbg !835, !tbaa !755\l  %158 = load i64, i64* %18, align 8, !dbg !835, !tbaa !755\l  %159 = load i64, i64* %25, align 8, !dbg !835, !tbaa !755\l  %160 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %156, i64 %157, i64\l... %158, i64 %159) #16, !dbg !835, !srcloc !836\l  %161 = extractvalue \{ i64, i64 \} %160, 0, !dbg !835\l  %162 = extractvalue \{ i64, i64 \} %160, 1, !dbg !835\l  store i64 %161, i64* %17, align 8, !dbg !835, !tbaa !755\l  store i64 %162, i64* %18, align 8, !dbg !835, !tbaa !755\l  %163 = load i64, i64* %17, align 8, !dbg !837, !tbaa !755\l  %164 = load i64, i64* %14, align 8, !dbg !837, !tbaa !755\l  %165 = icmp ugt i64 %163, %164, !dbg !837\l  br i1 %165, label %174, label %166, !dbg !837\l|{<s0>T|<s1>F}}"];
	Node0x174bb10:s0 -> Node0x174bc00;
	Node0x174bb10:s1 -> Node0x174bb60;
	Node0x174bb60 [shape=record,label="{%166:\l\l  %167 = load i64, i64* %17, align 8, !dbg !837, !tbaa !755\l  %168 = load i64, i64* %14, align 8, !dbg !837, !tbaa !755\l  %169 = icmp eq i64 %167, %168, !dbg !837\l  br i1 %169, label %170, label %182, !dbg !837\l|{<s0>T|<s1>F}}"];
	Node0x174bb60:s0 -> Node0x174bbb0;
	Node0x174bb60:s1 -> Node0x174bc50;
	Node0x174bbb0 [shape=record,label="{%170:\l\l  %171 = load i64, i64* %18, align 8, !dbg !837, !tbaa !755\l  %172 = load i64, i64* %15, align 8, !dbg !837, !tbaa !755\l  %173 = icmp uge i64 %171, %172, !dbg !837\l  br i1 %173, label %174, label %182, !dbg !839\l|{<s0>T|<s1>F}}"];
	Node0x174bbb0:s0 -> Node0x174bc00;
	Node0x174bbb0:s1 -> Node0x174bc50;
	Node0x174bc00 [shape=record,label="{%174:\l\l  %175 = load i64, i64* %17, align 8, !dbg !840, !tbaa !755\l  %176 = load i64, i64* %14, align 8, !dbg !840, !tbaa !755\l  %177 = load i64, i64* %18, align 8, !dbg !840, !tbaa !755\l  %178 = load i64, i64* %15, align 8, !dbg !840, !tbaa !755\l  %179 = call \{ i64, i64 \} asm \"subq $5,$\{1:q\}\\0A\\09sbbq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %175, i64 %176, i64\l... %177, i64 %178) #16, !dbg !840, !srcloc !841\l  %180 = extractvalue \{ i64, i64 \} %179, 0, !dbg !840\l  %181 = extractvalue \{ i64, i64 \} %179, 1, !dbg !840\l  store i64 %180, i64* %17, align 8, !dbg !840, !tbaa !755\l  store i64 %181, i64* %18, align 8, !dbg !840, !tbaa !755\l  br label %182, !dbg !840\l}"];
	Node0x174bc00 -> Node0x174bc50;
	Node0x174bc50 [shape=record,label="{%182:\l\l  %183 = load i64, i64* %17, align 8, !dbg !842, !tbaa !755\l  %184 = load i64*, i64** %9, align 8, !dbg !843, !tbaa !750\l  store i64 %183, i64* %184, align 8, !dbg !844, !tbaa !755\l  %185 = load i64, i64* %18, align 8, !dbg !845, !tbaa !755\l  %186 = bitcast i64* %25 to i8*, !dbg !846\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %186) #14, !dbg !846\l  %187 = bitcast i64* %24 to i8*, !dbg !846\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %187) #14, !dbg !846\l  %188 = bitcast i64* %23 to i8*, !dbg !846\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %188) #14, !dbg !846\l  %189 = bitcast i64* %22 to i8*, !dbg !846\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %189) #14, !dbg !846\l  %190 = bitcast i64* %21 to i8*, !dbg !846\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #14, !dbg !846\l  %191 = bitcast i64* %20 to i8*, !dbg !846\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %191) #14, !dbg !846\l  %192 = bitcast i64* %19 to i8*, !dbg !846\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #14, !dbg !846\l  %193 = bitcast i64* %18 to i8*, !dbg !846\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #14, !dbg !846\l  %194 = bitcast i64* %17 to i8*, !dbg !846\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %194) #14, !dbg !846\l  ret i64 %185, !dbg !847\l}"];
}
