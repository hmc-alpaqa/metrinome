digraph "CFG for 're_search_2_stub' function" {
	label="CFG for 're_search_2_stub' function";

	Node0x105b200 [shape=record,label="{%10:\l  %11 = alloca i64, align 8\l  %12 = alloca %struct.re_pattern_buffer*, align 8\l  %13 = alloca i8*, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i8*, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i64, align 8\l  %18 = alloca i64, align 8\l  %19 = alloca %struct.re_registers*, align 8\l  %20 = alloca i64, align 8\l  %21 = alloca i8, align 1\l  %22 = alloca i8*, align 8\l  %23 = alloca i64, align 8\l  %24 = alloca i64, align 8\l  %25 = alloca i8*, align 8\l  %26 = alloca i32, align 4\l  store %struct.re_pattern_buffer* %0, %struct.re_pattern_buffer** %12, align\l... 8, !tbaa !1080\l  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %12,\l... metadata !1066, metadata !DIExpression()), !dbg !1084\l  store i8* %1, i8** %13, align 8, !tbaa !1080\l  call void @llvm.dbg.declare(metadata i8** %13, metadata !1067, metadata\l... !DIExpression()), !dbg !1085\l  store i64 %2, i64* %14, align 8, !tbaa !1086\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !1068, metadata\l... !DIExpression()), !dbg !1088\l  store i8* %3, i8** %15, align 8, !tbaa !1080\l  call void @llvm.dbg.declare(metadata i8** %15, metadata !1069, metadata\l... !DIExpression()), !dbg !1089\l  store i64 %4, i64* %16, align 8, !tbaa !1086\l  call void @llvm.dbg.declare(metadata i64* %16, metadata !1070, metadata\l... !DIExpression()), !dbg !1090\l  store i64 %5, i64* %17, align 8, !tbaa !1086\l  call void @llvm.dbg.declare(metadata i64* %17, metadata !1071, metadata\l... !DIExpression()), !dbg !1091\l  store i64 %6, i64* %18, align 8, !tbaa !1086\l  call void @llvm.dbg.declare(metadata i64* %18, metadata !1072, metadata\l... !DIExpression()), !dbg !1092\l  store %struct.re_registers* %7, %struct.re_registers** %19, align 8, !tbaa\l... !1080\l  call void @llvm.dbg.declare(metadata %struct.re_registers** %19, metadata\l... !1073, metadata !DIExpression()), !dbg !1093\l  store i64 %8, i64* %20, align 8, !tbaa !1086\l  call void @llvm.dbg.declare(metadata i64* %20, metadata !1074, metadata\l... !DIExpression()), !dbg !1094\l  %27 = zext i1 %9 to i8\l  store i8 %27, i8* %21, align 1, !tbaa !1095\l  call void @llvm.dbg.declare(metadata i8* %21, metadata !1075, metadata\l... !DIExpression()), !dbg !1097\l  %28 = bitcast i8** %22 to i8*, !dbg !1098\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #12, !dbg !1098\l  call void @llvm.dbg.declare(metadata i8** %22, metadata !1076, metadata\l... !DIExpression()), !dbg !1099\l  %29 = bitcast i64* %23 to i8*, !dbg !1100\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #12, !dbg !1100\l  call void @llvm.dbg.declare(metadata i64* %23, metadata !1077, metadata\l... !DIExpression()), !dbg !1101\l  %30 = bitcast i64* %24 to i8*, !dbg !1102\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #12, !dbg !1102\l  call void @llvm.dbg.declare(metadata i64* %24, metadata !1078, metadata\l... !DIExpression()), !dbg !1103\l  %31 = bitcast i8** %25 to i8*, !dbg !1104\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #12, !dbg !1104\l  call void @llvm.dbg.declare(metadata i8** %25, metadata !1079, metadata\l... !DIExpression()), !dbg !1105\l  store i8* null, i8** %25, align 8, !dbg !1105, !tbaa !1080\l  %32 = load i64, i64* %14, align 8, !dbg !1106, !tbaa !1086\l  %33 = icmp slt i64 %32, 0, !dbg !1106\l  br i1 %33, label %46, label %34, !dbg !1106\l|{<s0>T|<s1>F}}"];
	Node0x105b200:s0 -> Node0x105d2c0;
	Node0x105b200:s1 -> Node0x105d1d0;
	Node0x105d1d0 [shape=record,label="{%34:\l\l  %35 = load i64, i64* %16, align 8, !dbg !1106, !tbaa !1086\l  %36 = icmp slt i64 %35, 0, !dbg !1106\l  br i1 %36, label %46, label %37, !dbg !1106\l|{<s0>T|<s1>F}}"];
	Node0x105d1d0:s0 -> Node0x105d2c0;
	Node0x105d1d0:s1 -> Node0x105d220;
	Node0x105d220 [shape=record,label="{%37:\l\l  %38 = load i64, i64* %20, align 8, !dbg !1106, !tbaa !1086\l  %39 = icmp slt i64 %38, 0, !dbg !1106\l  br i1 %39, label %46, label %40, !dbg !1106\l|{<s0>T|<s1>F}}"];
	Node0x105d220:s0 -> Node0x105d2c0;
	Node0x105d220:s1 -> Node0x105d270;
	Node0x105d270 [shape=record,label="{%40:\l\l  %41 = load i64, i64* %14, align 8, !dbg !1106, !tbaa !1086\l  %42 = load i64, i64* %16, align 8, !dbg !1106, !tbaa !1086\l  %43 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %41, i64 %42), !dbg\l... !1106\l  %44 = extractvalue \{ i64, i1 \} %43, 1, !dbg !1106\l  %45 = extractvalue \{ i64, i1 \} %43, 0, !dbg !1106\l  store i64 %45, i64* %24, align 8, !dbg !1106\l  br label %46, !dbg !1106\l}"];
	Node0x105d270 -> Node0x105d2c0;
	Node0x105d2c0 [shape=record,label="{%46:\l\l  %47 = phi i1 [ true, %37 ], [ true, %34 ], [ true, %10 ], [ %44, %40 ]\l  %48 = zext i1 %47 to i32, !dbg !1106\l  %49 = sext i32 %48 to i64, !dbg !1106\l  %50 = call i64 @llvm.expect.i64(i64 %49, i64 0), !dbg !1106\l  %51 = icmp ne i64 %50, 0, !dbg !1106\l  br i1 %51, label %52, label %53, !dbg !1108\l|{<s0>T|<s1>F}}"];
	Node0x105d2c0:s0 -> Node0x105d310;
	Node0x105d2c0:s1 -> Node0x105d360;
	Node0x105d310 [shape=record,label="{%52:\l\l  store i64 -2, i64* %11, align 8, !dbg !1109\l  store i32 1, i32* %26, align 4\l  br label %98, !dbg !1109\l}"];
	Node0x105d310 -> Node0x105d630;
	Node0x105d360 [shape=record,label="{%53:\l\l  %54 = load i64, i64* %16, align 8, !dbg !1110, !tbaa !1086\l  %55 = icmp sgt i64 %54, 0, !dbg !1112\l  br i1 %55, label %56, label %83, !dbg !1113\l|{<s0>T|<s1>F}}"];
	Node0x105d360:s0 -> Node0x105d3b0;
	Node0x105d360:s1 -> Node0x105d590;
	Node0x105d3b0 [shape=record,label="{%56:\l\l  %57 = load i64, i64* %14, align 8, !dbg !1114, !tbaa !1086\l  %58 = icmp sgt i64 %57, 0, !dbg !1116\l  br i1 %58, label %59, label %80, !dbg !1117\l|{<s0>T|<s1>F}}"];
	Node0x105d3b0:s0 -> Node0x105d400;
	Node0x105d3b0:s1 -> Node0x105d4f0;
	Node0x105d400 [shape=record,label="{%59:\l\l  %60 = load i64, i64* %24, align 8, !dbg !1118, !tbaa !1086\l  %61 = mul i64 %60, 1, !dbg !1118\l  %62 = call noalias i8* @malloc(i64 %61) #12, !dbg !1118\l  store i8* %62, i8** %25, align 8, !dbg !1120, !tbaa !1080\l  %63 = load i8*, i8** %25, align 8, !dbg !1121, !tbaa !1080\l  %64 = icmp eq i8* %63, null, !dbg !1121\l  %65 = zext i1 %64 to i32, !dbg !1121\l  %66 = sext i32 %65 to i64, !dbg !1121\l  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0), !dbg !1121\l  %68 = icmp ne i64 %67, 0, !dbg !1121\l  br i1 %68, label %69, label %70, !dbg !1123\l|{<s0>T|<s1>F}}"];
	Node0x105d400:s0 -> Node0x105d450;
	Node0x105d400:s1 -> Node0x105d4a0;
	Node0x105d450 [shape=record,label="{%69:\l\l  store i64 -2, i64* %11, align 8, !dbg !1124\l  store i32 1, i32* %26, align 4\l  br label %98, !dbg !1124\l}"];
	Node0x105d450 -> Node0x105d630;
	Node0x105d4a0 [shape=record,label="{%70:\l\l  %71 = load i8*, i8** %25, align 8, !dbg !1125, !tbaa !1080\l  %72 = load i8*, i8** %13, align 8, !dbg !1126, !tbaa !1080\l  %73 = load i64, i64* %14, align 8, !dbg !1127, !tbaa !1086\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* align 1 %72, i64\l... %73, i1 false), !dbg !1128\l  %74 = load i8*, i8** %25, align 8, !dbg !1129, !tbaa !1080\l  %75 = load i64, i64* %14, align 8, !dbg !1130, !tbaa !1086\l  %76 = getelementptr inbounds i8, i8* %74, i64 %75, !dbg !1131\l  %77 = load i8*, i8** %15, align 8, !dbg !1132, !tbaa !1080\l  %78 = load i64, i64* %16, align 8, !dbg !1133, !tbaa !1086\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* align 1 %77, i64\l... %78, i1 false), !dbg !1134\l  %79 = load i8*, i8** %25, align 8, !dbg !1135, !tbaa !1080\l  store i8* %79, i8** %22, align 8, !dbg !1136, !tbaa !1080\l  br label %82, !dbg !1137\l}"];
	Node0x105d4a0 -> Node0x105d540;
	Node0x105d4f0 [shape=record,label="{%80:\l\l  %81 = load i8*, i8** %15, align 8, !dbg !1138, !tbaa !1080\l  store i8* %81, i8** %22, align 8, !dbg !1139, !tbaa !1080\l  br label %82\l}"];
	Node0x105d4f0 -> Node0x105d540;
	Node0x105d540 [shape=record,label="{%82:\l\l  br label %85, !dbg !1140\l}"];
	Node0x105d540 -> Node0x105d5e0;
	Node0x105d590 [shape=record,label="{%83:\l\l  %84 = load i8*, i8** %13, align 8, !dbg !1141, !tbaa !1080\l  store i8* %84, i8** %22, align 8, !dbg !1142, !tbaa !1080\l  br label %85\l}"];
	Node0x105d590 -> Node0x105d5e0;
	Node0x105d5e0 [shape=record,label="{%85:\l\l  %86 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %12,\l... align 8, !dbg !1143, !tbaa !1080\l  %87 = load i8*, i8** %22, align 8, !dbg !1144, !tbaa !1080\l  %88 = load i64, i64* %24, align 8, !dbg !1145, !tbaa !1086\l  %89 = load i64, i64* %17, align 8, !dbg !1146, !tbaa !1086\l  %90 = load i64, i64* %18, align 8, !dbg !1147, !tbaa !1086\l  %91 = load i64, i64* %20, align 8, !dbg !1148, !tbaa !1086\l  %92 = load %struct.re_registers*, %struct.re_registers** %19, align 8, !dbg\l... !1149, !tbaa !1080\l  %93 = load i8, i8* %21, align 1, !dbg !1150, !tbaa !1095, !range !1151\l  %94 = trunc i8 %93 to i1, !dbg !1150\l  %95 = call i64 @re_search_stub(%struct.re_pattern_buffer* %86, i8* %87, i64\l... %88, i64 %89, i64 %90, i64 %91, %struct.re_registers* %92, i1 zeroext %94),\l... !dbg !1152\l  store i64 %95, i64* %23, align 8, !dbg !1153, !tbaa !1086\l  %96 = load i8*, i8** %25, align 8, !dbg !1154, !tbaa !1080\l  call void @free(i8* %96) #12, !dbg !1154\l  %97 = load i64, i64* %23, align 8, !dbg !1155, !tbaa !1086\l  store i64 %97, i64* %11, align 8, !dbg !1156\l  store i32 1, i32* %26, align 4\l  br label %98, !dbg !1156\l}"];
	Node0x105d5e0 -> Node0x105d630;
	Node0x105d630 [shape=record,label="{%98:\l\l  %99 = bitcast i8** %25 to i8*, !dbg !1157\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #12, !dbg !1157\l  %100 = bitcast i64* %24 to i8*, !dbg !1157\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %100) #12, !dbg !1157\l  %101 = bitcast i64* %23 to i8*, !dbg !1157\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #12, !dbg !1157\l  %102 = bitcast i8** %22 to i8*, !dbg !1157\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #12, !dbg !1157\l  %103 = load i64, i64* %11, align 8, !dbg !1157\l  ret i64 %103, !dbg !1157\l}"];
}
