digraph "CFG for 'fillpattern' function" {
	label="CFG for 'fillpattern' function";

	Node0x12d9710 [shape=record,label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i32, align 4\l  store i32 %0, i32* %4, align 4, !tbaa !812\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !807, metadata\l... !DIExpression()), !dbg !816\l  store i8* %1, i8** %5, align 8, !tbaa !817\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !808, metadata\l... !DIExpression()), !dbg !819\l  store i64 %2, i64* %6, align 8, !tbaa !820\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !809, metadata\l... !DIExpression()), !dbg !822\l  %9 = bitcast i64* %7 to i8*, !dbg !823\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #12, !dbg !823\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !810, metadata\l... !DIExpression()), !dbg !824\l  %10 = bitcast i32* %8 to i8*, !dbg !825\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #12, !dbg !825\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !811, metadata\l... !DIExpression()), !dbg !826\l  %11 = load i32, i32* %4, align 4, !dbg !827, !tbaa !812\l  %12 = and i32 %11, 4095, !dbg !828\l  store i32 %12, i32* %8, align 4, !dbg !826, !tbaa !812\l  %13 = load i32, i32* %8, align 4, !dbg !829, !tbaa !812\l  %14 = shl i32 %13, 12, !dbg !830\l  %15 = load i32, i32* %8, align 4, !dbg !831, !tbaa !812\l  %16 = or i32 %15, %14, !dbg !831\l  store i32 %16, i32* %8, align 4, !dbg !831, !tbaa !812\l  %17 = load i32, i32* %8, align 4, !dbg !832, !tbaa !812\l  %18 = lshr i32 %17, 4, !dbg !833\l  %19 = and i32 %18, 255, !dbg !834\l  %20 = trunc i32 %19 to i8, !dbg !835\l  %21 = load i8*, i8** %5, align 8, !dbg !836, !tbaa !817\l  %22 = getelementptr inbounds i8, i8* %21, i64 0, !dbg !836\l  store i8 %20, i8* %22, align 1, !dbg !837, !tbaa !838\l  %23 = load i32, i32* %8, align 4, !dbg !839, !tbaa !812\l  %24 = lshr i32 %23, 8, !dbg !840\l  %25 = and i32 %24, 255, !dbg !841\l  %26 = trunc i32 %25 to i8, !dbg !842\l  %27 = load i8*, i8** %5, align 8, !dbg !843, !tbaa !817\l  %28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !843\l  store i8 %26, i8* %28, align 1, !dbg !844, !tbaa !838\l  %29 = load i32, i32* %8, align 4, !dbg !845, !tbaa !812\l  %30 = and i32 %29, 255, !dbg !846\l  %31 = trunc i32 %30 to i8, !dbg !845\l  %32 = load i8*, i8** %5, align 8, !dbg !847, !tbaa !817\l  %33 = getelementptr inbounds i8, i8* %32, i64 2, !dbg !847\l  store i8 %31, i8* %33, align 1, !dbg !848, !tbaa !838\l  store i64 3, i64* %7, align 8, !dbg !849, !tbaa !820\l  br label %34, !dbg !851\l}"];
	Node0x12d9710 -> Node0x12d9df0;
	Node0x12d9df0 [shape=record,label="{%34:\l\l  %35 = load i64, i64* %7, align 8, !dbg !852, !tbaa !820\l  %36 = load i64, i64* %6, align 8, !dbg !854, !tbaa !820\l  %37 = udiv i64 %36, 2, !dbg !855\l  %38 = icmp ule i64 %35, %37, !dbg !856\l  br i1 %38, label %39, label %48, !dbg !857\l|{<s0>T|<s1>F}}"];
	Node0x12d9df0:s0 -> Node0x12d9e40;
	Node0x12d9df0:s1 -> Node0x12d9ee0;
	Node0x12d9e40 [shape=record,label="{%39:\l\l  %40 = load i8*, i8** %5, align 8, !dbg !858, !tbaa !817\l  %41 = load i64, i64* %7, align 8, !dbg !859, !tbaa !820\l  %42 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !860\l  %43 = load i8*, i8** %5, align 8, !dbg !861, !tbaa !817\l  %44 = load i64, i64* %7, align 8, !dbg !862, !tbaa !820\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %43, i64\l... %44, i1 false), !dbg !863\l  br label %45, !dbg !863\l}"];
	Node0x12d9e40 -> Node0x12d9e90;
	Node0x12d9e90 [shape=record,label="{%45:\l\l  %46 = load i64, i64* %7, align 8, !dbg !864, !tbaa !820\l  %47 = mul i64 %46, 2, !dbg !864\l  store i64 %47, i64* %7, align 8, !dbg !864, !tbaa !820\l  br label %34, !dbg !865, !llvm.loop !866\l}"];
	Node0x12d9e90 -> Node0x12d9df0;
	Node0x12d9ee0 [shape=record,label="{%48:\l\l  %49 = load i64, i64* %7, align 8, !dbg !868, !tbaa !820\l  %50 = load i64, i64* %6, align 8, !dbg !870, !tbaa !820\l  %51 = icmp ult i64 %49, %50, !dbg !871\l  br i1 %51, label %52, label %60, !dbg !872\l|{<s0>T|<s1>F}}"];
	Node0x12d9ee0:s0 -> Node0x12d9f30;
	Node0x12d9ee0:s1 -> Node0x12d9f80;
	Node0x12d9f30 [shape=record,label="{%52:\l\l  %53 = load i8*, i8** %5, align 8, !dbg !873, !tbaa !817\l  %54 = load i64, i64* %7, align 8, !dbg !874, !tbaa !820\l  %55 = getelementptr inbounds i8, i8* %53, i64 %54, !dbg !875\l  %56 = load i8*, i8** %5, align 8, !dbg !876, !tbaa !817\l  %57 = load i64, i64* %6, align 8, !dbg !877, !tbaa !820\l  %58 = load i64, i64* %7, align 8, !dbg !878, !tbaa !820\l  %59 = sub i64 %57, %58, !dbg !879\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 %56, i64\l... %59, i1 false), !dbg !880\l  br label %60, !dbg !880\l}"];
	Node0x12d9f30 -> Node0x12d9f80;
	Node0x12d9f80 [shape=record,label="{%60:\l\l  %61 = load i32, i32* %4, align 4, !dbg !881, !tbaa !812\l  %62 = and i32 %61, 4096, !dbg !883\l  %63 = icmp ne i32 %62, 0, !dbg !883\l  br i1 %63, label %64, label %81, !dbg !884\l|{<s0>T|<s1>F}}"];
	Node0x12d9f80:s0 -> Node0x12d9fd0;
	Node0x12d9f80:s1 -> Node0x12da160;
	Node0x12d9fd0 [shape=record,label="{%64:\l\l  store i64 0, i64* %7, align 8, !dbg !885, !tbaa !820\l  br label %65, !dbg !887\l}"];
	Node0x12d9fd0 -> Node0x12da020;
	Node0x12da020 [shape=record,label="{%65:\l\l  %66 = load i64, i64* %7, align 8, !dbg !888, !tbaa !820\l  %67 = load i64, i64* %6, align 8, !dbg !890, !tbaa !820\l  %68 = icmp ult i64 %66, %67, !dbg !891\l  br i1 %68, label %69, label %80, !dbg !892\l|{<s0>T|<s1>F}}"];
	Node0x12da020:s0 -> Node0x12da070;
	Node0x12da020:s1 -> Node0x12da110;
	Node0x12da070 [shape=record,label="{%69:\l\l  %70 = load i8*, i8** %5, align 8, !dbg !893, !tbaa !817\l  %71 = load i64, i64* %7, align 8, !dbg !894, !tbaa !820\l  %72 = getelementptr inbounds i8, i8* %70, i64 %71, !dbg !893\l  %73 = load i8, i8* %72, align 1, !dbg !895, !tbaa !838\l  %74 = zext i8 %73 to i32, !dbg !895\l  %75 = xor i32 %74, 128, !dbg !895\l  %76 = trunc i32 %75 to i8, !dbg !895\l  store i8 %76, i8* %72, align 1, !dbg !895, !tbaa !838\l  br label %77, !dbg !893\l}"];
	Node0x12da070 -> Node0x12da0c0;
	Node0x12da0c0 [shape=record,label="{%77:\l\l  %78 = load i64, i64* %7, align 8, !dbg !896, !tbaa !820\l  %79 = add i64 %78, 512, !dbg !896\l  store i64 %79, i64* %7, align 8, !dbg !896, !tbaa !820\l  br label %65, !dbg !897, !llvm.loop !898\l}"];
	Node0x12da0c0 -> Node0x12da020;
	Node0x12da110 [shape=record,label="{%80:\l\l  br label %81, !dbg !899\l}"];
	Node0x12da110 -> Node0x12da160;
	Node0x12da160 [shape=record,label="{%81:\l\l  %82 = bitcast i32* %8 to i8*, !dbg !900\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %82) #12, !dbg !900\l  %83 = bitcast i64* %7 to i8*, !dbg !900\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #12, !dbg !900\l  ret void, !dbg !900\l}"];
}
