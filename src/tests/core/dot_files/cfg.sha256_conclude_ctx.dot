digraph "CFG for 'sha256_conclude_ctx' function" {
	label="CFG for 'sha256_conclude_ctx' function";

	Node0xe6f990 [shape=record,label="{%1:\l  %2 = alloca %struct.sha256_ctx*, align 8\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  store %struct.sha256_ctx* %0, %struct.sha256_ctx** %2, align 8, !tbaa !801\l  call void @llvm.dbg.declare(metadata %struct.sha256_ctx** %2, metadata !798,\l... metadata !DIExpression()), !dbg !805\l  %5 = bitcast i64* %3 to i8*, !dbg !806\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #12, !dbg !806\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !799, metadata\l... !DIExpression()), !dbg !807\l  %6 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg !808,\l... !tbaa !801\l  %7 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %6, i32\l... 0, i32 2, !dbg !809\l  %8 = load i64, i64* %7, align 8, !dbg !809, !tbaa !810\l  store i64 %8, i64* %3, align 8, !dbg !807, !tbaa !813\l  %9 = bitcast i64* %4 to i8*, !dbg !814\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #12, !dbg !814\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !800, metadata\l... !DIExpression()), !dbg !815\l  %10 = load i64, i64* %3, align 8, !dbg !816, !tbaa !813\l  %11 = icmp ult i64 %10, 56, !dbg !817\l  %12 = zext i1 %11 to i64, !dbg !818\l  %13 = select i1 %11, i32 16, i32 32, !dbg !818\l  %14 = sext i32 %13 to i64, !dbg !818\l  store i64 %14, i64* %4, align 8, !dbg !815, !tbaa !813\l  %15 = load i64, i64* %3, align 8, !dbg !819, !tbaa !813\l  %16 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg !820,\l... !tbaa !801\l  %17 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %16,\l... i32 0, i32 1, !dbg !821\l  %18 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 0, i64 0, !dbg\l... !820\l  %19 = load i32, i32* %18, align 8, !dbg !822, !tbaa !823\l  %20 = zext i32 %19 to i64, !dbg !822\l  %21 = add i64 %20, %15, !dbg !822\l  %22 = trunc i64 %21 to i32, !dbg !822\l  store i32 %22, i32* %18, align 8, !dbg !822, !tbaa !823\l  %23 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg !825,\l... !tbaa !801\l  %24 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %23,\l... i32 0, i32 1, !dbg !827\l  %25 = getelementptr inbounds [2 x i32], [2 x i32]* %24, i64 0, i64 0, !dbg\l... !825\l  %26 = load i32, i32* %25, align 8, !dbg !825, !tbaa !823\l  %27 = zext i32 %26 to i64, !dbg !825\l  %28 = load i64, i64* %3, align 8, !dbg !828, !tbaa !813\l  %29 = icmp ult i64 %27, %28, !dbg !829\l  br i1 %29, label %30, label %36, !dbg !830\l|{<s0>T|<s1>F}}"];
	Node0xe6f990:s0 -> Node0xe70450;
	Node0xe6f990:s1 -> Node0xe704a0;
	Node0xe70450 [shape=record,label="{%30:\l\l  %31 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg !831,\l... !tbaa !801\l  %32 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %31,\l... i32 0, i32 1, !dbg !832\l  %33 = getelementptr inbounds [2 x i32], [2 x i32]* %32, i64 0, i64 1, !dbg\l... !831\l  %34 = load i32, i32* %33, align 4, !dbg !833, !tbaa !823\l  %35 = add i32 %34, 1, !dbg !833\l  store i32 %35, i32* %33, align 4, !dbg !833, !tbaa !823\l  br label %36, !dbg !833\l}"];
	Node0xe70450 -> Node0xe704a0;
	Node0xe704a0 [shape=record,label="{%36:\l\l  %37 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg !834,\l... !tbaa !801\l  %38 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %37,\l... i32 0, i32 3, !dbg !835\l  %39 = load i64, i64* %4, align 8, !dbg !836, !tbaa !813\l  %40 = sub i64 %39, 2, !dbg !837\l  %41 = getelementptr inbounds [32 x i32], [32 x i32]* %38, i64 0, i64 %40,\l... !dbg !834\l  %42 = bitcast i32* %41 to i8*, !dbg !838\l  %43 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg !839,\l... !tbaa !801\l  %44 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %43,\l... i32 0, i32 1, !dbg !839\l  %45 = getelementptr inbounds [2 x i32], [2 x i32]* %44, i64 0, i64 1, !dbg\l... !839\l  %46 = load i32, i32* %45, align 4, !dbg !839, !tbaa !823\l  %47 = shl i32 %46, 3, !dbg !839\l  %48 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg !839,\l... !tbaa !801\l  %49 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %48,\l... i32 0, i32 1, !dbg !839\l  %50 = getelementptr inbounds [2 x i32], [2 x i32]* %49, i64 0, i64 0, !dbg\l... !839\l  %51 = load i32, i32* %50, align 8, !dbg !839, !tbaa !823\l  %52 = lshr i32 %51, 29, !dbg !839\l  %53 = or i32 %47, %52, !dbg !839\l  %54 = call i32 @__bswap_32(i32 %53), !dbg !839\l  call void @set_uint32(i8* %42, i32 %54), !dbg !840\l  %55 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg !841,\l... !tbaa !801\l  %56 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %55,\l... i32 0, i32 3, !dbg !842\l  %57 = load i64, i64* %4, align 8, !dbg !843, !tbaa !813\l  %58 = sub i64 %57, 1, !dbg !844\l  %59 = getelementptr inbounds [32 x i32], [32 x i32]* %56, i64 0, i64 %58,\l... !dbg !841\l  %60 = bitcast i32* %59 to i8*, !dbg !845\l  %61 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg !846,\l... !tbaa !801\l  %62 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %61,\l... i32 0, i32 1, !dbg !846\l  %63 = getelementptr inbounds [2 x i32], [2 x i32]* %62, i64 0, i64 0, !dbg\l... !846\l  %64 = load i32, i32* %63, align 8, !dbg !846, !tbaa !823\l  %65 = shl i32 %64, 3, !dbg !846\l  %66 = call i32 @__bswap_32(i32 %65), !dbg !846\l  call void @set_uint32(i8* %60, i32 %66), !dbg !847\l  %67 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg !848,\l... !tbaa !801\l  %68 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %67,\l... i32 0, i32 3, !dbg !849\l  %69 = getelementptr inbounds [32 x i32], [32 x i32]* %68, i32 0, i32 0, !dbg\l... !850\l  %70 = bitcast i32* %69 to i8*, !dbg !850\l  %71 = load i64, i64* %3, align 8, !dbg !851, !tbaa !813\l  %72 = getelementptr inbounds i8, i8* %70, i64 %71, !dbg !850\l  %73 = load i64, i64* %4, align 8, !dbg !852, !tbaa !813\l  %74 = sub i64 %73, 2, !dbg !853\l  %75 = mul i64 %74, 4, !dbg !854\l  %76 = load i64, i64* %3, align 8, !dbg !855, !tbaa !813\l  %77 = sub i64 %75, %76, !dbg !856\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* align 16\l... getelementptr inbounds ([64 x i8], [64 x i8]* bitcast (\<\{ i8, [63 x i8] \}\>*\l... @fillbuf to [64 x i8]*), i32 0, i32 0), i64 %77, i1 false), !dbg !857\l  %78 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg !858,\l... !tbaa !801\l  %79 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %78,\l... i32 0, i32 3, !dbg !859\l  %80 = getelementptr inbounds [32 x i32], [32 x i32]* %79, i32 0, i32 0, !dbg\l... !858\l  %81 = bitcast i32* %80 to i8*, !dbg !858\l  %82 = load i64, i64* %4, align 8, !dbg !860, !tbaa !813\l  %83 = mul i64 %82, 4, !dbg !861\l  %84 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg !862,\l... !tbaa !801\l  call void @sha256_process_block(i8* %81, i64 %83, %struct.sha256_ctx* %84),\l... !dbg !863\l  %85 = bitcast i64* %4 to i8*, !dbg !864\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #12, !dbg !864\l  %86 = bitcast i64* %3 to i8*, !dbg !864\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #12, !dbg !864\l  ret void, !dbg !864\l}"];
}
