digraph "CFG for 'build_equiv_class' function" {
	label="CFG for 'build_equiv_class' function";

	Node0xcaa560 [shape=record,label="{%4:\l  %5 = alloca i32, align 4\l  %6 = alloca i64*, align 8\l  %7 = alloca %struct.re_charset_t*, align 8\l  %8 = alloca i64*, align 8\l  %9 = alloca i8*, align 8\l  store i64* %0, i64** %6, align 8, !tbaa !1063\l  call void @llvm.dbg.declare(metadata i64** %6, metadata !1059, metadata\l... !DIExpression()), !dbg !1067\l  store %struct.re_charset_t* %1, %struct.re_charset_t** %7, align 8, !tbaa\l... !1063\l  call void @llvm.dbg.declare(metadata %struct.re_charset_t** %7, metadata\l... !1060, metadata !DIExpression()), !dbg !1068\l  store i64* %2, i64** %8, align 8, !tbaa !1063\l  call void @llvm.dbg.declare(metadata i64** %8, metadata !1061, metadata\l... !DIExpression()), !dbg !1069\l  store i8* %3, i8** %9, align 8, !tbaa !1063\l  call void @llvm.dbg.declare(metadata i8** %9, metadata !1062, metadata\l... !DIExpression()), !dbg !1070\l  %10 = load i8*, i8** %9, align 8, !dbg !1071, !tbaa !1063\l  %11 = call i64 @strlen(i8* %10) #16, !dbg !1071\l  %12 = icmp ne i64 %11, 1, !dbg !1071\l  %13 = zext i1 %12 to i32, !dbg !1071\l  %14 = sext i32 %13 to i64, !dbg !1071\l  %15 = call i64 @llvm.expect.i64(i64 %14, i64 0), !dbg !1071\l  %16 = icmp ne i64 %15, 0, !dbg !1071\l  br i1 %16, label %17, label %18, !dbg !1074\l|{<s0>T|<s1>F}}"];
	Node0xcaa560:s0 -> Node0xcaa690;
	Node0xcaa560:s1 -> Node0xcaa6e0;
	Node0xcaa690 [shape=record,label="{%17:\l\l  store i32 3, i32* %5, align 4, !dbg !1075\l  br label %23, !dbg !1075\l}"];
	Node0xcaa690 -> Node0xcaa730;
	Node0xcaa6e0 [shape=record,label="{%18:\l\l  %19 = load i64*, i64** %6, align 8, !dbg !1076, !tbaa !1063\l  %20 = load i8*, i8** %9, align 8, !dbg !1077, !tbaa !1063\l  %21 = load i8, i8* %20, align 1, !dbg !1078, !tbaa !1079\l  %22 = zext i8 %21 to i64, !dbg !1078\l  call void @bitset_set(i64* %19, i64 %22), !dbg !1080\l  store i32 0, i32* %5, align 4, !dbg !1081\l  br label %23, !dbg !1081\l}"];
	Node0xcaa6e0 -> Node0xcaa730;
	Node0xcaa730 [shape=record,label="{%23:\l\l  %24 = load i32, i32* %5, align 4, !dbg !1082\l  ret i32 %24, !dbg !1082\l}"];
}
