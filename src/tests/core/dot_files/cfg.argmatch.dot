digraph "CFG for 'argmatch' function" {
	label="CFG for 'argmatch' function";

	Node0x1aa2260 [shape=record,label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i8**, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i8, align 1\l  %14 = alloca i32, align 4\l  store i8* %0, i8** %6, align 8, !tbaa !1001\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !993, metadata\l... !DIExpression()), !dbg !1005\l  store i8** %1, i8*** %7, align 8, !tbaa !1001\l  call void @llvm.dbg.declare(metadata i8*** %7, metadata !994, metadata\l... !DIExpression()), !dbg !1006\l  store i8* %2, i8** %8, align 8, !tbaa !1001\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !995, metadata\l... !DIExpression()), !dbg !1007\l  store i64 %3, i64* %9, align 8, !tbaa !1008\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !996, metadata\l... !DIExpression()), !dbg !1010\l  %15 = bitcast i64* %10 to i8*, !dbg !1011\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #12, !dbg !1011\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !997, metadata\l... !DIExpression()), !dbg !1012\l  %16 = bitcast i64* %11 to i8*, !dbg !1013\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #12, !dbg !1013\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !998, metadata\l... !DIExpression()), !dbg !1014\l  %17 = bitcast i64* %12 to i8*, !dbg !1015\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #12, !dbg !1015\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !999, metadata\l... !DIExpression()), !dbg !1016\l  store i64 -1, i64* %12, align 8, !dbg !1016, !tbaa !1008\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #12, !dbg !1017\l  call void @llvm.dbg.declare(metadata i8* %13, metadata !1000, metadata\l... !DIExpression()), !dbg !1018\l  store i8 0, i8* %13, align 1, !dbg !1018, !tbaa !1019\l  %18 = load i8*, i8** %6, align 8, !dbg !1021, !tbaa !1001\l  %19 = call i64 @strlen(i8* %18) #15, !dbg !1022\l  store i64 %19, i64* %11, align 8, !dbg !1023, !tbaa !1008\l  store i64 0, i64* %10, align 8, !dbg !1024, !tbaa !1008\l  br label %20, !dbg !1026\l}"];
	Node0x1aa2260 -> Node0x1aa5ba0;
	Node0x1aa5ba0 [shape=record,label="{%20:\l\l  %21 = load i8**, i8*** %7, align 8, !dbg !1027, !tbaa !1001\l  %22 = load i64, i64* %10, align 8, !dbg !1029, !tbaa !1008\l  %23 = getelementptr inbounds i8*, i8** %21, i64 %22, !dbg !1027\l  %24 = load i8*, i8** %23, align 8, !dbg !1027, !tbaa !1001\l  %25 = icmp ne i8* %24, null, !dbg !1030\l  br i1 %25, label %26, label %75, !dbg !1030\l|{<s0>T|<s1>F}}"];
	Node0x1aa5ba0:s0 -> Node0x1aa5bf0;
	Node0x1aa5ba0:s1 -> Node0x1aa6000;
	Node0x1aa5bf0 [shape=record,label="{%26:\l\l  %27 = load i8**, i8*** %7, align 8, !dbg !1031, !tbaa !1001\l  %28 = load i64, i64* %10, align 8, !dbg !1034, !tbaa !1008\l  %29 = getelementptr inbounds i8*, i8** %27, i64 %28, !dbg !1031\l  %30 = load i8*, i8** %29, align 8, !dbg !1031, !tbaa !1001\l  %31 = load i8*, i8** %6, align 8, !dbg !1035, !tbaa !1001\l  %32 = load i64, i64* %11, align 8, !dbg !1036, !tbaa !1008\l  %33 = call i32 @strncmp(i8* %30, i8* %31, i64 %32) #15, !dbg !1037\l  %34 = icmp ne i32 %33, 0, !dbg !1037\l  br i1 %34, label %71, label %35, !dbg !1038\l|{<s0>T|<s1>F}}"];
	Node0x1aa5bf0:s0 -> Node0x1aa5f60;
	Node0x1aa5bf0:s1 -> Node0x1aa5c40;
	Node0x1aa5c40 [shape=record,label="{%35:\l\l  %36 = load i8**, i8*** %7, align 8, !dbg !1039, !tbaa !1001\l  %37 = load i64, i64* %10, align 8, !dbg !1042, !tbaa !1008\l  %38 = getelementptr inbounds i8*, i8** %36, i64 %37, !dbg !1039\l  %39 = load i8*, i8** %38, align 8, !dbg !1039, !tbaa !1001\l  %40 = call i64 @strlen(i8* %39) #15, !dbg !1043\l  %41 = load i64, i64* %11, align 8, !dbg !1044, !tbaa !1008\l  %42 = icmp eq i64 %40, %41, !dbg !1045\l  br i1 %42, label %43, label %45, !dbg !1046\l|{<s0>T|<s1>F}}"];
	Node0x1aa5c40:s0 -> Node0x1aa5c90;
	Node0x1aa5c40:s1 -> Node0x1aa5ce0;
	Node0x1aa5c90 [shape=record,label="{%43:\l\l  %44 = load i64, i64* %10, align 8, !dbg !1047, !tbaa !1008\l  store i64 %44, i64* %5, align 8, !dbg !1048\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1048\l}"];
	Node0x1aa5c90 -> Node0x1aa60f0;
	Node0x1aa5ce0 [shape=record,label="{%45:\l\l  %46 = load i64, i64* %12, align 8, !dbg !1049, !tbaa !1008\l  %47 = icmp eq i64 %46, -1, !dbg !1051\l  br i1 %47, label %48, label %50, !dbg !1052\l|{<s0>T|<s1>F}}"];
	Node0x1aa5ce0:s0 -> Node0x1aa5d30;
	Node0x1aa5ce0:s1 -> Node0x1aa5d80;
	Node0x1aa5d30 [shape=record,label="{%48:\l\l  %49 = load i64, i64* %10, align 8, !dbg !1053, !tbaa !1008\l  store i64 %49, i64* %12, align 8, !dbg !1054, !tbaa !1008\l  br label %69, !dbg !1055\l}"];
	Node0x1aa5d30 -> Node0x1aa5ec0;
	Node0x1aa5d80 [shape=record,label="{%50:\l\l  %51 = load i8*, i8** %8, align 8, !dbg !1056, !tbaa !1001\l  %52 = icmp eq i8* %51, null, !dbg !1059\l  br i1 %52, label %67, label %53, !dbg !1060\l|{<s0>T|<s1>F}}"];
	Node0x1aa5d80:s0 -> Node0x1aa5e20;
	Node0x1aa5d80:s1 -> Node0x1aa5dd0;
	Node0x1aa5dd0 [shape=record,label="{%53:\l\l  %54 = load i8*, i8** %8, align 8, !dbg !1061, !tbaa !1001\l  %55 = load i64, i64* %9, align 8, !dbg !1062, !tbaa !1008\l  %56 = load i64, i64* %12, align 8, !dbg !1063, !tbaa !1008\l  %57 = mul i64 %55, %56, !dbg !1064\l  %58 = getelementptr inbounds i8, i8* %54, i64 %57, !dbg !1065\l  %59 = load i8*, i8** %8, align 8, !dbg !1066, !tbaa !1001\l  %60 = load i64, i64* %9, align 8, !dbg !1067, !tbaa !1008\l  %61 = load i64, i64* %10, align 8, !dbg !1068, !tbaa !1008\l  %62 = mul i64 %60, %61, !dbg !1069\l  %63 = getelementptr inbounds i8, i8* %59, i64 %62, !dbg !1070\l  %64 = load i64, i64* %9, align 8, !dbg !1071, !tbaa !1008\l  %65 = call i32 @memcmp(i8* %58, i8* %63, i64 %64) #15, !dbg !1072\l  %66 = icmp ne i32 %65, 0, !dbg !1072\l  br i1 %66, label %67, label %68, !dbg !1073\l|{<s0>T|<s1>F}}"];
	Node0x1aa5dd0:s0 -> Node0x1aa5e20;
	Node0x1aa5dd0:s1 -> Node0x1aa5e70;
	Node0x1aa5e20 [shape=record,label="{%67:\l\l  store i8 1, i8* %13, align 1, !dbg !1074, !tbaa !1019\l  br label %68, !dbg !1076\l}"];
	Node0x1aa5e20 -> Node0x1aa5e70;
	Node0x1aa5e70 [shape=record,label="{%68:\l\l  br label %69\l}"];
	Node0x1aa5e70 -> Node0x1aa5ec0;
	Node0x1aa5ec0 [shape=record,label="{%69:\l\l  br label %70\l}"];
	Node0x1aa5ec0 -> Node0x1aa5f10;
	Node0x1aa5f10 [shape=record,label="{%70:\l\l  br label %71, !dbg !1077\l}"];
	Node0x1aa5f10 -> Node0x1aa5f60;
	Node0x1aa5f60 [shape=record,label="{%71:\l\l  br label %72, !dbg !1078\l}"];
	Node0x1aa5f60 -> Node0x1aa5fb0;
	Node0x1aa5fb0 [shape=record,label="{%72:\l\l  %73 = load i64, i64* %10, align 8, !dbg !1079, !tbaa !1008\l  %74 = add i64 %73, 1, !dbg !1079\l  store i64 %74, i64* %10, align 8, !dbg !1079, !tbaa !1008\l  br label %20, !dbg !1080, !llvm.loop !1081\l}"];
	Node0x1aa5fb0 -> Node0x1aa5ba0;
	Node0x1aa6000 [shape=record,label="{%75:\l\l  %76 = load i8, i8* %13, align 1, !dbg !1083, !tbaa !1019, !range !1085\l  %77 = trunc i8 %76 to i1, !dbg !1083\l  br i1 %77, label %78, label %79, !dbg !1086\l|{<s0>T|<s1>F}}"];
	Node0x1aa6000:s0 -> Node0x1aa6050;
	Node0x1aa6000:s1 -> Node0x1aa60a0;
	Node0x1aa6050 [shape=record,label="{%78:\l\l  store i64 -2, i64* %5, align 8, !dbg !1087\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1087\l}"];
	Node0x1aa6050 -> Node0x1aa60f0;
	Node0x1aa60a0 [shape=record,label="{%79:\l\l  %80 = load i64, i64* %12, align 8, !dbg !1088, !tbaa !1008\l  store i64 %80, i64* %5, align 8, !dbg !1089\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1089\l}"];
	Node0x1aa60a0 -> Node0x1aa60f0;
	Node0x1aa60f0 [shape=record,label="{%81:\l\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #12, !dbg !1090\l  %82 = bitcast i64* %12 to i8*, !dbg !1090\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #12, !dbg !1090\l  %83 = bitcast i64* %11 to i8*, !dbg !1090\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #12, !dbg !1090\l  %84 = bitcast i64* %10 to i8*, !dbg !1090\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #12, !dbg !1090\l  %85 = load i64, i64* %5, align 8, !dbg !1090\l  ret i64 %85, !dbg !1090\l}"];
}
