digraph "CFG for 'advance_input_after_read_error' function" {
	label="CFG for 'advance_input_after_read_error' function";

	Node0x24cf580 [shape=record,label="{%1:\l  %2 = alloca i1, align 1\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i64, align 8\l  store i64 %0, i64* %3, align 8, !tbaa !375\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !368, metadata\l... !DIExpression()), !dbg !379\l  %7 = load i8, i8* @input_seekable, align 1, !dbg !380, !tbaa !381, !range\l... !383\l  %8 = trunc i8 %7 to i1, !dbg !380\l  br i1 %8, label %16, label %9, !dbg !384\l|{<s0>T|<s1>F}}"];
	Node0x24cf580:s0 -> Node0x24d12f0;
	Node0x24cf580:s1 -> Node0x24d1200;
	Node0x24d1200 [shape=record,label="{%9:\l\l  %10 = load i32, i32* @input_seek_errno, align 4, !dbg !385, !tbaa !388\l  %11 = icmp eq i32 %10, 29, !dbg !390\l  br i1 %11, label %12, label %13, !dbg !391\l|{<s0>T|<s1>F}}"];
	Node0x24d1200:s0 -> Node0x24d1250;
	Node0x24d1200:s1 -> Node0x24d12a0;
	Node0x24d1250 [shape=record,label="{%12:\l\l  store i1 true, i1* %2, align 1, !dbg !392\l  br label %83, !dbg !392\l}"];
	Node0x24d1250 -> Node0x24d1930;
	Node0x24d12a0 [shape=record,label="{%13:\l\l  %14 = load i32, i32* @input_seek_errno, align 4, !dbg !393, !tbaa !388\l  %15 = call i32* @__errno_location() #14, !dbg !394\l  store i32 %14, i32* %15, align 4, !dbg !395, !tbaa !388\l  br label %78, !dbg !396\l}"];
	Node0x24d12a0 -> Node0x24d18e0;
	Node0x24d12f0 [shape=record,label="{%16:\l\l  %17 = bitcast i64* %4 to i8*, !dbg !397\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #12, !dbg !397\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !369, metadata\l... !DIExpression()), !dbg !398\l  %18 = load i64, i64* %3, align 8, !dbg !399, !tbaa !375\l  call void @advance_input_offset(i64 %18), !dbg !400\l  %19 = load i64, i64* @input_offset, align 8, !dbg !401, !tbaa !375\l  %20 = icmp ult i64 9223372036854775807, %19, !dbg !402\l  %21 = zext i1 %20 to i32, !dbg !402\l  %22 = load i8, i8* @input_offset_overflow, align 1, !dbg !403, !tbaa !381,\l... !range !383\l  %23 = trunc i8 %22 to i1, !dbg !403\l  %24 = zext i1 %23 to i32, !dbg !403\l  %25 = or i32 %24, %21, !dbg !403\l  %26 = icmp ne i32 %25, 0, !dbg !403\l  %27 = zext i1 %26 to i8, !dbg !403\l  store i8 %27, i8* @input_offset_overflow, align 1, !dbg !403, !tbaa !381\l  %28 = load i8, i8* @input_offset_overflow, align 1, !dbg !404, !tbaa !381,\l... !range !383\l  %29 = trunc i8 %28 to i1, !dbg !404\l  br i1 %29, label %30, label %33, !dbg !406\l|{<s0>T|<s1>F}}"];
	Node0x24d12f0:s0 -> Node0x24d1340;
	Node0x24d12f0:s1 -> Node0x24d1390;
	Node0x24d1340 [shape=record,label="{%30:\l\l  %31 = load i8*, i8** @input_file, align 8, !dbg !407, !tbaa !409\l  %32 = call i8* @quotearg_style(i32 4, i8* %31), !dbg !407\l  call void (i32, i32, i8*, ...) @nl_error(i32 0, i32 0, i8* getelementptr\l... inbounds ([38 x i8], [38 x i8]* @.str.118, i32 0, i32 0), i8* %32), !dbg !411\l  store i1 false, i1* %2, align 1, !dbg !412\l  store i32 1, i32* %5, align 4\l  br label %74, !dbg !412\l}"];
	Node0x24d1340 -> Node0x24d1840;
	Node0x24d1390 [shape=record,label="{%33:\l\l  %34 = call i64 @lseek(i32 0, i64 0, i32 1) #12, !dbg !413\l  store i64 %34, i64* %4, align 8, !dbg !414, !tbaa !375\l  %35 = load i64, i64* %4, align 8, !dbg !415, !tbaa !375\l  %36 = icmp sle i64 0, %35, !dbg !416\l  br i1 %36, label %37, label %73, !dbg !417\l|{<s0>T|<s1>F}}"];
	Node0x24d1390:s0 -> Node0x24d13e0;
	Node0x24d1390:s1 -> Node0x24d17f0;
	Node0x24d13e0 [shape=record,label="{%37:\l\l  %38 = bitcast i64* %6 to i8*, !dbg !418\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #12, !dbg !418\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !372, metadata\l... !DIExpression()), !dbg !419\l  %39 = load i64, i64* %4, align 8, !dbg !420, !tbaa !375\l  %40 = load i64, i64* @input_offset, align 8, !dbg !422, !tbaa !375\l  %41 = icmp eq i64 %39, %40, !dbg !423\l  br i1 %41, label %42, label %43, !dbg !424\l|{<s0>T|<s1>F}}"];
	Node0x24d13e0:s0 -> Node0x24d1430;
	Node0x24d13e0:s1 -> Node0x24d1480;
	Node0x24d1430 [shape=record,label="{%42:\l\l  store i1 true, i1* %2, align 1, !dbg !425\l  store i32 1, i32* %5, align 4\l  br label %69, !dbg !425\l}"];
	Node0x24d1430 -> Node0x24d1750;
	Node0x24d1480 [shape=record,label="{%43:\l\l  %44 = load i64, i64* @input_offset, align 8, !dbg !426, !tbaa !375\l  %45 = load i64, i64* %4, align 8, !dbg !427, !tbaa !375\l  %46 = sub i64 %44, %45, !dbg !428\l  store i64 %46, i64* %6, align 8, !dbg !429, !tbaa !375\l  %47 = load i64, i64* %6, align 8, !dbg !430, !tbaa !375\l  %48 = icmp sle i64 0, %47, !dbg !432\l  br i1 %48, label %49, label %53, !dbg !433\l|{<s0>T|<s1>F}}"];
	Node0x24d1480:s0 -> Node0x24d14d0;
	Node0x24d1480:s1 -> Node0x24d1520;
	Node0x24d14d0 [shape=record,label="{%49:\l\l  %50 = load i64, i64* %6, align 8, !dbg !434, !tbaa !375\l  %51 = load i64, i64* %3, align 8, !dbg !435, !tbaa !375\l  %52 = icmp ule i64 %50, %51, !dbg !436\l  br i1 %52, label %57, label %53, !dbg !437\l|{<s0>T|<s1>F}}"];
	Node0x24d14d0:s0 -> Node0x24d15c0;
	Node0x24d14d0:s1 -> Node0x24d1520;
	Node0x24d1520 [shape=record,label="{%53:\l\l  %54 = load i32, i32* @status_level, align 4, !dbg !438, !tbaa !388\l  %55 = icmp ne i32 %54, 1, !dbg !439\l  br i1 %55, label %56, label %57, !dbg !440\l|{<s0>T|<s1>F}}"];
	Node0x24d1520:s0 -> Node0x24d1570;
	Node0x24d1520:s1 -> Node0x24d15c0;
	Node0x24d1570 [shape=record,label="{%56:\l\l  call void (i32, i32, i8*, ...) @nl_error(i32 0, i32 0, i8* getelementptr\l... inbounds ([47 x i8], [47 x i8]* @.str.119, i32 0, i32 0)), !dbg !441\l  br label %57, !dbg !441\l}"];
	Node0x24d1570 -> Node0x24d15c0;
	Node0x24d15c0 [shape=record,label="{%57:\l\l  %58 = load i8*, i8** @input_file, align 8, !dbg !442, !tbaa !409\l  %59 = load i64, i64* %6, align 8, !dbg !444, !tbaa !375\l  %60 = call i64 @skip_via_lseek(i8* %58, i32 0, i64 %59, i32 1), !dbg !445\l  %61 = icmp sle i64 0, %60, !dbg !446\l  br i1 %61, label %62, label %63, !dbg !447\l|{<s0>T|<s1>F}}"];
	Node0x24d15c0:s0 -> Node0x24d1610;
	Node0x24d15c0:s1 -> Node0x24d1660;
	Node0x24d1610 [shape=record,label="{%62:\l\l  store i1 true, i1* %2, align 1, !dbg !448\l  store i32 1, i32* %5, align 4\l  br label %69, !dbg !448\l}"];
	Node0x24d1610 -> Node0x24d1750;
	Node0x24d1660 [shape=record,label="{%63:\l\l  %64 = call i32* @__errno_location() #14, !dbg !449\l  %65 = load i32, i32* %64, align 4, !dbg !449, !tbaa !388\l  %66 = icmp eq i32 %65, 0, !dbg !451\l  br i1 %66, label %67, label %68, !dbg !452\l|{<s0>T|<s1>F}}"];
	Node0x24d1660:s0 -> Node0x24d16b0;
	Node0x24d1660:s1 -> Node0x24d1700;
	Node0x24d16b0 [shape=record,label="{%67:\l\l  call void (i32, i32, i8*, ...) @nl_error(i32 0, i32 0, i8* getelementptr\l... inbounds ([40 x i8], [40 x i8]* @.str.120, i32 0, i32 0)), !dbg !453\l  br label %68, !dbg !453\l}"];
	Node0x24d16b0 -> Node0x24d1700;
	Node0x24d1700 [shape=record,label="{%68:\l\l  store i32 0, i32* %5, align 4, !dbg !454\l  br label %69, !dbg !454\l}"];
	Node0x24d1700 -> Node0x24d1750;
	Node0x24d1750 [shape=record,label="{%69:\l\l  %70 = bitcast i64* %6 to i8*, !dbg !454\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %70) #12, !dbg !454\l  %71 = load i32, i32* %5, align 4\l  switch i32 %71, label %74 [\l    i32 0, label %72\l  ]\l|{<s0>def|<s1>0}}"];
	Node0x24d1750:s0 -> Node0x24d1840;
	Node0x24d1750:s1 -> Node0x24d17a0;
	Node0x24d17a0 [shape=record,label="{%72:\l\l  br label %73, !dbg !455\l}"];
	Node0x24d17a0 -> Node0x24d17f0;
	Node0x24d17f0 [shape=record,label="{%73:\l\l  store i32 0, i32* %5, align 4, !dbg !456\l  br label %74, !dbg !456\l}"];
	Node0x24d17f0 -> Node0x24d1840;
	Node0x24d1840 [shape=record,label="{%74:\l\l  %75 = bitcast i64* %4 to i8*, !dbg !456\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #12, !dbg !456\l  %76 = load i32, i32* %5, align 4\l  switch i32 %76, label %85 [\l    i32 0, label %77\l    i32 1, label %83\l  ]\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0x24d1840:s0 -> Node0x24d1980;
	Node0x24d1840:s1 -> Node0x24d1890;
	Node0x24d1840:s2 -> Node0x24d1930;
	Node0x24d1890 [shape=record,label="{%77:\l\l  br label %78\l}"];
	Node0x24d1890 -> Node0x24d18e0;
	Node0x24d18e0 [shape=record,label="{%78:\l\l  %79 = call i32* @__errno_location() #14, !dbg !457\l  %80 = load i32, i32* %79, align 4, !dbg !457, !tbaa !388\l  %81 = load i8*, i8** @input_file, align 8, !dbg !458, !tbaa !409\l  %82 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %81), !dbg !458\l  call void (i32, i32, i8*, ...) @nl_error(i32 0, i32 %80, i8* getelementptr\l... inbounds ([16 x i8], [16 x i8]* @.str.113, i32 0, i32 0), i8* %82), !dbg !459\l  store i1 false, i1* %2, align 1, !dbg !460\l  br label %83, !dbg !460\l}"];
	Node0x24d18e0 -> Node0x24d1930;
	Node0x24d1930 [shape=record,label="{%83:\l\l  %84 = load i1, i1* %2, align 1, !dbg !461\l  ret i1 %84, !dbg !461\l}"];
	Node0x24d1980 [shape=record,label="{%85:\l\l  unreachable\l}"];
}
