digraph "CFG for 'dired_dump_obstack' function" {
	label="CFG for 'dired_dump_obstack' function";

	Node0x2262380 [shape=record,label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca %struct.obstack*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca %struct.obstack*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64*, align 8\l  %9 = alloca %struct.obstack*, align 8\l  %10 = alloca i8*, align 8\l  %11 = alloca i8*, align 8\l  %12 = alloca i64, align 8\l  store i8* %0, i8** %3, align 8, !tbaa !1413\l  call void @llvm.dbg.declare(metadata i8** %3, metadata !1398, metadata\l... !DIExpression()), !dbg !1417\l  store %struct.obstack* %1, %struct.obstack** %4, align 8, !tbaa !1413\l  call void @llvm.dbg.declare(metadata %struct.obstack** %4, metadata !1399,\l... metadata !DIExpression()), !dbg !1418\l  %13 = bitcast i64* %5 to i8*, !dbg !1419\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #14, !dbg !1419\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !1400, metadata\l... !DIExpression()), !dbg !1420\l  %14 = bitcast %struct.obstack** %6 to i8*, !dbg !1421\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #14, !dbg !1421\l  call void @llvm.dbg.declare(metadata %struct.obstack** %6, metadata !1401,\l... metadata !DIExpression()), !dbg !1421\l  %15 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1421,\l... !tbaa !1413\l  store %struct.obstack* %15, %struct.obstack** %6, align 8, !dbg !1421, !tbaa\l... !1413\l  %16 = load %struct.obstack*, %struct.obstack** %6, align 8, !dbg !1421,\l... !tbaa !1413\l  %17 = getelementptr inbounds %struct.obstack, %struct.obstack* %16, i32 0,\l... i32 3, !dbg !1421\l  %18 = load i8*, i8** %17, align 8, !dbg !1421, !tbaa !1422\l  %19 = load %struct.obstack*, %struct.obstack** %6, align 8, !dbg !1421,\l... !tbaa !1413\l  %20 = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0,\l... i32 2, !dbg !1421\l  %21 = load i8*, i8** %20, align 8, !dbg !1421, !tbaa !1426\l  %22 = ptrtoint i8* %18 to i64, !dbg !1421\l  %23 = ptrtoint i8* %21 to i64, !dbg !1421\l  %24 = sub i64 %22, %23, !dbg !1421\l  store i64 %24, i64* %7, align 8, !dbg !1421, !tbaa !1427\l  %25 = bitcast %struct.obstack** %6 to i8*, !dbg !1428\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25) #14, !dbg !1428\l  %26 = load i64, i64* %7, align 8, !dbg !1421, !tbaa !1427\l  %27 = udiv i64 %26, 8, !dbg !1429\l  store i64 %27, i64* %5, align 8, !dbg !1430, !tbaa !1427\l  %28 = load i64, i64* %5, align 8, !dbg !1431, !tbaa !1427\l  %29 = icmp ugt i64 %28, 0, !dbg !1432\l  br i1 %29, label %30, label %127, !dbg !1433\l|{<s0>T|<s1>F}}"];
	Node0x2262380:s0 -> Node0x2262640;
	Node0x2262380:s1 -> Node0x2262960;
	Node0x2262640 [shape=record,label="{%30:\l\l  %31 = bitcast i64** %8 to i8*, !dbg !1434\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #14, !dbg !1434\l  call void @llvm.dbg.declare(metadata i64** %8, metadata !1405, metadata\l... !DIExpression()), !dbg !1435\l  %32 = bitcast %struct.obstack** %9 to i8*, !dbg !1436\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #14, !dbg !1436\l  call void @llvm.dbg.declare(metadata %struct.obstack** %9, metadata !1408,\l... metadata !DIExpression()), !dbg !1436\l  %33 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1436,\l... !tbaa !1413\l  store %struct.obstack* %33, %struct.obstack** %9, align 8, !dbg !1436, !tbaa\l... !1413\l  %34 = bitcast i8** %10 to i8*, !dbg !1436\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #14, !dbg !1436\l  call void @llvm.dbg.declare(metadata i8** %10, metadata !1410, metadata\l... !DIExpression()), !dbg !1436\l  %35 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !1436,\l... !tbaa !1413\l  %36 = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0,\l... i32 2, !dbg !1436\l  %37 = load i8*, i8** %36, align 8, !dbg !1436, !tbaa !1426\l  store i8* %37, i8** %10, align 8, !dbg !1436, !tbaa !1413\l  %38 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !1437,\l... !tbaa !1413\l  %39 = getelementptr inbounds %struct.obstack, %struct.obstack* %38, i32 0,\l... i32 3, !dbg !1437\l  %40 = load i8*, i8** %39, align 8, !dbg !1437, !tbaa !1422\l  %41 = load i8*, i8** %10, align 8, !dbg !1437, !tbaa !1413\l  %42 = icmp eq i8* %40, %41, !dbg !1437\l  br i1 %42, label %43, label %49, !dbg !1436\l|{<s0>T|<s1>F}}"];
	Node0x2262640:s0 -> Node0x2262690;
	Node0x2262640:s1 -> Node0x22626e0;
	Node0x2262690 [shape=record,label="{%43:\l\l  %44 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !1437,\l... !tbaa !1413\l  %45 = getelementptr inbounds %struct.obstack, %struct.obstack* %44, i32 0,\l... i32 10, !dbg !1437\l  %46 = load i8, i8* %45, align 8, !dbg !1437\l  %47 = and i8 %46, -3, !dbg !1437\l  %48 = or i8 %47, 2, !dbg !1437\l  store i8 %48, i8* %45, align 8, !dbg !1437\l  br label %49, !dbg !1437\l}"];
	Node0x2262690 -> Node0x22626e0;
	Node0x22626e0 [shape=record,label="{%49:\l\l  %50 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !1436,\l... !tbaa !1413\l  %51 = getelementptr inbounds %struct.obstack, %struct.obstack* %50, i32 0,\l... i32 3, !dbg !1436\l  %52 = load i8*, i8** %51, align 8, !dbg !1436, !tbaa !1422\l  %53 = ptrtoint i8* %52 to i64, !dbg !1436\l  %54 = sub i64 %53, 0, !dbg !1436\l  %55 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !1436,\l... !tbaa !1413\l  %56 = getelementptr inbounds %struct.obstack, %struct.obstack* %55, i32 0,\l... i32 6, !dbg !1436\l  %57 = load i64, i64* %56, align 8, !dbg !1436, !tbaa !1439\l  %58 = add i64 %54, %57, !dbg !1436\l  %59 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !1436,\l... !tbaa !1413\l  %60 = getelementptr inbounds %struct.obstack, %struct.obstack* %59, i32 0,\l... i32 6, !dbg !1436\l  %61 = load i64, i64* %60, align 8, !dbg !1436, !tbaa !1439\l  %62 = xor i64 %61, -1, !dbg !1436\l  %63 = and i64 %58, %62, !dbg !1436\l  %64 = getelementptr inbounds i8, i8* null, i64 %63, !dbg !1436\l  %65 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !1436,\l... !tbaa !1413\l  %66 = getelementptr inbounds %struct.obstack, %struct.obstack* %65, i32 0,\l... i32 3, !dbg !1436\l  store i8* %64, i8** %66, align 8, !dbg !1436, !tbaa !1422\l  %67 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !1440,\l... !tbaa !1413\l  %68 = getelementptr inbounds %struct.obstack, %struct.obstack* %67, i32 0,\l... i32 3, !dbg !1440\l  %69 = load i8*, i8** %68, align 8, !dbg !1440, !tbaa !1422\l  %70 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !1440,\l... !tbaa !1413\l  %71 = getelementptr inbounds %struct.obstack, %struct.obstack* %70, i32 0,\l... i32 1, !dbg !1440\l  %72 = load %struct._obstack_chunk*, %struct._obstack_chunk** %71, align 8,\l... !dbg !1440, !tbaa !1442\l  %73 = bitcast %struct._obstack_chunk* %72 to i8*, !dbg !1440\l  %74 = ptrtoint i8* %69 to i64, !dbg !1440\l  %75 = ptrtoint i8* %73 to i64, !dbg !1440\l  %76 = sub i64 %74, %75, !dbg !1440\l  %77 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !1440,\l... !tbaa !1413\l  %78 = getelementptr inbounds %struct.obstack, %struct.obstack* %77, i32 0,\l... i32 4, !dbg !1440\l  %79 = load i8*, i8** %78, align 8, !dbg !1440, !tbaa !1443\l  %80 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !1440,\l... !tbaa !1413\l  %81 = getelementptr inbounds %struct.obstack, %struct.obstack* %80, i32 0,\l... i32 1, !dbg !1440\l  %82 = load %struct._obstack_chunk*, %struct._obstack_chunk** %81, align 8,\l... !dbg !1440, !tbaa !1442\l  %83 = bitcast %struct._obstack_chunk* %82 to i8*, !dbg !1440\l  %84 = ptrtoint i8* %79 to i64, !dbg !1440\l  %85 = ptrtoint i8* %83 to i64, !dbg !1440\l  %86 = sub i64 %84, %85, !dbg !1440\l  %87 = icmp ugt i64 %76, %86, !dbg !1440\l  br i1 %87, label %88, label %94, !dbg !1436\l|{<s0>T|<s1>F}}"];
	Node0x22626e0:s0 -> Node0x2262730;
	Node0x22626e0:s1 -> Node0x2262780;
	Node0x2262730 [shape=record,label="{%88:\l\l  %89 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !1440,\l... !tbaa !1413\l  %90 = getelementptr inbounds %struct.obstack, %struct.obstack* %89, i32 0,\l... i32 4, !dbg !1440\l  %91 = load i8*, i8** %90, align 8, !dbg !1440, !tbaa !1443\l  %92 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !1440,\l... !tbaa !1413\l  %93 = getelementptr inbounds %struct.obstack, %struct.obstack* %92, i32 0,\l... i32 3, !dbg !1440\l  store i8* %91, i8** %93, align 8, !dbg !1440, !tbaa !1422\l  br label %94, !dbg !1440\l}"];
	Node0x2262730 -> Node0x2262780;
	Node0x2262780 [shape=record,label="{%94:\l\l  %95 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !1436,\l... !tbaa !1413\l  %96 = getelementptr inbounds %struct.obstack, %struct.obstack* %95, i32 0,\l... i32 3, !dbg !1436\l  %97 = load i8*, i8** %96, align 8, !dbg !1436, !tbaa !1422\l  %98 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !1436,\l... !tbaa !1413\l  %99 = getelementptr inbounds %struct.obstack, %struct.obstack* %98, i32 0,\l... i32 2, !dbg !1436\l  store i8* %97, i8** %99, align 8, !dbg !1436, !tbaa !1426\l  %100 = load i8*, i8** %10, align 8, !dbg !1436, !tbaa !1413\l  store i8* %100, i8** %11, align 8, !dbg !1436, !tbaa !1413\l  %101 = bitcast i8** %10 to i8*, !dbg !1444\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #14, !dbg !1444\l  %102 = bitcast %struct.obstack** %9 to i8*, !dbg !1444\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #14, !dbg !1444\l  %103 = load i8*, i8** %11, align 8, !dbg !1436, !tbaa !1413\l  %104 = bitcast i8* %103 to i64*, !dbg !1445\l  store i64* %104, i64** %8, align 8, !dbg !1435, !tbaa !1413\l  %105 = load i8*, i8** %3, align 8, !dbg !1446, !tbaa !1413\l  %106 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg\l... !1446, !tbaa !1413\l  %107 = call i32 @fputs_unlocked(i8* %105, %struct._IO_FILE* %106), !dbg !1446\l  %108 = bitcast i64* %12 to i8*, !dbg !1447\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %108) #14, !dbg !1447\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1411, metadata\l... !DIExpression()), !dbg !1448\l  store i64 0, i64* %12, align 8, !dbg !1448, !tbaa !1427\l  br label %109, !dbg !1447\l}"];
	Node0x2262780 -> Node0x22627d0;
	Node0x22627d0 [shape=record,label="{%109:\l\l  %110 = load i64, i64* %12, align 8, !dbg !1449, !tbaa !1427\l  %111 = load i64, i64* %5, align 8, !dbg !1451, !tbaa !1427\l  %112 = icmp ult i64 %110, %111, !dbg !1452\l  br i1 %112, label %115, label %113, !dbg !1453\l|{<s0>T|<s1>F}}"];
	Node0x22627d0:s0 -> Node0x2262870;
	Node0x22627d0:s1 -> Node0x2262820;
	Node0x2262820 [shape=record,label="{%113:\l\l  %114 = bitcast i64* %12 to i8*, !dbg !1454\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %114) #14, !dbg !1454\l  br label %124\l}"];
	Node0x2262820 -> Node0x2262910;
	Node0x2262870 [shape=record,label="{%115:\l\l  %116 = load i64*, i64** %8, align 8, !dbg !1455, !tbaa !1413\l  %117 = load i64, i64* %12, align 8, !dbg !1456, !tbaa !1427\l  %118 = getelementptr inbounds i64, i64* %116, i64 %117, !dbg !1455\l  %119 = load i64, i64* %118, align 8, !dbg !1455, !tbaa !1427\l  %120 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5\l... x i8]* @.str.60, i32 0, i32 0), i64 %119), !dbg !1457\l  br label %121, !dbg !1457\l}"];
	Node0x2262870 -> Node0x22628c0;
	Node0x22628c0 [shape=record,label="{%121:\l\l  %122 = load i64, i64* %12, align 8, !dbg !1458, !tbaa !1427\l  %123 = add i64 %122, 1, !dbg !1458\l  store i64 %123, i64* %12, align 8, !dbg !1458, !tbaa !1427\l  br label %109, !dbg !1454, !llvm.loop !1459\l}"];
	Node0x22628c0 -> Node0x22627d0;
	Node0x2262910 [shape=record,label="{%124:\l\l  %125 = call i32 @putchar_unlocked(i32 10), !dbg !1461\l  %126 = bitcast i64** %8 to i8*, !dbg !1462\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #14, !dbg !1462\l  br label %127, !dbg !1463\l}"];
	Node0x2262910 -> Node0x2262960;
	Node0x2262960 [shape=record,label="{%127:\l\l  %128 = bitcast i64* %5 to i8*, !dbg !1464\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %128) #14, !dbg !1464\l  ret void, !dbg !1464\l}"];
}
