digraph "CFG for 'sha512_conclude_ctx' function" {
	label="CFG for 'sha512_conclude_ctx' function";

	Node0x277ade0 [shape=record,label="{%1:\l  %2 = alloca %struct.sha512_ctx*, align 8\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  store %struct.sha512_ctx* %0, %struct.sha512_ctx** %2, align 8, !tbaa !805\l  call void @llvm.dbg.declare(metadata %struct.sha512_ctx** %2, metadata !802,\l... metadata !DIExpression()), !dbg !809\l  %5 = bitcast i64* %3 to i8*, !dbg !810\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #12, !dbg !810\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !803, metadata\l... !DIExpression()), !dbg !811\l  %6 = load %struct.sha512_ctx*, %struct.sha512_ctx** %2, align 8, !dbg !812,\l... !tbaa !805\l  %7 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %6, i32\l... 0, i32 2, !dbg !813\l  %8 = load i64, i64* %7, align 8, !dbg !813, !tbaa !814\l  store i64 %8, i64* %3, align 8, !dbg !811, !tbaa !817\l  %9 = bitcast i64* %4 to i8*, !dbg !818\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #12, !dbg !818\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !804, metadata\l... !DIExpression()), !dbg !819\l  %10 = load i64, i64* %3, align 8, !dbg !820, !tbaa !817\l  %11 = icmp ult i64 %10, 112, !dbg !821\l  %12 = zext i1 %11 to i64, !dbg !822\l  %13 = select i1 %11, i32 16, i32 32, !dbg !822\l  %14 = sext i32 %13 to i64, !dbg !822\l  store i64 %14, i64* %4, align 8, !dbg !819, !tbaa !817\l  %15 = load %struct.sha512_ctx*, %struct.sha512_ctx** %2, align 8, !dbg !823,\l... !tbaa !805\l  %16 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %15,\l... i32 0, i32 1, !dbg !823\l  %17 = getelementptr inbounds [2 x i64], [2 x i64]* %16, i64 0, i64 0, !dbg\l... !823\l  %18 = load i64, i64* %17, align 8, !dbg !823, !tbaa !817\l  %19 = load i64, i64* %3, align 8, !dbg !823, !tbaa !817\l  %20 = add i64 %18, %19, !dbg !823\l  %21 = load %struct.sha512_ctx*, %struct.sha512_ctx** %2, align 8, !dbg !824,\l... !tbaa !805\l  %22 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %21,\l... i32 0, i32 1, !dbg !825\l  %23 = getelementptr inbounds [2 x i64], [2 x i64]* %22, i64 0, i64 0, !dbg\l... !824\l  store i64 %20, i64* %23, align 8, !dbg !826, !tbaa !817\l  %24 = load %struct.sha512_ctx*, %struct.sha512_ctx** %2, align 8, !dbg !827,\l... !tbaa !805\l  %25 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %24,\l... i32 0, i32 1, !dbg !827\l  %26 = getelementptr inbounds [2 x i64], [2 x i64]* %25, i64 0, i64 0, !dbg\l... !827\l  %27 = load i64, i64* %26, align 8, !dbg !827, !tbaa !817\l  %28 = load i64, i64* %3, align 8, !dbg !827, !tbaa !817\l  %29 = icmp ult i64 %27, %28, !dbg !827\l  br i1 %29, label %30, label %39, !dbg !829\l|{<s0>T|<s1>F}}"];
	Node0x277ade0:s0 -> Node0x277b8a0;
	Node0x277ade0:s1 -> Node0x277b8f0;
	Node0x277b8a0 [shape=record,label="{%30:\l\l  %31 = load %struct.sha512_ctx*, %struct.sha512_ctx** %2, align 8, !dbg !830,\l... !tbaa !805\l  %32 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %31,\l... i32 0, i32 1, !dbg !830\l  %33 = getelementptr inbounds [2 x i64], [2 x i64]* %32, i64 0, i64 1, !dbg\l... !830\l  %34 = load i64, i64* %33, align 8, !dbg !830, !tbaa !817\l  %35 = add i64 %34, 1, !dbg !830\l  %36 = load %struct.sha512_ctx*, %struct.sha512_ctx** %2, align 8, !dbg !831,\l... !tbaa !805\l  %37 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %36,\l... i32 0, i32 1, !dbg !832\l  %38 = getelementptr inbounds [2 x i64], [2 x i64]* %37, i64 0, i64 1, !dbg\l... !831\l  store i64 %35, i64* %38, align 8, !dbg !833, !tbaa !817\l  br label %39, !dbg !831\l}"];
	Node0x277b8a0 -> Node0x277b8f0;
	Node0x277b8f0 [shape=record,label="{%39:\l\l  %40 = load %struct.sha512_ctx*, %struct.sha512_ctx** %2, align 8, !dbg !834,\l... !tbaa !805\l  %41 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %40,\l... i32 0, i32 3, !dbg !835\l  %42 = load i64, i64* %4, align 8, !dbg !836, !tbaa !817\l  %43 = sub i64 %42, 2, !dbg !837\l  %44 = getelementptr inbounds [32 x i64], [32 x i64]* %41, i64 0, i64 %43,\l... !dbg !834\l  %45 = bitcast i64* %44 to i8*, !dbg !838\l  %46 = load %struct.sha512_ctx*, %struct.sha512_ctx** %2, align 8, !dbg !839,\l... !tbaa !805\l  %47 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %46,\l... i32 0, i32 1, !dbg !839\l  %48 = getelementptr inbounds [2 x i64], [2 x i64]* %47, i64 0, i64 1, !dbg\l... !839\l  %49 = load i64, i64* %48, align 8, !dbg !839, !tbaa !817\l  %50 = shl i64 %49, 3, !dbg !839\l  %51 = load %struct.sha512_ctx*, %struct.sha512_ctx** %2, align 8, !dbg !839,\l... !tbaa !805\l  %52 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %51,\l... i32 0, i32 1, !dbg !839\l  %53 = getelementptr inbounds [2 x i64], [2 x i64]* %52, i64 0, i64 0, !dbg\l... !839\l  %54 = load i64, i64* %53, align 8, !dbg !839, !tbaa !817\l  %55 = lshr i64 %54, 61, !dbg !839\l  %56 = or i64 %50, %55, !dbg !839\l  %57 = call i64 @__bswap_64(i64 %56), !dbg !839\l  call void @set_uint64(i8* %45, i64 %57), !dbg !840\l  %58 = load %struct.sha512_ctx*, %struct.sha512_ctx** %2, align 8, !dbg !841,\l... !tbaa !805\l  %59 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %58,\l... i32 0, i32 3, !dbg !842\l  %60 = load i64, i64* %4, align 8, !dbg !843, !tbaa !817\l  %61 = sub i64 %60, 1, !dbg !844\l  %62 = getelementptr inbounds [32 x i64], [32 x i64]* %59, i64 0, i64 %61,\l... !dbg !841\l  %63 = bitcast i64* %62 to i8*, !dbg !845\l  %64 = load %struct.sha512_ctx*, %struct.sha512_ctx** %2, align 8, !dbg !846,\l... !tbaa !805\l  %65 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %64,\l... i32 0, i32 1, !dbg !846\l  %66 = getelementptr inbounds [2 x i64], [2 x i64]* %65, i64 0, i64 0, !dbg\l... !846\l  %67 = load i64, i64* %66, align 8, !dbg !846, !tbaa !817\l  %68 = shl i64 %67, 3, !dbg !846\l  %69 = call i64 @__bswap_64(i64 %68), !dbg !846\l  call void @set_uint64(i8* %63, i64 %69), !dbg !847\l  %70 = load %struct.sha512_ctx*, %struct.sha512_ctx** %2, align 8, !dbg !848,\l... !tbaa !805\l  %71 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %70,\l... i32 0, i32 3, !dbg !849\l  %72 = getelementptr inbounds [32 x i64], [32 x i64]* %71, i32 0, i32 0, !dbg\l... !850\l  %73 = bitcast i64* %72 to i8*, !dbg !850\l  %74 = load i64, i64* %3, align 8, !dbg !851, !tbaa !817\l  %75 = getelementptr inbounds i8, i8* %73, i64 %74, !dbg !850\l  %76 = load i64, i64* %4, align 8, !dbg !852, !tbaa !817\l  %77 = sub i64 %76, 2, !dbg !853\l  %78 = mul i64 %77, 8, !dbg !854\l  %79 = load i64, i64* %3, align 8, !dbg !855, !tbaa !817\l  %80 = sub i64 %78, %79, !dbg !856\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %75, i8* align 16\l... getelementptr inbounds ([128 x i8], [128 x i8]* bitcast (\<\{ i8, [127 x i8]\l... \}\>* @fillbuf to [128 x i8]*), i32 0, i32 0), i64 %80, i1 false), !dbg !857\l  %81 = load %struct.sha512_ctx*, %struct.sha512_ctx** %2, align 8, !dbg !858,\l... !tbaa !805\l  %82 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %81,\l... i32 0, i32 3, !dbg !859\l  %83 = getelementptr inbounds [32 x i64], [32 x i64]* %82, i32 0, i32 0, !dbg\l... !858\l  %84 = bitcast i64* %83 to i8*, !dbg !858\l  %85 = load i64, i64* %4, align 8, !dbg !860, !tbaa !817\l  %86 = mul i64 %85, 8, !dbg !861\l  %87 = load %struct.sha512_ctx*, %struct.sha512_ctx** %2, align 8, !dbg !862,\l... !tbaa !805\l  call void @sha512_process_block(i8* %84, i64 %86, %struct.sha512_ctx* %87),\l... !dbg !863\l  %88 = bitcast i64* %4 to i8*, !dbg !864\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88) #12, !dbg !864\l  %89 = bitcast i64* %3 to i8*, !dbg !864\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #12, !dbg !864\l  ret void, !dbg !864\l}"];
}
