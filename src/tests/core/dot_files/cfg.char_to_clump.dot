digraph "CFG for 'char_to_clump' function" {
	label="CFG for 'char_to_clump' function";

	Node0x166c330 [shape=record,label="{%1:\l  %2 = alloca i8, align 1\l  %3 = alloca i8, align 1\l  %4 = alloca i8*, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca [4 x i8], align 1\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  store i8 %0, i8* %2, align 1, !tbaa !1018\l  call void @llvm.dbg.declare(metadata i8* %2, metadata !1007, metadata\l... !DIExpression()), !dbg !1021\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #13, !dbg !1022\l  call void @llvm.dbg.declare(metadata i8* %3, metadata !1008, metadata\l... !DIExpression()), !dbg !1023\l  %10 = load i8, i8* %2, align 1, !dbg !1024, !tbaa !1018\l  store i8 %10, i8* %3, align 1, !dbg !1023, !tbaa !1018\l  %11 = bitcast i8** %4 to i8*, !dbg !1025\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13, !dbg !1025\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !1009, metadata\l... !DIExpression()), !dbg !1026\l  %12 = load i8*, i8** @clump_buff, align 8, !dbg !1027, !tbaa !1028\l  store i8* %12, i8** %4, align 8, !dbg !1026, !tbaa !1028\l  %13 = bitcast i32* %5 to i8*, !dbg !1030\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #13, !dbg !1030\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !1010, metadata\l... !DIExpression()), !dbg !1031\l  %14 = bitcast [4 x i8]* %6 to i8*, !dbg !1032\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #13, !dbg !1032\l  call void @llvm.dbg.declare(metadata [4 x i8]* %6, metadata !1011, metadata\l... !DIExpression()), !dbg !1033\l  %15 = bitcast i32* %7 to i8*, !dbg !1034\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #13, !dbg !1034\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !1015, metadata\l... !DIExpression()), !dbg !1035\l  %16 = bitcast i32* %8 to i8*, !dbg !1036\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #13, !dbg !1036\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !1016, metadata\l... !DIExpression()), !dbg !1037\l  %17 = bitcast i32* %9 to i8*, !dbg !1038\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #13, !dbg !1038\l  call void @llvm.dbg.declare(metadata i32* %9, metadata !1017, metadata\l... !DIExpression()), !dbg !1039\l  store i32 8, i32* %9, align 4, !dbg !1039, !tbaa !1040\l  %18 = load i8, i8* %2, align 1, !dbg !1042, !tbaa !1018\l  %19 = sext i8 %18 to i32, !dbg !1042\l  %20 = load i8, i8* @input_tab_char, align 1, !dbg !1044, !tbaa !1018\l  %21 = sext i8 %20 to i32, !dbg !1044\l  %22 = icmp eq i32 %19, %21, !dbg !1045\l  br i1 %22, label %23, label %25, !dbg !1046\l|{<s0>T|<s1>F}}"];
	Node0x166c330:s0 -> Node0x166c3b0;
	Node0x166c330:s1 -> Node0x166c400;
	Node0x166c3b0 [shape=record,label="{%23:\l\l  %24 = load i32, i32* @chars_per_input_tab, align 4, !dbg !1047, !tbaa !1040\l  store i32 %24, i32* %9, align 4, !dbg !1048, !tbaa !1040\l  br label %25, !dbg !1049\l}"];
	Node0x166c3b0 -> Node0x166c400;
	Node0x166c400 [shape=record,label="{%25:\l\l  %26 = load i8, i8* %2, align 1, !dbg !1050, !tbaa !1018\l  %27 = sext i8 %26 to i32, !dbg !1050\l  %28 = load i8, i8* @input_tab_char, align 1, !dbg !1052, !tbaa !1018\l  %29 = sext i8 %28 to i32, !dbg !1052\l  %30 = icmp eq i32 %27, %29, !dbg !1053\l  br i1 %30, label %35, label %31, !dbg !1054\l|{<s0>T|<s1>F}}"];
	Node0x166c400:s0 -> Node0x166c4a0;
	Node0x166c400:s1 -> Node0x166c450;
	Node0x166c450 [shape=record,label="{%31:\l\l  %32 = load i8, i8* %2, align 1, !dbg !1055, !tbaa !1018\l  %33 = sext i8 %32 to i32, !dbg !1055\l  %34 = icmp eq i32 %33, 9, !dbg !1056\l  br i1 %34, label %35, label %60, !dbg !1057\l|{<s0>T|<s1>F}}"];
	Node0x166c450:s0 -> Node0x166c4a0;
	Node0x166c450:s1 -> Node0x166c720;
	Node0x166c4a0 [shape=record,label="{%35:\l\l  %36 = load i32, i32* %9, align 4, !dbg !1058, !tbaa !1040\l  %37 = load i32, i32* @input_position, align 4, !dbg !1058, !tbaa !1040\l  %38 = load i32, i32* %9, align 4, !dbg !1058, !tbaa !1040\l  %39 = srem i32 %37, %38, !dbg !1058\l  %40 = sub nsw i32 %36, %39, !dbg !1058\l  store i32 %40, i32* %7, align 4, !dbg !1060, !tbaa !1040\l  %41 = load i8, i8* @untabify_input, align 1, !dbg !1061, !tbaa !1063, !range\l... !1065\l  %42 = trunc i8 %41 to i1, !dbg !1061\l  br i1 %42, label %43, label %56, !dbg !1066\l|{<s0>T|<s1>F}}"];
	Node0x166c4a0:s0 -> Node0x166c4f0;
	Node0x166c4a0:s1 -> Node0x166c680;
	Node0x166c4f0 [shape=record,label="{%43:\l\l  %44 = load i32, i32* %7, align 4, !dbg !1067, !tbaa !1040\l  store i32 %44, i32* %5, align 4, !dbg !1070, !tbaa !1040\l  br label %45, !dbg !1071\l}"];
	Node0x166c4f0 -> Node0x166c540;
	Node0x166c540 [shape=record,label="{%45:\l\l  %46 = load i32, i32* %5, align 4, !dbg !1072, !tbaa !1040\l  %47 = icmp ne i32 %46, 0, !dbg !1074\l  br i1 %47, label %48, label %54, !dbg !1074\l|{<s0>T|<s1>F}}"];
	Node0x166c540:s0 -> Node0x166c590;
	Node0x166c540:s1 -> Node0x166c630;
	Node0x166c590 [shape=record,label="{%48:\l\l  %49 = load i8*, i8** %4, align 8, !dbg !1075, !tbaa !1028\l  %50 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !1075\l  store i8* %50, i8** %4, align 8, !dbg !1075, !tbaa !1028\l  store i8 32, i8* %49, align 1, !dbg !1076, !tbaa !1018\l  br label %51, !dbg !1077\l}"];
	Node0x166c590 -> Node0x166c5e0;
	Node0x166c5e0 [shape=record,label="{%51:\l\l  %52 = load i32, i32* %5, align 4, !dbg !1078, !tbaa !1040\l  %53 = add nsw i32 %52, -1, !dbg !1078\l  store i32 %53, i32* %5, align 4, !dbg !1078, !tbaa !1040\l  br label %45, !dbg !1079, !llvm.loop !1080\l}"];
	Node0x166c5e0 -> Node0x166c540;
	Node0x166c630 [shape=record,label="{%54:\l\l  %55 = load i32, i32* %7, align 4, !dbg !1082, !tbaa !1040\l  store i32 %55, i32* %8, align 4, !dbg !1083, !tbaa !1040\l  br label %59, !dbg !1084\l}"];
	Node0x166c630 -> Node0x166c6d0;
	Node0x166c680 [shape=record,label="{%56:\l\l  %57 = load i8, i8* %2, align 1, !dbg !1085, !tbaa !1018\l  %58 = load i8*, i8** %4, align 8, !dbg !1087, !tbaa !1028\l  store i8 %57, i8* %58, align 1, !dbg !1088, !tbaa !1018\l  store i32 1, i32* %8, align 4, !dbg !1089, !tbaa !1040\l  br label %59\l}"];
	Node0x166c680 -> Node0x166c6d0;
	Node0x166c6d0 [shape=record,label="{%59:\l\l  br label %149, !dbg !1090\l}"];
	Node0x166c6d0 -> Node0x166cea0;
	Node0x166c720 [shape=record,label="{%60:\l\l  %61 = call i16** @__ctype_b_loc() #14, !dbg !1091\l  %62 = load i16*, i16** %61, align 8, !dbg !1091, !tbaa !1028\l  %63 = load i8, i8* %3, align 1, !dbg !1091, !tbaa !1018\l  %64 = zext i8 %63 to i32, !dbg !1091\l  %65 = sext i32 %64 to i64, !dbg !1091\l  %66 = getelementptr inbounds i16, i16* %62, i64 %65, !dbg !1091\l  %67 = load i16, i16* %66, align 2, !dbg !1091, !tbaa !1093\l  %68 = zext i16 %67 to i32, !dbg !1091\l  %69 = and i32 %68, 16384, !dbg !1091\l  %70 = icmp ne i32 %69, 0, !dbg !1091\l  br i1 %70, label %145, label %71, !dbg !1095\l|{<s0>T|<s1>F}}"];
	Node0x166c720:s0 -> Node0x166ce00;
	Node0x166c720:s1 -> Node0x166c770;
	Node0x166c770 [shape=record,label="{%71:\l\l  %72 = load i8, i8* @use_esc_sequence, align 1, !dbg !1096, !tbaa !1063,\l... !range !1065\l  %73 = trunc i8 %72 to i1, !dbg !1096\l  br i1 %73, label %74, label %95, !dbg !1099\l|{<s0>T|<s1>F}}"];
	Node0x166c770:s0 -> Node0x166c7c0;
	Node0x166c770:s1 -> Node0x166c950;
	Node0x166c7c0 [shape=record,label="{%74:\l\l  store i32 4, i32* %7, align 4, !dbg !1100, !tbaa !1040\l  store i32 4, i32* %8, align 4, !dbg !1102, !tbaa !1040\l  %75 = load i8*, i8** %4, align 8, !dbg !1103, !tbaa !1028\l  %76 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !1103\l  store i8* %76, i8** %4, align 8, !dbg !1103, !tbaa !1028\l  store i8 92, i8* %75, align 1, !dbg !1104, !tbaa !1018\l  %77 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i32 0, i32 0, !dbg !1105\l  %78 = load i8, i8* %3, align 1, !dbg !1106, !tbaa !1018\l  %79 = zext i8 %78 to i32, !dbg !1106\l  %80 = call i32 (i8*, i8*, ...) @sprintf(i8* %77, i8* getelementptr inbounds\l... ([5 x i8], [5 x i8]* @.str.77, i32 0, i32 0), i32 %79) #13, !dbg !1107\l  store i32 0, i32* %5, align 4, !dbg !1108, !tbaa !1040\l  br label %81, !dbg !1110\l}"];
	Node0x166c7c0 -> Node0x166c810;
	Node0x166c810 [shape=record,label="{%81:\l\l  %82 = load i32, i32* %5, align 4, !dbg !1111, !tbaa !1040\l  %83 = icmp sle i32 %82, 2, !dbg !1113\l  br i1 %83, label %84, label %94, !dbg !1114\l|{<s0>T|<s1>F}}"];
	Node0x166c810:s0 -> Node0x166c860;
	Node0x166c810:s1 -> Node0x166c900;
	Node0x166c860 [shape=record,label="{%84:\l\l  %85 = load i32, i32* %5, align 4, !dbg !1115, !tbaa !1040\l  %86 = sext i32 %85 to i64, !dbg !1116\l  %87 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 0, i64 %86, !dbg\l... !1116\l  %88 = load i8, i8* %87, align 1, !dbg !1116, !tbaa !1018\l  %89 = load i8*, i8** %4, align 8, !dbg !1117, !tbaa !1028\l  %90 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !1117\l  store i8* %90, i8** %4, align 8, !dbg !1117, !tbaa !1028\l  store i8 %88, i8* %89, align 1, !dbg !1118, !tbaa !1018\l  br label %91, !dbg !1119\l}"];
	Node0x166c860 -> Node0x166c8b0;
	Node0x166c8b0 [shape=record,label="{%91:\l\l  %92 = load i32, i32* %5, align 4, !dbg !1120, !tbaa !1040\l  %93 = add nsw i32 %92, 1, !dbg !1120\l  store i32 %93, i32* %5, align 4, !dbg !1120, !tbaa !1040\l  br label %81, !dbg !1121, !llvm.loop !1122\l}"];
	Node0x166c8b0 -> Node0x166c810;
	Node0x166c900 [shape=record,label="{%94:\l\l  br label %144, !dbg !1124\l}"];
	Node0x166c900 -> Node0x166cdb0;
	Node0x166c950 [shape=record,label="{%95:\l\l  %96 = load i8, i8* @use_cntrl_prefix, align 1, !dbg !1125, !tbaa !1063,\l... !range !1065\l  %97 = trunc i8 %96 to i1, !dbg !1125\l  br i1 %97, label %98, label %132, !dbg !1127\l|{<s0>T|<s1>F}}"];
	Node0x166c950:s0 -> Node0x166c9a0;
	Node0x166c950:s1 -> Node0x166cc20;
	Node0x166c9a0 [shape=record,label="{%98:\l\l  %99 = load i8, i8* %3, align 1, !dbg !1128, !tbaa !1018\l  %100 = zext i8 %99 to i32, !dbg !1128\l  %101 = icmp slt i32 %100, 128, !dbg !1131\l  br i1 %101, label %102, label %110, !dbg !1132\l|{<s0>T|<s1>F}}"];
	Node0x166c9a0:s0 -> Node0x166c9f0;
	Node0x166c9a0:s1 -> Node0x166ca40;
	Node0x166c9f0 [shape=record,label="{%102:\l\l  store i32 2, i32* %7, align 4, !dbg !1133, !tbaa !1040\l  store i32 2, i32* %8, align 4, !dbg !1135, !tbaa !1040\l  %103 = load i8*, i8** %4, align 8, !dbg !1136, !tbaa !1028\l  %104 = getelementptr inbounds i8, i8* %103, i32 1, !dbg !1136\l  store i8* %104, i8** %4, align 8, !dbg !1136, !tbaa !1028\l  store i8 94, i8* %103, align 1, !dbg !1137, !tbaa !1018\l  %105 = load i8, i8* %2, align 1, !dbg !1138, !tbaa !1018\l  %106 = sext i8 %105 to i32, !dbg !1138\l  %107 = xor i32 %106, 64, !dbg !1139\l  %108 = trunc i32 %107 to i8, !dbg !1138\l  %109 = load i8*, i8** %4, align 8, !dbg !1140, !tbaa !1028\l  store i8 %108, i8* %109, align 1, !dbg !1141, !tbaa !1018\l  br label %131, !dbg !1142\l}"];
	Node0x166c9f0 -> Node0x166cbd0;
	Node0x166ca40 [shape=record,label="{%110:\l\l  store i32 4, i32* %7, align 4, !dbg !1143, !tbaa !1040\l  store i32 4, i32* %8, align 4, !dbg !1145, !tbaa !1040\l  %111 = load i8*, i8** %4, align 8, !dbg !1146, !tbaa !1028\l  %112 = getelementptr inbounds i8, i8* %111, i32 1, !dbg !1146\l  store i8* %112, i8** %4, align 8, !dbg !1146, !tbaa !1028\l  store i8 92, i8* %111, align 1, !dbg !1147, !tbaa !1018\l  %113 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i32 0, i32 0, !dbg\l... !1148\l  %114 = load i8, i8* %3, align 1, !dbg !1149, !tbaa !1018\l  %115 = zext i8 %114 to i32, !dbg !1149\l  %116 = call i32 (i8*, i8*, ...) @sprintf(i8* %113, i8* getelementptr\l... inbounds ([5 x i8], [5 x i8]* @.str.77, i32 0, i32 0), i32 %115) #13, !dbg\l... !1150\l  store i32 0, i32* %5, align 4, !dbg !1151, !tbaa !1040\l  br label %117, !dbg !1153\l}"];
	Node0x166ca40 -> Node0x166ca90;
	Node0x166ca90 [shape=record,label="{%117:\l\l  %118 = load i32, i32* %5, align 4, !dbg !1154, !tbaa !1040\l  %119 = icmp sle i32 %118, 2, !dbg !1156\l  br i1 %119, label %120, label %130, !dbg !1157\l|{<s0>T|<s1>F}}"];
	Node0x166ca90:s0 -> Node0x166cae0;
	Node0x166ca90:s1 -> Node0x166cb80;
	Node0x166cae0 [shape=record,label="{%120:\l\l  %121 = load i32, i32* %5, align 4, !dbg !1158, !tbaa !1040\l  %122 = sext i32 %121 to i64, !dbg !1159\l  %123 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 0, i64 %122, !dbg\l... !1159\l  %124 = load i8, i8* %123, align 1, !dbg !1159, !tbaa !1018\l  %125 = load i8*, i8** %4, align 8, !dbg !1160, !tbaa !1028\l  %126 = getelementptr inbounds i8, i8* %125, i32 1, !dbg !1160\l  store i8* %126, i8** %4, align 8, !dbg !1160, !tbaa !1028\l  store i8 %124, i8* %125, align 1, !dbg !1161, !tbaa !1018\l  br label %127, !dbg !1162\l}"];
	Node0x166cae0 -> Node0x166cb30;
	Node0x166cb30 [shape=record,label="{%127:\l\l  %128 = load i32, i32* %5, align 4, !dbg !1163, !tbaa !1040\l  %129 = add nsw i32 %128, 1, !dbg !1163\l  store i32 %129, i32* %5, align 4, !dbg !1163, !tbaa !1040\l  br label %117, !dbg !1164, !llvm.loop !1165\l}"];
	Node0x166cb30 -> Node0x166ca90;
	Node0x166cb80 [shape=record,label="{%130:\l\l  br label %131\l}"];
	Node0x166cb80 -> Node0x166cbd0;
	Node0x166cbd0 [shape=record,label="{%131:\l\l  br label %143, !dbg !1167\l}"];
	Node0x166cbd0 -> Node0x166cd60;
	Node0x166cc20 [shape=record,label="{%132:\l\l  %133 = load i8, i8* %2, align 1, !dbg !1168, !tbaa !1018\l  %134 = sext i8 %133 to i32, !dbg !1168\l  %135 = icmp eq i32 %134, 8, !dbg !1170\l  br i1 %135, label %136, label %139, !dbg !1171\l|{<s0>T|<s1>F}}"];
	Node0x166cc20:s0 -> Node0x166cc70;
	Node0x166cc20:s1 -> Node0x166ccc0;
	Node0x166cc70 [shape=record,label="{%136:\l\l  store i32 -1, i32* %7, align 4, !dbg !1172, !tbaa !1040\l  store i32 1, i32* %8, align 4, !dbg !1174, !tbaa !1040\l  %137 = load i8, i8* %2, align 1, !dbg !1175, !tbaa !1018\l  %138 = load i8*, i8** %4, align 8, !dbg !1176, !tbaa !1028\l  store i8 %137, i8* %138, align 1, !dbg !1177, !tbaa !1018\l  br label %142, !dbg !1178\l}"];
	Node0x166cc70 -> Node0x166cd10;
	Node0x166ccc0 [shape=record,label="{%139:\l\l  store i32 0, i32* %7, align 4, !dbg !1179, !tbaa !1040\l  store i32 1, i32* %8, align 4, !dbg !1181, !tbaa !1040\l  %140 = load i8, i8* %2, align 1, !dbg !1182, !tbaa !1018\l  %141 = load i8*, i8** %4, align 8, !dbg !1183, !tbaa !1028\l  store i8 %140, i8* %141, align 1, !dbg !1184, !tbaa !1018\l  br label %142\l}"];
	Node0x166ccc0 -> Node0x166cd10;
	Node0x166cd10 [shape=record,label="{%142:\l\l  br label %143\l}"];
	Node0x166cd10 -> Node0x166cd60;
	Node0x166cd60 [shape=record,label="{%143:\l\l  br label %144\l}"];
	Node0x166cd60 -> Node0x166cdb0;
	Node0x166cdb0 [shape=record,label="{%144:\l\l  br label %148, !dbg !1185\l}"];
	Node0x166cdb0 -> Node0x166ce50;
	Node0x166ce00 [shape=record,label="{%145:\l\l  store i32 1, i32* %7, align 4, !dbg !1186, !tbaa !1040\l  store i32 1, i32* %8, align 4, !dbg !1188, !tbaa !1040\l  %146 = load i8, i8* %2, align 1, !dbg !1189, !tbaa !1018\l  %147 = load i8*, i8** %4, align 8, !dbg !1190, !tbaa !1028\l  store i8 %146, i8* %147, align 1, !dbg !1191, !tbaa !1018\l  br label %148\l}"];
	Node0x166ce00 -> Node0x166ce50;
	Node0x166ce50 [shape=record,label="{%148:\l\l  br label %149\l}"];
	Node0x166ce50 -> Node0x166cea0;
	Node0x166cea0 [shape=record,label="{%149:\l\l  %150 = load i32, i32* %7, align 4, !dbg !1192, !tbaa !1040\l  %151 = icmp slt i32 %150, 0, !dbg !1194\l  br i1 %151, label %152, label %156, !dbg !1195\l|{<s0>T|<s1>F}}"];
	Node0x166cea0:s0 -> Node0x166cef0;
	Node0x166cea0:s1 -> Node0x166cf90;
	Node0x166cef0 [shape=record,label="{%152:\l\l  %153 = load i32, i32* @input_position, align 4, !dbg !1196, !tbaa !1040\l  %154 = icmp eq i32 %153, 0, !dbg !1197\l  br i1 %154, label %155, label %156, !dbg !1198\l|{<s0>T|<s1>F}}"];
	Node0x166cef0:s0 -> Node0x166cf40;
	Node0x166cef0:s1 -> Node0x166cf90;
	Node0x166cf40 [shape=record,label="{%155:\l\l  store i32 0, i32* %8, align 4, !dbg !1199, !tbaa !1040\l  store i32 0, i32* @input_position, align 4, !dbg !1201, !tbaa !1040\l  br label %170, !dbg !1202\l}"];
	Node0x166cf40 -> Node0x166d120;
	Node0x166cf90 [shape=record,label="{%156:\l\l  %157 = load i32, i32* %7, align 4, !dbg !1203, !tbaa !1040\l  %158 = icmp slt i32 %157, 0, !dbg !1205\l  br i1 %158, label %159, label %165, !dbg !1206\l|{<s0>T|<s1>F}}"];
	Node0x166cf90:s0 -> Node0x166cfe0;
	Node0x166cf90:s1 -> Node0x166d080;
	Node0x166cfe0 [shape=record,label="{%159:\l\l  %160 = load i32, i32* @input_position, align 4, !dbg !1207, !tbaa !1040\l  %161 = load i32, i32* %7, align 4, !dbg !1208, !tbaa !1040\l  %162 = sub nsw i32 0, %161, !dbg !1209\l  %163 = icmp sle i32 %160, %162, !dbg !1210\l  br i1 %163, label %164, label %165, !dbg !1211\l|{<s0>T|<s1>F}}"];
	Node0x166cfe0:s0 -> Node0x166d030;
	Node0x166cfe0:s1 -> Node0x166d080;
	Node0x166d030 [shape=record,label="{%164:\l\l  store i32 0, i32* @input_position, align 4, !dbg !1212, !tbaa !1040\l  br label %169, !dbg !1213\l}"];
	Node0x166d030 -> Node0x166d0d0;
	Node0x166d080 [shape=record,label="{%165:\l\l  %166 = load i32, i32* %7, align 4, !dbg !1214, !tbaa !1040\l  %167 = load i32, i32* @input_position, align 4, !dbg !1215, !tbaa !1040\l  %168 = add nsw i32 %167, %166, !dbg !1215\l  store i32 %168, i32* @input_position, align 4, !dbg !1215, !tbaa !1040\l  br label %169\l}"];
	Node0x166d080 -> Node0x166d0d0;
	Node0x166d0d0 [shape=record,label="{%169:\l\l  br label %170\l}"];
	Node0x166d0d0 -> Node0x166d120;
	Node0x166d120 [shape=record,label="{%170:\l\l  %171 = load i32, i32* %8, align 4, !dbg !1216, !tbaa !1040\l  %172 = bitcast i32* %9 to i8*, !dbg !1217\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %172) #13, !dbg !1217\l  %173 = bitcast i32* %8 to i8*, !dbg !1217\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %173) #13, !dbg !1217\l  %174 = bitcast i32* %7 to i8*, !dbg !1217\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %174) #13, !dbg !1217\l  %175 = bitcast [4 x i8]* %6 to i8*, !dbg !1217\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %175) #13, !dbg !1217\l  %176 = bitcast i32* %5 to i8*, !dbg !1217\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %176) #13, !dbg !1217\l  %177 = bitcast i8** %4 to i8*, !dbg !1217\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %177) #13, !dbg !1217\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %3) #13, !dbg !1217\l  ret i32 %171, !dbg !1218\l}"];
}
