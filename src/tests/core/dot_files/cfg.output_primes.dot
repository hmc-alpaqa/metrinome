digraph "CFG for 'output_primes' function" {
	label="CFG for 'output_primes' function";

	Node0xbebea0 [shape=record,label="{%2:\l  %3 = alloca %struct.prime*, align 8\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca i64, align 8\l  %10 = alloca i32, align 4\l  store %struct.prime* %0, %struct.prime** %3, align 8, !tbaa !37\l  call void @llvm.dbg.declare(metadata %struct.prime** %3, metadata !25,\l... metadata !DIExpression()), !dbg !41\l  store i32 %1, i32* %4, align 4, !tbaa !42\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !26, metadata\l... !DIExpression()), !dbg !44\l  %11 = bitcast i32* %5 to i8*, !dbg !45\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #9, !dbg !45\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !27, metadata\l... !DIExpression()), !dbg !46\l  %12 = bitcast i32* %6 to i8*, !dbg !47\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #9, !dbg !47\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !28, metadata\l... !DIExpression()), !dbg !48\l  %13 = bitcast i32* %7 to i8*, !dbg !49\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #9, !dbg !49\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !29, metadata\l... !DIExpression()), !dbg !50\l  %14 = bitcast i32* %8 to i8*, !dbg !51\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #9, !dbg !51\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !31, metadata\l... !DIExpression()), !dbg !52\l  store i32 0, i32* %8, align 4, !dbg !52, !tbaa !42\l  %15 = bitcast i64* %9 to i8*, !dbg !53\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #9, !dbg !53\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !32, metadata\l... !DIExpression()), !dbg !54\l  store i64 -1, i64* %9, align 8, !dbg !54, !tbaa !55\l  store i32 0, i32* %8, align 4, !dbg !57, !tbaa !42\l  br label %16, !dbg !59\l}"];
	Node0xbebea0 -> Node0xbed7d0;
	Node0xbed7d0 [shape=record,label="{%16:\l\l  %17 = load i64, i64* %9, align 8, !dbg !60, !tbaa !55\l  %18 = icmp ne i64 %17, 0, !dbg !62\l  br i1 %18, label %19, label %25, !dbg !62\l|{<s0>T|<s1>F}}"];
	Node0xbed7d0:s0 -> Node0xbed820;
	Node0xbed7d0:s1 -> Node0xbed8c0;
	Node0xbed820 [shape=record,label="{%19:\l\l  %20 = load i64, i64* %9, align 8, !dbg !63, !tbaa !55\l  %21 = lshr i64 %20, 1, !dbg !63\l  store i64 %21, i64* %9, align 8, !dbg !63, !tbaa !55\l  br label %22, !dbg !64\l}"];
	Node0xbed820 -> Node0xbed870;
	Node0xbed870 [shape=record,label="{%22:\l\l  %23 = load i32, i32* %8, align 4, !dbg !65, !tbaa !42\l  %24 = add i32 %23, 1, !dbg !65\l  store i32 %24, i32* %8, align 4, !dbg !65, !tbaa !42\l  br label %16, !dbg !66, !llvm.loop !67\l}"];
	Node0xbed870 -> Node0xbed7d0;
	Node0xbed8c0 [shape=record,label="{%25:\l\l  %26 = call i32 @puts(i8* getelementptr inbounds ([37 x i8], [37 x i8]*\l... @.str.3, i32 0, i32 0)), !dbg !69\l  %27 = load i32, i32* %8, align 4, !dbg !70, !tbaa !42\l  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27\l... x i8]* @.str.4, i32 0, i32 0), i32 %27), !dbg !71\l  store i32 0, i32* %5, align 4, !dbg !72, !tbaa !42\l  store i32 2, i32* %6, align 4, !dbg !73, !tbaa !42\l  br label %29, !dbg !74\l}"];
	Node0xbed8c0 -> Node0xbed910;
	Node0xbed910 [shape=record,label="{%29:\l\l  %30 = load i32, i32* %5, align 4, !dbg !75, !tbaa !42\l  %31 = load i32, i32* %4, align 4, !dbg !76, !tbaa !42\l  %32 = icmp ult i32 %30, %31, !dbg !77\l  br i1 %32, label %33, label %95, !dbg !78\l|{<s0>T|<s1>F}}"];
	Node0xbed910:s0 -> Node0xbed960;
	Node0xbed910:s1 -> Node0xbedb90;
	Node0xbed960 [shape=record,label="{%33:\l\l  %34 = bitcast i32* %10 to i8*, !dbg !79\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #9, !dbg !79\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !33, metadata\l... !DIExpression()), !dbg !80\l  %35 = load i32, i32* %5, align 4, !dbg !81, !tbaa !42\l  %36 = add i32 %35, 8, !dbg !82\l  %37 = load i32, i32* %4, align 4, !dbg !83, !tbaa !42\l  %38 = icmp ult i32 %36, %37, !dbg !84\l  br i1 %38, label %39, label %54, !dbg !81\l|{<s0>T|<s1>F}}"];
	Node0xbed960:s0 -> Node0xbed9b0;
	Node0xbed960:s1 -> Node0xbeda00;
	Node0xbed9b0 [shape=record,label="{%39:\l\l  %40 = load %struct.prime*, %struct.prime** %3, align 8, !dbg !85, !tbaa !37\l  %41 = load i32, i32* %5, align 4, !dbg !86, !tbaa !42\l  %42 = add i32 %41, 8, !dbg !87\l  %43 = zext i32 %42 to i64, !dbg !85\l  %44 = getelementptr inbounds %struct.prime, %struct.prime* %40, i64 %43,\l... !dbg !85\l  %45 = getelementptr inbounds %struct.prime, %struct.prime* %44, i32 0, i32\l... 0, !dbg !88\l  %46 = load i32, i32* %45, align 8, !dbg !88, !tbaa !89\l  %47 = load %struct.prime*, %struct.prime** %3, align 8, !dbg !91, !tbaa !37\l  %48 = load i32, i32* %5, align 4, !dbg !92, !tbaa !42\l  %49 = zext i32 %48 to i64, !dbg !91\l  %50 = getelementptr inbounds %struct.prime, %struct.prime* %47, i64 %49,\l... !dbg !91\l  %51 = getelementptr inbounds %struct.prime, %struct.prime* %50, i32 0, i32\l... 0, !dbg !93\l  %52 = load i32, i32* %51, align 8, !dbg !93, !tbaa !89\l  %53 = sub i32 %46, %52, !dbg !94\l  br label %55, !dbg !81\l}"];
	Node0xbed9b0 -> Node0xbeda50;
	Node0xbeda00 [shape=record,label="{%54:\l\l  br label %55, !dbg !81\l}"];
	Node0xbeda00 -> Node0xbeda50;
	Node0xbeda50 [shape=record,label="{%55:\l\l  %56 = phi i32 [ %53, %39 ], [ 255, %54 ], !dbg !81\l  store i32 %56, i32* %10, align 4, !dbg !80, !tbaa !42\l  %57 = load i32, i32* %10, align 4, !dbg !95, !tbaa !42\l  %58 = icmp ult i32 255, %57, !dbg !97\l  br i1 %58, label %59, label %60, !dbg !98\l|{<s0>T|<s1>F}}"];
	Node0xbeda50:s0 -> Node0xbedaa0;
	Node0xbeda50:s1 -> Node0xbedaf0;
	Node0xbedaa0 [shape=record,label="{%59:\l\l  call void @abort() #10, !dbg !99\l  unreachable, !dbg !99\l}"];
	Node0xbedaf0 [shape=record,label="{%60:\l\l  %61 = load %struct.prime*, %struct.prime** %3, align 8, !dbg !100, !tbaa !37\l  %62 = load i32, i32* %5, align 4, !dbg !101, !tbaa !42\l  %63 = zext i32 %62 to i64, !dbg !100\l  %64 = getelementptr inbounds %struct.prime, %struct.prime* %61, i64 %63,\l... !dbg !100\l  %65 = getelementptr inbounds %struct.prime, %struct.prime* %64, i32 0, i32\l... 0, !dbg !102\l  %66 = load i32, i32* %65, align 8, !dbg !102, !tbaa !89\l  %67 = load i32, i32* %6, align 4, !dbg !103, !tbaa !42\l  %68 = sub i32 %66, %67, !dbg !104\l  %69 = load i32, i32* %10, align 4, !dbg !105, !tbaa !42\l  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16\l... x i8]* @.str.5, i32 0, i32 0), i32 %68, i32 %69), !dbg !106\l  %71 = load %struct.prime*, %struct.prime** %3, align 8, !dbg !107, !tbaa !37\l  %72 = load i32, i32* %5, align 4, !dbg !108, !tbaa !42\l  %73 = zext i32 %72 to i64, !dbg !107\l  %74 = getelementptr inbounds %struct.prime, %struct.prime* %71, i64 %73,\l... !dbg !107\l  %75 = getelementptr inbounds %struct.prime, %struct.prime* %74, i32 0, i32\l... 1, !dbg !109\l  %76 = load i64, i64* %75, align 8, !dbg !109, !tbaa !110\l  %77 = load i32, i32* %8, align 4, !dbg !111, !tbaa !42\l  call void @print_wide_uint(i64 %76, i32 0, i32 %77), !dbg !112\l  %78 = load %struct.prime*, %struct.prime** %3, align 8, !dbg !113, !tbaa !37\l  %79 = load i32, i32* %5, align 4, !dbg !114, !tbaa !42\l  %80 = zext i32 %79 to i64, !dbg !113\l  %81 = getelementptr inbounds %struct.prime, %struct.prime* %78, i64 %80,\l... !dbg !113\l  %82 = getelementptr inbounds %struct.prime, %struct.prime* %81, i32 0, i32\l... 0, !dbg !115\l  %83 = load i32, i32* %82, align 8, !dbg !115, !tbaa !89\l  %84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25\l... x i8]* @.str.6, i32 0, i32 0), i32 %83), !dbg !116\l  %85 = load %struct.prime*, %struct.prime** %3, align 8, !dbg !117, !tbaa !37\l  %86 = load i32, i32* %5, align 4, !dbg !118, !tbaa !42\l  %87 = zext i32 %86 to i64, !dbg !117\l  %88 = getelementptr inbounds %struct.prime, %struct.prime* %85, i64 %87,\l... !dbg !117\l  %89 = getelementptr inbounds %struct.prime, %struct.prime* %88, i32 0, i32\l... 0, !dbg !119\l  %90 = load i32, i32* %89, align 8, !dbg !119, !tbaa !89\l  store i32 %90, i32* %6, align 4, !dbg !120, !tbaa !42\l  %91 = bitcast i32* %10 to i8*, !dbg !121\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %91) #9, !dbg !121\l  br label %92, !dbg !122\l}"];
	Node0xbedaf0 -> Node0xbedb40;
	Node0xbedb40 [shape=record,label="{%92:\l\l  %93 = load i32, i32* %5, align 4, !dbg !123, !tbaa !42\l  %94 = add i32 %93, 1, !dbg !123\l  store i32 %94, i32* %5, align 4, !dbg !123, !tbaa !42\l  br label %29, !dbg !124, !llvm.loop !125\l}"];
	Node0xbedb40 -> Node0xbed910;
	Node0xbedb90 [shape=record,label="{%95:\l\l  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29\l... x i8]* @.str.7, i32 0, i32 0)), !dbg !127\l  br label %97, !dbg !128\l}"];
	Node0xbedb90 -> Node0xbedbe0;
	Node0xbedbe0 [shape=record,label="{%97:\l\l  %98 = load i32, i32* %6, align 4, !dbg !129, !tbaa !42\l  %99 = add i32 %98, 2, !dbg !129\l  store i32 %99, i32* %6, align 4, !dbg !129, !tbaa !42\l  store i32 0, i32* %5, align 4, !dbg !131, !tbaa !42\l  store i32 1, i32* %7, align 4, !dbg !133, !tbaa !42\l  br label %100, !dbg !134\l}"];
	Node0xbedbe0 -> Node0xbedc30;
	Node0xbedc30 [shape=record,label="{%100:\l\l  %101 = load i32, i32* %7, align 4, !dbg !135, !tbaa !42\l  %102 = icmp ne i32 %101, 0, !dbg !137\l  br i1 %102, label %103, label %142, !dbg !137\l|{<s0>T|<s1>F}}"];
	Node0xbedc30:s0 -> Node0xbedc80;
	Node0xbedc30:s1 -> Node0xbede60;
	Node0xbedc80 [shape=record,label="{%103:\l\l  %104 = load %struct.prime*, %struct.prime** %3, align 8, !dbg !138, !tbaa !37\l  %105 = load i32, i32* %5, align 4, !dbg !141, !tbaa !42\l  %106 = zext i32 %105 to i64, !dbg !138\l  %107 = getelementptr inbounds %struct.prime, %struct.prime* %104, i64 %106,\l... !dbg !138\l  %108 = getelementptr inbounds %struct.prime, %struct.prime* %107, i32 0, i32\l... 0, !dbg !142\l  %109 = load i32, i32* %108, align 8, !dbg !142, !tbaa !89\l  %110 = load %struct.prime*, %struct.prime** %3, align 8, !dbg !143, !tbaa !37\l  %111 = load i32, i32* %5, align 4, !dbg !144, !tbaa !42\l  %112 = zext i32 %111 to i64, !dbg !143\l  %113 = getelementptr inbounds %struct.prime, %struct.prime* %110, i64 %112,\l... !dbg !143\l  %114 = getelementptr inbounds %struct.prime, %struct.prime* %113, i32 0, i32\l... 0, !dbg !145\l  %115 = load i32, i32* %114, align 8, !dbg !145, !tbaa !89\l  %116 = mul i32 %109, %115, !dbg !146\l  %117 = load i32, i32* %6, align 4, !dbg !147, !tbaa !42\l  %118 = icmp ugt i32 %116, %117, !dbg !148\l  br i1 %118, label %119, label %120, !dbg !149\l|{<s0>T|<s1>F}}"];
	Node0xbedc80:s0 -> Node0xbedcd0;
	Node0xbedc80:s1 -> Node0xbedd20;
	Node0xbedcd0 [shape=record,label="{%119:\l\l  br label %142, !dbg !150\l}"];
	Node0xbedcd0 -> Node0xbede60;
	Node0xbedd20 [shape=record,label="{%120:\l\l  %121 = load i32, i32* %6, align 4, !dbg !151, !tbaa !42\l  %122 = zext i32 %121 to i64, !dbg !151\l  %123 = load %struct.prime*, %struct.prime** %3, align 8, !dbg !153, !tbaa !37\l  %124 = load i32, i32* %5, align 4, !dbg !154, !tbaa !42\l  %125 = zext i32 %124 to i64, !dbg !153\l  %126 = getelementptr inbounds %struct.prime, %struct.prime* %123, i64 %125,\l... !dbg !153\l  %127 = getelementptr inbounds %struct.prime, %struct.prime* %126, i32 0, i32\l... 1, !dbg !155\l  %128 = load i64, i64* %127, align 8, !dbg !155, !tbaa !110\l  %129 = mul i64 %122, %128, !dbg !156\l  %130 = load %struct.prime*, %struct.prime** %3, align 8, !dbg !157, !tbaa !37\l  %131 = load i32, i32* %5, align 4, !dbg !158, !tbaa !42\l  %132 = zext i32 %131 to i64, !dbg !157\l  %133 = getelementptr inbounds %struct.prime, %struct.prime* %130, i64 %132,\l... !dbg !157\l  %134 = getelementptr inbounds %struct.prime, %struct.prime* %133, i32 0, i32\l... 2, !dbg !159\l  %135 = load i64, i64* %134, align 8, !dbg !159, !tbaa !160\l  %136 = icmp ule i64 %129, %135, !dbg !161\l  br i1 %136, label %137, label %138, !dbg !162\l|{<s0>T|<s1>F}}"];
	Node0xbedd20:s0 -> Node0xbedd70;
	Node0xbedd20:s1 -> Node0xbeddc0;
	Node0xbedd70 [shape=record,label="{%137:\l\l  store i32 0, i32* %7, align 4, !dbg !163, !tbaa !42\l  br label %142, !dbg !165\l}"];
	Node0xbedd70 -> Node0xbede60;
	Node0xbeddc0 [shape=record,label="{%138:\l\l  br label %139, !dbg !166\l}"];
	Node0xbeddc0 -> Node0xbede10;
	Node0xbede10 [shape=record,label="{%139:\l\l  %140 = load i32, i32* %5, align 4, !dbg !167, !tbaa !42\l  %141 = add i32 %140, 1, !dbg !167\l  store i32 %141, i32* %5, align 4, !dbg !167, !tbaa !42\l  br label %100, !dbg !168, !llvm.loop !169\l}"];
	Node0xbede10 -> Node0xbedc30;
	Node0xbede60 [shape=record,label="{%142:\l\l  br label %143, !dbg !171\l}"];
	Node0xbede60 -> Node0xbedeb0;
	Node0xbedeb0 [shape=record,label="{%143:\l\l  %144 = load i32, i32* %7, align 4, !dbg !172, !tbaa !42\l  %145 = icmp ne i32 %144, 0, !dbg !173\l  %146 = xor i1 %145, true, !dbg !173\l  br i1 %146, label %97, label %147, !dbg !171, !llvm.loop !174\l|{<s0>T|<s1>F}}"];
	Node0xbedeb0:s0 -> Node0xbedbe0;
	Node0xbedeb0:s1 -> Node0xbedf00;
	Node0xbedf00 [shape=record,label="{%147:\l\l  %148 = load i32, i32* %6, align 4, !dbg !176, !tbaa !42\l  %149 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8],\l... [32 x i8]* @.str.8, i32 0, i32 0), i32 %148), !dbg !177\l  %150 = bitcast i64* %9 to i8*, !dbg !178\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %150) #9, !dbg !178\l  %151 = bitcast i32* %8 to i8*, !dbg !178\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %151) #9, !dbg !178\l  %152 = bitcast i32* %7 to i8*, !dbg !178\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %152) #9, !dbg !178\l  %153 = bitcast i32* %6 to i8*, !dbg !178\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %153) #9, !dbg !178\l  %154 = bitcast i32* %5 to i8*, !dbg !178\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %154) #9, !dbg !178\l  ret void, !dbg !178\l}"];
}
