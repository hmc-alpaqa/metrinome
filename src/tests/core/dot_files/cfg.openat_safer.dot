digraph "CFG for 'openat_safer' function" {
	label="CFG for 'openat_safer' function";

	Node0x250f150 [shape=record,label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i8*, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca [1 x %struct.__va_list_tag], align 16\l  store i32 %0, i32* %4, align 4, !tbaa !943\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !925, metadata\l... !DIExpression()), !dbg !947\l  store i8* %1, i8** %5, align 8, !tbaa !948\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !926, metadata\l... !DIExpression()), !dbg !950\l  store i32 %2, i32* %6, align 4, !tbaa !943\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !927, metadata\l... !DIExpression()), !dbg !951\l  %9 = bitcast i32* %7 to i8*, !dbg !952\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #11, !dbg !952\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !928, metadata\l... !DIExpression()), !dbg !953\l  store i32 0, i32* %7, align 4, !dbg !953, !tbaa !943\l  %10 = load i32, i32* %6, align 4, !dbg !954, !tbaa !943\l  %11 = and i32 %10, 64, !dbg !955\l  %12 = icmp ne i32 %11, 0, !dbg !955\l  br i1 %12, label %13, label %38, !dbg !956\l|{<s0>T|<s1>F}}"];
	Node0x250f150:s0 -> Node0x250f9e0;
	Node0x250f150:s1 -> Node0x250fb20;
	Node0x250f9e0 [shape=record,label="{%13:\l\l  %14 = bitcast [1 x %struct.__va_list_tag]* %8 to i8*, !dbg !957\l  call void @llvm.lifetime.start.p0i8(i64 24, i8* %14) #11, !dbg !957\l  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %8,\l... metadata !930, metadata !DIExpression()), !dbg !958\l  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x\l... %struct.__va_list_tag]* %8, i32 0, i32 0, !dbg !959\l  %16 = bitcast %struct.__va_list_tag* %15 to i8*, !dbg !959\l  call void @llvm.va_start(i8* %16), !dbg !959\l  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x\l... %struct.__va_list_tag]* %8, i32 0, i32 0, !dbg !960\l  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag*\l... %17, i32 0, i32 0, !dbg !960\l  %19 = load i32, i32* %18, align 16, !dbg !960\l  %20 = icmp ule i32 %19, 40, !dbg !960\l  br i1 %20, label %21, label %27, !dbg !960\l|{<s0>T|<s1>F}}"];
	Node0x250f9e0:s0 -> Node0x250fa30;
	Node0x250f9e0:s1 -> Node0x250fa80;
	Node0x250fa30 [shape=record,label="{%21:\l\l  %22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag*\l... %17, i32 0, i32 3, !dbg !960\l  %23 = load i8*, i8** %22, align 16, !dbg !960\l  %24 = getelementptr i8, i8* %23, i32 %19, !dbg !960\l  %25 = bitcast i8* %24 to i32*, !dbg !960\l  %26 = add i32 %19, 8, !dbg !960\l  store i32 %26, i32* %18, align 16, !dbg !960\l  br label %32, !dbg !960\l}"];
	Node0x250fa30 -> Node0x250fad0;
	Node0x250fa80 [shape=record,label="{%27:\l\l  %28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag*\l... %17, i32 0, i32 2, !dbg !960\l  %29 = load i8*, i8** %28, align 8, !dbg !960\l  %30 = bitcast i8* %29 to i32*, !dbg !960\l  %31 = getelementptr i8, i8* %29, i32 8, !dbg !960\l  store i8* %31, i8** %28, align 8, !dbg !960\l  br label %32, !dbg !960\l}"];
	Node0x250fa80 -> Node0x250fad0;
	Node0x250fad0 [shape=record,label="{%32:\l\l  %33 = phi i32* [ %25, %21 ], [ %30, %27 ], !dbg !960\l  %34 = load i32, i32* %33, align 4, !dbg !960\l  store i32 %34, i32* %7, align 4, !dbg !961, !tbaa !943\l  %35 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x\l... %struct.__va_list_tag]* %8, i32 0, i32 0, !dbg !962\l  %36 = bitcast %struct.__va_list_tag* %35 to i8*, !dbg !962\l  call void @llvm.va_end(i8* %36), !dbg !962\l  %37 = bitcast [1 x %struct.__va_list_tag]* %8 to i8*, !dbg !963\l  call void @llvm.lifetime.end.p0i8(i64 24, i8* %37) #11, !dbg !963\l  br label %38, !dbg !964\l}"];
	Node0x250fad0 -> Node0x250fb20;
	Node0x250fb20 [shape=record,label="{%38:\l\l  %39 = load i32, i32* %4, align 4, !dbg !965, !tbaa !943\l  %40 = load i8*, i8** %5, align 8, !dbg !966, !tbaa !948\l  %41 = load i32, i32* %6, align 4, !dbg !967, !tbaa !943\l  %42 = load i32, i32* %7, align 4, !dbg !968, !tbaa !943\l  %43 = call i32 (i32, i8*, i32, ...) @openat(i32 %39, i8* %40, i32 %41, i32\l... %42), !dbg !969\l  %44 = call i32 @fd_safer(i32 %43), !dbg !970\l  %45 = bitcast i32* %7 to i8*, !dbg !971\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %45) #11, !dbg !971\l  ret i32 %44, !dbg !972\l}"];
}
