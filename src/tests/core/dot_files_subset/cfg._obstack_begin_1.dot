digraph "CFG for '_obstack_begin_1' function" {
	label="CFG for '_obstack_begin_1' function";

	Node0x233a080 [shape=record,label="{%6:\l  %7 = alloca %struct.obstack*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i8* (i8*, i64)*, align 8\l  %11 = alloca void (i8*, i8*)*, align 8\l  %12 = alloca i8*, align 8\l  store %struct.obstack* %0, %struct.obstack** %7, align 8, !tbaa !1780\l  call void @llvm.dbg.declare(metadata %struct.obstack** %7, metadata !1774,\l... metadata !DIExpression()), !dbg !1784\l  store i64 %1, i64* %8, align 8, !tbaa !1785\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1775, metadata\l... !DIExpression()), !dbg !1787\l  store i64 %2, i64* %9, align 8, !tbaa !1785\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1776, metadata\l... !DIExpression()), !dbg !1788\l  store i8* (i8*, i64)* %3, i8* (i8*, i64)** %10, align 8, !tbaa !1780\l  call void @llvm.dbg.declare(metadata i8* (i8*, i64)** %10, metadata !1777,\l... metadata !DIExpression()), !dbg !1789\l  store void (i8*, i8*)* %4, void (i8*, i8*)** %11, align 8, !tbaa !1780\l  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %11, metadata !1778,\l... metadata !DIExpression()), !dbg !1790\l  store i8* %5, i8** %12, align 8, !tbaa !1780\l  call void @llvm.dbg.declare(metadata i8** %12, metadata !1779, metadata\l... !DIExpression()), !dbg !1791\l  %13 = load i8* (i8*, i64)*, i8* (i8*, i64)** %10, align 8, !dbg !1792, !tbaa\l... !1780\l  %14 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !1793,\l... !tbaa !1780\l  %15 = getelementptr inbounds %struct.obstack, %struct.obstack* %14, i32 0,\l... i32 7, !dbg !1794\l  %16 = bitcast %union.anon.0* %15 to i8* (i8*, i64)**, !dbg !1795\l  store i8* (i8*, i64)* %13, i8* (i8*, i64)** %16, align 8, !dbg !1796, !tbaa\l... !1797\l  %17 = load void (i8*, i8*)*, void (i8*, i8*)** %11, align 8, !dbg !1798,\l... !tbaa !1780\l  %18 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !1799,\l... !tbaa !1780\l  %19 = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0,\l... i32 8, !dbg !1800\l  %20 = bitcast %union.anon.1* %19 to void (i8*, i8*)**, !dbg !1801\l  store void (i8*, i8*)* %17, void (i8*, i8*)** %20, align 8, !dbg !1802,\l... !tbaa !1797\l  %21 = load i8*, i8** %12, align 8, !dbg !1803, !tbaa !1780\l  %22 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !1804,\l... !tbaa !1780\l  %23 = getelementptr inbounds %struct.obstack, %struct.obstack* %22, i32 0,\l... i32 9, !dbg !1805\l  store i8* %21, i8** %23, align 8, !dbg !1806, !tbaa !1807\l  %24 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !1810,\l... !tbaa !1780\l  %25 = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0,\l... i32 10, !dbg !1811\l  %26 = load i8, i8* %25, align 8, !dbg !1812\l  %27 = and i8 %26, -2, !dbg !1812\l  %28 = or i8 %27, 1, !dbg !1812\l  store i8 %28, i8* %25, align 8, !dbg !1812\l  %29 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !1813,\l... !tbaa !1780\l  %30 = load i64, i64* %8, align 8, !dbg !1814, !tbaa !1785\l  %31 = load i64, i64* %9, align 8, !dbg !1815, !tbaa !1785\l  %32 = call i32 @_obstack_begin_worker(%struct.obstack* %29, i64 %30, i64\l... %31), !dbg !1816\l  ret i32 %32, !dbg !1817\l}"];
}
