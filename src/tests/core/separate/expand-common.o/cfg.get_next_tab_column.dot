digraph "CFG for 'get_next_tab_column' function" {
	label="CFG for 'get_next_tab_column' function";

	Node0x1f1d9e0 [shape=record,label="{%3:\l  %4 = alloca i64, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64*, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i64, align 8\l  store i64 %0, i64* %5, align 8, !tbaa !183\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !173, metadata\l... !DIExpression()), !dbg !187\l  store i64* %1, i64** %6, align 8, !tbaa !188\l  call void @llvm.dbg.declare(metadata i64** %6, metadata !174, metadata\l... !DIExpression()), !dbg !190\l  store i8* %2, i8** %7, align 8, !tbaa !188\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !175, metadata\l... !DIExpression()), !dbg !191\l  %11 = load i8*, i8** %7, align 8, !dbg !192, !tbaa !188\l  store i8 0, i8* %11, align 1, !dbg !193, !tbaa !194\l  %12 = load i64, i64* @tab_size, align 8, !dbg !196, !tbaa !183\l  %13 = icmp ne i64 %12, 0, !dbg !196\l  br i1 %13, label %14, label %22, !dbg !198\l|{<s0>T|<s1>F}}"];
	Node0x1f1d9e0:s0 -> Node0x1f20fa0;
	Node0x1f1d9e0:s1 -> Node0x1f20ff0;
	Node0x1f20fa0 [shape=record,label="{%14:\l\l  %15 = load i64, i64* %5, align 8, !dbg !199, !tbaa !183\l  %16 = load i64, i64* @tab_size, align 8, !dbg !200, !tbaa !183\l  %17 = load i64, i64* %5, align 8, !dbg !201, !tbaa !183\l  %18 = load i64, i64* @tab_size, align 8, !dbg !202, !tbaa !183\l  %19 = urem i64 %17, %18, !dbg !203\l  %20 = sub i64 %16, %19, !dbg !204\l  %21 = add i64 %15, %20, !dbg !205\l  store i64 %21, i64* %4, align 8, !dbg !206\l  br label %82, !dbg !206\l}"];
	Node0x1f20fa0 -> Node0x1f21400;
	Node0x1f20ff0 [shape=record,label="{%22:\l\l  br label %23, !dbg !207\l}"];
	Node0x1f20ff0 -> Node0x1f21040;
	Node0x1f21040 [shape=record,label="{%23:\l\l  %24 = load i64*, i64** %6, align 8, !dbg !208, !tbaa !188\l  %25 = load i64, i64* %24, align 8, !dbg !209, !tbaa !183\l  %26 = load i64, i64* @first_free_tab, align 8, !dbg !210, !tbaa !183\l  %27 = icmp ult i64 %25, %26, !dbg !211\l  br i1 %27, label %28, label %49, !dbg !212\l|{<s0>T|<s1>F}}"];
	Node0x1f21040:s0 -> Node0x1f21090;
	Node0x1f21040:s1 -> Node0x1f21270;
	Node0x1f21090 [shape=record,label="{%28:\l\l  %29 = bitcast i64* %8 to i8*, !dbg !213\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #10, !dbg !213\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !176, metadata\l... !DIExpression()), !dbg !214\l  %30 = load i64*, i64** @tab_list, align 8, !dbg !215, !tbaa !188\l  %31 = load i64*, i64** %6, align 8, !dbg !216, !tbaa !188\l  %32 = load i64, i64* %31, align 8, !dbg !217, !tbaa !183\l  %33 = getelementptr inbounds i64, i64* %30, i64 %32, !dbg !215\l  %34 = load i64, i64* %33, align 8, !dbg !215, !tbaa !183\l  store i64 %34, i64* %8, align 8, !dbg !214, !tbaa !183\l  %35 = load i64, i64* %5, align 8, !dbg !218, !tbaa !183\l  %36 = load i64, i64* %8, align 8, !dbg !220, !tbaa !183\l  %37 = icmp ult i64 %35, %36, !dbg !221\l  br i1 %37, label %38, label %40, !dbg !222\l|{<s0>T|<s1>F}}"];
	Node0x1f21090:s0 -> Node0x1f210e0;
	Node0x1f21090:s1 -> Node0x1f21130;
	Node0x1f210e0 [shape=record,label="{%38:\l\l  %39 = load i64, i64* %8, align 8, !dbg !223, !tbaa !183\l  store i64 %39, i64* %4, align 8, !dbg !224\l  store i32 1, i32* %9, align 4\l  br label %41, !dbg !224\l}"];
	Node0x1f210e0 -> Node0x1f21180;
	Node0x1f21130 [shape=record,label="{%40:\l\l  store i32 0, i32* %9, align 4, !dbg !225\l  br label %41, !dbg !225\l}"];
	Node0x1f21130 -> Node0x1f21180;
	Node0x1f21180 [shape=record,label="{%41:\l\l  %42 = bitcast i64* %8 to i8*, !dbg !225\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #10, !dbg !225\l  %43 = load i32, i32* %9, align 4\l  switch i32 %43, label %84 [\l    i32 0, label %44\l    i32 1, label %82\l  ]\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0x1f21180:s0 -> Node0x1f21450;
	Node0x1f21180:s1 -> Node0x1f211d0;
	Node0x1f21180:s2 -> Node0x1f21400;
	Node0x1f211d0 [shape=record,label="{%44:\l\l  br label %45, !dbg !226\l}"];
	Node0x1f211d0 -> Node0x1f21220;
	Node0x1f21220 [shape=record,label="{%45:\l\l  %46 = load i64*, i64** %6, align 8, !dbg !227, !tbaa !188\l  %47 = load i64, i64* %46, align 8, !dbg !228, !tbaa !183\l  %48 = add i64 %47, 1, !dbg !228\l  store i64 %48, i64* %46, align 8, !dbg !228, !tbaa !183\l  br label %23, !dbg !229, !llvm.loop !230\l}"];
	Node0x1f21220 -> Node0x1f21040;
	Node0x1f21270 [shape=record,label="{%49:\l\l  %50 = load i64, i64* @extend_size, align 8, !dbg !232, !tbaa !183\l  %51 = icmp ne i64 %50, 0, !dbg !232\l  br i1 %51, label %52, label %60, !dbg !234\l|{<s0>T|<s1>F}}"];
	Node0x1f21270:s0 -> Node0x1f212c0;
	Node0x1f21270:s1 -> Node0x1f21310;
	Node0x1f212c0 [shape=record,label="{%52:\l\l  %53 = load i64, i64* %5, align 8, !dbg !235, !tbaa !183\l  %54 = load i64, i64* @extend_size, align 8, !dbg !236, !tbaa !183\l  %55 = load i64, i64* %5, align 8, !dbg !237, !tbaa !183\l  %56 = load i64, i64* @extend_size, align 8, !dbg !238, !tbaa !183\l  %57 = urem i64 %55, %56, !dbg !239\l  %58 = sub i64 %54, %57, !dbg !240\l  %59 = add i64 %53, %58, !dbg !241\l  store i64 %59, i64* %4, align 8, !dbg !242\l  br label %82, !dbg !242\l}"];
	Node0x1f212c0 -> Node0x1f21400;
	Node0x1f21310 [shape=record,label="{%60:\l\l  %61 = load i64, i64* @increment_size, align 8, !dbg !243, !tbaa !183\l  %62 = icmp ne i64 %61, 0, !dbg !243\l  br i1 %62, label %63, label %80, !dbg !244\l|{<s0>T|<s1>F}}"];
	Node0x1f21310:s0 -> Node0x1f21360;
	Node0x1f21310:s1 -> Node0x1f213b0;
	Node0x1f21360 [shape=record,label="{%63:\l\l  %64 = bitcast i64* %10 to i8*, !dbg !245\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %64) #10, !dbg !245\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !180, metadata\l... !DIExpression()), !dbg !246\l  %65 = load i64*, i64** @tab_list, align 8, !dbg !247, !tbaa !188\l  %66 = load i64, i64* @first_free_tab, align 8, !dbg !248, !tbaa !183\l  %67 = sub i64 %66, 1, !dbg !249\l  %68 = getelementptr inbounds i64, i64* %65, i64 %67, !dbg !247\l  %69 = load i64, i64* %68, align 8, !dbg !247, !tbaa !183\l  store i64 %69, i64* %10, align 8, !dbg !246, !tbaa !183\l  %70 = load i64, i64* %5, align 8, !dbg !250, !tbaa !183\l  %71 = load i64, i64* @increment_size, align 8, !dbg !251, !tbaa !183\l  %72 = load i64, i64* %5, align 8, !dbg !252, !tbaa !183\l  %73 = load i64, i64* %10, align 8, !dbg !253, !tbaa !183\l  %74 = sub i64 %72, %73, !dbg !254\l  %75 = load i64, i64* @increment_size, align 8, !dbg !255, !tbaa !183\l  %76 = urem i64 %74, %75, !dbg !256\l  %77 = sub i64 %71, %76, !dbg !257\l  %78 = add i64 %70, %77, !dbg !258\l  store i64 %78, i64* %4, align 8, !dbg !259\l  store i32 1, i32* %9, align 4\l  %79 = bitcast i64* %10 to i8*, !dbg !260\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %79) #10, !dbg !260\l  br label %82\l}"];
	Node0x1f21360 -> Node0x1f21400;
	Node0x1f213b0 [shape=record,label="{%80:\l\l  %81 = load i8*, i8** %7, align 8, !dbg !261, !tbaa !188\l  store i8 1, i8* %81, align 1, !dbg !262, !tbaa !194\l  store i64 0, i64* %4, align 8, !dbg !263\l  br label %82, !dbg !263\l}"];
	Node0x1f213b0 -> Node0x1f21400;
	Node0x1f21400 [shape=record,label="{%82:\l\l  %83 = load i64, i64* %4, align 8, !dbg !264\l  ret i64 %83, !dbg !264\l}"];
	Node0x1f21450 [shape=record,label="{%84:\l\l  unreachable\l}"];
}
