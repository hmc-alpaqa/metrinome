digraph "CFG for 'xwrite_stdout' function" {
	label="CFG for 'xwrite_stdout' function";

	Node0xe61640 [shape=record,label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca i64, align 8\l  store i8* %0, i8** %3, align 8, !tbaa !121\l  call void @llvm.dbg.declare(metadata i8** %3, metadata !119, metadata\l... !DIExpression()), !dbg !125\l  store i64 %1, i64* %4, align 8, !tbaa !126\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !120, metadata\l... !DIExpression()), !dbg !128\l  %5 = load i64, i64* %4, align 8, !dbg !129, !tbaa !126\l  %6 = icmp ugt i64 %5, 0, !dbg !131\l  br i1 %6, label %7, label %19, !dbg !132\l|{<s0>T|<s1>F}}"];
	Node0xe61640:s0 -> Node0xe61720;
	Node0xe61640:s1 -> Node0xe617c0;
	Node0xe61720 [shape=record,label="{%7:\l\l  %8 = load i8*, i8** %3, align 8, !dbg !133, !tbaa !121\l  %9 = load i64, i64* %4, align 8, !dbg !133, !tbaa !126\l  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg\l... !133, !tbaa !121\l  %11 = call i64 @fwrite_unlocked(i8* %8, i64 1, i64 %9, %struct._IO_FILE*\l... %10), !dbg !133\l  %12 = load i64, i64* %4, align 8, !dbg !134, !tbaa !126\l  %13 = icmp ult i64 %11, %12, !dbg !135\l  br i1 %13, label %14, label %19, !dbg !136\l|{<s0>T|<s1>F}}"];
	Node0xe61720:s0 -> Node0xe61770;
	Node0xe61720:s1 -> Node0xe617c0;
	Node0xe61770 [shape=record,label="{%14:\l\l  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg\l... !137, !tbaa !121\l  call void @clearerr_unlocked(%struct._IO_FILE* %15) #11, !dbg !137\l  %16 = call i32* @__errno_location() #12, !dbg !139\l  %17 = load i32, i32* %16, align 4, !dbg !139, !tbaa !140\l  %18 = call i8* @quotearg_style(i32 4, i8* getelementptr inbounds ([16 x i8],\l... [16 x i8]* @.str.58, i32 0, i32 0)), !dbg !139\l  call void (i32, i32, i8*, ...) @error(i32 1, i32 %17, i8* getelementptr\l... inbounds ([17 x i8], [17 x i8]* @.str.57, i32 0, i32 0), i8* %18), !dbg !139\l  unreachable, !dbg !139\l}"];
	Node0xe617c0 [shape=record,label="{%19:\l\l  ret void, !dbg !142\l}"];
}
