digraph "CFG for 'iread' function" {
	label="CFG for 'iread' function";

	Node0x1d65eb0 [shape=record,label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  store i32 %0, i32* %4, align 4, !tbaa !364\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !213, metadata\l... !DIExpression()), !dbg !368\l  store i8* %1, i8** %5, align 8, !tbaa !369\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !214, metadata\l... !DIExpression()), !dbg !371\l  store i64 %2, i64* %6, align 8, !tbaa !372\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !215, metadata\l... !DIExpression()), !dbg !374\l  %9 = bitcast i64* %7 to i8*, !dbg !375\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #12, !dbg !375\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !216, metadata\l... !DIExpression()), !dbg !376\l  br label %10, !dbg !377\l}"];
	Node0x1d65eb0 -> Node0x1d65f80;
	Node0x1d65f80 [shape=record,label="{%10:\l\l  call void @process_signals(), !dbg !378\l  %11 = load i32, i32* %4, align 4, !dbg !380, !tbaa !364\l  %12 = load i8*, i8** %5, align 8, !dbg !381, !tbaa !369\l  %13 = load i64, i64* %6, align 8, !dbg !382, !tbaa !372\l  %14 = call i64 @read(i32 %11, i8* %12, i64 %13), !dbg !383\l  store i64 %14, i64* %7, align 8, !dbg !384, !tbaa !372\l  %15 = load i64, i64* %7, align 8, !dbg !385, !tbaa !372\l  %16 = icmp eq i64 %15, -1, !dbg !387\l  br i1 %16, label %17, label %34, !dbg !388\l|{<s0>T|<s1>F}}"];
	Node0x1d65f80:s0 -> Node0x1d65fd0;
	Node0x1d65f80:s1 -> Node0x1d66160;
	Node0x1d65fd0 [shape=record,label="{%17:\l\l  %18 = call i32* @__errno_location() #14, !dbg !389\l  %19 = load i32, i32* %18, align 4, !dbg !389, !tbaa !364\l  %20 = icmp eq i32 %19, 22, !dbg !390\l  br i1 %20, label %21, label %34, !dbg !391\l|{<s0>T|<s1>F}}"];
	Node0x1d65fd0:s0 -> Node0x1d66020;
	Node0x1d65fd0:s1 -> Node0x1d66160;
	Node0x1d66020 [shape=record,label="{%21:\l\l  %22 = load i64, i64* @iread.prev_nread, align 8, !dbg !392, !tbaa !372\l  %23 = icmp slt i64 0, %22, !dbg !393\l  br i1 %23, label %24, label %34, !dbg !394\l|{<s0>T|<s1>F}}"];
	Node0x1d66020:s0 -> Node0x1d66070;
	Node0x1d66020:s1 -> Node0x1d66160;
	Node0x1d66070 [shape=record,label="{%24:\l\l  %25 = load i64, i64* @iread.prev_nread, align 8, !dbg !395, !tbaa !372\l  %26 = load i64, i64* %6, align 8, !dbg !396, !tbaa !372\l  %27 = icmp ult i64 %25, %26, !dbg !397\l  br i1 %27, label %28, label %34, !dbg !398\l|{<s0>T|<s1>F}}"];
	Node0x1d66070:s0 -> Node0x1d660c0;
	Node0x1d66070:s1 -> Node0x1d66160;
	Node0x1d660c0 [shape=record,label="{%28:\l\l  %29 = load i32, i32* @input_flags, align 4, !dbg !399, !tbaa !364\l  %30 = and i32 %29, 16384, !dbg !400\l  %31 = icmp ne i32 %30, 0, !dbg !400\l  br i1 %31, label %32, label %34, !dbg !401\l|{<s0>T|<s1>F}}"];
	Node0x1d660c0:s0 -> Node0x1d66110;
	Node0x1d660c0:s1 -> Node0x1d66160;
	Node0x1d66110 [shape=record,label="{%32:\l\l  %33 = call i32* @__errno_location() #14, !dbg !402\l  store i32 0, i32* %33, align 4, !dbg !404, !tbaa !364\l  store i64 0, i64* %7, align 8, !dbg !405, !tbaa !372\l  br label %34, !dbg !406\l}"];
	Node0x1d66110 -> Node0x1d66160;
	Node0x1d66160 [shape=record,label="{%34:\l\l  br label %35, !dbg !407\l}"];
	Node0x1d66160 -> Node0x1d661b0;
	Node0x1d661b0 [shape=record,label="{%35:\l\l  %36 = load i64, i64* %7, align 8, !dbg !408, !tbaa !372\l  %37 = icmp slt i64 %36, 0, !dbg !409\l  br i1 %37, label %38, label %42, !dbg !410\l|{<s0>T|<s1>F}}"];
	Node0x1d661b0:s0 -> Node0x1d66200;
	Node0x1d661b0:s1 -> Node0x1d66250;
	Node0x1d66200 [shape=record,label="{%38:\l\l  %39 = call i32* @__errno_location() #14, !dbg !411\l  %40 = load i32, i32* %39, align 4, !dbg !411, !tbaa !364\l  %41 = icmp eq i32 %40, 4, !dbg !412\l  br label %42\l}"];
	Node0x1d66200 -> Node0x1d66250;
	Node0x1d66250 [shape=record,label="{%42:\l\l  %43 = phi i1 [ false, %35 ], [ %41, %38 ], !dbg !413\l  br i1 %43, label %10, label %44, !dbg !407, !llvm.loop !414\l|{<s0>T|<s1>F}}"];
	Node0x1d66250:s0 -> Node0x1d65f80;
	Node0x1d66250:s1 -> Node0x1d662a0;
	Node0x1d662a0 [shape=record,label="{%44:\l\l  %45 = load i64, i64* %7, align 8, !dbg !416, !tbaa !372\l  %46 = icmp slt i64 0, %45, !dbg !418\l  br i1 %46, label %47, label %52, !dbg !419\l|{<s0>T|<s1>F}}"];
	Node0x1d662a0:s0 -> Node0x1d662f0;
	Node0x1d662a0:s1 -> Node0x1d66390;
	Node0x1d662f0 [shape=record,label="{%47:\l\l  %48 = load i64, i64* %7, align 8, !dbg !420, !tbaa !372\l  %49 = load i64, i64* %6, align 8, !dbg !421, !tbaa !372\l  %50 = icmp ult i64 %48, %49, !dbg !422\l  br i1 %50, label %51, label %52, !dbg !423\l|{<s0>T|<s1>F}}"];
	Node0x1d662f0:s0 -> Node0x1d66340;
	Node0x1d662f0:s1 -> Node0x1d66390;
	Node0x1d66340 [shape=record,label="{%51:\l\l  call void @process_signals(), !dbg !424\l  br label %52, !dbg !424\l}"];
	Node0x1d66340 -> Node0x1d66390;
	Node0x1d66390 [shape=record,label="{%52:\l\l  %53 = load i64, i64* %7, align 8, !dbg !425, !tbaa !372\l  %54 = icmp slt i64 0, %53, !dbg !426\l  br i1 %54, label %55, label %80, !dbg !427\l|{<s0>T|<s1>F}}"];
	Node0x1d66390:s0 -> Node0x1d663e0;
	Node0x1d66390:s1 -> Node0x1d66610;
	Node0x1d663e0 [shape=record,label="{%55:\l\l  %56 = load i8, i8* @warn_partial_read, align 1, !dbg !428, !tbaa !429,\l... !range !431\l  %57 = trunc i8 %56 to i1, !dbg !428\l  br i1 %57, label %58, label %80, !dbg !432\l|{<s0>T|<s1>F}}"];
	Node0x1d663e0:s0 -> Node0x1d66430;
	Node0x1d663e0:s1 -> Node0x1d66610;
	Node0x1d66430 [shape=record,label="{%58:\l\l  %59 = load i64, i64* @iread.prev_nread, align 8, !dbg !433, !tbaa !372\l  %60 = icmp slt i64 0, %59, !dbg !434\l  br i1 %60, label %61, label %79, !dbg !435\l|{<s0>T|<s1>F}}"];
	Node0x1d66430:s0 -> Node0x1d66480;
	Node0x1d66430:s1 -> Node0x1d665c0;
	Node0x1d66480 [shape=record,label="{%61:\l\l  %62 = load i64, i64* @iread.prev_nread, align 8, !dbg !436, !tbaa !372\l  %63 = load i64, i64* %6, align 8, !dbg !437, !tbaa !372\l  %64 = icmp ult i64 %62, %63, !dbg !438\l  br i1 %64, label %65, label %79, !dbg !439\l|{<s0>T|<s1>F}}"];
	Node0x1d66480:s0 -> Node0x1d664d0;
	Node0x1d66480:s1 -> Node0x1d665c0;
	Node0x1d664d0 [shape=record,label="{%65:\l\l  %66 = bitcast i64* %8 to i8*, !dbg !440\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %66) #12, !dbg !440\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !217, metadata\l... !DIExpression()), !dbg !441\l  %67 = load i64, i64* @iread.prev_nread, align 8, !dbg !442, !tbaa !372\l  store i64 %67, i64* %8, align 8, !dbg !441, !tbaa !372\l  %68 = load i32, i32* @status_level, align 4, !dbg !443, !tbaa !364\l  %69 = icmp ne i32 %68, 1, !dbg !445\l  br i1 %69, label %70, label %77, !dbg !446\l|{<s0>T|<s1>F}}"];
	Node0x1d664d0:s0 -> Node0x1d66520;
	Node0x1d664d0:s1 -> Node0x1d66570;
	Node0x1d66520 [shape=record,label="{%70:\l\l  %71 = load i64, i64* %8, align 8, !dbg !447, !tbaa !372\l  %72 = call i64 @select_plural(i64 %71), !dbg !447\l  %73 = icmp eq i64 %72, 1, !dbg !447\l  %74 = zext i1 %73 to i64, !dbg !447\l  %75 = select i1 %73, i8* getelementptr inbounds ([58 x i8], [58 x i8]*\l... @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]*\l... @.str.88, i32 0, i32 0), !dbg !447\l  %76 = load i64, i64* %8, align 8, !dbg !448, !tbaa !372\l  call void (i32, i32, i8*, ...) @nl_error(i32 0, i32 0, i8* %75, i64 %76),\l... !dbg !449\l  br label %77, !dbg !449\l}"];
	Node0x1d66520 -> Node0x1d66570;
	Node0x1d66570 [shape=record,label="{%77:\l\l  store i8 0, i8* @warn_partial_read, align 1, !dbg !450, !tbaa !429\l  %78 = bitcast i64* %8 to i8*, !dbg !451\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %78) #12, !dbg !451\l  br label %79, !dbg !452\l}"];
	Node0x1d66570 -> Node0x1d665c0;
	Node0x1d665c0 [shape=record,label="{%79:\l\l  br label %80, !dbg !453\l}"];
	Node0x1d665c0 -> Node0x1d66610;
	Node0x1d66610 [shape=record,label="{%80:\l\l  %81 = load i64, i64* %7, align 8, !dbg !454, !tbaa !372\l  store i64 %81, i64* @iread.prev_nread, align 8, !dbg !455, !tbaa !372\l  %82 = load i64, i64* %7, align 8, !dbg !456, !tbaa !372\l  %83 = bitcast i64* %7 to i8*, !dbg !457\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #12, !dbg !457\l  ret i64 %82, !dbg !458\l}"];
}
