digraph "CFG for 'general_numcompare' function" {
	label="CFG for 'general_numcompare' function";

	Node0x16c6fd0 [shape=record,label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i8*, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca x86_fp80, align 16\l  %9 = alloca x86_fp80, align 16\l  %10 = alloca i32, align 4\l  store i8* %0, i8** %4, align 8, !tbaa !1172\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !1165, metadata\l... !DIExpression()), !dbg !1176\l  store i8* %1, i8** %5, align 8, !tbaa !1172\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !1166, metadata\l... !DIExpression()), !dbg !1177\l  %11 = bitcast i8** %6 to i8*, !dbg !1178\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #12, !dbg !1178\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1167, metadata\l... !DIExpression()), !dbg !1179\l  %12 = bitcast i8** %7 to i8*, !dbg !1180\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #12, !dbg !1180\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !1168, metadata\l... !DIExpression()), !dbg !1181\l  %13 = bitcast x86_fp80* %8 to i8*, !dbg !1182\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #12, !dbg !1182\l  call void @llvm.dbg.declare(metadata x86_fp80* %8, metadata !1169, metadata\l... !DIExpression()), !dbg !1183\l  %14 = load i8*, i8** %4, align 8, !dbg !1184, !tbaa !1172\l  %15 = call x86_fp80 @strtold(i8* %14, i8** %6) #12, !dbg !1185\l  store x86_fp80 %15, x86_fp80* %8, align 16, !dbg !1183, !tbaa !1186\l  %16 = bitcast x86_fp80* %9 to i8*, !dbg !1188\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* %16) #12, !dbg !1188\l  call void @llvm.dbg.declare(metadata x86_fp80* %9, metadata !1171, metadata\l... !DIExpression()), !dbg !1189\l  %17 = load i8*, i8** %5, align 8, !dbg !1190, !tbaa !1172\l  %18 = call x86_fp80 @strtold(i8* %17, i8** %7) #12, !dbg !1191\l  store x86_fp80 %18, x86_fp80* %9, align 16, !dbg !1189, !tbaa !1186\l  %19 = load i8*, i8** %4, align 8, !dbg !1192, !tbaa !1172\l  %20 = load i8*, i8** %6, align 8, !dbg !1194, !tbaa !1172\l  %21 = icmp eq i8* %19, %20, !dbg !1195\l  br i1 %21, label %22, label %28, !dbg !1196\l|{<s0>T|<s1>F}}"];
	Node0x16c6fd0:s0 -> Node0x16ede90;
	Node0x16c6fd0:s1 -> Node0x16edee0;
	Node0x16ede90 [shape=record,label="{%22:\l\l  %23 = load i8*, i8** %5, align 8, !dbg !1197, !tbaa !1172\l  %24 = load i8*, i8** %7, align 8, !dbg !1198, !tbaa !1172\l  %25 = icmp eq i8* %23, %24, !dbg !1199\l  %26 = zext i1 %25 to i64, !dbg !1197\l  %27 = select i1 %25, i32 0, i32 -1, !dbg !1197\l  store i32 %27, i32* %3, align 4, !dbg !1200\l  store i32 1, i32* %10, align 4\l  br label %72, !dbg !1200\l}"];
	Node0x16ede90 -> Node0x16ee480;
	Node0x16edee0 [shape=record,label="{%28:\l\l  %29 = load i8*, i8** %5, align 8, !dbg !1201, !tbaa !1172\l  %30 = load i8*, i8** %7, align 8, !dbg !1203, !tbaa !1172\l  %31 = icmp eq i8* %29, %30, !dbg !1204\l  br i1 %31, label %32, label %33, !dbg !1205\l|{<s0>T|<s1>F}}"];
	Node0x16edee0:s0 -> Node0x16edf30;
	Node0x16edee0:s1 -> Node0x16edf80;
	Node0x16edf30 [shape=record,label="{%32:\l\l  store i32 1, i32* %3, align 4, !dbg !1206\l  store i32 1, i32* %10, align 4\l  br label %72, !dbg !1206\l}"];
	Node0x16edf30 -> Node0x16ee480;
	Node0x16edf80 [shape=record,label="{%33:\l\l  %34 = load x86_fp80, x86_fp80* %8, align 16, !dbg !1207, !tbaa !1186\l  %35 = load x86_fp80, x86_fp80* %9, align 16, !dbg !1208, !tbaa !1186\l  %36 = fcmp olt x86_fp80 %34, %35, !dbg !1209\l  br i1 %36, label %37, label %38, !dbg !1207\l|{<s0>T|<s1>F}}"];
	Node0x16edf80:s0 -> Node0x16edfd0;
	Node0x16edf80:s1 -> Node0x16ee020;
	Node0x16edfd0 [shape=record,label="{%37:\l\l  br label %70, !dbg !1207\l}"];
	Node0x16edfd0 -> Node0x16ee430;
	Node0x16ee020 [shape=record,label="{%38:\l\l  %39 = load x86_fp80, x86_fp80* %8, align 16, !dbg !1210, !tbaa !1186\l  %40 = load x86_fp80, x86_fp80* %9, align 16, !dbg !1211, !tbaa !1186\l  %41 = fcmp ogt x86_fp80 %39, %40, !dbg !1212\l  br i1 %41, label %42, label %43, !dbg !1210\l|{<s0>T|<s1>F}}"];
	Node0x16ee020:s0 -> Node0x16ee070;
	Node0x16ee020:s1 -> Node0x16ee0c0;
	Node0x16ee070 [shape=record,label="{%42:\l\l  br label %68, !dbg !1210\l}"];
	Node0x16ee070 -> Node0x16ee3e0;
	Node0x16ee0c0 [shape=record,label="{%43:\l\l  %44 = load x86_fp80, x86_fp80* %8, align 16, !dbg !1213, !tbaa !1186\l  %45 = load x86_fp80, x86_fp80* %9, align 16, !dbg !1214, !tbaa !1186\l  %46 = fcmp oeq x86_fp80 %44, %45, !dbg !1215\l  br i1 %46, label %47, label %48, !dbg !1213\l|{<s0>T|<s1>F}}"];
	Node0x16ee0c0:s0 -> Node0x16ee110;
	Node0x16ee0c0:s1 -> Node0x16ee160;
	Node0x16ee110 [shape=record,label="{%47:\l\l  br label %66, !dbg !1213\l}"];
	Node0x16ee110 -> Node0x16ee390;
	Node0x16ee160 [shape=record,label="{%48:\l\l  %49 = load x86_fp80, x86_fp80* %9, align 16, !dbg !1216, !tbaa !1186\l  %50 = load x86_fp80, x86_fp80* %9, align 16, !dbg !1217, !tbaa !1186\l  %51 = fcmp oeq x86_fp80 %49, %50, !dbg !1218\l  br i1 %51, label %52, label %53, !dbg !1216\l|{<s0>T|<s1>F}}"];
	Node0x16ee160:s0 -> Node0x16ee1b0;
	Node0x16ee160:s1 -> Node0x16ee200;
	Node0x16ee1b0 [shape=record,label="{%52:\l\l  br label %64, !dbg !1216\l}"];
	Node0x16ee1b0 -> Node0x16ee340;
	Node0x16ee200 [shape=record,label="{%53:\l\l  %54 = load x86_fp80, x86_fp80* %8, align 16, !dbg !1219, !tbaa !1186\l  %55 = load x86_fp80, x86_fp80* %8, align 16, !dbg !1220, !tbaa !1186\l  %56 = fcmp oeq x86_fp80 %54, %55, !dbg !1221\l  br i1 %56, label %57, label %58, !dbg !1219\l|{<s0>T|<s1>F}}"];
	Node0x16ee200:s0 -> Node0x16ee250;
	Node0x16ee200:s1 -> Node0x16ee2a0;
	Node0x16ee250 [shape=record,label="{%57:\l\l  br label %62, !dbg !1219\l}"];
	Node0x16ee250 -> Node0x16ee2f0;
	Node0x16ee2a0 [shape=record,label="{%58:\l\l  %59 = load i8*, i8** %4, align 8, !dbg !1222, !tbaa !1172\l  %60 = load i8*, i8** %5, align 8, !dbg !1223, !tbaa !1172\l  %61 = call i32 @nan_compare(i8* %59, i8* %60), !dbg !1224\l  br label %62, !dbg !1219\l}"];
	Node0x16ee2a0 -> Node0x16ee2f0;
	Node0x16ee2f0 [shape=record,label="{%62:\l\l  %63 = phi i32 [ 1, %57 ], [ %61, %58 ], !dbg !1219\l  br label %64, !dbg !1216\l}"];
	Node0x16ee2f0 -> Node0x16ee340;
	Node0x16ee340 [shape=record,label="{%64:\l\l  %65 = phi i32 [ -1, %52 ], [ %63, %62 ], !dbg !1216\l  br label %66, !dbg !1213\l}"];
	Node0x16ee340 -> Node0x16ee390;
	Node0x16ee390 [shape=record,label="{%66:\l\l  %67 = phi i32 [ 0, %47 ], [ %65, %64 ], !dbg !1213\l  br label %68, !dbg !1210\l}"];
	Node0x16ee390 -> Node0x16ee3e0;
	Node0x16ee3e0 [shape=record,label="{%68:\l\l  %69 = phi i32 [ 1, %42 ], [ %67, %66 ], !dbg !1210\l  br label %70, !dbg !1207\l}"];
	Node0x16ee3e0 -> Node0x16ee430;
	Node0x16ee430 [shape=record,label="{%70:\l\l  %71 = phi i32 [ -1, %37 ], [ %69, %68 ], !dbg !1207\l  store i32 %71, i32* %3, align 4, !dbg !1225\l  store i32 1, i32* %10, align 4\l  br label %72, !dbg !1225\l}"];
	Node0x16ee430 -> Node0x16ee480;
	Node0x16ee480 [shape=record,label="{%72:\l\l  %73 = bitcast x86_fp80* %9 to i8*, !dbg !1226\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* %73) #12, !dbg !1226\l  %74 = bitcast x86_fp80* %8 to i8*, !dbg !1226\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* %74) #12, !dbg !1226\l  %75 = bitcast i8** %7 to i8*, !dbg !1226\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #12, !dbg !1226\l  %76 = bitcast i8** %6 to i8*, !dbg !1226\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #12, !dbg !1226\l  %77 = load i32, i32* %3, align 4, !dbg !1226\l  ret i32 %77, !dbg !1226\l}"];
}
