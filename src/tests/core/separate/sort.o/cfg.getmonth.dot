digraph "CFG for 'getmonth' function" {
	label="CFG for 'getmonth' function";

	Node0x16f4cb0 [shape=record,label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i8*, align 8\l  %5 = alloca i8**, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i8*, align 8\l  %10 = alloca i8*, align 8\l  %11 = alloca i32, align 4\l  store i8* %0, i8** %4, align 8, !tbaa !1173\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !1165, metadata\l... !DIExpression()), !dbg !1177\l  store i8** %1, i8*** %5, align 8, !tbaa !1173\l  call void @llvm.dbg.declare(metadata i8*** %5, metadata !1166, metadata\l... !DIExpression()), !dbg !1178\l  %12 = bitcast i64* %6 to i8*, !dbg !1179\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #12, !dbg !1179\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1167, metadata\l... !DIExpression()), !dbg !1180\l  store i64 0, i64* %6, align 8, !dbg !1180, !tbaa !1181\l  %13 = bitcast i64* %7 to i8*, !dbg !1183\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #12, !dbg !1183\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1168, metadata\l... !DIExpression()), !dbg !1184\l  store i64 12, i64* %7, align 8, !dbg !1184, !tbaa !1181\l  br label %14, !dbg !1185\l}"];
	Node0x16f4cb0 -> Node0x16f4d00;
	Node0x16f4d00 [shape=record,label="{%14:\l\l  %15 = load i8*, i8** %4, align 8, !dbg !1186, !tbaa !1173\l  %16 = load i8, i8* %15, align 1, !dbg !1187, !tbaa !1188\l  %17 = call zeroext i8 @to_uchar(i8 signext %16), !dbg !1189\l  %18 = zext i8 %17 to i64, !dbg !1190\l  %19 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64\l... %18, !dbg !1190\l  %20 = load i8, i8* %19, align 1, !dbg !1190, !tbaa !1191, !range !1193\l  %21 = trunc i8 %20 to i1, !dbg !1190\l  br i1 %21, label %22, label %25, !dbg !1185\l|{<s0>T|<s1>F}}"];
	Node0x16f4d00:s0 -> Node0x16f4d50;
	Node0x16f4d00:s1 -> Node0x16f4da0;
	Node0x16f4d50 [shape=record,label="{%22:\l\l  %23 = load i8*, i8** %4, align 8, !dbg !1194, !tbaa !1173\l  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !1194\l  store i8* %24, i8** %4, align 8, !dbg !1194, !tbaa !1173\l  br label %14, !dbg !1185, !llvm.loop !1195\l}"];
	Node0x16f4d50 -> Node0x16f4d00;
	Node0x16f4da0 [shape=record,label="{%25:\l\l  br label %26, !dbg !1196\l}"];
	Node0x16f4da0 -> Node0x16f4df0;
	Node0x16f4df0 [shape=record,label="{%26:\l\l  %27 = bitcast i64* %8 to i8*, !dbg !1197\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #12, !dbg !1197\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1169, metadata\l... !DIExpression()), !dbg !1198\l  %28 = load i64, i64* %6, align 8, !dbg !1199, !tbaa !1181\l  %29 = load i64, i64* %7, align 8, !dbg !1200, !tbaa !1181\l  %30 = add i64 %28, %29, !dbg !1201\l  %31 = udiv i64 %30, 2, !dbg !1202\l  store i64 %31, i64* %8, align 8, !dbg !1198, !tbaa !1181\l  %32 = bitcast i8** %9 to i8*, !dbg !1203\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #12, !dbg !1203\l  call void @llvm.dbg.declare(metadata i8** %9, metadata !1171, metadata\l... !DIExpression()), !dbg !1204\l  %33 = load i8*, i8** %4, align 8, !dbg !1205, !tbaa !1173\l  store i8* %33, i8** %9, align 8, !dbg !1204, !tbaa !1173\l  %34 = bitcast i8** %10 to i8*, !dbg !1206\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #12, !dbg !1206\l  call void @llvm.dbg.declare(metadata i8** %10, metadata !1172, metadata\l... !DIExpression()), !dbg !1207\l  %35 = load i64, i64* %8, align 8, !dbg !1208, !tbaa !1181\l  %36 = getelementptr inbounds [12 x %struct.month], [12 x %struct.month]*\l... @monthtab, i64 0, i64 %35, !dbg !1209\l  %37 = getelementptr inbounds %struct.month, %struct.month* %36, i32 0, i32\l... 0, !dbg !1210\l  %38 = load i8*, i8** %37, align 16, !dbg !1210, !tbaa !1211\l  store i8* %38, i8** %10, align 8, !dbg !1207, !tbaa !1173\l  br label %39, !dbg !1214\l}"];
	Node0x16f4df0 -> Node0x16f4e40;
	Node0x16f4e40 [shape=record,label="{%39:\l\l  %40 = load i8*, i8** %10, align 8, !dbg !1215, !tbaa !1173\l  %41 = load i8, i8* %40, align 1, !dbg !1220, !tbaa !1188\l  %42 = icmp ne i8 %41, 0, !dbg !1220\l  br i1 %42, label %54, label %43, !dbg !1221\l|{<s0>T|<s1>F}}"];
	Node0x16f4e40:s0 -> Node0x16f4f80;
	Node0x16f4e40:s1 -> Node0x16f4e90;
	Node0x16f4e90 [shape=record,label="{%43:\l\l  %44 = load i8**, i8*** %5, align 8, !dbg !1222, !tbaa !1173\l  %45 = icmp ne i8** %44, null, !dbg !1222\l  br i1 %45, label %46, label %49, !dbg !1225\l|{<s0>T|<s1>F}}"];
	Node0x16f4e90:s0 -> Node0x16f4ee0;
	Node0x16f4e90:s1 -> Node0x16f4f30;
	Node0x16f4ee0 [shape=record,label="{%46:\l\l  %47 = load i8*, i8** %9, align 8, !dbg !1226, !tbaa !1173\l  %48 = load i8**, i8*** %5, align 8, !dbg !1227, !tbaa !1173\l  store i8* %47, i8** %48, align 8, !dbg !1228, !tbaa !1173\l  br label %49, !dbg !1229\l}"];
	Node0x16f4ee0 -> Node0x16f4f30;
	Node0x16f4f30 [shape=record,label="{%49:\l\l  %50 = load i64, i64* %8, align 8, !dbg !1230, !tbaa !1181\l  %51 = getelementptr inbounds [12 x %struct.month], [12 x %struct.month]*\l... @monthtab, i64 0, i64 %50, !dbg !1231\l  %52 = getelementptr inbounds %struct.month, %struct.month* %51, i32 0, i32\l... 1, !dbg !1232\l  %53 = load i32, i32* %52, align 8, !dbg !1232, !tbaa !1233\l  store i32 %53, i32* %3, align 4, !dbg !1234\l  store i32 1, i32* %11, align 4\l  br label %95, !dbg !1234\l}"];
	Node0x16f4f30 -> Node0x16f5200;
	Node0x16f4f80 [shape=record,label="{%54:\l\l  %55 = load i8*, i8** %9, align 8, !dbg !1235, !tbaa !1173\l  %56 = load i8, i8* %55, align 1, !dbg !1237, !tbaa !1188\l  %57 = call zeroext i8 @to_uchar(i8 signext %56), !dbg !1238\l  %58 = zext i8 %57 to i64, !dbg !1239\l  %59 = getelementptr inbounds [256 x i8], [256 x i8]* @fold_toupper, i64 0,\l... i64 %58, !dbg !1239\l  %60 = load i8, i8* %59, align 1, !dbg !1239, !tbaa !1188\l  %61 = call zeroext i8 @to_uchar(i8 signext %60), !dbg !1240\l  %62 = zext i8 %61 to i32, !dbg !1240\l  %63 = load i8*, i8** %10, align 8, !dbg !1241, !tbaa !1173\l  %64 = load i8, i8* %63, align 1, !dbg !1242, !tbaa !1188\l  %65 = call zeroext i8 @to_uchar(i8 signext %64), !dbg !1243\l  %66 = zext i8 %65 to i32, !dbg !1243\l  %67 = icmp slt i32 %62, %66, !dbg !1244\l  br i1 %67, label %68, label %70, !dbg !1245\l|{<s0>T|<s1>F}}"];
	Node0x16f4f80:s0 -> Node0x16f4fd0;
	Node0x16f4f80:s1 -> Node0x16f5020;
	Node0x16f4fd0 [shape=record,label="{%68:\l\l  %69 = load i64, i64* %8, align 8, !dbg !1246, !tbaa !1181\l  store i64 %69, i64* %7, align 8, !dbg !1248, !tbaa !1181\l  br label %94, !dbg !1249\l}"];
	Node0x16f4fd0 -> Node0x16f51b0;
	Node0x16f5020 [shape=record,label="{%70:\l\l  %71 = load i8*, i8** %9, align 8, !dbg !1250, !tbaa !1173\l  %72 = load i8, i8* %71, align 1, !dbg !1252, !tbaa !1188\l  %73 = call zeroext i8 @to_uchar(i8 signext %72), !dbg !1253\l  %74 = zext i8 %73 to i64, !dbg !1254\l  %75 = getelementptr inbounds [256 x i8], [256 x i8]* @fold_toupper, i64 0,\l... i64 %74, !dbg !1254\l  %76 = load i8, i8* %75, align 1, !dbg !1254, !tbaa !1188\l  %77 = call zeroext i8 @to_uchar(i8 signext %76), !dbg !1255\l  %78 = zext i8 %77 to i32, !dbg !1255\l  %79 = load i8*, i8** %10, align 8, !dbg !1256, !tbaa !1173\l  %80 = load i8, i8* %79, align 1, !dbg !1257, !tbaa !1188\l  %81 = call zeroext i8 @to_uchar(i8 signext %80), !dbg !1258\l  %82 = zext i8 %81 to i32, !dbg !1258\l  %83 = icmp sgt i32 %78, %82, !dbg !1259\l  br i1 %83, label %84, label %87, !dbg !1260\l|{<s0>T|<s1>F}}"];
	Node0x16f5020:s0 -> Node0x16f5070;
	Node0x16f5020:s1 -> Node0x16f50c0;
	Node0x16f5070 [shape=record,label="{%84:\l\l  %85 = load i64, i64* %8, align 8, !dbg !1261, !tbaa !1181\l  %86 = add i64 %85, 1, !dbg !1263\l  store i64 %86, i64* %6, align 8, !dbg !1264, !tbaa !1181\l  br label %94, !dbg !1265\l}"];
	Node0x16f5070 -> Node0x16f51b0;
	Node0x16f50c0 [shape=record,label="{%87:\l\l  br label %88\l}"];
	Node0x16f50c0 -> Node0x16f5110;
	Node0x16f5110 [shape=record,label="{%88:\l\l  br label %89, !dbg !1266\l}"];
	Node0x16f5110 -> Node0x16f5160;
	Node0x16f5160 [shape=record,label="{%89:\l\l  %90 = load i8*, i8** %9, align 8, !dbg !1267, !tbaa !1173\l  %91 = getelementptr inbounds i8, i8* %90, i32 1, !dbg !1267\l  store i8* %91, i8** %9, align 8, !dbg !1267, !tbaa !1173\l  %92 = load i8*, i8** %10, align 8, !dbg !1268, !tbaa !1173\l  %93 = getelementptr inbounds i8, i8* %92, i32 1, !dbg !1268\l  store i8* %93, i8** %10, align 8, !dbg !1268, !tbaa !1173\l  br label %39, !dbg !1269, !llvm.loop !1270\l}"];
	Node0x16f5160 -> Node0x16f4e40;
	Node0x16f51b0 [shape=record,label="{%94:\l\l  store i32 0, i32* %11, align 4, !dbg !1273\l  br label %95, !dbg !1273\l}"];
	Node0x16f51b0 -> Node0x16f5200;
	Node0x16f5200 [shape=record,label="{%95:\l\l  %96 = bitcast i8** %10 to i8*, !dbg !1273\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %96) #12, !dbg !1273\l  %97 = bitcast i8** %9 to i8*, !dbg !1273\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %97) #12, !dbg !1273\l  %98 = bitcast i64* %8 to i8*, !dbg !1273\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #12, !dbg !1273\l  %99 = load i32, i32* %11, align 4\l  switch i32 %99, label %106 [\l    i32 0, label %100\l  ]\l|{<s0>def|<s1>0}}"];
	Node0x16f5200:s0 -> Node0x16f5340;
	Node0x16f5200:s1 -> Node0x16f5250;
	Node0x16f5250 [shape=record,label="{%100:\l\l  br label %101, !dbg !1274\l}"];
	Node0x16f5250 -> Node0x16f52a0;
	Node0x16f52a0 [shape=record,label="{%101:\l\l  %102 = load i64, i64* %6, align 8, !dbg !1275, !tbaa !1181\l  %103 = load i64, i64* %7, align 8, !dbg !1276, !tbaa !1181\l  %104 = icmp ult i64 %102, %103, !dbg !1277\l  br i1 %104, label %26, label %105, !dbg !1274, !llvm.loop !1278\l|{<s0>T|<s1>F}}"];
	Node0x16f52a0:s0 -> Node0x16f4df0;
	Node0x16f52a0:s1 -> Node0x16f52f0;
	Node0x16f52f0 [shape=record,label="{%105:\l\l  store i32 0, i32* %3, align 4, !dbg !1280\l  store i32 1, i32* %11, align 4\l  br label %106, !dbg !1280\l}"];
	Node0x16f52f0 -> Node0x16f5340;
	Node0x16f5340 [shape=record,label="{%106:\l\l  %107 = bitcast i64* %7 to i8*, !dbg !1281\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107) #12, !dbg !1281\l  %108 = bitcast i64* %6 to i8*, !dbg !1281\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %108) #12, !dbg !1281\l  %109 = load i32, i32* %3, align 4, !dbg !1281\l  ret i32 %109, !dbg !1281\l}"];
}
