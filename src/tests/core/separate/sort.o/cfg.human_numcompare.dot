digraph "CFG for 'human_numcompare' function" {
	label="CFG for 'human_numcompare' function";

	Node0x16f24d0 [shape=record,label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i32, align 4\l  store i8* %0, i8** %3, align 8, !tbaa !1168\l  call void @llvm.dbg.declare(metadata i8** %3, metadata !1165, metadata\l... !DIExpression()), !dbg !1172\l  store i8* %1, i8** %4, align 8, !tbaa !1168\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !1166, metadata\l... !DIExpression()), !dbg !1173\l  br label %6, !dbg !1174\l}"];
	Node0x16f24d0 -> Node0x16f25e0;
	Node0x16f25e0 [shape=record,label="{%6:\l\l  %7 = load i8*, i8** %3, align 8, !dbg !1175, !tbaa !1168\l  %8 = load i8, i8* %7, align 1, !dbg !1176, !tbaa !1177\l  %9 = call zeroext i8 @to_uchar(i8 signext %8), !dbg !1178\l  %10 = zext i8 %9 to i64, !dbg !1179\l  %11 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64\l... %10, !dbg !1179\l  %12 = load i8, i8* %11, align 1, !dbg !1179, !tbaa !1180, !range !1182\l  %13 = trunc i8 %12 to i1, !dbg !1179\l  br i1 %13, label %14, label %17, !dbg !1174\l|{<s0>T|<s1>F}}"];
	Node0x16f25e0:s0 -> Node0x16f2630;
	Node0x16f25e0:s1 -> Node0x16f2680;
	Node0x16f2630 [shape=record,label="{%14:\l\l  %15 = load i8*, i8** %3, align 8, !dbg !1183, !tbaa !1168\l  %16 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !1183\l  store i8* %16, i8** %3, align 8, !dbg !1183, !tbaa !1168\l  br label %6, !dbg !1174, !llvm.loop !1184\l}"];
	Node0x16f2630 -> Node0x16f25e0;
	Node0x16f2680 [shape=record,label="{%17:\l\l  br label %18, !dbg !1185\l}"];
	Node0x16f2680 -> Node0x16f26d0;
	Node0x16f26d0 [shape=record,label="{%18:\l\l  %19 = load i8*, i8** %4, align 8, !dbg !1186, !tbaa !1168\l  %20 = load i8, i8* %19, align 1, !dbg !1187, !tbaa !1177\l  %21 = call zeroext i8 @to_uchar(i8 signext %20), !dbg !1188\l  %22 = zext i8 %21 to i64, !dbg !1189\l  %23 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64\l... %22, !dbg !1189\l  %24 = load i8, i8* %23, align 1, !dbg !1189, !tbaa !1180, !range !1182\l  %25 = trunc i8 %24 to i1, !dbg !1189\l  br i1 %25, label %26, label %29, !dbg !1185\l|{<s0>T|<s1>F}}"];
	Node0x16f26d0:s0 -> Node0x16f2720;
	Node0x16f26d0:s1 -> Node0x16f2770;
	Node0x16f2720 [shape=record,label="{%26:\l\l  %27 = load i8*, i8** %4, align 8, !dbg !1190, !tbaa !1168\l  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !1190\l  store i8* %28, i8** %4, align 8, !dbg !1190, !tbaa !1168\l  br label %18, !dbg !1185, !llvm.loop !1191\l}"];
	Node0x16f2720 -> Node0x16f26d0;
	Node0x16f2770 [shape=record,label="{%29:\l\l  %30 = bitcast i32* %5 to i8*, !dbg !1192\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #12, !dbg !1192\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !1167, metadata\l... !DIExpression()), !dbg !1193\l  %31 = load i8*, i8** %3, align 8, !dbg !1194, !tbaa !1168\l  %32 = call i32 @find_unit_order(i8* %31) #13, !dbg !1195\l  %33 = load i8*, i8** %4, align 8, !dbg !1196, !tbaa !1168\l  %34 = call i32 @find_unit_order(i8* %33) #13, !dbg !1197\l  %35 = sub nsw i32 %32, %34, !dbg !1198\l  store i32 %35, i32* %5, align 4, !dbg !1193, !tbaa !1199\l  %36 = load i32, i32* %5, align 4, !dbg !1201, !tbaa !1199\l  %37 = icmp ne i32 %36, 0, !dbg !1201\l  br i1 %37, label %38, label %40, !dbg !1201\l|{<s0>T|<s1>F}}"];
	Node0x16f2770:s0 -> Node0x16f27c0;
	Node0x16f2770:s1 -> Node0x16f2810;
	Node0x16f27c0 [shape=record,label="{%38:\l\l  %39 = load i32, i32* %5, align 4, !dbg !1202, !tbaa !1199\l  br label %46, !dbg !1201\l}"];
	Node0x16f27c0 -> Node0x16f2860;
	Node0x16f2810 [shape=record,label="{%40:\l\l  %41 = load i8*, i8** %3, align 8, !dbg !1203, !tbaa !1168\l  %42 = load i8*, i8** %4, align 8, !dbg !1204, !tbaa !1168\l  %43 = load i32, i32* @decimal_point, align 4, !dbg !1205, !tbaa !1199\l  %44 = load i32, i32* @thousands_sep, align 4, !dbg !1206, !tbaa !1199\l  %45 = call i32 @strnumcmp(i8* %41, i8* %42, i32 %43, i32 %44), !dbg !1207\l  br label %46, !dbg !1201\l}"];
	Node0x16f2810 -> Node0x16f2860;
	Node0x16f2860 [shape=record,label="{%46:\l\l  %47 = phi i32 [ %39, %38 ], [ %45, %40 ], !dbg !1201\l  %48 = bitcast i32* %5 to i8*, !dbg !1208\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %48) #12, !dbg !1208\l  ret i32 %47, !dbg !1209\l}"];
}
