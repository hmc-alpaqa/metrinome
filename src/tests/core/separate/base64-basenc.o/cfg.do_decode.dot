digraph "CFG for 'do_decode' function" {
	label="CFG for 'do_decode' function";

	Node0xa0e7f0 [shape=record,label="{%3:\l  %4 = alloca %struct._IO_FILE*, align 8\l  %5 = alloca %struct._IO_FILE*, align 8\l  %6 = alloca i8, align 1\l  %7 = alloca i8*, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca %struct.base64_decode_context, align 4\l  %11 = alloca i8, align 1\l  %12 = alloca i64, align 8\l  %13 = alloca i32, align 4\l  %14 = alloca i64, align 8\l  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8, !tbaa !141\l  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %4, metadata !117,\l... metadata !DIExpression()), !dbg !145\l  store %struct._IO_FILE* %1, %struct._IO_FILE** %5, align 8, !tbaa !141\l  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !118,\l... metadata !DIExpression()), !dbg !146\l  %15 = zext i1 %2 to i8\l  store i8 %15, i8* %6, align 1, !tbaa !147\l  call void @llvm.dbg.declare(metadata i8* %6, metadata !119, metadata\l... !DIExpression()), !dbg !149\l  %16 = bitcast i8** %7 to i8*, !dbg !150\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #10, !dbg !150\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !120, metadata\l... !DIExpression()), !dbg !151\l  %17 = bitcast i8** %8 to i8*, !dbg !150\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #10, !dbg !150\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !121, metadata\l... !DIExpression()), !dbg !152\l  %18 = bitcast i64* %9 to i8*, !dbg !153\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #10, !dbg !153\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !122, metadata\l... !DIExpression()), !dbg !154\l  %19 = bitcast %struct.base64_decode_context* %10 to i8*, !dbg !155\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #10, !dbg !155\l  call void @llvm.dbg.declare(metadata %struct.base64_decode_context* %10,\l... metadata !123, metadata !DIExpression()), !dbg !156\l  %20 = call noalias i8* @xmalloc(i64 4096), !dbg !157\l  store i8* %20, i8** %7, align 8, !dbg !158, !tbaa !141\l  %21 = call noalias i8* @xmalloc(i64 3072), !dbg !159\l  store i8* %21, i8** %8, align 8, !dbg !160, !tbaa !141\l  call void @base64_decode_ctx_init(%struct.base64_decode_context* %10), !dbg\l... !161\l  br label %22, !dbg !162\l}"];
	Node0xa0e7f0 -> Node0xa0f4b0;
	Node0xa0f4b0 [shape=record,label="{%22:\l\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %11) #10, !dbg !163\l  call void @llvm.dbg.declare(metadata i8* %11, metadata !132, metadata\l... !DIExpression()), !dbg !164\l  %23 = bitcast i64* %12 to i8*, !dbg !165\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #10, !dbg !165\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !134, metadata\l... !DIExpression()), !dbg !166\l  %24 = bitcast i32* %13 to i8*, !dbg !167\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #10, !dbg !167\l  call void @llvm.dbg.declare(metadata i32* %13, metadata !135, metadata\l... !DIExpression()), !dbg !168\l  store i64 0, i64* %9, align 8, !dbg !169, !tbaa !170\l  br label %25, !dbg !172\l}"];
	Node0xa0f4b0 -> Node0xa21ca0;
	Node0xa21ca0 [shape=record,label="{%25:\l\l  %26 = load i8*, i8** %7, align 8, !dbg !173, !tbaa !141\l  %27 = load i64, i64* %9, align 8, !dbg !173, !tbaa !170\l  %28 = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !173\l  %29 = load i64, i64* %9, align 8, !dbg !173, !tbaa !170\l  %30 = sub i64 4096, %29, !dbg !173\l  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !173,\l... !tbaa !141\l  %32 = call i64 @fread_unlocked(i8* %28, i64 1, i64 %30, %struct._IO_FILE*\l... %31), !dbg !173\l  store i64 %32, i64* %12, align 8, !dbg !174, !tbaa !170\l  %33 = load i8, i8* %6, align 1, !dbg !175, !tbaa !147, !range !176\l  %34 = trunc i8 %33 to i1, !dbg !175\l  br i1 %34, label %35, label %86, !dbg !177\l|{<s0>T|<s1>F}}"];
	Node0xa21ca0:s0 -> Node0xa21cf0;
	Node0xa21ca0:s1 -> Node0xa22060;
	Node0xa21cf0 [shape=record,label="{%35:\l\l  %36 = bitcast i64* %14 to i8*, !dbg !178\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #10, !dbg !178\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !136, metadata\l... !DIExpression()), !dbg !179\l  store i64 0, i64* %14, align 8, !dbg !179, !tbaa !170\l  br label %37, !dbg !178\l}"];
	Node0xa21cf0 -> Node0xa21d40;
	Node0xa21d40 [shape=record,label="{%37:\l\l  %38 = load i64, i64* %12, align 8, !dbg !180, !tbaa !170\l  %39 = icmp ugt i64 %38, 0, !dbg !182\l  br i1 %39, label %40, label %44, !dbg !183\l|{<s0>T|<s1>F}}"];
	Node0xa21d40:s0 -> Node0xa21d90;
	Node0xa21d40:s1 -> Node0xa21de0;
	Node0xa21d90 [shape=record,label="{%40:\l\l  %41 = load i64, i64* %14, align 8, !dbg !184, !tbaa !170\l  %42 = load i64, i64* %12, align 8, !dbg !185, !tbaa !170\l  %43 = icmp ult i64 %41, %42, !dbg !186\l  br label %44\l}"];
	Node0xa21d90 -> Node0xa21de0;
	Node0xa21de0 [shape=record,label="{%44:\l\l  %45 = phi i1 [ false, %37 ], [ %43, %40 ], !dbg !187\l  br i1 %45, label %48, label %46, !dbg !188\l|{<s0>T|<s1>F}}"];
	Node0xa21de0:s0 -> Node0xa21e80;
	Node0xa21de0:s1 -> Node0xa21e30;
	Node0xa21e30 [shape=record,label="{%46:\l\l  %47 = bitcast i64* %14 to i8*, !dbg !189\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %47) #10, !dbg !189\l  br label %85\l}"];
	Node0xa21e30 -> Node0xa22010;
	Node0xa21e80 [shape=record,label="{%48:\l\l  %49 = load i8*, i8** %7, align 8, !dbg !190, !tbaa !141\l  %50 = load i64, i64* %9, align 8, !dbg !193, !tbaa !170\l  %51 = load i64, i64* %14, align 8, !dbg !194, !tbaa !170\l  %52 = add i64 %50, %51, !dbg !195\l  %53 = getelementptr inbounds i8, i8* %49, i64 %52, !dbg !190\l  %54 = load i8, i8* %53, align 1, !dbg !190, !tbaa !196\l  %55 = call zeroext i1 @isbase64(i8 signext %54) #11, !dbg !197\l  br i1 %55, label %65, label %56, !dbg !198\l|{<s0>T|<s1>F}}"];
	Node0xa21e80:s0 -> Node0xa21f20;
	Node0xa21e80:s1 -> Node0xa21ed0;
	Node0xa21ed0 [shape=record,label="{%56:\l\l  %57 = load i8*, i8** %7, align 8, !dbg !199, !tbaa !141\l  %58 = load i64, i64* %9, align 8, !dbg !200, !tbaa !170\l  %59 = load i64, i64* %14, align 8, !dbg !201, !tbaa !170\l  %60 = add i64 %58, %59, !dbg !202\l  %61 = getelementptr inbounds i8, i8* %57, i64 %60, !dbg !199\l  %62 = load i8, i8* %61, align 1, !dbg !199, !tbaa !196\l  %63 = sext i8 %62 to i32, !dbg !199\l  %64 = icmp eq i32 %63, 61, !dbg !203\l  br i1 %64, label %65, label %68, !dbg !204\l|{<s0>T|<s1>F}}"];
	Node0xa21ed0:s0 -> Node0xa21f20;
	Node0xa21ed0:s1 -> Node0xa21f70;
	Node0xa21f20 [shape=record,label="{%65:\l\l  %66 = load i64, i64* %14, align 8, !dbg !205, !tbaa !170\l  %67 = add i64 %66, 1, !dbg !205\l  store i64 %67, i64* %14, align 8, !dbg !205, !tbaa !170\l  br label %84, !dbg !206\l}"];
	Node0xa21f20 -> Node0xa21fc0;
	Node0xa21f70 [shape=record,label="{%68:\l\l  %69 = load i8*, i8** %7, align 8, !dbg !207, !tbaa !141\l  %70 = load i64, i64* %9, align 8, !dbg !208, !tbaa !170\l  %71 = getelementptr inbounds i8, i8* %69, i64 %70, !dbg !209\l  %72 = load i64, i64* %14, align 8, !dbg !210, !tbaa !170\l  %73 = getelementptr inbounds i8, i8* %71, i64 %72, !dbg !211\l  %74 = load i8*, i8** %7, align 8, !dbg !212, !tbaa !141\l  %75 = load i64, i64* %9, align 8, !dbg !213, !tbaa !170\l  %76 = getelementptr inbounds i8, i8* %74, i64 %75, !dbg !214\l  %77 = load i64, i64* %14, align 8, !dbg !215, !tbaa !170\l  %78 = getelementptr inbounds i8, i8* %76, i64 %77, !dbg !216\l  %79 = getelementptr inbounds i8, i8* %78, i64 1, !dbg !217\l  %80 = load i64, i64* %12, align 8, !dbg !218, !tbaa !170\l  %81 = add i64 %80, -1, !dbg !218\l  store i64 %81, i64* %12, align 8, !dbg !218, !tbaa !170\l  %82 = load i64, i64* %14, align 8, !dbg !219, !tbaa !170\l  %83 = sub i64 %81, %82, !dbg !220\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %73, i8* align 1 %79, i64\l... %83, i1 false), !dbg !221\l  br label %84\l}"];
	Node0xa21f70 -> Node0xa21fc0;
	Node0xa21fc0 [shape=record,label="{%84:\l\l  br label %37, !dbg !189, !llvm.loop !222\l}"];
	Node0xa21fc0 -> Node0xa21d40;
	Node0xa22010 [shape=record,label="{%85:\l\l  br label %86, !dbg !224\l}"];
	Node0xa22010 -> Node0xa22060;
	Node0xa22060 [shape=record,label="{%86:\l\l  %87 = load i64, i64* %12, align 8, !dbg !225, !tbaa !170\l  %88 = load i64, i64* %9, align 8, !dbg !226, !tbaa !170\l  %89 = add i64 %88, %87, !dbg !226\l  store i64 %89, i64* %9, align 8, !dbg !226, !tbaa !170\l  %90 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !227,\l... !tbaa !141\l  %91 = call i32 @ferror_unlocked(%struct._IO_FILE* %90) #10, !dbg !227\l  %92 = icmp ne i32 %91, 0, !dbg !227\l  br i1 %92, label %93, label %96, !dbg !229\l|{<s0>T|<s1>F}}"];
	Node0xa22060:s0 -> Node0xa220b0;
	Node0xa22060:s1 -> Node0xa22100;
	Node0xa220b0 [shape=record,label="{%93:\l\l  %94 = call i32* @__errno_location() #11, !dbg !230\l  %95 = load i32, i32* %94, align 4, !dbg !230, !tbaa !231\l  call void (i32, i32, i8*, ...) @error(i32 1, i32 %95, i8* getelementptr\l... inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0)), !dbg !230\l  unreachable, !dbg !230\l}"];
	Node0xa22100 [shape=record,label="{%96:\l\l  br label %97, !dbg !233\l}"];
	Node0xa22100 -> Node0xa22150;
	Node0xa22150 [shape=record,label="{%97:\l\l  %98 = load i64, i64* %9, align 8, !dbg !234, !tbaa !170\l  %99 = icmp ult i64 %98, 4096, !dbg !235\l  br i1 %99, label %100, label %105, !dbg !236\l|{<s0>T|<s1>F}}"];
	Node0xa22150:s0 -> Node0xa221a0;
	Node0xa22150:s1 -> Node0xa221f0;
	Node0xa221a0 [shape=record,label="{%100:\l\l  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !237,\l... !tbaa !141\l  %102 = call i32 @feof_unlocked(%struct._IO_FILE* %101) #10, !dbg !237\l  %103 = icmp ne i32 %102, 0, !dbg !238\l  %104 = xor i1 %103, true, !dbg !238\l  br label %105\l}"];
	Node0xa221a0 -> Node0xa221f0;
	Node0xa221f0 [shape=record,label="{%105:\l\l  %106 = phi i1 [ false, %97 ], [ %104, %100 ], !dbg !239\l  br i1 %106, label %25, label %107, !dbg !233, !llvm.loop !240\l|{<s0>T|<s1>F}}"];
	Node0xa221f0:s0 -> Node0xa21ca0;
	Node0xa221f0:s1 -> Node0xa22240;
	Node0xa22240 [shape=record,label="{%107:\l\l  store i32 0, i32* %13, align 4, !dbg !242, !tbaa !231\l  br label %108, !dbg !244\l}"];
	Node0xa22240 -> Node0xa22290;
	Node0xa22290 [shape=record,label="{%108:\l\l  %109 = load i32, i32* %13, align 4, !dbg !245, !tbaa !231\l  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !247,\l... !tbaa !141\l  %111 = call i32 @feof_unlocked(%struct._IO_FILE* %110) #10, !dbg !247\l  %112 = icmp ne i32 %111, 0, !dbg !248\l  %113 = xor i1 %112, true, !dbg !248\l  %114 = xor i1 %113, true, !dbg !249\l  %115 = zext i1 %114 to i32, !dbg !249\l  %116 = add nsw i32 1, %115, !dbg !250\l  %117 = icmp ult i32 %109, %116, !dbg !251\l  br i1 %117, label %118, label %155, !dbg !252\l|{<s0>T|<s1>F}}"];
	Node0xa22290:s0 -> Node0xa222e0;
	Node0xa22290:s1 -> Node0xa226a0;
	Node0xa222e0 [shape=record,label="{%118:\l\l  %119 = load i32, i32* %13, align 4, !dbg !253, !tbaa !231\l  %120 = icmp eq i32 %119, 1, !dbg !256\l  br i1 %120, label %121, label %126, !dbg !257\l|{<s0>T|<s1>F}}"];
	Node0xa222e0:s0 -> Node0xa22330;
	Node0xa222e0:s1 -> Node0xa223d0;
	Node0xa22330 [shape=record,label="{%121:\l\l  %122 = getelementptr inbounds %struct.base64_decode_context,\l... %struct.base64_decode_context* %10, i32 0, i32 0, !dbg !258\l  %123 = load i32, i32* %122, align 4, !dbg !258, !tbaa !259\l  %124 = icmp eq i32 %123, 0, !dbg !261\l  br i1 %124, label %125, label %126, !dbg !262\l|{<s0>T|<s1>F}}"];
	Node0xa22330:s0 -> Node0xa22380;
	Node0xa22330:s1 -> Node0xa223d0;
	Node0xa22380 [shape=record,label="{%125:\l\l  br label %155, !dbg !263\l}"];
	Node0xa22380 -> Node0xa226a0;
	Node0xa223d0 [shape=record,label="{%126:\l\l  store i64 3072, i64* %12, align 8, !dbg !264, !tbaa !170\l  %127 = load i8*, i8** %7, align 8, !dbg !265, !tbaa !141\l  %128 = load i32, i32* %13, align 4, !dbg !266, !tbaa !231\l  %129 = icmp eq i32 %128, 0, !dbg !267\l  br i1 %129, label %130, label %132, !dbg !266\l|{<s0>T|<s1>F}}"];
	Node0xa223d0:s0 -> Node0xa22420;
	Node0xa223d0:s1 -> Node0xa22470;
	Node0xa22420 [shape=record,label="{%130:\l\l  %131 = load i64, i64* %9, align 8, !dbg !268, !tbaa !170\l  br label %133, !dbg !266\l}"];
	Node0xa22420 -> Node0xa224c0;
	Node0xa22470 [shape=record,label="{%132:\l\l  br label %133, !dbg !266\l}"];
	Node0xa22470 -> Node0xa224c0;
	Node0xa224c0 [shape=record,label="{%133:\l\l  %134 = phi i64 [ %131, %130 ], [ 0, %132 ], !dbg !266\l  %135 = load i8*, i8** %8, align 8, !dbg !269, !tbaa !141\l  %136 = call zeroext i1 @base64_decode_ctx(%struct.base64_decode_context*\l... %10, i8* %127, i64 %134, i8* %135, i64* %12), !dbg !270\l  %137 = zext i1 %136 to i8, !dbg !271\l  store i8 %137, i8* %11, align 1, !dbg !271, !tbaa !147\l  %138 = load i8*, i8** %8, align 8, !dbg !272, !tbaa !141\l  %139 = load i64, i64* %12, align 8, !dbg !272, !tbaa !170\l  %140 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !272,\l... !tbaa !141\l  %141 = call i64 @fwrite_unlocked(i8* %138, i64 1, i64 %139,\l... %struct._IO_FILE* %140), !dbg !272\l  %142 = load i64, i64* %12, align 8, !dbg !274, !tbaa !170\l  %143 = icmp ult i64 %141, %142, !dbg !275\l  br i1 %143, label %144, label %147, !dbg !276\l|{<s0>T|<s1>F}}"];
	Node0xa224c0:s0 -> Node0xa22510;
	Node0xa224c0:s1 -> Node0xa22560;
	Node0xa22510 [shape=record,label="{%144:\l\l  %145 = call i32* @__errno_location() #11, !dbg !277\l  %146 = load i32, i32* %145, align 4, !dbg !277, !tbaa !231\l  call void (i32, i32, i8*, ...) @error(i32 1, i32 %146, i8* getelementptr\l... inbounds ([12 x i8], [12 x i8]* @.str.42, i32 0, i32 0)), !dbg !277\l  unreachable, !dbg !277\l}"];
	Node0xa22560 [shape=record,label="{%147:\l\l  %148 = load i8, i8* %11, align 1, !dbg !278, !tbaa !147, !range !176\l  %149 = trunc i8 %148 to i1, !dbg !278\l  br i1 %149, label %151, label %150, !dbg !280\l|{<s0>T|<s1>F}}"];
	Node0xa22560:s0 -> Node0xa22600;
	Node0xa22560:s1 -> Node0xa225b0;
	Node0xa225b0 [shape=record,label="{%150:\l\l  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* getelementptr\l... inbounds ([14 x i8], [14 x i8]* @.str.43, i32 0, i32 0)), !dbg !281\l  unreachable, !dbg !281\l}"];
	Node0xa22600 [shape=record,label="{%151:\l\l  br label %152, !dbg !282\l}"];
	Node0xa22600 -> Node0xa22650;
	Node0xa22650 [shape=record,label="{%152:\l\l  %153 = load i32, i32* %13, align 4, !dbg !283, !tbaa !231\l  %154 = add i32 %153, 1, !dbg !283\l  store i32 %154, i32* %13, align 4, !dbg !283, !tbaa !231\l  br label %108, !dbg !284, !llvm.loop !285\l}"];
	Node0xa22650 -> Node0xa22290;
	Node0xa226a0 [shape=record,label="{%155:\l\l  %156 = bitcast i32* %13 to i8*, !dbg !287\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %156) #10, !dbg !287\l  %157 = bitcast i64* %12 to i8*, !dbg !287\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %157) #10, !dbg !287\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #10, !dbg !287\l  br label %158, !dbg !288\l}"];
	Node0xa226a0 -> Node0xa226f0;
	Node0xa226f0 [shape=record,label="{%158:\l\l  %159 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !289,\l... !tbaa !141\l  %160 = call i32 @feof_unlocked(%struct._IO_FILE* %159) #10, !dbg !289\l  %161 = icmp ne i32 %160, 0, !dbg !290\l  %162 = xor i1 %161, true, !dbg !290\l  br i1 %162, label %22, label %163, !dbg !288, !llvm.loop !291\l|{<s0>T|<s1>F}}"];
	Node0xa226f0:s0 -> Node0xa0f4b0;
	Node0xa226f0:s1 -> Node0xa22740;
	Node0xa22740 [shape=record,label="{%163:\l\l  %164 = bitcast %struct.base64_decode_context* %10 to i8*, !dbg !293\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164) #10, !dbg !293\l  %165 = bitcast i64* %9 to i8*, !dbg !293\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #10, !dbg !293\l  %166 = bitcast i8** %8 to i8*, !dbg !293\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %166) #10, !dbg !293\l  %167 = bitcast i8** %7 to i8*, !dbg !293\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %167) #10, !dbg !293\l  ret void, !dbg !293\l}"];
}
