digraph "CFG for 'x2nrealloc' function" {
	label="CFG for 'x2nrealloc' function";

	Node0x130a3a0 [shape=record,label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i64*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  store i8* %0, i8** %4, align 8, !tbaa !187\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !59, metadata\l... !DIExpression()), !dbg !191\l  store i64* %1, i64** %5, align 8, !tbaa !187\l  call void @llvm.dbg.declare(metadata i64** %5, metadata !60, metadata\l... !DIExpression()), !dbg !192\l  store i64 %2, i64* %6, align 8, !tbaa !193\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !61, metadata\l... !DIExpression()), !dbg !195\l  %8 = bitcast i64* %7 to i8*, !dbg !196\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #11, !dbg !196\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !62, metadata\l... !DIExpression()), !dbg !197\l  %9 = load i64*, i64** %5, align 8, !dbg !198, !tbaa !187\l  %10 = load i64, i64* %9, align 8, !dbg !199, !tbaa !193\l  store i64 %10, i64* %7, align 8, !dbg !197, !tbaa !193\l  %11 = load i8*, i8** %4, align 8, !dbg !200, !tbaa !187\l  %12 = icmp ne i8* %11, null, !dbg !200\l  br i1 %12, label %33, label %13, !dbg !202\l|{<s0>T|<s1>F}}"];
	Node0x130a3a0:s0 -> Node0x130c250;
	Node0x130a3a0:s1 -> Node0x130c0c0;
	Node0x130c0c0 [shape=record,label="{%13:\l\l  %14 = load i64, i64* %7, align 8, !dbg !203, !tbaa !193\l  %15 = icmp ne i64 %14, 0, !dbg !203\l  br i1 %15, label %26, label %16, !dbg !206\l|{<s0>T|<s1>F}}"];
	Node0x130c0c0:s0 -> Node0x130c160;
	Node0x130c0c0:s1 -> Node0x130c110;
	Node0x130c110 [shape=record,label="{%16:\l\l  %17 = load i64, i64* %6, align 8, !dbg !207, !tbaa !193\l  %18 = udiv i64 128, %17, !dbg !209\l  store i64 %18, i64* %7, align 8, !dbg !210, !tbaa !193\l  %19 = load i64, i64* %7, align 8, !dbg !211, !tbaa !193\l  %20 = icmp ne i64 %19, 0, !dbg !212\l  %21 = xor i1 %20, true, !dbg !212\l  %22 = zext i1 %21 to i32, !dbg !212\l  %23 = sext i32 %22 to i64, !dbg !212\l  %24 = load i64, i64* %7, align 8, !dbg !213, !tbaa !193\l  %25 = add i64 %24, %23, !dbg !213\l  store i64 %25, i64* %7, align 8, !dbg !213, !tbaa !193\l  br label %26, !dbg !214\l}"];
	Node0x130c110 -> Node0x130c160;
	Node0x130c160 [shape=record,label="{%26:\l\l  %27 = load i64, i64* %6, align 8, !dbg !215, !tbaa !193\l  %28 = udiv i64 9223372036854775807, %27, !dbg !215\l  %29 = load i64, i64* %7, align 8, !dbg !215, !tbaa !193\l  %30 = icmp ult i64 %28, %29, !dbg !215\l  br i1 %30, label %31, label %32, !dbg !217\l|{<s0>T|<s1>F}}"];
	Node0x130c160:s0 -> Node0x130c1b0;
	Node0x130c160:s1 -> Node0x130c200;
	Node0x130c1b0 [shape=record,label="{%31:\l\l  call void @xalloc_die() #12, !dbg !218\l  unreachable, !dbg !218\l}"];
	Node0x130c200 [shape=record,label="{%32:\l\l  br label %45, !dbg !219\l}"];
	Node0x130c200 -> Node0x130c340;
	Node0x130c250 [shape=record,label="{%33:\l\l  %34 = load i64, i64* %6, align 8, !dbg !220, !tbaa !193\l  %35 = udiv i64 6148914691236517204, %34, !dbg !223\l  %36 = load i64, i64* %7, align 8, !dbg !224, !tbaa !193\l  %37 = icmp ule i64 %35, %36, !dbg !225\l  br i1 %37, label %38, label %39, !dbg !226\l|{<s0>T|<s1>F}}"];
	Node0x130c250:s0 -> Node0x130c2a0;
	Node0x130c250:s1 -> Node0x130c2f0;
	Node0x130c2a0 [shape=record,label="{%38:\l\l  call void @xalloc_die() #12, !dbg !227\l  unreachable, !dbg !227\l}"];
	Node0x130c2f0 [shape=record,label="{%39:\l\l  %40 = load i64, i64* %7, align 8, !dbg !228, !tbaa !193\l  %41 = udiv i64 %40, 2, !dbg !229\l  %42 = add i64 %41, 1, !dbg !230\l  %43 = load i64, i64* %7, align 8, !dbg !231, !tbaa !193\l  %44 = add i64 %43, %42, !dbg !231\l  store i64 %44, i64* %7, align 8, !dbg !231, !tbaa !193\l  br label %45\l}"];
	Node0x130c2f0 -> Node0x130c340;
	Node0x130c340 [shape=record,label="{%45:\l\l  %46 = load i64, i64* %7, align 8, !dbg !232, !tbaa !193\l  %47 = load i64*, i64** %5, align 8, !dbg !233, !tbaa !187\l  store i64 %46, i64* %47, align 8, !dbg !234, !tbaa !193\l  %48 = load i8*, i8** %4, align 8, !dbg !235, !tbaa !187\l  %49 = load i64, i64* %7, align 8, !dbg !236, !tbaa !193\l  %50 = load i64, i64* %6, align 8, !dbg !237, !tbaa !193\l  %51 = mul i64 %49, %50, !dbg !238\l  %52 = call i8* @xrealloc(i8* %48, i64 %51), !dbg !239\l  %53 = bitcast i64* %7 to i8*, !dbg !240\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53) #11, !dbg !240\l  ret i8* %52, !dbg !241\l}"];
}
