digraph "CFG for 'logical_getcwd' function" {
	label="CFG for 'logical_getcwd' function";

	Node0xa76030 [shape=record,label="{%0:\l  %1 = alloca i8*, align 8\l  %2 = alloca %struct.stat, align 8\l  %3 = alloca %struct.stat, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i32, align 4\l  %7 = bitcast %struct.stat* %2 to i8*, !dbg !98\l  call void @llvm.lifetime.start.p0i8(i64 144, i8* %7) #11, !dbg !98\l  call void @llvm.dbg.declare(metadata %struct.stat* %2, metadata !55,\l... metadata !DIExpression()), !dbg !99\l  %8 = bitcast %struct.stat* %3 to i8*, !dbg !100\l  call void @llvm.lifetime.start.p0i8(i64 144, i8* %8) #11, !dbg !100\l  call void @llvm.dbg.declare(metadata %struct.stat* %3, metadata !95,\l... metadata !DIExpression()), !dbg !101\l  %9 = bitcast i8** %4 to i8*, !dbg !102\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #11, !dbg !102\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !96, metadata\l... !DIExpression()), !dbg !103\l  %10 = call i8* @getenv(i8* getelementptr inbounds ([4 x i8], [4 x i8]*\l... @.str.35, i32 0, i32 0)) #11, !dbg !104\l  store i8* %10, i8** %4, align 8, !dbg !103, !tbaa !105\l  %11 = bitcast i8** %5 to i8*, !dbg !109\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #11, !dbg !109\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !97, metadata\l... !DIExpression()), !dbg !110\l  %12 = load i8*, i8** %4, align 8, !dbg !111, !tbaa !105\l  %13 = icmp ne i8* %12, null, !dbg !111\l  br i1 %13, label %14, label %20, !dbg !113\l|{<s0>T|<s1>F}}"];
	Node0xa76030:s0 -> Node0xa66ac0;
	Node0xa76030:s1 -> Node0xa66b10;
	Node0xa66ac0 [shape=record,label="{%14:\l\l  %15 = load i8*, i8** %4, align 8, !dbg !114, !tbaa !105\l  %16 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !114\l  %17 = load i8, i8* %16, align 1, !dbg !114, !tbaa !115\l  %18 = sext i8 %17 to i32, !dbg !114\l  %19 = icmp ne i32 %18, 47, !dbg !116\l  br i1 %19, label %20, label %21, !dbg !117\l|{<s0>T|<s1>F}}"];
	Node0xa66ac0:s0 -> Node0xa66b10;
	Node0xa66ac0:s1 -> Node0xa66b60;
	Node0xa66b10 [shape=record,label="{%20:\l\l  store i8* null, i8** %1, align 8, !dbg !118\l  store i32 1, i32* %6, align 4\l  br label %81, !dbg !118\l}"];
	Node0xa66b10 -> Node0xa67010;
	Node0xa66b60 [shape=record,label="{%21:\l\l  %22 = load i8*, i8** %4, align 8, !dbg !119, !tbaa !105\l  store i8* %22, i8** %5, align 8, !dbg !120, !tbaa !105\l  br label %23, !dbg !121\l}"];
	Node0xa66b60 -> Node0xa66bb0;
	Node0xa66bb0 [shape=record,label="{%23:\l\l  %24 = load i8*, i8** %5, align 8, !dbg !122, !tbaa !105\l  %25 = call i8* @rpl_strstr(i8* %24, i8* getelementptr inbounds ([3 x i8], [3\l... x i8]* @.str.36, i32 0, i32 0)) #12, !dbg !123\l  store i8* %25, i8** %5, align 8, !dbg !124, !tbaa !105\l  %26 = icmp ne i8* %25, null, !dbg !121\l  br i1 %26, label %27, label %59, !dbg !121\l|{<s0>T|<s1>F}}"];
	Node0xa66bb0:s0 -> Node0xa66c00;
	Node0xa66bb0:s1 -> Node0xa66e30;
	Node0xa66c00 [shape=record,label="{%27:\l\l  %28 = load i8*, i8** %5, align 8, !dbg !125, !tbaa !105\l  %29 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !125\l  %30 = load i8, i8* %29, align 1, !dbg !125, !tbaa !115\l  %31 = icmp ne i8 %30, 0, !dbg !125\l  br i1 %31, label %32, label %55, !dbg !128\l|{<s0>T|<s1>F}}"];
	Node0xa66c00:s0 -> Node0xa66c50;
	Node0xa66c00:s1 -> Node0xa66d90;
	Node0xa66c50 [shape=record,label="{%32:\l\l  %33 = load i8*, i8** %5, align 8, !dbg !129, !tbaa !105\l  %34 = getelementptr inbounds i8, i8* %33, i64 2, !dbg !129\l  %35 = load i8, i8* %34, align 1, !dbg !129, !tbaa !115\l  %36 = sext i8 %35 to i32, !dbg !129\l  %37 = icmp eq i32 %36, 47, !dbg !130\l  br i1 %37, label %55, label %38, !dbg !131\l|{<s0>T|<s1>F}}"];
	Node0xa66c50:s0 -> Node0xa66d90;
	Node0xa66c50:s1 -> Node0xa66ca0;
	Node0xa66ca0 [shape=record,label="{%38:\l\l  %39 = load i8*, i8** %5, align 8, !dbg !132, !tbaa !105\l  %40 = getelementptr inbounds i8, i8* %39, i64 2, !dbg !132\l  %41 = load i8, i8* %40, align 1, !dbg !132, !tbaa !115\l  %42 = sext i8 %41 to i32, !dbg !132\l  %43 = icmp eq i32 %42, 46, !dbg !133\l  br i1 %43, label %44, label %56, !dbg !134\l|{<s0>T|<s1>F}}"];
	Node0xa66ca0:s0 -> Node0xa66cf0;
	Node0xa66ca0:s1 -> Node0xa66de0;
	Node0xa66cf0 [shape=record,label="{%44:\l\l  %45 = load i8*, i8** %5, align 8, !dbg !135, !tbaa !105\l  %46 = getelementptr inbounds i8, i8* %45, i64 3, !dbg !135\l  %47 = load i8, i8* %46, align 1, !dbg !135, !tbaa !115\l  %48 = icmp ne i8 %47, 0, !dbg !135\l  br i1 %48, label %49, label %55, !dbg !136\l|{<s0>T|<s1>F}}"];
	Node0xa66cf0:s0 -> Node0xa66d40;
	Node0xa66cf0:s1 -> Node0xa66d90;
	Node0xa66d40 [shape=record,label="{%49:\l\l  %50 = load i8*, i8** %5, align 8, !dbg !137, !tbaa !105\l  %51 = getelementptr inbounds i8, i8* %50, i64 3, !dbg !137\l  %52 = load i8, i8* %51, align 1, !dbg !137, !tbaa !115\l  %53 = sext i8 %52 to i32, !dbg !137\l  %54 = icmp eq i32 %53, 47, !dbg !138\l  br i1 %54, label %55, label %56, !dbg !139\l|{<s0>T|<s1>F}}"];
	Node0xa66d40:s0 -> Node0xa66d90;
	Node0xa66d40:s1 -> Node0xa66de0;
	Node0xa66d90 [shape=record,label="{%55:\l\l  store i8* null, i8** %1, align 8, !dbg !140\l  store i32 1, i32* %6, align 4\l  br label %81, !dbg !140\l}"];
	Node0xa66d90 -> Node0xa67010;
	Node0xa66de0 [shape=record,label="{%56:\l\l  %57 = load i8*, i8** %5, align 8, !dbg !141, !tbaa !105\l  %58 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !141\l  store i8* %58, i8** %5, align 8, !dbg !141, !tbaa !105\l  br label %23, !dbg !121, !llvm.loop !142\l}"];
	Node0xa66de0 -> Node0xa66bb0;
	Node0xa66e30 [shape=record,label="{%59:\l\l  %60 = load i8*, i8** %4, align 8, !dbg !144, !tbaa !105\l  %61 = call i32 @stat(i8* %60, %struct.stat* %2) #11, !dbg !146\l  %62 = icmp eq i32 %61, 0, !dbg !147\l  br i1 %62, label %63, label %80, !dbg !148\l|{<s0>T|<s1>F}}"];
	Node0xa66e30:s0 -> Node0xa66e80;
	Node0xa66e30:s1 -> Node0xa66fc0;
	Node0xa66e80 [shape=record,label="{%63:\l\l  %64 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]*\l... @.str.37, i32 0, i32 0), %struct.stat* %3) #11, !dbg !149\l  %65 = icmp eq i32 %64, 0, !dbg !150\l  br i1 %65, label %66, label %80, !dbg !151\l|{<s0>T|<s1>F}}"];
	Node0xa66e80:s0 -> Node0xa66ed0;
	Node0xa66e80:s1 -> Node0xa66fc0;
	Node0xa66ed0 [shape=record,label="{%66:\l\l  %67 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1,\l... !dbg !152\l  %68 = load i64, i64* %67, align 8, !dbg !152, !tbaa !153\l  %69 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 1,\l... !dbg !152\l  %70 = load i64, i64* %69, align 8, !dbg !152, !tbaa !153\l  %71 = icmp eq i64 %68, %70, !dbg !152\l  br i1 %71, label %72, label %80, !dbg !152\l|{<s0>T|<s1>F}}"];
	Node0xa66ed0:s0 -> Node0xa66f20;
	Node0xa66ed0:s1 -> Node0xa66fc0;
	Node0xa66f20 [shape=record,label="{%72:\l\l  %73 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 0,\l... !dbg !152\l  %74 = load i64, i64* %73, align 8, !dbg !152, !tbaa !158\l  %75 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 0,\l... !dbg !152\l  %76 = load i64, i64* %75, align 8, !dbg !152, !tbaa !158\l  %77 = icmp eq i64 %74, %76, !dbg !152\l  br i1 %77, label %78, label %80, !dbg !159\l|{<s0>T|<s1>F}}"];
	Node0xa66f20:s0 -> Node0xa66f70;
	Node0xa66f20:s1 -> Node0xa66fc0;
	Node0xa66f70 [shape=record,label="{%78:\l\l  %79 = load i8*, i8** %4, align 8, !dbg !160, !tbaa !105\l  store i8* %79, i8** %1, align 8, !dbg !161\l  store i32 1, i32* %6, align 4\l  br label %81, !dbg !161\l}"];
	Node0xa66f70 -> Node0xa67010;
	Node0xa66fc0 [shape=record,label="{%80:\l\l  store i8* null, i8** %1, align 8, !dbg !162\l  store i32 1, i32* %6, align 4\l  br label %81, !dbg !162\l}"];
	Node0xa66fc0 -> Node0xa67010;
	Node0xa67010 [shape=record,label="{%81:\l\l  %82 = bitcast i8** %5 to i8*, !dbg !163\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #11, !dbg !163\l  %83 = bitcast i8** %4 to i8*, !dbg !163\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #11, !dbg !163\l  %84 = bitcast %struct.stat* %3 to i8*, !dbg !163\l  call void @llvm.lifetime.end.p0i8(i64 144, i8* %84) #11, !dbg !163\l  %85 = bitcast %struct.stat* %2 to i8*, !dbg !163\l  call void @llvm.lifetime.end.p0i8(i64 144, i8* %85) #11, !dbg !163\l  %86 = load i8*, i8** %1, align 8, !dbg !163\l  ret i8* %86, !dbg !163\l}"];
}
