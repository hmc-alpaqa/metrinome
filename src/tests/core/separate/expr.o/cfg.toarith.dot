digraph "CFG for 'toarith' function" {
	label="CFG for 'toarith' function";

	Node0x23a4e40 [shape=record,label="{%1:\l  %2 = alloca i1, align 1\l  %3 = alloca %struct.valinfo*, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i32, align 4\l  store %struct.valinfo* %0, %struct.valinfo** %3, align 8, !tbaa !124\l  call void @llvm.dbg.declare(metadata %struct.valinfo** %3, metadata !120,\l... metadata !DIExpression()), !dbg !128\l  %6 = load %struct.valinfo*, %struct.valinfo** %3, align 8, !dbg !129, !tbaa\l... !124\l  %7 = getelementptr inbounds %struct.valinfo, %struct.valinfo* %6, i32 0, i32\l... 0, !dbg !130\l  %8 = load i32, i32* %7, align 8, !dbg !130, !tbaa !131\l  switch i32 %8, label %35 [\l    i32 0, label %9\l    i32 1, label %10\l  ], !dbg !133\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0x23a4e40:s0 -> Node0x23a5150;
	Node0x23a4e40:s1 -> Node0x23a4f20;
	Node0x23a4e40:s2 -> Node0x23a4f70;
	Node0x23a4f20 [shape=record,label="{%9:\l\l  store i1 true, i1* %2, align 1, !dbg !134\l  br label %36, !dbg !134\l}"];
	Node0x23a4f20 -> Node0x23a51a0;
	Node0x23a4f70 [shape=record,label="{%10:\l\l  %11 = bitcast i8** %4 to i8*, !dbg !135\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #11, !dbg !135\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !121, metadata\l... !DIExpression()), !dbg !136\l  %12 = load %struct.valinfo*, %struct.valinfo** %3, align 8, !dbg !137, !tbaa\l... !124\l  %13 = getelementptr inbounds %struct.valinfo, %struct.valinfo* %12, i32 0,\l... i32 1, !dbg !138\l  %14 = bitcast %union.anon* %13 to i8**, !dbg !139\l  %15 = load i8*, i8** %14, align 8, !dbg !139, !tbaa !140\l  store i8* %15, i8** %4, align 8, !dbg !136, !tbaa !124\l  %16 = load i8*, i8** %4, align 8, !dbg !141, !tbaa !124\l  %17 = call zeroext i1 @looks_like_integer(i8* %16) #12, !dbg !143\l  br i1 %17, label %19, label %18, !dbg !144\l|{<s0>T|<s1>F}}"];
	Node0x23a4f70:s0 -> Node0x23a5010;
	Node0x23a4f70:s1 -> Node0x23a4fc0;
	Node0x23a4fc0 [shape=record,label="{%18:\l\l  store i1 false, i1* %2, align 1, !dbg !145\l  store i32 1, i32* %5, align 4\l  br label %33, !dbg !145\l}"];
	Node0x23a4fc0 -> Node0x23a5100;
	Node0x23a5010 [shape=record,label="{%19:\l\l  %20 = load %struct.valinfo*, %struct.valinfo** %3, align 8, !dbg !146, !tbaa\l... !124\l  %21 = getelementptr inbounds %struct.valinfo, %struct.valinfo* %20, i32 0,\l... i32 1, !dbg !148\l  %22 = bitcast %union.anon* %21 to [1 x i64]*, !dbg !149\l  %23 = getelementptr inbounds [1 x i64], [1 x i64]* %22, i32 0, i32 0, !dbg\l... !146\l  %24 = load i8*, i8** %4, align 8, !dbg !150, !tbaa !124\l  %25 = call i32 @mpz_init_set_str(i64* %23, i8* %24, i32 10), !dbg !151\l  %26 = icmp ne i32 %25, 0, !dbg !152\l  br i1 %26, label %27, label %29, !dbg !153\l|{<s0>T|<s1>F}}"];
	Node0x23a5010:s0 -> Node0x23a5060;
	Node0x23a5010:s1 -> Node0x23a50b0;
	Node0x23a5060 [shape=record,label="{%27:\l\l  %28 = load i8*, i8** %4, align 8, !dbg !154, !tbaa !124\l  call void (i32, i32, i8*, ...) @error(i32 3, i32 34, i8* getelementptr\l... inbounds ([3 x i8], [3 x i8]* @.str.72, i32 0, i32 0), i8* %28), !dbg !154\l  unreachable, !dbg !154\l}"];
	Node0x23a50b0 [shape=record,label="{%29:\l\l  %30 = load i8*, i8** %4, align 8, !dbg !155, !tbaa !124\l  call void @free(i8* %30) #11, !dbg !156\l  %31 = load %struct.valinfo*, %struct.valinfo** %3, align 8, !dbg !157, !tbaa\l... !124\l  %32 = getelementptr inbounds %struct.valinfo, %struct.valinfo* %31, i32 0,\l... i32 0, !dbg !158\l  store i32 0, i32* %32, align 8, !dbg !159, !tbaa !131\l  store i1 true, i1* %2, align 1, !dbg !160\l  store i32 1, i32* %5, align 4\l  br label %33, !dbg !160\l}"];
	Node0x23a50b0 -> Node0x23a5100;
	Node0x23a5100 [shape=record,label="{%33:\l\l  %34 = bitcast i8** %4 to i8*, !dbg !161\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #11, !dbg !161\l  br label %36\l}"];
	Node0x23a5100 -> Node0x23a51a0;
	Node0x23a5150 [shape=record,label="{%35:\l\l  call void @abort() #13, !dbg !162\l  unreachable, !dbg !162\l}"];
	Node0x23a51a0 [shape=record,label="{%36:\l\l  %37 = load i1, i1* %2, align 1, !dbg !163\l  ret i1 %37, !dbg !163\l}"];
}
