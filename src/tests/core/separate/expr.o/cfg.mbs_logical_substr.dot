digraph "CFG for 'mbs_logical_substr' function" {
	label="CFG for 'mbs_logical_substr' function";

	Node0x23e7ee0 [shape=record,label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i8*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i32, align 4\l  %13 = alloca i64, align 8\l  %14 = alloca %struct.mbuiter_multi, align 8\l  %15 = alloca i64, align 8\l  store i8* %0, i8** %5, align 8, !tbaa !167\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !120, metadata\l... !DIExpression()), !dbg !171\l  store i64 %1, i64* %6, align 8, !tbaa !172\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !121, metadata\l... !DIExpression()), !dbg !174\l  store i64 %2, i64* %7, align 8, !tbaa !172\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !122, metadata\l... !DIExpression()), !dbg !175\l  %16 = bitcast i8** %8 to i8*, !dbg !176\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #11, !dbg !176\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !123, metadata\l... !DIExpression()), !dbg !177\l  %17 = bitcast i8** %9 to i8*, !dbg !176\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #11, !dbg !176\l  call void @llvm.dbg.declare(metadata i8** %9, metadata !124, metadata\l... !DIExpression()), !dbg !178\l  %18 = bitcast i64* %10 to i8*, !dbg !179\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #11, !dbg !179\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !125, metadata\l... !DIExpression()), !dbg !180\l  %19 = load i8*, i8** %5, align 8, !dbg !181, !tbaa !167\l  %20 = call i64 @strlen(i8* %19) #12, !dbg !182\l  store i64 %20, i64* %10, align 8, !dbg !180, !tbaa !172\l  %21 = bitcast i64* %11 to i8*, !dbg !183\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #11, !dbg !183\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !126, metadata\l... !DIExpression()), !dbg !184\l  %22 = call i64 @__ctype_get_mb_cur_max() #11, !dbg !185\l  %23 = icmp ugt i64 %22, 1, !dbg !186\l  br i1 %23, label %24, label %27, !dbg !187\l|{<s0>T|<s1>F}}"];
	Node0x23e7ee0:s0 -> Node0x23e7fb0;
	Node0x23e7ee0:s1 -> Node0x23e8000;
	Node0x23e7fb0 [shape=record,label="{%24:\l\l  %25 = load i8*, i8** %5, align 8, !dbg !188, !tbaa !167\l  %26 = call i64 @mbslen(i8* %25) #12, !dbg !189\l  br label %29, !dbg !187\l}"];
	Node0x23e7fb0 -> Node0x23e8050;
	Node0x23e8000 [shape=record,label="{%27:\l\l  %28 = load i64, i64* %10, align 8, !dbg !190, !tbaa !172\l  br label %29, !dbg !187\l}"];
	Node0x23e8000 -> Node0x23e8050;
	Node0x23e8050 [shape=record,label="{%29:\l\l  %30 = phi i64 [ %26, %24 ], [ %28, %27 ], !dbg !187\l  store i64 %30, i64* %11, align 8, !dbg !184, !tbaa !172\l  %31 = load i64, i64* %11, align 8, !dbg !191, !tbaa !172\l  %32 = load i64, i64* %6, align 8, !dbg !193, !tbaa !172\l  %33 = icmp ult i64 %31, %32, !dbg !194\l  br i1 %33, label %43, label %34, !dbg !195\l|{<s0>T|<s1>F}}"];
	Node0x23e8050:s0 -> Node0x23e8190;
	Node0x23e8050:s1 -> Node0x23e80a0;
	Node0x23e80a0 [shape=record,label="{%34:\l\l  %35 = load i64, i64* %6, align 8, !dbg !196, !tbaa !172\l  %36 = icmp eq i64 %35, 0, !dbg !197\l  br i1 %36, label %43, label %37, !dbg !198\l|{<s0>T|<s1>F}}"];
	Node0x23e80a0:s0 -> Node0x23e8190;
	Node0x23e80a0:s1 -> Node0x23e80f0;
	Node0x23e80f0 [shape=record,label="{%37:\l\l  %38 = load i64, i64* %7, align 8, !dbg !199, !tbaa !172\l  %39 = icmp eq i64 %38, 0, !dbg !200\l  br i1 %39, label %43, label %40, !dbg !201\l|{<s0>T|<s1>F}}"];
	Node0x23e80f0:s0 -> Node0x23e8190;
	Node0x23e80f0:s1 -> Node0x23e8140;
	Node0x23e8140 [shape=record,label="{%40:\l\l  %41 = load i64, i64* %7, align 8, !dbg !202, !tbaa !172\l  %42 = icmp eq i64 %41, -1, !dbg !203\l  br i1 %42, label %43, label %45, !dbg !204\l|{<s0>T|<s1>F}}"];
	Node0x23e8140:s0 -> Node0x23e8190;
	Node0x23e8140:s1 -> Node0x23e81e0;
	Node0x23e8190 [shape=record,label="{%43:\l\l  %44 = call noalias i8* @xstrdup(i8* getelementptr inbounds ([1 x i8], [1 x\l... i8]* @.str.13, i32 0, i32 0)), !dbg !205\l  store i8* %44, i8** %4, align 8, !dbg !206\l  store i32 1, i32* %12, align 4\l  br label %140, !dbg !206\l}"];
	Node0x23e8190 -> Node0x23e8730;
	Node0x23e81e0 [shape=record,label="{%45:\l\l  %46 = bitcast i64* %13 to i8*, !dbg !207\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #11, !dbg !207\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !127, metadata\l... !DIExpression()), !dbg !208\l  %47 = load i64, i64* %7, align 8, !dbg !209, !tbaa !172\l  %48 = load i64, i64* %11, align 8, !dbg !209, !tbaa !172\l  %49 = load i64, i64* %6, align 8, !dbg !209, !tbaa !172\l  %50 = sub i64 %48, %49, !dbg !209\l  %51 = add i64 %50, 1, !dbg !209\l  %52 = icmp ult i64 %47, %51, !dbg !209\l  br i1 %52, label %53, label %55, !dbg !209\l|{<s0>T|<s1>F}}"];
	Node0x23e81e0:s0 -> Node0x23e8230;
	Node0x23e81e0:s1 -> Node0x23e8280;
	Node0x23e8230 [shape=record,label="{%53:\l\l  %54 = load i64, i64* %7, align 8, !dbg !209, !tbaa !172\l  br label %60, !dbg !209\l}"];
	Node0x23e8230 -> Node0x23e82d0;
	Node0x23e8280 [shape=record,label="{%55:\l\l  %56 = load i64, i64* %11, align 8, !dbg !209, !tbaa !172\l  %57 = load i64, i64* %6, align 8, !dbg !209, !tbaa !172\l  %58 = sub i64 %56, %57, !dbg !209\l  %59 = add i64 %58, 1, !dbg !209\l  br label %60, !dbg !209\l}"];
	Node0x23e8280 -> Node0x23e82d0;
	Node0x23e82d0 [shape=record,label="{%60:\l\l  %61 = phi i64 [ %54, %53 ], [ %59, %55 ], !dbg !209\l  store i64 %61, i64* %13, align 8, !dbg !208, !tbaa !172\l  %62 = call i64 @__ctype_get_mb_cur_max() #11, !dbg !210\l  %63 = icmp eq i64 %62, 1, !dbg !211\l  br i1 %63, label %64, label %75, !dbg !212\l|{<s0>T|<s1>F}}"];
	Node0x23e82d0:s0 -> Node0x23e8320;
	Node0x23e82d0:s1 -> Node0x23e8370;
	Node0x23e8320 [shape=record,label="{%64:\l\l  %65 = load i64, i64* %13, align 8, !dbg !213, !tbaa !172\l  %66 = add i64 %65, 1, !dbg !215\l  %67 = call noalias i8* @xmalloc(i64 %66), !dbg !216\l  store i8* %67, i8** %8, align 8, !dbg !217, !tbaa !167\l  %68 = load i8*, i8** %8, align 8, !dbg !218, !tbaa !167\l  %69 = load i8*, i8** %5, align 8, !dbg !219, !tbaa !167\l  %70 = load i64, i64* %6, align 8, !dbg !220, !tbaa !172\l  %71 = getelementptr inbounds i8, i8* %69, i64 %70, !dbg !221\l  %72 = getelementptr inbounds i8, i8* %71, i64 -1, !dbg !222\l  %73 = load i64, i64* %13, align 8, !dbg !223, !tbaa !172\l  %74 = call i8* @mempcpy(i8* %68, i8* %72, i64 %73) #11, !dbg !224\l  store i8* %74, i8** %9, align 8, !dbg !225, !tbaa !167\l  br label %136, !dbg !226\l}"];
	Node0x23e8320 -> Node0x23e86e0;
	Node0x23e8370 [shape=record,label="{%75:\l\l  %76 = load i64, i64* %10, align 8, !dbg !227, !tbaa !172\l  %77 = add i64 %76, 1, !dbg !228\l  %78 = call noalias i8* @xmalloc(i64 %77), !dbg !229\l  store i8* %78, i8** %8, align 8, !dbg !230, !tbaa !167\l  store i8* %78, i8** %9, align 8, !dbg !231, !tbaa !167\l  %79 = bitcast %struct.mbuiter_multi* %14 to i8*, !dbg !232\l  call void @llvm.lifetime.start.p0i8(i64 64, i8* %79) #11, !dbg !232\l  call void @llvm.dbg.declare(metadata %struct.mbuiter_multi* %14, metadata\l... !128, metadata !DIExpression()), !dbg !233\l  %80 = bitcast i64* %15 to i8*, !dbg !234\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %80) #11, !dbg !234\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !166, metadata\l... !DIExpression()), !dbg !235\l  store i64 1, i64* %15, align 8, !dbg !235, !tbaa !172\l  %81 = load i8*, i8** %5, align 8, !dbg !236, !tbaa !167\l  %82 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 3, !dbg !236\l  %83 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %82, i32 0, i32\l... 0, !dbg !236\l  store i8* %81, i8** %83, align 8, !dbg !236, !tbaa !238\l  %84 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 0, !dbg !236\l  store i8 0, i8* %84, align 8, !dbg !236, !tbaa !244\l  %85 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 1, !dbg !236\l  %86 = bitcast %struct.__mbstate_t* %85 to i8*, !dbg !236\l  call void @llvm.memset.p0i8.i64(i8* align 4 %86, i8 0, i64 8, i1 false),\l... !dbg !236\l  %87 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 2, !dbg !236\l  store i8 0, i8* %87, align 4, !dbg !236, !tbaa !245\l  br label %88, !dbg !236\l}"];
	Node0x23e8370 -> Node0x23e83c0;
	Node0x23e83c0 [shape=record,label="{%88:\l\l  call void @mbuiter_multi_next(%struct.mbuiter_multi* %14), !dbg !246\l  %89 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 3, !dbg !246\l  %90 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %89, i32 0, i32\l... 2, !dbg !246\l  %91 = load i8, i8* %90, align 8, !dbg !246, !tbaa !248, !range !249\l  %92 = trunc i8 %91 to i1, !dbg !246\l  br i1 %92, label %93, label %98, !dbg !246\l|{<s0>T|<s1>F}}"];
	Node0x23e83c0:s0 -> Node0x23e8410;
	Node0x23e83c0:s1 -> Node0x23e8460;
	Node0x23e8410 [shape=record,label="{%93:\l\l  %94 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 3, !dbg !246\l  %95 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %94, i32 0, i32\l... 3, !dbg !246\l  %96 = load i32, i32* %95, align 4, !dbg !246, !tbaa !250\l  %97 = icmp eq i32 %96, 0, !dbg !246\l  br label %98\l}"];
	Node0x23e8410 -> Node0x23e8460;
	Node0x23e8460 [shape=record,label="{%98:\l\l  %99 = phi i1 [ false, %88 ], [ %97, %93 ], !dbg !251\l  %100 = xor i1 %99, true, !dbg !246\l  br i1 %100, label %101, label %104, !dbg !252\l|{<s0>T|<s1>F}}"];
	Node0x23e8460:s0 -> Node0x23e84b0;
	Node0x23e8460:s1 -> Node0x23e8500;
	Node0x23e84b0 [shape=record,label="{%101:\l\l  %102 = load i64, i64* %13, align 8, !dbg !253, !tbaa !172\l  %103 = icmp ugt i64 %102, 0, !dbg !254\l  br label %104\l}"];
	Node0x23e84b0 -> Node0x23e8500;
	Node0x23e8500 [shape=record,label="{%104:\l\l  %105 = phi i1 [ false, %98 ], [ %103, %101 ], !dbg !251\l  br i1 %105, label %106, label %133, !dbg !255\l|{<s0>T|<s1>F}}"];
	Node0x23e8500:s0 -> Node0x23e8550;
	Node0x23e8500:s1 -> Node0x23e8690;
	Node0x23e8550 [shape=record,label="{%106:\l\l  %107 = load i64, i64* %15, align 8, !dbg !256, !tbaa !172\l  %108 = load i64, i64* %6, align 8, !dbg !259, !tbaa !172\l  %109 = icmp ult i64 %107, %108, !dbg !260\l  br i1 %109, label %110, label %111, !dbg !261\l|{<s0>T|<s1>F}}"];
	Node0x23e8550:s0 -> Node0x23e85a0;
	Node0x23e8550:s1 -> Node0x23e85f0;
	Node0x23e85a0 [shape=record,label="{%110:\l\l  br label %122, !dbg !262\l}"];
	Node0x23e85a0 -> Node0x23e8640;
	Node0x23e85f0 [shape=record,label="{%111:\l\l  %112 = load i64, i64* %13, align 8, !dbg !263, !tbaa !172\l  %113 = add i64 %112, -1, !dbg !263\l  store i64 %113, i64* %13, align 8, !dbg !263, !tbaa !172\l  %114 = load i8*, i8** %9, align 8, !dbg !264, !tbaa !167\l  %115 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 3, !dbg !265\l  %116 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %115, i32 0,\l... i32 0, !dbg !265\l  %117 = load i8*, i8** %116, align 8, !dbg !265, !tbaa !238\l  %118 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 3, !dbg !266\l  %119 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %118, i32 0,\l... i32 1, !dbg !266\l  %120 = load i64, i64* %119, align 8, !dbg !266, !tbaa !267\l  %121 = call i8* @mempcpy(i8* %114, i8* %117, i64 %120) #11, !dbg !268\l  store i8* %121, i8** %9, align 8, !dbg !269, !tbaa !167\l  br label %122, !dbg !270\l}"];
	Node0x23e85f0 -> Node0x23e8640;
	Node0x23e8640 [shape=record,label="{%122:\l\l  %123 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 3, !dbg !271\l  %124 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %123, i32 0,\l... i32 1, !dbg !271\l  %125 = load i64, i64* %124, align 8, !dbg !271, !tbaa !267\l  %126 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 3, !dbg !271\l  %127 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %126, i32 0,\l... i32 0, !dbg !271\l  %128 = load i8*, i8** %127, align 8, !dbg !271, !tbaa !238\l  %129 = getelementptr inbounds i8, i8* %128, i64 %125, !dbg !271\l  store i8* %129, i8** %127, align 8, !dbg !271, !tbaa !238\l  %130 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 2, !dbg !271\l  store i8 0, i8* %130, align 4, !dbg !271, !tbaa !245\l  %131 = load i64, i64* %15, align 8, !dbg !272, !tbaa !172\l  %132 = add i64 %131, 1, !dbg !272\l  store i64 %132, i64* %15, align 8, !dbg !272, !tbaa !172\l  br label %88, !dbg !273, !llvm.loop !274\l}"];
	Node0x23e8640 -> Node0x23e83c0;
	Node0x23e8690 [shape=record,label="{%133:\l\l  %134 = bitcast i64* %15 to i8*, !dbg !276\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %134) #11, !dbg !276\l  %135 = bitcast %struct.mbuiter_multi* %14 to i8*, !dbg !276\l  call void @llvm.lifetime.end.p0i8(i64 64, i8* %135) #11, !dbg !276\l  br label %136\l}"];
	Node0x23e8690 -> Node0x23e86e0;
	Node0x23e86e0 [shape=record,label="{%136:\l\l  %137 = load i8*, i8** %9, align 8, !dbg !277, !tbaa !167\l  store i8 0, i8* %137, align 1, !dbg !278, !tbaa !279\l  %138 = load i8*, i8** %8, align 8, !dbg !280, !tbaa !167\l  store i8* %138, i8** %4, align 8, !dbg !281\l  store i32 1, i32* %12, align 4\l  %139 = bitcast i64* %13 to i8*, !dbg !282\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %139) #11, !dbg !282\l  br label %140\l}"];
	Node0x23e86e0 -> Node0x23e8730;
	Node0x23e8730 [shape=record,label="{%140:\l\l  %141 = bitcast i64* %11 to i8*, !dbg !282\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %141) #11, !dbg !282\l  %142 = bitcast i64* %10 to i8*, !dbg !282\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %142) #11, !dbg !282\l  %143 = bitcast i8** %9 to i8*, !dbg !282\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %143) #11, !dbg !282\l  %144 = bitcast i8** %8 to i8*, !dbg !282\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %144) #11, !dbg !282\l  %145 = load i8*, i8** %4, align 8, !dbg !282\l  ret i8* %145, !dbg !282\l}"];
}
