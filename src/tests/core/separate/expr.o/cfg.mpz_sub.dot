digraph "CFG for 'mpz_sub' function" {
	label="CFG for 'mpz_sub' function";

	Node0x23a7ec0 [shape=record,label="{%3:\l  %4 = alloca i64*, align 8\l  %5 = alloca i64*, align 8\l  %6 = alloca i64*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  store i64* %0, i64** %4, align 8, !tbaa !127\l  call void @llvm.dbg.declare(metadata i64** %4, metadata !121, metadata\l... !DIExpression()), !dbg !131\l  store i64* %1, i64** %5, align 8, !tbaa !127\l  call void @llvm.dbg.declare(metadata i64** %5, metadata !122, metadata\l... !DIExpression()), !dbg !132\l  store i64* %2, i64** %6, align 8, !tbaa !127\l  call void @llvm.dbg.declare(metadata i64** %6, metadata !123, metadata\l... !DIExpression()), !dbg !133\l  %10 = bitcast i64* %7 to i8*, !dbg !134\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #11, !dbg !134\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !124, metadata\l... !DIExpression()), !dbg !135\l  %11 = load i64*, i64** %5, align 8, !dbg !136, !tbaa !127\l  %12 = getelementptr inbounds i64, i64* %11, i64 0, !dbg !136\l  %13 = load i64, i64* %12, align 8, !dbg !136, !tbaa !137\l  store i64 %13, i64* %7, align 8, !dbg !135, !tbaa !137\l  %14 = bitcast i64* %8 to i8*, !dbg !139\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #11, !dbg !139\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !125, metadata\l... !DIExpression()), !dbg !140\l  %15 = load i64*, i64** %6, align 8, !dbg !141, !tbaa !127\l  %16 = getelementptr inbounds i64, i64* %15, i64 0, !dbg !141\l  %17 = load i64, i64* %16, align 8, !dbg !141, !tbaa !137\l  store i64 %17, i64* %8, align 8, !dbg !140, !tbaa !137\l  %18 = bitcast i64* %9 to i8*, !dbg !142\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #11, !dbg !142\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !126, metadata\l... !DIExpression()), !dbg !143\l  %19 = load i64, i64* %7, align 8, !dbg !144, !tbaa !137\l  %20 = load i64, i64* %8, align 8, !dbg !145, !tbaa !137\l  %21 = sub nsw i64 %19, %20, !dbg !146\l  store i64 %21, i64* %9, align 8, !dbg !143, !tbaa !137\l  %22 = load i64, i64* %7, align 8, !dbg !147, !tbaa !137\l  %23 = load i64, i64* %9, align 8, !dbg !149, !tbaa !137\l  %24 = icmp slt i64 %22, %23, !dbg !150\l  %25 = zext i1 %24 to i32, !dbg !150\l  %26 = load i64, i64* %8, align 8, !dbg !151, !tbaa !137\l  %27 = icmp slt i64 %26, 0, !dbg !152\l  %28 = zext i1 %27 to i32, !dbg !152\l  %29 = icmp ne i32 %25, %28, !dbg !153\l  br i1 %29, label %30, label %31, !dbg !154\l|{<s0>T|<s1>F}}"];
	Node0x23a7ec0:s0 -> Node0x23aa660;
	Node0x23a7ec0:s1 -> Node0x23aa6b0;
	Node0x23aa660 [shape=record,label="{%30:\l\l  call void @integer_overflow(i8 signext 45) #12, !dbg !155\l  unreachable, !dbg !155\l}"];
	Node0x23aa6b0 [shape=record,label="{%31:\l\l  %32 = load i64, i64* %9, align 8, !dbg !156, !tbaa !137\l  %33 = load i64*, i64** %4, align 8, !dbg !157, !tbaa !127\l  %34 = getelementptr inbounds i64, i64* %33, i64 0, !dbg !157\l  store i64 %32, i64* %34, align 8, !dbg !158, !tbaa !137\l  %35 = bitcast i64* %9 to i8*, !dbg !159\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #11, !dbg !159\l  %36 = bitcast i64* %8 to i8*, !dbg !159\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #11, !dbg !159\l  %37 = bitcast i64* %7 to i8*, !dbg !159\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %37) #11, !dbg !159\l  ret void, !dbg !159\l}"];
}
