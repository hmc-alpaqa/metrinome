digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x150cae0 [shape=record,label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i8**, align 8\l  %6 = alloca i8, align 1\l  %7 = alloca i32, align 4\l  store i32 0, i32* %3, align 4\l  store i32 %0, i32* %4, align 4, !tbaa !98\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !94, metadata\l... !DIExpression()), !dbg !102\l  store i8** %1, i8*** %5, align 8, !tbaa !103\l  call void @llvm.dbg.declare(metadata i8*** %5, metadata !95, metadata\l... !DIExpression()), !dbg !105\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %6) #11, !dbg !106\l  call void @llvm.dbg.declare(metadata i8* %6, metadata !96, metadata\l... !DIExpression()), !dbg !107\l  %8 = bitcast i32* %7 to i8*, !dbg !108\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #11, !dbg !108\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !97, metadata\l... !DIExpression()), !dbg !109\l  %9 = load i8**, i8*** %5, align 8, !dbg !110, !tbaa !103\l  %10 = getelementptr inbounds i8*, i8** %9, i64 0, !dbg !110\l  %11 = load i8*, i8** %10, align 8, !dbg !110, !tbaa !103\l  call void @set_program_name(i8* %11), !dbg !111\l  %12 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x\l... i8]* @.str.8, i32 0, i32 0)) #11, !dbg !112\l  %13 = call i32 @atexit(void ()* @close_stdout) #11, !dbg !113\l  store i8 0, i8* @append, align 1, !dbg !114, !tbaa !115\l  store i8 0, i8* @ignore_interrupts, align 1, !dbg !117, !tbaa !115\l  br label %14, !dbg !118\l}"];
	Node0x150cae0 -> Node0x150cbe0;
	Node0x150cbe0 [shape=record,label="{%14:\l\l  %15 = load i32, i32* %4, align 4, !dbg !119, !tbaa !98\l  %16 = load i8**, i8*** %5, align 8, !dbg !120, !tbaa !103\l  %17 = call i32 @getopt_long(i32 %15, i8** %16, i8* getelementptr inbounds\l... ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), %struct.option* getelementptr\l... inbounds ([6 x %struct.option], [6 x %struct.option]* @long_options, i32 0,\l... i32 0), i32* null) #11, !dbg !121\l  store i32 %17, i32* %7, align 4, !dbg !122, !tbaa !98\l  %18 = icmp ne i32 %17, -1, !dbg !123\l  br i1 %18, label %19, label %40, !dbg !118\l|{<s0>T|<s1>F}}"];
	Node0x150cbe0:s0 -> Node0x150cc30;
	Node0x150cbe0:s1 -> Node0x150cfa0;
	Node0x150cc30 [shape=record,label="{%19:\l\l  %20 = load i32, i32* %7, align 4, !dbg !124, !tbaa !98\l  switch i32 %20, label %38 [\l    i32 97, label %21\l    i32 105, label %22\l    i32 112, label %23\l    i32 -130, label %34\l    i32 -131, label %35\l  ], !dbg !126\l|{<s0>def|<s1>97|<s2>105|<s3>112|<s4>-130|<s5>-131}}"];
	Node0x150cc30:s0 -> Node0x150cf00;
	Node0x150cc30:s1 -> Node0x150cc80;
	Node0x150cc30:s2 -> Node0x150ccd0;
	Node0x150cc30:s3 -> Node0x150cd20;
	Node0x150cc30:s4 -> Node0x150ce60;
	Node0x150cc30:s5 -> Node0x150ceb0;
	Node0x150cc80 [shape=record,label="{%21:\l\l  store i8 1, i8* @append, align 1, !dbg !127, !tbaa !115\l  br label %39, !dbg !129\l}"];
	Node0x150cc80 -> Node0x150cf50;
	Node0x150ccd0 [shape=record,label="{%22:\l\l  store i8 1, i8* @ignore_interrupts, align 1, !dbg !130, !tbaa !115\l  br label %39, !dbg !131\l}"];
	Node0x150ccd0 -> Node0x150cf50;
	Node0x150cd20 [shape=record,label="{%23:\l\l  %24 = load i8*, i8** @optarg, align 8, !dbg !132, !tbaa !103\l  %25 = icmp ne i8* %24, null, !dbg !132\l  br i1 %25, label %26, label %32, !dbg !134\l|{<s0>T|<s1>F}}"];
	Node0x150cd20:s0 -> Node0x150cd70;
	Node0x150cd20:s1 -> Node0x150cdc0;
	Node0x150cd70 [shape=record,label="{%26:\l\l  %27 = load i8*, i8** @optarg, align 8, !dbg !135, !tbaa !103\l  %28 = load void ()*, void ()** @argmatch_die, align 8, !dbg !135, !tbaa !103\l  %29 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([15 x i8],\l... [15 x i8]* @.str.10, i32 0, i32 0), i8* %27, i8** getelementptr inbounds ([5\l... x i8*], [5 x i8*]* @output_error_args, i32 0, i32 0), i8* bitcast ([4 x i32]*\l... @output_error_types to i8*), i64 4, void ()* %28), !dbg !135\l  %30 = getelementptr inbounds [4 x i32], [4 x i32]* @output_error_types, i64\l... 0, i64 %29, !dbg !135\l  %31 = load i32, i32* %30, align 4, !dbg !135, !tbaa !136\l  store i32 %31, i32* @output_error, align 4, !dbg !137, !tbaa !136\l  br label %33, !dbg !138\l}"];
	Node0x150cd70 -> Node0x150ce10;
	Node0x150cdc0 [shape=record,label="{%32:\l\l  store i32 2, i32* @output_error, align 4, !dbg !139, !tbaa !136\l  br label %33\l}"];
	Node0x150cdc0 -> Node0x150ce10;
	Node0x150ce10 [shape=record,label="{%33:\l\l  br label %39, !dbg !140\l}"];
	Node0x150ce10 -> Node0x150cf50;
	Node0x150ce60 [shape=record,label="{%34:\l\l  call void @usage(i32 0) #12, !dbg !141\l  unreachable, !dbg !141\l}"];
	Node0x150ceb0 [shape=record,label="{%35:\l\l  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg\l... !142, !tbaa !103\l  %37 = load i8*, i8** @Version, align 8, !dbg !142, !tbaa !103\l  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...)\l... @version_etc(%struct._IO_FILE* %36, i8* getelementptr inbounds ([4 x i8], [4\l... x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x\l... i8]* @.str.11, i32 0, i32 0), i8* %37, i8* getelementptr inbounds ([12 x i8],\l... [12 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8],\l... [20 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8],\l... [16 x i8]* @.str.14, i32 0, i32 0), i8* null), !dbg !142\l  call void @exit(i32 0) #13, !dbg !142\l  unreachable, !dbg !142\l}"];
	Node0x150cf00 [shape=record,label="{%38:\l\l  call void @usage(i32 1) #12, !dbg !143\l  unreachable, !dbg !143\l}"];
	Node0x150cf50 [shape=record,label="{%39:\l\l  br label %14, !dbg !118, !llvm.loop !144\l}"];
	Node0x150cf50 -> Node0x150cbe0;
	Node0x150cfa0 [shape=record,label="{%40:\l\l  %41 = load i8, i8* @ignore_interrupts, align 1, !dbg !146, !tbaa !115,\l... !range !148\l  %42 = trunc i8 %41 to i1, !dbg !146\l  br i1 %42, label %43, label %45, !dbg !149\l|{<s0>T|<s1>F}}"];
	Node0x150cfa0:s0 -> Node0x150cff0;
	Node0x150cfa0:s1 -> Node0x150d040;
	Node0x150cff0 [shape=record,label="{%43:\l\l  %44 = call void (i32)* @signal(i32 2, void (i32)* inttoptr (i64 1 to void\l... (i32)*)) #11, !dbg !150\l  br label %45, !dbg !150\l}"];
	Node0x150cff0 -> Node0x150d040;
	Node0x150d040 [shape=record,label="{%45:\l\l  %46 = load i32, i32* @output_error, align 4, !dbg !151, !tbaa !136\l  %47 = icmp ne i32 %46, 0, !dbg !153\l  br i1 %47, label %48, label %50, !dbg !154\l|{<s0>T|<s1>F}}"];
	Node0x150d040:s0 -> Node0x150d090;
	Node0x150d040:s1 -> Node0x150d0e0;
	Node0x150d090 [shape=record,label="{%48:\l\l  %49 = call void (i32)* @signal(i32 13, void (i32)* inttoptr (i64 1 to void\l... (i32)*)) #11, !dbg !155\l  br label %50, !dbg !155\l}"];
	Node0x150d090 -> Node0x150d0e0;
	Node0x150d0e0 [shape=record,label="{%50:\l\l  %51 = load i32, i32* %4, align 4, !dbg !156, !tbaa !98\l  %52 = load i32, i32* @optind, align 4, !dbg !157, !tbaa !98\l  %53 = sub nsw i32 %51, %52, !dbg !158\l  %54 = load i8**, i8*** %5, align 8, !dbg !159, !tbaa !103\l  %55 = load i32, i32* @optind, align 4, !dbg !160, !tbaa !98\l  %56 = sext i32 %55 to i64, !dbg !159\l  %57 = getelementptr inbounds i8*, i8** %54, i64 %56, !dbg !159\l  %58 = call zeroext i1 @tee_files(i32 %53, i8** %57), !dbg !161\l  %59 = zext i1 %58 to i8, !dbg !162\l  store i8 %59, i8* %6, align 1, !dbg !162, !tbaa !115\l  %60 = call i32 @close(i32 0), !dbg !163\l  %61 = icmp ne i32 %60, 0, !dbg !165\l  br i1 %61, label %62, label %65, !dbg !166\l|{<s0>T|<s1>F}}"];
	Node0x150d0e0:s0 -> Node0x150d130;
	Node0x150d0e0:s1 -> Node0x150d180;
	Node0x150d130 [shape=record,label="{%62:\l\l  %63 = call i32* @__errno_location() #14, !dbg !167\l  %64 = load i32, i32* %63, align 4, !dbg !167, !tbaa !98\l  call void (i32, i32, i8*, ...) @error(i32 1, i32 %64, i8* getelementptr\l... inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr\l... inbounds ([15 x i8], [15 x i8]* @.str.16, i32 0, i32 0)), !dbg !167\l  unreachable, !dbg !167\l}"];
	Node0x150d180 [shape=record,label="{%65:\l\l  %66 = load i8, i8* %6, align 1, !dbg !168, !tbaa !115, !range !148\l  %67 = trunc i8 %66 to i1, !dbg !168\l  %68 = zext i1 %67 to i64, !dbg !168\l  %69 = select i1 %67, i32 0, i32 1, !dbg !168\l  store i32 %69, i32* %3, align 4, !dbg !169\l  %70 = bitcast i32* %7 to i8*, !dbg !170\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %70) #11, !dbg !170\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #11, !dbg !170\l  %71 = load i32, i32* %3, align 4, !dbg !170\l  ret i32 %71, !dbg !170\l}"];
}
