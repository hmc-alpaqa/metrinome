digraph "CFG for 'periodic_pattern' function" {
	label="CFG for 'periodic_pattern' function";

	Node0x1cc6410 [shape=record,label="{%1:\l  %2 = alloca i1, align 1\l  %3 = alloca i32, align 4\l  %4 = alloca [3 x i8], align 1\l  %5 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4, !tbaa !126\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !121, metadata\l... !DIExpression()), !dbg !130\l  %6 = load i32, i32* %3, align 4, !dbg !131, !tbaa !126\l  %7 = icmp sle i32 %6, 0, !dbg !133\l  br i1 %7, label %8, label %9, !dbg !134\l|{<s0>T|<s1>F}}"];
	Node0x1cc6410:s0 -> Node0x1c90c40;
	Node0x1cc6410:s1 -> Node0x1c90c90;
	Node0x1c90c40 [shape=record,label="{%8:\l\l  store i1 false, i1* %2, align 1, !dbg !135\l  br label %51, !dbg !135\l}"];
	Node0x1c90c40 -> Node0x1c90d80;
	Node0x1c90c90 [shape=record,label="{%9:\l\l  %10 = bitcast [3 x i8]* %4 to i8*, !dbg !136\l  call void @llvm.lifetime.start.p0i8(i64 3, i8* %10) #11, !dbg !136\l  call void @llvm.dbg.declare(metadata [3 x i8]* %4, metadata !122, metadata\l... !DIExpression()), !dbg !137\l  %11 = bitcast i32* %5 to i8*, !dbg !138\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #11, !dbg !138\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !125, metadata\l... !DIExpression()), !dbg !139\l  %12 = load i32, i32* %3, align 4, !dbg !140, !tbaa !126\l  %13 = and i32 %12, 4095, !dbg !141\l  store i32 %13, i32* %5, align 4, !dbg !139, !tbaa !126\l  %14 = load i32, i32* %5, align 4, !dbg !142, !tbaa !126\l  %15 = shl i32 %14, 12, !dbg !143\l  %16 = load i32, i32* %5, align 4, !dbg !144, !tbaa !126\l  %17 = or i32 %16, %15, !dbg !144\l  store i32 %17, i32* %5, align 4, !dbg !144, !tbaa !126\l  %18 = load i32, i32* %5, align 4, !dbg !145, !tbaa !126\l  %19 = lshr i32 %18, 4, !dbg !146\l  %20 = and i32 %19, 255, !dbg !147\l  %21 = trunc i32 %20 to i8, !dbg !148\l  %22 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0, !dbg !149\l  store i8 %21, i8* %22, align 1, !dbg !150, !tbaa !151\l  %23 = load i32, i32* %5, align 4, !dbg !152, !tbaa !126\l  %24 = lshr i32 %23, 8, !dbg !153\l  %25 = and i32 %24, 255, !dbg !154\l  %26 = trunc i32 %25 to i8, !dbg !155\l  %27 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 1, !dbg !156\l  store i8 %26, i8* %27, align 1, !dbg !157, !tbaa !151\l  %28 = load i32, i32* %5, align 4, !dbg !158, !tbaa !126\l  %29 = and i32 %28, 255, !dbg !159\l  %30 = trunc i32 %29 to i8, !dbg !158\l  %31 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 2, !dbg !160\l  store i8 %30, i8* %31, align 1, !dbg !161, !tbaa !151\l  %32 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0, !dbg !162\l  %33 = load i8, i8* %32, align 1, !dbg !162, !tbaa !151\l  %34 = zext i8 %33 to i32, !dbg !162\l  %35 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 1, !dbg !163\l  %36 = load i8, i8* %35, align 1, !dbg !163, !tbaa !151\l  %37 = zext i8 %36 to i32, !dbg !163\l  %38 = icmp ne i32 %34, %37, !dbg !164\l  br i1 %38, label %47, label %39, !dbg !165\l|{<s0>T|<s1>F}}"];
	Node0x1c90c90:s0 -> Node0x1c90d30;
	Node0x1c90c90:s1 -> Node0x1c90ce0;
	Node0x1c90ce0 [shape=record,label="{%39:\l\l  %40 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0, !dbg !166\l  %41 = load i8, i8* %40, align 1, !dbg !166, !tbaa !151\l  %42 = zext i8 %41 to i32, !dbg !166\l  %43 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 2, !dbg !167\l  %44 = load i8, i8* %43, align 1, !dbg !167, !tbaa !151\l  %45 = zext i8 %44 to i32, !dbg !167\l  %46 = icmp ne i32 %42, %45, !dbg !168\l  br label %47, !dbg !165\l}"];
	Node0x1c90ce0 -> Node0x1c90d30;
	Node0x1c90d30 [shape=record,label="{%47:\l\l  %48 = phi i1 [ true, %9 ], [ %46, %39 ]\l  store i1 %48, i1* %2, align 1, !dbg !169\l  %49 = bitcast i32* %5 to i8*, !dbg !170\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %49) #11, !dbg !170\l  %50 = bitcast [3 x i8]* %4 to i8*, !dbg !170\l  call void @llvm.lifetime.end.p0i8(i64 3, i8* %50) #11, !dbg !170\l  br label %51\l}"];
	Node0x1c90d30 -> Node0x1c90d80;
	Node0x1c90d80 [shape=record,label="{%51:\l\l  %52 = load i1, i1* %2, align 1, !dbg !170\l  ret i1 %52, !dbg !170\l}"];
}
