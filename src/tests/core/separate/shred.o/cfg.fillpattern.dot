digraph "CFG for 'fillpattern' function" {
	label="CFG for 'fillpattern' function";

	Node0x1cd3730 [shape=record,label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i32, align 4\l  store i32 %0, i32* %4, align 4, !tbaa !127\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !122, metadata\l... !DIExpression()), !dbg !131\l  store i8* %1, i8** %5, align 8, !tbaa !132\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !123, metadata\l... !DIExpression()), !dbg !134\l  store i64 %2, i64* %6, align 8, !tbaa !135\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !124, metadata\l... !DIExpression()), !dbg !137\l  %9 = bitcast i64* %7 to i8*, !dbg !138\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #11, !dbg !138\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !125, metadata\l... !DIExpression()), !dbg !139\l  %10 = bitcast i32* %8 to i8*, !dbg !140\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #11, !dbg !140\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !126, metadata\l... !DIExpression()), !dbg !141\l  %11 = load i32, i32* %4, align 4, !dbg !142, !tbaa !127\l  %12 = and i32 %11, 4095, !dbg !143\l  store i32 %12, i32* %8, align 4, !dbg !141, !tbaa !127\l  %13 = load i32, i32* %8, align 4, !dbg !144, !tbaa !127\l  %14 = shl i32 %13, 12, !dbg !145\l  %15 = load i32, i32* %8, align 4, !dbg !146, !tbaa !127\l  %16 = or i32 %15, %14, !dbg !146\l  store i32 %16, i32* %8, align 4, !dbg !146, !tbaa !127\l  %17 = load i32, i32* %8, align 4, !dbg !147, !tbaa !127\l  %18 = lshr i32 %17, 4, !dbg !148\l  %19 = and i32 %18, 255, !dbg !149\l  %20 = trunc i32 %19 to i8, !dbg !150\l  %21 = load i8*, i8** %5, align 8, !dbg !151, !tbaa !132\l  %22 = getelementptr inbounds i8, i8* %21, i64 0, !dbg !151\l  store i8 %20, i8* %22, align 1, !dbg !152, !tbaa !153\l  %23 = load i32, i32* %8, align 4, !dbg !154, !tbaa !127\l  %24 = lshr i32 %23, 8, !dbg !155\l  %25 = and i32 %24, 255, !dbg !156\l  %26 = trunc i32 %25 to i8, !dbg !157\l  %27 = load i8*, i8** %5, align 8, !dbg !158, !tbaa !132\l  %28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !158\l  store i8 %26, i8* %28, align 1, !dbg !159, !tbaa !153\l  %29 = load i32, i32* %8, align 4, !dbg !160, !tbaa !127\l  %30 = and i32 %29, 255, !dbg !161\l  %31 = trunc i32 %30 to i8, !dbg !160\l  %32 = load i8*, i8** %5, align 8, !dbg !162, !tbaa !132\l  %33 = getelementptr inbounds i8, i8* %32, i64 2, !dbg !162\l  store i8 %31, i8* %33, align 1, !dbg !163, !tbaa !153\l  store i64 3, i64* %7, align 8, !dbg !164, !tbaa !135\l  br label %34, !dbg !166\l}"];
	Node0x1cd3730 -> Node0x1cd3e10;
	Node0x1cd3e10 [shape=record,label="{%34:\l\l  %35 = load i64, i64* %7, align 8, !dbg !167, !tbaa !135\l  %36 = load i64, i64* %6, align 8, !dbg !169, !tbaa !135\l  %37 = udiv i64 %36, 2, !dbg !170\l  %38 = icmp ule i64 %35, %37, !dbg !171\l  br i1 %38, label %39, label %48, !dbg !172\l|{<s0>T|<s1>F}}"];
	Node0x1cd3e10:s0 -> Node0x1cd3e60;
	Node0x1cd3e10:s1 -> Node0x1cd3f00;
	Node0x1cd3e60 [shape=record,label="{%39:\l\l  %40 = load i8*, i8** %5, align 8, !dbg !173, !tbaa !132\l  %41 = load i64, i64* %7, align 8, !dbg !174, !tbaa !135\l  %42 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !175\l  %43 = load i8*, i8** %5, align 8, !dbg !176, !tbaa !132\l  %44 = load i64, i64* %7, align 8, !dbg !177, !tbaa !135\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %43, i64\l... %44, i1 false), !dbg !178\l  br label %45, !dbg !178\l}"];
	Node0x1cd3e60 -> Node0x1cd3eb0;
	Node0x1cd3eb0 [shape=record,label="{%45:\l\l  %46 = load i64, i64* %7, align 8, !dbg !179, !tbaa !135\l  %47 = mul i64 %46, 2, !dbg !179\l  store i64 %47, i64* %7, align 8, !dbg !179, !tbaa !135\l  br label %34, !dbg !180, !llvm.loop !181\l}"];
	Node0x1cd3eb0 -> Node0x1cd3e10;
	Node0x1cd3f00 [shape=record,label="{%48:\l\l  %49 = load i64, i64* %7, align 8, !dbg !183, !tbaa !135\l  %50 = load i64, i64* %6, align 8, !dbg !185, !tbaa !135\l  %51 = icmp ult i64 %49, %50, !dbg !186\l  br i1 %51, label %52, label %60, !dbg !187\l|{<s0>T|<s1>F}}"];
	Node0x1cd3f00:s0 -> Node0x1cd3f50;
	Node0x1cd3f00:s1 -> Node0x1cd3fa0;
	Node0x1cd3f50 [shape=record,label="{%52:\l\l  %53 = load i8*, i8** %5, align 8, !dbg !188, !tbaa !132\l  %54 = load i64, i64* %7, align 8, !dbg !189, !tbaa !135\l  %55 = getelementptr inbounds i8, i8* %53, i64 %54, !dbg !190\l  %56 = load i8*, i8** %5, align 8, !dbg !191, !tbaa !132\l  %57 = load i64, i64* %6, align 8, !dbg !192, !tbaa !135\l  %58 = load i64, i64* %7, align 8, !dbg !193, !tbaa !135\l  %59 = sub i64 %57, %58, !dbg !194\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 %56, i64\l... %59, i1 false), !dbg !195\l  br label %60, !dbg !195\l}"];
	Node0x1cd3f50 -> Node0x1cd3fa0;
	Node0x1cd3fa0 [shape=record,label="{%60:\l\l  %61 = load i32, i32* %4, align 4, !dbg !196, !tbaa !127\l  %62 = and i32 %61, 4096, !dbg !198\l  %63 = icmp ne i32 %62, 0, !dbg !198\l  br i1 %63, label %64, label %81, !dbg !199\l|{<s0>T|<s1>F}}"];
	Node0x1cd3fa0:s0 -> Node0x1cd3ff0;
	Node0x1cd3fa0:s1 -> Node0x1cd4180;
	Node0x1cd3ff0 [shape=record,label="{%64:\l\l  store i64 0, i64* %7, align 8, !dbg !200, !tbaa !135\l  br label %65, !dbg !202\l}"];
	Node0x1cd3ff0 -> Node0x1cd4040;
	Node0x1cd4040 [shape=record,label="{%65:\l\l  %66 = load i64, i64* %7, align 8, !dbg !203, !tbaa !135\l  %67 = load i64, i64* %6, align 8, !dbg !205, !tbaa !135\l  %68 = icmp ult i64 %66, %67, !dbg !206\l  br i1 %68, label %69, label %80, !dbg !207\l|{<s0>T|<s1>F}}"];
	Node0x1cd4040:s0 -> Node0x1cd4090;
	Node0x1cd4040:s1 -> Node0x1cd4130;
	Node0x1cd4090 [shape=record,label="{%69:\l\l  %70 = load i8*, i8** %5, align 8, !dbg !208, !tbaa !132\l  %71 = load i64, i64* %7, align 8, !dbg !209, !tbaa !135\l  %72 = getelementptr inbounds i8, i8* %70, i64 %71, !dbg !208\l  %73 = load i8, i8* %72, align 1, !dbg !210, !tbaa !153\l  %74 = zext i8 %73 to i32, !dbg !210\l  %75 = xor i32 %74, 128, !dbg !210\l  %76 = trunc i32 %75 to i8, !dbg !210\l  store i8 %76, i8* %72, align 1, !dbg !210, !tbaa !153\l  br label %77, !dbg !208\l}"];
	Node0x1cd4090 -> Node0x1cd40e0;
	Node0x1cd40e0 [shape=record,label="{%77:\l\l  %78 = load i64, i64* %7, align 8, !dbg !211, !tbaa !135\l  %79 = add i64 %78, 512, !dbg !211\l  store i64 %79, i64* %7, align 8, !dbg !211, !tbaa !135\l  br label %65, !dbg !212, !llvm.loop !213\l}"];
	Node0x1cd40e0 -> Node0x1cd4040;
	Node0x1cd4130 [shape=record,label="{%80:\l\l  br label %81, !dbg !214\l}"];
	Node0x1cd4130 -> Node0x1cd4180;
	Node0x1cd4180 [shape=record,label="{%81:\l\l  %82 = bitcast i32* %8 to i8*, !dbg !215\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %82) #11, !dbg !215\l  %83 = bitcast i64* %7 to i8*, !dbg !215\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #11, !dbg !215\l  ret void, !dbg !215\l}"];
}
