digraph "CFG for 'strto2uintmax' function" {
	label="CFG for 'strto2uintmax' function";

	Node0x255e3a0 [shape=record,label="{%3:\l  %4 = alloca i64*, align 8\l  %5 = alloca i64*, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i32, align 4\l  %11 = alloca i8, align 1\l  %12 = alloca i32, align 4\l  %13 = alloca i8*, align 8\l  %14 = alloca i32, align 4\l  %15 = alloca i32, align 4\l  store i64* %0, i64** %4, align 8, !tbaa !124\l  call void @llvm.dbg.declare(metadata i64** %4, metadata !104, metadata\l... !DIExpression()), !dbg !128\l  store i64* %1, i64** %5, align 8, !tbaa !124\l  call void @llvm.dbg.declare(metadata i64** %5, metadata !105, metadata\l... !DIExpression()), !dbg !129\l  store i8* %2, i8** %6, align 8, !tbaa !124\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !106, metadata\l... !DIExpression()), !dbg !130\l  %16 = bitcast i32* %7 to i8*, !dbg !131\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #12, !dbg !131\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !107, metadata\l... !DIExpression()), !dbg !132\l  %17 = bitcast i64* %8 to i8*, !dbg !133\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #12, !dbg !133\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !108, metadata\l... !DIExpression()), !dbg !134\l  store i64 0, i64* %8, align 8, !dbg !134, !tbaa !135\l  %18 = bitcast i64* %9 to i8*, !dbg !133\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #12, !dbg !133\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !109, metadata\l... !DIExpression()), !dbg !137\l  store i64 0, i64* %9, align 8, !dbg !137, !tbaa !135\l  %19 = bitcast i32* %10 to i8*, !dbg !138\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #12, !dbg !138\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !110, metadata\l... !DIExpression()), !dbg !139\l  store i32 4, i32* %10, align 4, !dbg !139, !tbaa !140\l  br label %20, !dbg !141\l}"];
	Node0x255e3a0 -> Node0x255e570;
	Node0x255e570 [shape=record,label="{%20:\l\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %11) #12, !dbg !142\l  call void @llvm.dbg.declare(metadata i8* %11, metadata !111, metadata\l... !DIExpression()), !dbg !143\l  %21 = load i8*, i8** %6, align 8, !dbg !144, !tbaa !124\l  %22 = load i8, i8* %21, align 1, !dbg !145, !tbaa !140\l  store i8 %22, i8* %11, align 1, !dbg !143, !tbaa !140\l  %23 = load i8, i8* %11, align 1, !dbg !146, !tbaa !140\l  %24 = sext i8 %23 to i32, !dbg !146\l  %25 = icmp eq i32 %24, 32, !dbg !148\l  br i1 %25, label %26, label %29, !dbg !149\l|{<s0>T|<s1>F}}"];
	Node0x255e570:s0 -> Node0x255e5c0;
	Node0x255e570:s1 -> Node0x255e610;
	Node0x255e5c0 [shape=record,label="{%26:\l\l  %27 = load i8*, i8** %6, align 8, !dbg !150, !tbaa !124\l  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !150\l  store i8* %28, i8** %6, align 8, !dbg !150, !tbaa !124\l  br label %37, !dbg !151\l}"];
	Node0x255e5c0 -> Node0x255e700;
	Node0x255e610 [shape=record,label="{%29:\l\l  %30 = load i8, i8* %11, align 1, !dbg !152, !tbaa !140\l  %31 = sext i8 %30 to i32, !dbg !152\l  %32 = icmp eq i32 %31, 43, !dbg !154\l  br i1 %32, label %33, label %36, !dbg !155\l|{<s0>T|<s1>F}}"];
	Node0x255e610:s0 -> Node0x255e660;
	Node0x255e610:s1 -> Node0x255e6b0;
	Node0x255e660 [shape=record,label="{%33:\l\l  %34 = load i8*, i8** %6, align 8, !dbg !156, !tbaa !124\l  %35 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !156\l  store i8* %35, i8** %6, align 8, !dbg !156, !tbaa !124\l  store i32 2, i32* %12, align 4\l  br label %38, !dbg !158\l}"];
	Node0x255e660 -> Node0x255e750;
	Node0x255e6b0 [shape=record,label="{%36:\l\l  store i32 2, i32* %12, align 4\l  br label %38, !dbg !159\l}"];
	Node0x255e6b0 -> Node0x255e750;
	Node0x255e700 [shape=record,label="{%37:\l\l  store i32 0, i32* %12, align 4, !dbg !160\l  br label %38, !dbg !160\l}"];
	Node0x255e700 -> Node0x255e750;
	Node0x255e750 [shape=record,label="{%38:\l\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #12, !dbg !160\l  %39 = load i32, i32* %12, align 4\l  switch i32 %39, label %150 [\l    i32 0, label %40\l    i32 2, label %41\l  ]\l|{<s0>def|<s1>0|<s2>2}}"];
	Node0x255e750:s0 -> Node0x2560000;
	Node0x255e750:s1 -> Node0x255e7a0;
	Node0x255e750:s2 -> Node0x255e7f0;
	Node0x255e7a0 [shape=record,label="{%40:\l\l  br label %20, !dbg !161, !llvm.loop !162\l}"];
	Node0x255e7a0 -> Node0x255e570;
	Node0x255e7f0 [shape=record,label="{%41:\l\l  %42 = bitcast i8** %13 to i8*, !dbg !165\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #12, !dbg !165\l  call void @llvm.dbg.declare(metadata i8** %13, metadata !115, metadata\l... !DIExpression()), !dbg !166\l  %43 = load i8*, i8** %6, align 8, !dbg !167, !tbaa !124\l  store i8* %43, i8** %13, align 8, !dbg !166, !tbaa !124\l  br label %44, !dbg !168\l}"];
	Node0x255e7f0 -> Node0x255fa10;
	Node0x255fa10 [shape=record,label="{%44:\l\l  %45 = bitcast i32* %14 to i8*, !dbg !169\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #12, !dbg !169\l  call void @llvm.dbg.declare(metadata i32* %14, metadata !116, metadata\l... !DIExpression()), !dbg !170\l  %46 = load i8*, i8** %13, align 8, !dbg !171, !tbaa !124\l  %47 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !171\l  store i8* %47, i8** %13, align 8, !dbg !171, !tbaa !124\l  %48 = load i8, i8* %46, align 1, !dbg !172, !tbaa !140\l  %49 = sext i8 %48 to i32, !dbg !172\l  store i32 %49, i32* %14, align 4, !dbg !170, !tbaa !173\l  %50 = load i32, i32* %14, align 4, !dbg !175, !tbaa !173\l  %51 = icmp eq i32 %50, 0, !dbg !177\l  br i1 %51, label %52, label %53, !dbg !178\l|{<s0>T|<s1>F}}"];
	Node0x255fa10:s0 -> Node0x255fa60;
	Node0x255fa10:s1 -> Node0x255fab0;
	Node0x255fa60 [shape=record,label="{%52:\l\l  store i32 4, i32* %12, align 4\l  br label %64, !dbg !179\l}"];
	Node0x255fa60 -> Node0x255fba0;
	Node0x255fab0 [shape=record,label="{%53:\l\l  %54 = load i32, i32* %14, align 4, !dbg !180, !tbaa !173\l  %55 = sub i32 %54, 48, !dbg !180\l  %56 = icmp ule i32 %55, 9, !dbg !180\l  %57 = xor i1 %56, true, !dbg !180\l  %58 = zext i1 %57 to i32, !dbg !180\l  %59 = sext i32 %58 to i64, !dbg !180\l  %60 = call i64 @llvm.expect.i64(i64 %59, i64 0), !dbg !180\l  %61 = icmp ne i64 %60, 0, !dbg !180\l  br i1 %61, label %62, label %63, !dbg !182\l|{<s0>T|<s1>F}}"];
	Node0x255fab0:s0 -> Node0x255fb00;
	Node0x255fab0:s1 -> Node0x255fb50;
	Node0x255fb00 [shape=record,label="{%62:\l\l  store i32 4, i32* %10, align 4, !dbg !183, !tbaa !140\l  store i32 4, i32* %12, align 4\l  br label %64, !dbg !185\l}"];
	Node0x255fb00 -> Node0x255fba0;
	Node0x255fb50 [shape=record,label="{%63:\l\l  store i32 0, i32* %10, align 4, !dbg !186, !tbaa !140\l  store i32 0, i32* %12, align 4, !dbg !187\l  br label %64, !dbg !187\l}"];
	Node0x255fb50 -> Node0x255fba0;
	Node0x255fba0 [shape=record,label="{%64:\l\l  %65 = bitcast i32* %14 to i8*, !dbg !187\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %65) #12, !dbg !187\l  %66 = load i32, i32* %12, align 4\l  switch i32 %66, label %150 [\l    i32 0, label %67\l    i32 4, label %68\l  ]\l|{<s0>def|<s1>0|<s2>4}}"];
	Node0x255fba0:s0 -> Node0x2560000;
	Node0x255fba0:s1 -> Node0x255fbf0;
	Node0x255fba0:s2 -> Node0x255fc40;
	Node0x255fbf0 [shape=record,label="{%67:\l\l  br label %44, !dbg !188, !llvm.loop !189\l}"];
	Node0x255fbf0 -> Node0x255fa10;
	Node0x255fc40 [shape=record,label="{%68:\l\l  br label %69, !dbg !192\l}"];
	Node0x255fc40 -> Node0x255fc90;
	Node0x255fc90 [shape=record,label="{%69:\l\l  %70 = load i32, i32* %10, align 4, !dbg !193, !tbaa !140\l  %71 = icmp eq i32 %70, 0, !dbg !194\l  br i1 %71, label %72, label %139, !dbg !195\l|{<s0>T|<s1>F}}"];
	Node0x255fc90:s0 -> Node0x255fce0;
	Node0x255fc90:s1 -> Node0x255ffb0;
	Node0x255fce0 [shape=record,label="{%72:\l\l  %73 = bitcast i32* %15 to i8*, !dbg !196\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %73) #12, !dbg !196\l  call void @llvm.dbg.declare(metadata i32* %15, metadata !120, metadata\l... !DIExpression()), !dbg !197\l  %74 = load i8*, i8** %6, align 8, !dbg !198, !tbaa !124\l  %75 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !198\l  store i8* %75, i8** %6, align 8, !dbg !198, !tbaa !124\l  %76 = load i8, i8* %74, align 1, !dbg !199, !tbaa !140\l  %77 = sext i8 %76 to i32, !dbg !199\l  store i32 %77, i32* %15, align 4, !dbg !197, !tbaa !173\l  %78 = load i32, i32* %15, align 4, !dbg !200, !tbaa !173\l  %79 = icmp eq i32 %78, 0, !dbg !202\l  br i1 %79, label %80, label %81, !dbg !203\l|{<s0>T|<s1>F}}"];
	Node0x255fce0:s0 -> Node0x255fd30;
	Node0x255fce0:s1 -> Node0x255fd80;
	Node0x255fd30 [shape=record,label="{%80:\l\l  store i32 6, i32* %12, align 4\l  br label %135, !dbg !204\l}"];
	Node0x255fd30 -> Node0x255ff10;
	Node0x255fd80 [shape=record,label="{%81:\l\l  %82 = load i32, i32* %15, align 4, !dbg !205, !tbaa !173\l  %83 = sub i32 %82, 48, !dbg !205\l  store i32 %83, i32* %15, align 4, !dbg !205, !tbaa !173\l  %84 = load i64, i64* %8, align 8, !dbg !206, !tbaa !135\l  %85 = icmp ugt i64 %84, 1844674407370955161, !dbg !206\l  %86 = zext i1 %85 to i32, !dbg !206\l  %87 = sext i32 %86 to i64, !dbg !206\l  %88 = call i64 @llvm.expect.i64(i64 %87, i64 0), !dbg !206\l  %89 = icmp ne i64 %88, 0, !dbg !206\l  br i1 %89, label %90, label %91, !dbg !208\l|{<s0>T|<s1>F}}"];
	Node0x255fd80:s0 -> Node0x255fdd0;
	Node0x255fd80:s1 -> Node0x255fe20;
	Node0x255fdd0 [shape=record,label="{%90:\l\l  store i32 1, i32* %10, align 4, !dbg !209, !tbaa !140\l  store i32 6, i32* %12, align 4\l  br label %135, !dbg !211\l}"];
	Node0x255fdd0 -> Node0x255ff10;
	Node0x255fe20 [shape=record,label="{%91:\l\l  %92 = load i64, i64* %8, align 8, !dbg !212, !tbaa !135\l  %93 = mul i64 10, %92, !dbg !213\l  store i64 %93, i64* %8, align 8, !dbg !214, !tbaa !135\l  %94 = load i64, i64* %9, align 8, !dbg !215, !tbaa !135\l  %95 = lshr i64 %94, 61, !dbg !216\l  %96 = load i64, i64* %9, align 8, !dbg !217, !tbaa !135\l  %97 = lshr i64 %96, 63, !dbg !218\l  %98 = add i64 %95, %97, !dbg !219\l  %99 = trunc i64 %98 to i32, !dbg !220\l  store i32 %99, i32* %7, align 4, !dbg !221, !tbaa !173\l  %100 = load i64, i64* %9, align 8, !dbg !222, !tbaa !135\l  %101 = mul i64 10, %100, !dbg !223\l  %102 = load i64, i64* %9, align 8, !dbg !224, !tbaa !135\l  %103 = mul i64 2, %102, !dbg !225\l  %104 = icmp ult i64 %101, %103, !dbg !226\l  %105 = zext i1 %104 to i32, !dbg !226\l  %106 = load i32, i32* %7, align 4, !dbg !227, !tbaa !173\l  %107 = add i32 %106, %105, !dbg !227\l  store i32 %107, i32* %7, align 4, !dbg !227, !tbaa !173\l  %108 = load i64, i64* %9, align 8, !dbg !228, !tbaa !135\l  %109 = mul i64 10, %108, !dbg !229\l  store i64 %109, i64* %9, align 8, !dbg !230, !tbaa !135\l  %110 = load i32, i32* %15, align 4, !dbg !231, !tbaa !173\l  %111 = zext i32 %110 to i64, !dbg !231\l  %112 = load i64, i64* %9, align 8, !dbg !232, !tbaa !135\l  %113 = add i64 %112, %111, !dbg !232\l  store i64 %113, i64* %9, align 8, !dbg !232, !tbaa !135\l  %114 = load i64, i64* %9, align 8, !dbg !233, !tbaa !135\l  %115 = load i32, i32* %15, align 4, !dbg !234, !tbaa !173\l  %116 = zext i32 %115 to i64, !dbg !234\l  %117 = icmp ult i64 %114, %116, !dbg !235\l  %118 = zext i1 %117 to i32, !dbg !235\l  %119 = load i32, i32* %7, align 4, !dbg !236, !tbaa !173\l  %120 = add i32 %119, %118, !dbg !236\l  store i32 %120, i32* %7, align 4, !dbg !236, !tbaa !173\l  %121 = load i32, i32* %7, align 4, !dbg !237, !tbaa !173\l  %122 = zext i32 %121 to i64, !dbg !237\l  %123 = load i64, i64* %8, align 8, !dbg !238, !tbaa !135\l  %124 = add i64 %123, %122, !dbg !238\l  store i64 %124, i64* %8, align 8, !dbg !238, !tbaa !135\l  %125 = load i64, i64* %8, align 8, !dbg !239, !tbaa !135\l  %126 = load i32, i32* %7, align 4, !dbg !239, !tbaa !173\l  %127 = zext i32 %126 to i64, !dbg !239\l  %128 = icmp ult i64 %125, %127, !dbg !239\l  %129 = zext i1 %128 to i32, !dbg !239\l  %130 = sext i32 %129 to i64, !dbg !239\l  %131 = call i64 @llvm.expect.i64(i64 %130, i64 0), !dbg !239\l  %132 = icmp ne i64 %131, 0, !dbg !239\l  br i1 %132, label %133, label %134, !dbg !241\l|{<s0>T|<s1>F}}"];
	Node0x255fe20:s0 -> Node0x255fe70;
	Node0x255fe20:s1 -> Node0x255fec0;
	Node0x255fe70 [shape=record,label="{%133:\l\l  store i32 1, i32* %10, align 4, !dbg !242, !tbaa !140\l  store i32 6, i32* %12, align 4\l  br label %135, !dbg !244\l}"];
	Node0x255fe70 -> Node0x255ff10;
	Node0x255fec0 [shape=record,label="{%134:\l\l  store i32 0, i32* %12, align 4, !dbg !245\l  br label %135, !dbg !245\l}"];
	Node0x255fec0 -> Node0x255ff10;
	Node0x255ff10 [shape=record,label="{%135:\l\l  %136 = bitcast i32* %15 to i8*, !dbg !245\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %136) #12, !dbg !245\l  %137 = load i32, i32* %12, align 4\l  switch i32 %137, label %150 [\l    i32 0, label %138\l    i32 6, label %139\l  ]\l|{<s0>def|<s1>0|<s2>6}}"];
	Node0x255ff10:s0 -> Node0x2560000;
	Node0x255ff10:s1 -> Node0x255ff60;
	Node0x255ff10:s2 -> Node0x255ffb0;
	Node0x255ff60 [shape=record,label="{%138:\l\l  br label %69, !dbg !246, !llvm.loop !247\l}"];
	Node0x255ff60 -> Node0x255fc90;
	Node0x255ffb0 [shape=record,label="{%139:\l\l  %140 = load i64, i64* %8, align 8, !dbg !249, !tbaa !135\l  %141 = load i64*, i64** %4, align 8, !dbg !250, !tbaa !124\l  store i64 %140, i64* %141, align 8, !dbg !251, !tbaa !135\l  %142 = load i64, i64* %9, align 8, !dbg !252, !tbaa !135\l  %143 = load i64*, i64** %5, align 8, !dbg !253, !tbaa !124\l  store i64 %142, i64* %143, align 8, !dbg !254, !tbaa !135\l  %144 = load i32, i32* %10, align 4, !dbg !255, !tbaa !140\l  store i32 1, i32* %12, align 4\l  %145 = bitcast i8** %13 to i8*, !dbg !256\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %145) #12, !dbg !256\l  %146 = bitcast i32* %10 to i8*, !dbg !256\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %146) #12, !dbg !256\l  %147 = bitcast i64* %9 to i8*, !dbg !256\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %147) #12, !dbg !256\l  %148 = bitcast i64* %8 to i8*, !dbg !256\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %148) #12, !dbg !256\l  %149 = bitcast i32* %7 to i8*, !dbg !256\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %149) #12, !dbg !256\l  ret i32 %144, !dbg !257\l}"];
	Node0x2560000 [shape=record,label="{%150:\l\l  unreachable\l}"];
}
