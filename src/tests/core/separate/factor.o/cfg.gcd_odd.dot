digraph "CFG for 'gcd_odd' function" {
	label="CFG for 'gcd_odd' function";

	Node0x26448d0 [shape=record,label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i32, align 4\l  store i64 %0, i64* %4, align 8, !tbaa !112\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !102, metadata\l... !DIExpression()), !dbg !116\l  store i64 %1, i64* %5, align 8, !tbaa !112\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !103, metadata\l... !DIExpression()), !dbg !117\l  %10 = load i64, i64* %5, align 8, !dbg !118, !tbaa !112\l  %11 = and i64 %10, 1, !dbg !119\l  %12 = icmp eq i64 %11, 0, !dbg !120\l  br i1 %12, label %13, label %19, !dbg !121\l|{<s0>T|<s1>F}}"];
	Node0x26448d0:s0 -> Node0x2650710;
	Node0x26448d0:s1 -> Node0x2650760;
	Node0x2650710 [shape=record,label="{%13:\l\l  %14 = bitcast i64* %6 to i8*, !dbg !122\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #12, !dbg !122\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !104, metadata\l... !DIExpression()), !dbg !123\l  %15 = load i64, i64* %5, align 8, !dbg !124, !tbaa !112\l  store i64 %15, i64* %6, align 8, !dbg !123, !tbaa !112\l  %16 = load i64, i64* %4, align 8, !dbg !125, !tbaa !112\l  store i64 %16, i64* %5, align 8, !dbg !126, !tbaa !112\l  %17 = load i64, i64* %6, align 8, !dbg !127, !tbaa !112\l  store i64 %17, i64* %4, align 8, !dbg !128, !tbaa !112\l  %18 = bitcast i64* %6 to i8*, !dbg !129\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #12, !dbg !129\l  br label %19, !dbg !130\l}"];
	Node0x2650710 -> Node0x2650760;
	Node0x2650760 [shape=record,label="{%19:\l\l  %20 = load i64, i64* %4, align 8, !dbg !131, !tbaa !112\l  %21 = icmp eq i64 %20, 0, !dbg !133\l  br i1 %21, label %22, label %24, !dbg !134\l|{<s0>T|<s1>F}}"];
	Node0x2650760:s0 -> Node0x26507b0;
	Node0x2650760:s1 -> Node0x2650800;
	Node0x26507b0 [shape=record,label="{%22:\l\l  %23 = load i64, i64* %5, align 8, !dbg !135, !tbaa !112\l  store i64 %23, i64* %3, align 8, !dbg !136\l  br label %67, !dbg !136\l}"];
	Node0x26507b0 -> Node0x2650ad0;
	Node0x2650800 [shape=record,label="{%24:\l\l  %25 = load i64, i64* %5, align 8, !dbg !137, !tbaa !112\l  %26 = lshr i64 %25, 1, !dbg !137\l  store i64 %26, i64* %5, align 8, !dbg !137, !tbaa !112\l  br label %27, !dbg !138\l}"];
	Node0x2650800 -> Node0x2650850;
	Node0x2650850 [shape=record,label="{%27:\l\l  %28 = bitcast i64* %7 to i8*, !dbg !139\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #12, !dbg !139\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !107, metadata\l... !DIExpression()), !dbg !140\l  %29 = bitcast i64* %8 to i8*, !dbg !141\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #12, !dbg !141\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !111, metadata\l... !DIExpression()), !dbg !142\l  br label %30, !dbg !143\l}"];
	Node0x2650850 -> Node0x26508a0;
	Node0x26508a0 [shape=record,label="{%30:\l\l  %31 = load i64, i64* %4, align 8, !dbg !144, !tbaa !112\l  %32 = and i64 %31, 1, !dbg !145\l  %33 = icmp eq i64 %32, 0, !dbg !146\l  br i1 %33, label %34, label %37, !dbg !143\l|{<s0>T|<s1>F}}"];
	Node0x26508a0:s0 -> Node0x26508f0;
	Node0x26508a0:s1 -> Node0x2650940;
	Node0x26508f0 [shape=record,label="{%34:\l\l  %35 = load i64, i64* %4, align 8, !dbg !147, !tbaa !112\l  %36 = lshr i64 %35, 1, !dbg !147\l  store i64 %36, i64* %4, align 8, !dbg !147, !tbaa !112\l  br label %30, !dbg !143, !llvm.loop !148\l}"];
	Node0x26508f0 -> Node0x26508a0;
	Node0x2650940 [shape=record,label="{%37:\l\l  %38 = load i64, i64* %4, align 8, !dbg !150, !tbaa !112\l  %39 = lshr i64 %38, 1, !dbg !150\l  store i64 %39, i64* %4, align 8, !dbg !150, !tbaa !112\l  %40 = load i64, i64* %4, align 8, !dbg !151, !tbaa !112\l  %41 = load i64, i64* %5, align 8, !dbg !152, !tbaa !112\l  %42 = sub i64 %40, %41, !dbg !153\l  store i64 %42, i64* %7, align 8, !dbg !154, !tbaa !112\l  %43 = load i64, i64* %7, align 8, !dbg !155, !tbaa !112\l  %44 = icmp eq i64 %43, 0, !dbg !157\l  br i1 %44, label %45, label %49, !dbg !158\l|{<s0>T|<s1>F}}"];
	Node0x2650940:s0 -> Node0x2650990;
	Node0x2650940:s1 -> Node0x26509e0;
	Node0x2650990 [shape=record,label="{%45:\l\l  %46 = load i64, i64* %4, align 8, !dbg !159, !tbaa !112\l  %47 = shl i64 %46, 1, !dbg !160\l  %48 = add i64 %47, 1, !dbg !161\l  store i64 %48, i64* %3, align 8, !dbg !162\l  store i32 1, i32* %9, align 4\l  br label %62, !dbg !162\l}"];
	Node0x2650990 -> Node0x2650a30;
	Node0x26509e0 [shape=record,label="{%49:\l\l  %50 = load i64, i64* %7, align 8, !dbg !163, !tbaa !112\l  %51 = ashr i64 %50, 63, !dbg !163\l  store i64 %51, i64* %8, align 8, !dbg !164, !tbaa !112\l  %52 = load i64, i64* %8, align 8, !dbg !165, !tbaa !112\l  %53 = load i64, i64* %7, align 8, !dbg !166, !tbaa !112\l  %54 = and i64 %52, %53, !dbg !167\l  %55 = load i64, i64* %5, align 8, !dbg !168, !tbaa !112\l  %56 = add i64 %55, %54, !dbg !168\l  store i64 %56, i64* %5, align 8, !dbg !168, !tbaa !112\l  %57 = load i64, i64* %7, align 8, !dbg !169, !tbaa !112\l  %58 = load i64, i64* %8, align 8, !dbg !170, !tbaa !112\l  %59 = xor i64 %57, %58, !dbg !171\l  %60 = load i64, i64* %8, align 8, !dbg !172, !tbaa !112\l  %61 = sub i64 %59, %60, !dbg !173\l  store i64 %61, i64* %4, align 8, !dbg !174, !tbaa !112\l  store i32 0, i32* %9, align 4, !dbg !175\l  br label %62, !dbg !175\l}"];
	Node0x26509e0 -> Node0x2650a30;
	Node0x2650a30 [shape=record,label="{%62:\l\l  %63 = bitcast i64* %8 to i8*, !dbg !175\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #12, !dbg !175\l  %64 = bitcast i64* %7 to i8*, !dbg !175\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #12, !dbg !175\l  %65 = load i32, i32* %9, align 4\l  switch i32 %65, label %69 [\l    i32 0, label %66\l    i32 1, label %67\l  ]\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0x2650a30:s0 -> Node0x2650b20;
	Node0x2650a30:s1 -> Node0x2650a80;
	Node0x2650a30:s2 -> Node0x2650ad0;
	Node0x2650a80 [shape=record,label="{%66:\l\l  br label %27, !dbg !176, !llvm.loop !177\l}"];
	Node0x2650a80 -> Node0x2650850;
	Node0x2650ad0 [shape=record,label="{%67:\l\l  %68 = load i64, i64* %3, align 8, !dbg !180\l  ret i64 %68, !dbg !180\l}"];
	Node0x2650b20 [shape=record,label="{%69:\l\l  unreachable\l}"];
}
