digraph "CFG for 'mod2' function" {
	label="CFG for 'mod2' function";

	Node0x2657910 [shape=record,label="{%5:\l  %6 = alloca i64, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i32, align 4\l  %15 = alloca i64, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  store i64* %0, i64** %7, align 8, !tbaa !117\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !103, metadata\l... !DIExpression()), !dbg !121\l  store i64 %1, i64* %8, align 8, !tbaa !122\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !104, metadata\l... !DIExpression()), !dbg !124\l  store i64 %2, i64* %9, align 8, !tbaa !122\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !105, metadata\l... !DIExpression()), !dbg !125\l  store i64 %3, i64* %10, align 8, !tbaa !122\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !106, metadata\l... !DIExpression()), !dbg !126\l  store i64 %4, i64* %11, align 8, !tbaa !122\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !107, metadata\l... !DIExpression()), !dbg !127\l  %19 = bitcast i32* %12 to i8*, !dbg !128\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #12, !dbg !128\l  call void @llvm.dbg.declare(metadata i32* %12, metadata !108, metadata\l... !DIExpression()), !dbg !129\l  %20 = bitcast i32* %13 to i8*, !dbg !128\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #12, !dbg !128\l  call void @llvm.dbg.declare(metadata i32* %13, metadata !109, metadata\l... !DIExpression()), !dbg !130\l  %21 = load i64, i64* %10, align 8, !dbg !131, !tbaa !122\l  %22 = icmp ne i64 %21, 0, !dbg !131\l  br i1 %22, label %23, label %24, !dbg !134\l|{<s0>T|<s1>F}}"];
	Node0x2657910:s0 -> Node0x265d9c0;
	Node0x2657910:s1 -> Node0x265da10;
	Node0x265d9c0 [shape=record,label="{%23:\l\l  br label %25, !dbg !134\l}"];
	Node0x265d9c0 -> Node0x265da60;
	Node0x265da10 [shape=record,label="{%24:\l\l  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]*\l... @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]*\l... @.str.39, i32 0, i32 0), i32 419, i8* getelementptr inbounds ([72 x i8], [72\l... x i8]* @__PRETTY_FUNCTION__.mod2, i32 0, i32 0)) #13, !dbg !131\l  unreachable, !dbg !131\l}"];
	Node0x265da60 [shape=record,label="{%25:\l\l  %26 = load i64, i64* %8, align 8, !dbg !135, !tbaa !122\l  %27 = icmp eq i64 %26, 0, !dbg !137\l  br i1 %27, label %28, label %31, !dbg !138\l|{<s0>T|<s1>F}}"];
	Node0x265da60:s0 -> Node0x265dab0;
	Node0x265da60:s1 -> Node0x265db00;
	Node0x265dab0 [shape=record,label="{%28:\l\l  %29 = load i64*, i64** %7, align 8, !dbg !139, !tbaa !117\l  store i64 0, i64* %29, align 8, !dbg !141, !tbaa !122\l  %30 = load i64, i64* %9, align 8, !dbg !142, !tbaa !122\l  store i64 %30, i64* %6, align 8, !dbg !143\l  store i32 1, i32* %14, align 4\l  br label %119, !dbg !143\l}"];
	Node0x265dab0 -> Node0x265e1e0;
	Node0x265db00 [shape=record,label="{%31:\l\l  br label %32, !dbg !144\l}"];
	Node0x265db00 -> Node0x265db50;
	Node0x265db50 [shape=record,label="{%32:\l\l  %33 = bitcast i64* %15 to i8*, !dbg !145\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #12, !dbg !145\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !110, metadata\l... !DIExpression()), !dbg !145\l  %34 = load i64, i64* %10, align 8, !dbg !145, !tbaa !122\l  %35 = call i64 asm \"bsr\\09$1,$0\", \"=r,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64\l... %34) #14, !dbg !145, !srcloc !146\l  store i64 %35, i64* %15, align 8, !dbg !145, !tbaa !147\l  %36 = load i64, i64* %15, align 8, !dbg !145, !tbaa !147\l  %37 = xor i64 %36, 63, !dbg !145\l  %38 = trunc i64 %37 to i32, !dbg !145\l  store i32 %38, i32* %12, align 4, !dbg !145, !tbaa !149\l  %39 = bitcast i64* %15 to i8*, !dbg !144\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #12, !dbg !144\l  br label %40, !dbg !145\l}"];
	Node0x265db50 -> Node0x265dba0;
	Node0x265dba0 [shape=record,label="{%40:\l\l  br label %41, !dbg !145\l}"];
	Node0x265dba0 -> Node0x265dbf0;
	Node0x265dbf0 [shape=record,label="{%41:\l\l  br label %42, !dbg !151\l}"];
	Node0x265dbf0 -> Node0x265dc40;
	Node0x265dc40 [shape=record,label="{%42:\l\l  %43 = bitcast i64* %16 to i8*, !dbg !152\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #12, !dbg !152\l  call void @llvm.dbg.declare(metadata i64* %16, metadata !112, metadata\l... !DIExpression()), !dbg !152\l  %44 = load i64, i64* %8, align 8, !dbg !152, !tbaa !122\l  %45 = call i64 asm \"bsr\\09$1,$0\", \"=r,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64\l... %44) #14, !dbg !152, !srcloc !153\l  store i64 %45, i64* %16, align 8, !dbg !152, !tbaa !147\l  %46 = load i64, i64* %16, align 8, !dbg !152, !tbaa !147\l  %47 = xor i64 %46, 63, !dbg !152\l  %48 = trunc i64 %47 to i32, !dbg !152\l  store i32 %48, i32* %13, align 4, !dbg !152, !tbaa !149\l  %49 = bitcast i64* %16 to i8*, !dbg !151\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #12, !dbg !151\l  br label %50, !dbg !152\l}"];
	Node0x265dc40 -> Node0x265dc90;
	Node0x265dc90 [shape=record,label="{%50:\l\l  br label %51, !dbg !152\l}"];
	Node0x265dc90 -> Node0x265dce0;
	Node0x265dce0 [shape=record,label="{%51:\l\l  %52 = bitcast i32* %17 to i8*, !dbg !154\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #12, !dbg !154\l  call void @llvm.dbg.declare(metadata i32* %17, metadata !114, metadata\l... !DIExpression()), !dbg !155\l  %53 = load i32, i32* %12, align 4, !dbg !156, !tbaa !149\l  %54 = load i32, i32* %13, align 4, !dbg !157, !tbaa !149\l  %55 = sub nsw i32 %53, %54, !dbg !158\l  store i32 %55, i32* %17, align 4, !dbg !155, !tbaa !149\l  br label %56, !dbg !159\l}"];
	Node0x265dce0 -> Node0x265dd30;
	Node0x265dd30 [shape=record,label="{%56:\l\l  %57 = load i64, i64* %10, align 8, !dbg !160, !tbaa !122\l  %58 = load i32, i32* %17, align 4, !dbg !160, !tbaa !149\l  %59 = zext i32 %58 to i64, !dbg !160\l  %60 = shl i64 %57, %59, !dbg !160\l  %61 = load i64, i64* %11, align 8, !dbg !160, !tbaa !122\l  %62 = load i32, i32* %17, align 4, !dbg !160, !tbaa !149\l  %63 = sub nsw i32 64, %62, !dbg !160\l  %64 = zext i32 %63 to i64, !dbg !160\l  %65 = lshr i64 %61, %64, !dbg !160\l  %66 = or i64 %60, %65, !dbg !160\l  store i64 %66, i64* %10, align 8, !dbg !160, !tbaa !122\l  %67 = load i64, i64* %11, align 8, !dbg !160, !tbaa !122\l  %68 = load i32, i32* %17, align 4, !dbg !160, !tbaa !149\l  %69 = zext i32 %68 to i64, !dbg !160\l  %70 = shl i64 %67, %69, !dbg !160\l  store i64 %70, i64* %11, align 8, !dbg !160, !tbaa !122\l  br label %71, !dbg !160\l}"];
	Node0x265dd30 -> Node0x265dd80;
	Node0x265dd80 [shape=record,label="{%71:\l\l  br label %72, !dbg !160\l}"];
	Node0x265dd80 -> Node0x265ddd0;
	Node0x265ddd0 [shape=record,label="{%72:\l\l  %73 = bitcast i32* %18 to i8*, !dbg !162\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %73) #12, !dbg !162\l  call void @llvm.dbg.declare(metadata i32* %18, metadata !115, metadata\l... !DIExpression()), !dbg !163\l  store i32 0, i32* %18, align 4, !dbg !163, !tbaa !149\l  br label %74, !dbg !162\l}"];
	Node0x265ddd0 -> Node0x265de20;
	Node0x265de20 [shape=record,label="{%74:\l\l  %75 = load i32, i32* %18, align 4, !dbg !164, !tbaa !149\l  %76 = load i32, i32* %17, align 4, !dbg !166, !tbaa !149\l  %77 = icmp slt i32 %75, %76, !dbg !167\l  br i1 %77, label %80, label %78, !dbg !168\l|{<s0>T|<s1>F}}"];
	Node0x265de20:s0 -> Node0x265dec0;
	Node0x265de20:s1 -> Node0x265de70;
	Node0x265de70 [shape=record,label="{%78:\l\l  store i32 8, i32* %14, align 4\l  %79 = bitcast i32* %18 to i8*, !dbg !169\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %79) #12, !dbg !169\l  br label %114\l}"];
	Node0x265de70 -> Node0x265e190;
	Node0x265dec0 [shape=record,label="{%80:\l\l  %81 = load i64, i64* %8, align 8, !dbg !170, !tbaa !122\l  %82 = load i64, i64* %10, align 8, !dbg !170, !tbaa !122\l  %83 = icmp ugt i64 %81, %82, !dbg !170\l  br i1 %83, label %92, label %84, !dbg !170\l|{<s0>T|<s1>F}}"];
	Node0x265dec0:s0 -> Node0x265dfb0;
	Node0x265dec0:s1 -> Node0x265df10;
	Node0x265df10 [shape=record,label="{%84:\l\l  %85 = load i64, i64* %8, align 8, !dbg !170, !tbaa !122\l  %86 = load i64, i64* %10, align 8, !dbg !170, !tbaa !122\l  %87 = icmp eq i64 %85, %86, !dbg !170\l  br i1 %87, label %88, label %100, !dbg !170\l|{<s0>T|<s1>F}}"];
	Node0x265df10:s0 -> Node0x265df60;
	Node0x265df10:s1 -> Node0x265e000;
	Node0x265df60 [shape=record,label="{%88:\l\l  %89 = load i64, i64* %9, align 8, !dbg !170, !tbaa !122\l  %90 = load i64, i64* %11, align 8, !dbg !170, !tbaa !122\l  %91 = icmp uge i64 %89, %90, !dbg !170\l  br i1 %91, label %92, label %100, !dbg !173\l|{<s0>T|<s1>F}}"];
	Node0x265df60:s0 -> Node0x265dfb0;
	Node0x265df60:s1 -> Node0x265e000;
	Node0x265dfb0 [shape=record,label="{%92:\l\l  %93 = load i64, i64* %8, align 8, !dbg !174, !tbaa !122\l  %94 = load i64, i64* %10, align 8, !dbg !174, !tbaa !122\l  %95 = load i64, i64* %9, align 8, !dbg !174, !tbaa !122\l  %96 = load i64, i64* %11, align 8, !dbg !174, !tbaa !122\l  %97 = call \{ i64, i64 \} asm \"subq $5,$\{1:q\}\\0A\\09sbbq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %93, i64 %94, i64 %95,\l... i64 %96) #14, !dbg !174, !srcloc !175\l  %98 = extractvalue \{ i64, i64 \} %97, 0, !dbg !174\l  %99 = extractvalue \{ i64, i64 \} %97, 1, !dbg !174\l  store i64 %98, i64* %8, align 8, !dbg !174, !tbaa !122\l  store i64 %99, i64* %9, align 8, !dbg !174, !tbaa !122\l  br label %100, !dbg !174\l}"];
	Node0x265dfb0 -> Node0x265e000;
	Node0x265e000 [shape=record,label="{%100:\l\l  br label %101, !dbg !176\l}"];
	Node0x265e000 -> Node0x265e050;
	Node0x265e050 [shape=record,label="{%101:\l\l  %102 = load i64, i64* %10, align 8, !dbg !177, !tbaa !122\l  %103 = shl i64 %102, 63, !dbg !177\l  %104 = load i64, i64* %11, align 8, !dbg !177, !tbaa !122\l  %105 = lshr i64 %104, 1, !dbg !177\l  %106 = or i64 %103, %105, !dbg !177\l  store i64 %106, i64* %11, align 8, !dbg !177, !tbaa !122\l  %107 = load i64, i64* %10, align 8, !dbg !177, !tbaa !122\l  %108 = lshr i64 %107, 1, !dbg !177\l  store i64 %108, i64* %10, align 8, !dbg !177, !tbaa !122\l  br label %109, !dbg !177\l}"];
	Node0x265e050 -> Node0x265e0a0;
	Node0x265e0a0 [shape=record,label="{%109:\l\l  br label %110, !dbg !177\l}"];
	Node0x265e0a0 -> Node0x265e0f0;
	Node0x265e0f0 [shape=record,label="{%110:\l\l  br label %111, !dbg !179\l}"];
	Node0x265e0f0 -> Node0x265e140;
	Node0x265e140 [shape=record,label="{%111:\l\l  %112 = load i32, i32* %18, align 4, !dbg !180, !tbaa !149\l  %113 = add nsw i32 %112, 1, !dbg !180\l  store i32 %113, i32* %18, align 4, !dbg !180, !tbaa !149\l  br label %74, !dbg !169, !llvm.loop !181\l}"];
	Node0x265e140 -> Node0x265de20;
	Node0x265e190 [shape=record,label="{%114:\l\l  %115 = load i64, i64* %8, align 8, !dbg !183, !tbaa !122\l  %116 = load i64*, i64** %7, align 8, !dbg !184, !tbaa !117\l  store i64 %115, i64* %116, align 8, !dbg !185, !tbaa !122\l  %117 = load i64, i64* %9, align 8, !dbg !186, !tbaa !122\l  store i64 %117, i64* %6, align 8, !dbg !187\l  store i32 1, i32* %14, align 4\l  %118 = bitcast i32* %17 to i8*, !dbg !188\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %118) #12, !dbg !188\l  br label %119\l}"];
	Node0x265e190 -> Node0x265e1e0;
	Node0x265e1e0 [shape=record,label="{%119:\l\l  %120 = bitcast i32* %13 to i8*, !dbg !188\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %120) #12, !dbg !188\l  %121 = bitcast i32* %12 to i8*, !dbg !188\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %121) #12, !dbg !188\l  %122 = load i64, i64* %6, align 8, !dbg !188\l  ret i64 %122, !dbg !188\l}"];
}
