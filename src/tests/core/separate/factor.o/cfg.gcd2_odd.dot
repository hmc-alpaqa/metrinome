digraph "CFG for 'gcd2_odd' function" {
	label="CFG for 'gcd2_odd' function";

	Node0x2656bd0 [shape=record,label="{%5:\l  %6 = alloca i64, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  store i64* %0, i64** %7, align 8, !tbaa !108\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !103, metadata\l... !DIExpression()), !dbg !112\l  store i64 %1, i64* %8, align 8, !tbaa !113\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !104, metadata\l... !DIExpression()), !dbg !115\l  store i64 %2, i64* %9, align 8, !tbaa !113\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !105, metadata\l... !DIExpression()), !dbg !116\l  store i64 %3, i64* %10, align 8, !tbaa !113\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !106, metadata\l... !DIExpression()), !dbg !117\l  store i64 %4, i64* %11, align 8, !tbaa !113\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !107, metadata\l... !DIExpression()), !dbg !118\l  %12 = load i64, i64* %11, align 8, !dbg !119, !tbaa !113\l  %13 = and i64 %12, 1, !dbg !119\l  %14 = icmp ne i64 %13, 0, !dbg !119\l  br i1 %14, label %15, label %16, !dbg !122\l|{<s0>T|<s1>F}}"];
	Node0x2656bd0:s0 -> Node0x2656e20;
	Node0x2656bd0:s1 -> Node0x2656e70;
	Node0x2656e20 [shape=record,label="{%15:\l\l  br label %17, !dbg !122\l}"];
	Node0x2656e20 -> Node0x2656ec0;
	Node0x2656e70 [shape=record,label="{%16:\l\l  call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]*\l... @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]*\l... @.str.39, i32 0, i32 0), i32 483, i8* getelementptr inbounds ([76 x i8], [76\l... x i8]* @__PRETTY_FUNCTION__.gcd2_odd, i32 0, i32 0)) #12, !dbg !119\l  unreachable, !dbg !119\l}"];
	Node0x2656ec0 [shape=record,label="{%17:\l\l  %18 = load i64, i64* %9, align 8, !dbg !123, !tbaa !113\l  %19 = load i64, i64* %8, align 8, !dbg !125, !tbaa !113\l  %20 = or i64 %18, %19, !dbg !126\l  %21 = icmp eq i64 %20, 0, !dbg !127\l  br i1 %21, label %22, label %26, !dbg !128\l|{<s0>T|<s1>F}}"];
	Node0x2656ec0:s0 -> Node0x2656f10;
	Node0x2656ec0:s1 -> Node0x2656f60;
	Node0x2656f10 [shape=record,label="{%22:\l\l  %23 = load i64, i64* %10, align 8, !dbg !129, !tbaa !113\l  %24 = load i64*, i64** %7, align 8, !dbg !131, !tbaa !108\l  store i64 %23, i64* %24, align 8, !dbg !132, !tbaa !113\l  %25 = load i64, i64* %11, align 8, !dbg !133, !tbaa !113\l  store i64 %25, i64* %6, align 8, !dbg !134\l  br label %129, !dbg !134\l}"];
	Node0x2656f10 -> Node0x26578c0;
	Node0x2656f60 [shape=record,label="{%26:\l\l  br label %27, !dbg !135\l}"];
	Node0x2656f60 -> Node0x2656fb0;
	Node0x2656fb0 [shape=record,label="{%27:\l\l  %28 = load i64, i64* %9, align 8, !dbg !136, !tbaa !113\l  %29 = and i64 %28, 1, !dbg !137\l  %30 = icmp eq i64 %29, 0, !dbg !138\l  br i1 %30, label %31, label %41, !dbg !135\l|{<s0>T|<s1>F}}"];
	Node0x2656fb0:s0 -> Node0x2657000;
	Node0x2656fb0:s1 -> Node0x26570f0;
	Node0x2657000 [shape=record,label="{%31:\l\l  br label %32, !dbg !139\l}"];
	Node0x2657000 -> Node0x2657050;
	Node0x2657050 [shape=record,label="{%32:\l\l  %33 = load i64, i64* %8, align 8, !dbg !140, !tbaa !113\l  %34 = shl i64 %33, 63, !dbg !140\l  %35 = load i64, i64* %9, align 8, !dbg !140, !tbaa !113\l  %36 = lshr i64 %35, 1, !dbg !140\l  %37 = or i64 %34, %36, !dbg !140\l  store i64 %37, i64* %9, align 8, !dbg !140, !tbaa !113\l  %38 = load i64, i64* %8, align 8, !dbg !140, !tbaa !113\l  %39 = lshr i64 %38, 1, !dbg !140\l  store i64 %39, i64* %8, align 8, !dbg !140, !tbaa !113\l  br label %40, !dbg !140\l}"];
	Node0x2657050 -> Node0x26570a0;
	Node0x26570a0 [shape=record,label="{%40:\l\l  br label %27, !dbg !135, !llvm.loop !142\l}"];
	Node0x26570a0 -> Node0x2656fb0;
	Node0x26570f0 [shape=record,label="{%41:\l\l  br label %42, !dbg !143\l}"];
	Node0x26570f0 -> Node0x2657140;
	Node0x2657140 [shape=record,label="{%42:\l\l  %43 = load i64, i64* %10, align 8, !dbg !144, !tbaa !113\l  %44 = load i64, i64* %8, align 8, !dbg !149, !tbaa !113\l  %45 = or i64 %43, %44, !dbg !150\l  %46 = icmp eq i64 %45, 0, !dbg !151\l  br i1 %46, label %47, label %52, !dbg !152\l|{<s0>T|<s1>F}}"];
	Node0x2657140:s0 -> Node0x2657190;
	Node0x2657140:s1 -> Node0x26571e0;
	Node0x2657190 [shape=record,label="{%47:\l\l  %48 = load i64*, i64** %7, align 8, !dbg !153, !tbaa !108\l  store i64 0, i64* %48, align 8, !dbg !155, !tbaa !113\l  %49 = load i64, i64* %11, align 8, !dbg !156, !tbaa !113\l  %50 = load i64, i64* %9, align 8, !dbg !157, !tbaa !113\l  %51 = call i64 @gcd_odd(i64 %49, i64 %50) #10, !dbg !158\l  store i64 %51, i64* %6, align 8, !dbg !159\l  br label %129, !dbg !159\l}"];
	Node0x2657190 -> Node0x26578c0;
	Node0x26571e0 [shape=record,label="{%52:\l\l  %53 = load i64, i64* %8, align 8, !dbg !160, !tbaa !113\l  %54 = load i64, i64* %10, align 8, !dbg !160, !tbaa !113\l  %55 = icmp ugt i64 %53, %54, !dbg !160\l  br i1 %55, label %64, label %56, !dbg !160\l|{<s0>T|<s1>F}}"];
	Node0x26571e0:s0 -> Node0x26572d0;
	Node0x26571e0:s1 -> Node0x2657230;
	Node0x2657230 [shape=record,label="{%56:\l\l  %57 = load i64, i64* %8, align 8, !dbg !160, !tbaa !113\l  %58 = load i64, i64* %10, align 8, !dbg !160, !tbaa !113\l  %59 = icmp eq i64 %57, %58, !dbg !160\l  br i1 %59, label %60, label %87, !dbg !160\l|{<s0>T|<s1>F}}"];
	Node0x2657230:s0 -> Node0x2657280;
	Node0x2657230:s1 -> Node0x26574b0;
	Node0x2657280 [shape=record,label="{%60:\l\l  %61 = load i64, i64* %9, align 8, !dbg !160, !tbaa !113\l  %62 = load i64, i64* %11, align 8, !dbg !160, !tbaa !113\l  %63 = icmp ugt i64 %61, %62, !dbg !160\l  br i1 %63, label %64, label %87, !dbg !162\l|{<s0>T|<s1>F}}"];
	Node0x2657280:s0 -> Node0x26572d0;
	Node0x2657280:s1 -> Node0x26574b0;
	Node0x26572d0 [shape=record,label="{%64:\l\l  %65 = load i64, i64* %8, align 8, !dbg !163, !tbaa !113\l  %66 = load i64, i64* %10, align 8, !dbg !163, !tbaa !113\l  %67 = load i64, i64* %9, align 8, !dbg !163, !tbaa !113\l  %68 = load i64, i64* %11, align 8, !dbg !163, !tbaa !113\l  %69 = call \{ i64, i64 \} asm \"subq $5,$\{1:q\}\\0A\\09sbbq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %65, i64 %66, i64 %67,\l... i64 %68) #13, !dbg !163, !srcloc !165\l  %70 = extractvalue \{ i64, i64 \} %69, 0, !dbg !163\l  %71 = extractvalue \{ i64, i64 \} %69, 1, !dbg !163\l  store i64 %70, i64* %8, align 8, !dbg !163, !tbaa !113\l  store i64 %71, i64* %9, align 8, !dbg !163, !tbaa !113\l  br label %72, !dbg !166\l}"];
	Node0x26572d0 -> Node0x2657320;
	Node0x2657320 [shape=record,label="{%72:\l\l  br label %73, !dbg !167\l}"];
	Node0x2657320 -> Node0x2657370;
	Node0x2657370 [shape=record,label="{%73:\l\l  %74 = load i64, i64* %8, align 8, !dbg !168, !tbaa !113\l  %75 = shl i64 %74, 63, !dbg !168\l  %76 = load i64, i64* %9, align 8, !dbg !168, !tbaa !113\l  %77 = lshr i64 %76, 1, !dbg !168\l  %78 = or i64 %75, %77, !dbg !168\l  store i64 %78, i64* %9, align 8, !dbg !168, !tbaa !113\l  %79 = load i64, i64* %8, align 8, !dbg !168, !tbaa !113\l  %80 = lshr i64 %79, 1, !dbg !168\l  store i64 %80, i64* %8, align 8, !dbg !168, !tbaa !113\l  br label %81, !dbg !168\l}"];
	Node0x2657370 -> Node0x26573c0;
	Node0x26573c0 [shape=record,label="{%81:\l\l  br label %82, !dbg !168\l}"];
	Node0x26573c0 -> Node0x2657410;
	Node0x2657410 [shape=record,label="{%82:\l\l  %83 = load i64, i64* %9, align 8, !dbg !170, !tbaa !113\l  %84 = and i64 %83, 1, !dbg !171\l  %85 = icmp eq i64 %84, 0, !dbg !172\l  br i1 %85, label %72, label %86, !dbg !168, !llvm.loop !173\l|{<s0>T|<s1>F}}"];
	Node0x2657410:s0 -> Node0x2657320;
	Node0x2657410:s1 -> Node0x2657460;
	Node0x2657460 [shape=record,label="{%86:\l\l  br label %124, !dbg !175\l}"];
	Node0x2657460 -> Node0x2657820;
	Node0x26574b0 [shape=record,label="{%87:\l\l  %88 = load i64, i64* %10, align 8, !dbg !176, !tbaa !113\l  %89 = load i64, i64* %8, align 8, !dbg !176, !tbaa !113\l  %90 = icmp ugt i64 %88, %89, !dbg !176\l  br i1 %90, label %99, label %91, !dbg !176\l|{<s0>T|<s1>F}}"];
	Node0x26574b0:s0 -> Node0x26575a0;
	Node0x26574b0:s1 -> Node0x2657500;
	Node0x2657500 [shape=record,label="{%91:\l\l  %92 = load i64, i64* %10, align 8, !dbg !176, !tbaa !113\l  %93 = load i64, i64* %8, align 8, !dbg !176, !tbaa !113\l  %94 = icmp eq i64 %92, %93, !dbg !176\l  br i1 %94, label %95, label %122, !dbg !176\l|{<s0>T|<s1>F}}"];
	Node0x2657500:s0 -> Node0x2657550;
	Node0x2657500:s1 -> Node0x2657780;
	Node0x2657550 [shape=record,label="{%95:\l\l  %96 = load i64, i64* %11, align 8, !dbg !176, !tbaa !113\l  %97 = load i64, i64* %9, align 8, !dbg !176, !tbaa !113\l  %98 = icmp ugt i64 %96, %97, !dbg !176\l  br i1 %98, label %99, label %122, !dbg !178\l|{<s0>T|<s1>F}}"];
	Node0x2657550:s0 -> Node0x26575a0;
	Node0x2657550:s1 -> Node0x2657780;
	Node0x26575a0 [shape=record,label="{%99:\l\l  %100 = load i64, i64* %10, align 8, !dbg !179, !tbaa !113\l  %101 = load i64, i64* %8, align 8, !dbg !179, !tbaa !113\l  %102 = load i64, i64* %11, align 8, !dbg !179, !tbaa !113\l  %103 = load i64, i64* %9, align 8, !dbg !179, !tbaa !113\l  %104 = call \{ i64, i64 \} asm \"subq $5,$\{1:q\}\\0A\\09sbbq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %100, i64 %101, i64\l... %102, i64 %103) #13, !dbg !179, !srcloc !181\l  %105 = extractvalue \{ i64, i64 \} %104, 0, !dbg !179\l  %106 = extractvalue \{ i64, i64 \} %104, 1, !dbg !179\l  store i64 %105, i64* %10, align 8, !dbg !179, !tbaa !113\l  store i64 %106, i64* %11, align 8, !dbg !179, !tbaa !113\l  br label %107, !dbg !182\l}"];
	Node0x26575a0 -> Node0x26575f0;
	Node0x26575f0 [shape=record,label="{%107:\l\l  br label %108, !dbg !183\l}"];
	Node0x26575f0 -> Node0x2657640;
	Node0x2657640 [shape=record,label="{%108:\l\l  %109 = load i64, i64* %10, align 8, !dbg !184, !tbaa !113\l  %110 = shl i64 %109, 63, !dbg !184\l  %111 = load i64, i64* %11, align 8, !dbg !184, !tbaa !113\l  %112 = lshr i64 %111, 1, !dbg !184\l  %113 = or i64 %110, %112, !dbg !184\l  store i64 %113, i64* %11, align 8, !dbg !184, !tbaa !113\l  %114 = load i64, i64* %10, align 8, !dbg !184, !tbaa !113\l  %115 = lshr i64 %114, 1, !dbg !184\l  store i64 %115, i64* %10, align 8, !dbg !184, !tbaa !113\l  br label %116, !dbg !184\l}"];
	Node0x2657640 -> Node0x2657690;
	Node0x2657690 [shape=record,label="{%116:\l\l  br label %117, !dbg !184\l}"];
	Node0x2657690 -> Node0x26576e0;
	Node0x26576e0 [shape=record,label="{%117:\l\l  %118 = load i64, i64* %11, align 8, !dbg !186, !tbaa !113\l  %119 = and i64 %118, 1, !dbg !187\l  %120 = icmp eq i64 %119, 0, !dbg !188\l  br i1 %120, label %107, label %121, !dbg !184, !llvm.loop !189\l|{<s0>T|<s1>F}}"];
	Node0x26576e0:s0 -> Node0x26575f0;
	Node0x26576e0:s1 -> Node0x2657730;
	Node0x2657730 [shape=record,label="{%121:\l\l  br label %123, !dbg !191\l}"];
	Node0x2657730 -> Node0x26577d0;
	Node0x2657780 [shape=record,label="{%122:\l\l  br label %125, !dbg !192\l}"];
	Node0x2657780 -> Node0x2657870;
	Node0x26577d0 [shape=record,label="{%123:\l\l  br label %124\l}"];
	Node0x26577d0 -> Node0x2657820;
	Node0x2657820 [shape=record,label="{%124:\l\l  br label %42, !dbg !193, !llvm.loop !194\l}"];
	Node0x2657820 -> Node0x2657140;
	Node0x2657870 [shape=record,label="{%125:\l\l  %126 = load i64, i64* %8, align 8, !dbg !197, !tbaa !113\l  %127 = load i64*, i64** %7, align 8, !dbg !198, !tbaa !108\l  store i64 %126, i64* %127, align 8, !dbg !199, !tbaa !113\l  %128 = load i64, i64* %9, align 8, !dbg !200, !tbaa !113\l  store i64 %128, i64* %6, align 8, !dbg !201\l  br label %129, !dbg !201\l}"];
	Node0x2657870 -> Node0x26578c0;
	Node0x26578c0 [shape=record,label="{%129:\l\l  %130 = load i64, i64* %6, align 8, !dbg !202\l  ret i64 %130, !dbg !202\l}"];
}
