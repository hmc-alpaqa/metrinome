digraph "CFG for 'is_nul' function" {
	label="CFG for 'is_nul' function";

	Node0x1e02d80 [shape=record,label="{%2:\l  %3 = alloca i1, align 1\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i8, align 1\l  %8 = alloca i32, align 4\l  store i8* %0, i8** %4, align 8, !tbaa !138\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !131, metadata\l... !DIExpression()), !dbg !142\l  store i64 %1, i64* %5, align 8, !tbaa !143\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !132, metadata\l... !DIExpression()), !dbg !145\l  %9 = bitcast i8** %6 to i8*, !dbg !146\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #12, !dbg !146\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !133, metadata\l... !DIExpression()), !dbg !147\l  %10 = load i8*, i8** %4, align 8, !dbg !148, !tbaa !138\l  store i8* %10, i8** %6, align 8, !dbg !147, !tbaa !138\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %7) #12, !dbg !149\l  call void @llvm.dbg.declare(metadata i8* %7, metadata !137, metadata\l... !DIExpression()), !dbg !150\l  %11 = load i64, i64* %5, align 8, !dbg !151, !tbaa !143\l  %12 = icmp ne i64 %11, 0, !dbg !151\l  br i1 %12, label %14, label %13, !dbg !153\l|{<s0>T|<s1>F}}"];
	Node0x1e02d80:s0 -> Node0x1e02f20;
	Node0x1e02d80:s1 -> Node0x1e02ed0;
	Node0x1e02ed0 [shape=record,label="{%13:\l\l  store i1 true, i1* %3, align 1, !dbg !154\l  store i32 1, i32* %8, align 4\l  br label %61, !dbg !154\l}"];
	Node0x1e02ed0 -> Node0x1e03420;
	Node0x1e02f20 [shape=record,label="{%14:\l\l  br label %15, !dbg !155\l}"];
	Node0x1e02f20 -> Node0x1e02f70;
	Node0x1e02f70 [shape=record,label="{%15:\l\l  %16 = load i64, i64* %5, align 8, !dbg !156, !tbaa !143\l  %17 = and i64 %16, 0, !dbg !156\l  %18 = call i64 @llvm.expect.i64(i64 %17, i64 0), !dbg !156\l  %19 = icmp ne i64 %18, 0, !dbg !155\l  br i1 %19, label %20, label %34, !dbg !155\l|{<s0>T|<s1>F}}"];
	Node0x1e02f70:s0 -> Node0x1e02fc0;
	Node0x1e02f70:s1 -> Node0x1e03150;
	Node0x1e02fc0 [shape=record,label="{%20:\l\l  %21 = load i8*, i8** %6, align 8, !dbg !157, !tbaa !138\l  %22 = load i8, i8* %21, align 1, !dbg !160, !tbaa !161\l  %23 = icmp ne i8 %22, 0, !dbg !160\l  br i1 %23, label %24, label %25, !dbg !162\l|{<s0>T|<s1>F}}"];
	Node0x1e02fc0:s0 -> Node0x1e03010;
	Node0x1e02fc0:s1 -> Node0x1e03060;
	Node0x1e03010 [shape=record,label="{%24:\l\l  store i1 false, i1* %3, align 1, !dbg !163\l  store i32 1, i32* %8, align 4\l  br label %61, !dbg !163\l}"];
	Node0x1e03010 -> Node0x1e03420;
	Node0x1e03060 [shape=record,label="{%25:\l\l  %26 = load i8*, i8** %6, align 8, !dbg !164, !tbaa !138\l  %27 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !164\l  store i8* %27, i8** %6, align 8, !dbg !164, !tbaa !138\l  %28 = load i64, i64* %5, align 8, !dbg !165, !tbaa !143\l  %29 = add i64 %28, -1, !dbg !165\l  store i64 %29, i64* %5, align 8, !dbg !165, !tbaa !143\l  %30 = load i64, i64* %5, align 8, !dbg !166, !tbaa !143\l  %31 = icmp ne i64 %30, 0, !dbg !166\l  br i1 %31, label %33, label %32, !dbg !168\l|{<s0>T|<s1>F}}"];
	Node0x1e03060:s0 -> Node0x1e03100;
	Node0x1e03060:s1 -> Node0x1e030b0;
	Node0x1e030b0 [shape=record,label="{%32:\l\l  store i1 true, i1* %3, align 1, !dbg !169\l  store i32 1, i32* %8, align 4\l  br label %61, !dbg !169\l}"];
	Node0x1e030b0 -> Node0x1e03420;
	Node0x1e03100 [shape=record,label="{%33:\l\l  br label %15, !dbg !155, !llvm.loop !170\l}"];
	Node0x1e03100 -> Node0x1e02f70;
	Node0x1e03150 [shape=record,label="{%34:\l\l  br label %35, !dbg !172\l}"];
	Node0x1e03150 -> Node0x1e031a0;
	Node0x1e031a0 [shape=record,label="{%35:\l\l  %36 = load i8*, i8** %6, align 8, !dbg !173, !tbaa !138\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %36, i64 1,\l... i1 false), !dbg !177\l  %37 = load i8, i8* %7, align 1, !dbg !178, !tbaa !161\l  %38 = icmp ne i8 %37, 0, !dbg !178\l  br i1 %38, label %39, label %40, !dbg !180\l|{<s0>T|<s1>F}}"];
	Node0x1e031a0:s0 -> Node0x1e031f0;
	Node0x1e031a0:s1 -> Node0x1e03240;
	Node0x1e031f0 [shape=record,label="{%39:\l\l  store i1 false, i1* %3, align 1, !dbg !181\l  store i32 1, i32* %8, align 4\l  br label %61, !dbg !181\l}"];
	Node0x1e031f0 -> Node0x1e03420;
	Node0x1e03240 [shape=record,label="{%40:\l\l  %41 = load i8*, i8** %6, align 8, !dbg !182, !tbaa !138\l  %42 = getelementptr inbounds i8, i8* %41, i64 1, !dbg !182\l  store i8* %42, i8** %6, align 8, !dbg !182, !tbaa !138\l  %43 = load i64, i64* %5, align 8, !dbg !183, !tbaa !143\l  %44 = sub i64 %43, 1, !dbg !183\l  store i64 %44, i64* %5, align 8, !dbg !183, !tbaa !143\l  %45 = load i64, i64* %5, align 8, !dbg !184, !tbaa !143\l  %46 = icmp ne i64 %45, 0, !dbg !184\l  br i1 %46, label %48, label %47, !dbg !186\l|{<s0>T|<s1>F}}"];
	Node0x1e03240:s0 -> Node0x1e032e0;
	Node0x1e03240:s1 -> Node0x1e03290;
	Node0x1e03290 [shape=record,label="{%47:\l\l  store i1 true, i1* %3, align 1, !dbg !187\l  store i32 1, i32* %8, align 4\l  br label %61, !dbg !187\l}"];
	Node0x1e03290 -> Node0x1e03420;
	Node0x1e032e0 [shape=record,label="{%48:\l\l  %49 = load i64, i64* %5, align 8, !dbg !188, !tbaa !143\l  %50 = and i64 %49, 15, !dbg !188\l  %51 = call i64 @llvm.expect.i64(i64 %50, i64 0), !dbg !188\l  %52 = icmp eq i64 %51, 0, !dbg !190\l  br i1 %52, label %53, label %54, !dbg !191\l|{<s0>T|<s1>F}}"];
	Node0x1e032e0:s0 -> Node0x1e03330;
	Node0x1e032e0:s1 -> Node0x1e03380;
	Node0x1e03330 [shape=record,label="{%53:\l\l  br label %55, !dbg !192\l}"];
	Node0x1e03330 -> Node0x1e033d0;
	Node0x1e03380 [shape=record,label="{%54:\l\l  br label %35, !dbg !193, !llvm.loop !194\l}"];
	Node0x1e03380 -> Node0x1e031a0;
	Node0x1e033d0 [shape=record,label="{%55:\l\l  %56 = load i8*, i8** %4, align 8, !dbg !197, !tbaa !138\l  %57 = load i8*, i8** %6, align 8, !dbg !198, !tbaa !138\l  %58 = load i64, i64* %5, align 8, !dbg !199, !tbaa !143\l  %59 = call i32 @memcmp(i8* %56, i8* %57, i64 %58) #13, !dbg !200\l  %60 = icmp eq i32 %59, 0, !dbg !201\l  store i1 %60, i1* %3, align 1, !dbg !202\l  store i32 1, i32* %8, align 4\l  br label %61, !dbg !202\l}"];
	Node0x1e033d0 -> Node0x1e03420;
	Node0x1e03420 [shape=record,label="{%61:\l\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %7) #12, !dbg !203\l  %62 = bitcast i8** %6 to i8*, !dbg !203\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #12, !dbg !203\l  %63 = load i1, i1* %3, align 1, !dbg !203\l  ret i1 %63, !dbg !203\l}"];
}
