digraph "CFG for 'prepare_padded_number' function" {
	label="CFG for 'prepare_padded_number' function";

	Node0xb803f0 [shape=record,label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca x86_fp80, align 16\l  %5 = alloca i64, align 8\l  %6 = alloca [128 x i8], align 16\l  %7 = alloca i64, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = alloca i64, align 8\l  store x86_fp80 %0, x86_fp80* %4, align 16, !tbaa !620\l  call void @llvm.dbg.declare(metadata x86_fp80* %4, metadata !609, metadata\l... !DIExpression()), !dbg !624\l  store i64 %1, i64* %5, align 8, !tbaa !625\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !610, metadata\l... !DIExpression()), !dbg !627\l  %11 = bitcast [128 x i8]* %6 to i8*, !dbg !628\l  call void @llvm.lifetime.start.p0i8(i64 128, i8* %11) #12, !dbg !628\l  call void @llvm.dbg.declare(metadata [128 x i8]* %6, metadata !611, metadata\l... !DIExpression()), !dbg !629\l  %12 = bitcast i64* %7 to i8*, !dbg !630\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #12, !dbg !630\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !615, metadata\l... !DIExpression()), !dbg !631\l  %13 = load i64, i64* @user_precision, align 8, !dbg !632, !tbaa !625\l  %14 = icmp eq i64 %13, -1, !dbg !633\l  br i1 %14, label %15, label %17, !dbg !632\l|{<s0>T|<s1>F}}"];
	Node0xb803f0:s0 -> Node0xb804a0;
	Node0xb803f0:s1 -> Node0xb804f0;
	Node0xb804a0 [shape=record,label="{%15:\l\l  %16 = load i64, i64* %5, align 8, !dbg !634, !tbaa !625\l  br label %19, !dbg !632\l}"];
	Node0xb804a0 -> Node0xb80540;
	Node0xb804f0 [shape=record,label="{%17:\l\l  %18 = load i64, i64* @user_precision, align 8, !dbg !635, !tbaa !625\l  br label %19, !dbg !632\l}"];
	Node0xb804f0 -> Node0xb80540;
	Node0xb80540 [shape=record,label="{%19:\l\l  %20 = phi i64 [ %16, %15 ], [ %18, %17 ], !dbg !632\l  store i64 %20, i64* %7, align 8, !dbg !631, !tbaa !625\l  %21 = bitcast i32* %8 to i8*, !dbg !636\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #12, !dbg !636\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !616, metadata\l... !DIExpression()), !dbg !637\l  %22 = load x86_fp80, x86_fp80* %4, align 16, !dbg !638, !tbaa !620\l  %23 = call x86_fp80 @expld(x86_fp80 %22, i32 10, i32* %8), !dbg !639\l  %24 = load i32, i32* @scale_to, align 4, !dbg !640, !tbaa !642\l  %25 = icmp eq i32 %24, 0, !dbg !643\l  br i1 %25, label %26, label %47, !dbg !644\l|{<s0>T|<s1>F}}"];
	Node0xb80540:s0 -> Node0xb80590;
	Node0xb80540:s1 -> Node0xb807c0;
	Node0xb80590 [shape=record,label="{%26:\l\l  %27 = load i32, i32* %8, align 4, !dbg !645, !tbaa !646\l  %28 = zext i32 %27 to i64, !dbg !645\l  %29 = load i64, i64* %7, align 8, !dbg !648, !tbaa !625\l  %30 = add i64 %28, %29, !dbg !649\l  %31 = icmp ugt i64 %30, 18, !dbg !650\l  br i1 %31, label %32, label %47, !dbg !651\l|{<s0>T|<s1>F}}"];
	Node0xb80590:s0 -> Node0xb805e0;
	Node0xb80590:s1 -> Node0xb807c0;
	Node0xb805e0 [shape=record,label="{%32:\l\l  %33 = load i32, i32* @inval_style, align 4, !dbg !652, !tbaa !642\l  %34 = icmp ne i32 %33, 3, !dbg !655\l  br i1 %34, label %35, label %46, !dbg !656\l|{<s0>T|<s1>F}}"];
	Node0xb805e0:s0 -> Node0xb80630;
	Node0xb805e0:s1 -> Node0xb80770;
	Node0xb80630 [shape=record,label="{%35:\l\l  %36 = load i64, i64* %7, align 8, !dbg !657, !tbaa !625\l  %37 = icmp ne i64 %36, 0, !dbg !657\l  br i1 %37, label %38, label %42, !dbg !660\l|{<s0>T|<s1>F}}"];
	Node0xb80630:s0 -> Node0xb80680;
	Node0xb80630:s1 -> Node0xb806d0;
	Node0xb80680 [shape=record,label="{%38:\l\l  %39 = load i32, i32* @conv_exit_code, align 4, !dbg !661, !tbaa !646\l  %40 = load x86_fp80, x86_fp80* %4, align 16, !dbg !662, !tbaa !620\l  %41 = load i64, i64* %7, align 8, !dbg !663, !tbaa !625\l  call void (i32, i32, i8*, ...) @error(i32 %39, i32 0, i8* getelementptr\l... inbounds ([73 x i8], [73 x i8]* @.str.132, i32 0, i32 0), x86_fp80 %40, i64\l... %41), !dbg !664\l  br label %45, !dbg !664\l}"];
	Node0xb80680 -> Node0xb80720;
	Node0xb806d0 [shape=record,label="{%42:\l\l  %43 = load i32, i32* @conv_exit_code, align 4, !dbg !665, !tbaa !646\l  %44 = load x86_fp80, x86_fp80* %4, align 16, !dbg !666, !tbaa !620\l  call void (i32, i32, i8*, ...) @error(i32 %43, i32 0, i8* getelementptr\l... inbounds ([59 x i8], [59 x i8]* @.str.133, i32 0, i32 0), x86_fp80 %44), !dbg\l... !667\l  br label %45\l}"];
	Node0xb806d0 -> Node0xb80720;
	Node0xb80720 [shape=record,label="{%45:\l\l  br label %46, !dbg !668\l}"];
	Node0xb80720 -> Node0xb80770;
	Node0xb80770 [shape=record,label="{%46:\l\l  store i32 0, i32* %3, align 4, !dbg !669\l  store i32 1, i32* %9, align 4\l  br label %123, !dbg !669\l}"];
	Node0xb80770 -> Node0xb80e50;
	Node0xb807c0 [shape=record,label="{%47:\l\l  %48 = load i32, i32* %8, align 4, !dbg !670, !tbaa !646\l  %49 = icmp ugt i32 %48, 26, !dbg !672\l  br i1 %49, label %50, label %57, !dbg !673\l|{<s0>T|<s1>F}}"];
	Node0xb807c0:s0 -> Node0xb80810;
	Node0xb807c0:s1 -> Node0xb80900;
	Node0xb80810 [shape=record,label="{%50:\l\l  %51 = load i32, i32* @inval_style, align 4, !dbg !674, !tbaa !642\l  %52 = icmp ne i32 %51, 3, !dbg !677\l  br i1 %52, label %53, label %56, !dbg !678\l|{<s0>T|<s1>F}}"];
	Node0xb80810:s0 -> Node0xb80860;
	Node0xb80810:s1 -> Node0xb808b0;
	Node0xb80860 [shape=record,label="{%53:\l\l  %54 = load i32, i32* @conv_exit_code, align 4, !dbg !679, !tbaa !646\l  %55 = load x86_fp80, x86_fp80* %4, align 16, !dbg !680, !tbaa !620\l  call void (i32, i32, i8*, ...) @error(i32 %54, i32 0, i8* getelementptr\l... inbounds ([67 x i8], [67 x i8]* @.str.134, i32 0, i32 0), x86_fp80 %55), !dbg\l... !681\l  br label %56, !dbg !681\l}"];
	Node0xb80860 -> Node0xb808b0;
	Node0xb808b0 [shape=record,label="{%56:\l\l  store i32 0, i32* %3, align 4, !dbg !682\l  store i32 1, i32* %9, align 4\l  br label %123, !dbg !682\l}"];
	Node0xb808b0 -> Node0xb80e50;
	Node0xb80900 [shape=record,label="{%57:\l\l  %58 = load x86_fp80, x86_fp80* %4, align 16, !dbg !683, !tbaa !620\l  %59 = load i64, i64* %7, align 8, !dbg !684, !tbaa !625\l  %60 = trunc i64 %59 to i32, !dbg !684\l  %61 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !685\l  %62 = load i32, i32* @scale_to, align 4, !dbg !686, !tbaa !642\l  %63 = load i32, i32* @grouping, align 4, !dbg !687, !tbaa !646\l  %64 = load i32, i32* @round_style, align 4, !dbg !688, !tbaa !642\l  call void @double_to_human(x86_fp80 %58, i32 %60, i8* %61, i64 128, i32 %62,\l... i32 %63, i32 %64), !dbg !689\l  %65 = load i8*, i8** @suffix, align 8, !dbg !690, !tbaa !692\l  %66 = icmp ne i8* %65, null, !dbg !690\l  br i1 %66, label %67, label %75, !dbg !694\l|{<s0>T|<s1>F}}"];
	Node0xb80900:s0 -> Node0xb80950;
	Node0xb80900:s1 -> Node0xb809a0;
	Node0xb80950 [shape=record,label="{%67:\l\l  %68 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !695\l  %69 = load i8*, i8** @suffix, align 8, !dbg !696, !tbaa !692\l  %70 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !697\l  %71 = call i64 @strlen(i8* %70) #13, !dbg !698\l  %72 = sub i64 128, %71, !dbg !699\l  %73 = sub i64 %72, 1, !dbg !700\l  %74 = call i8* @strncat(i8* %68, i8* %69, i64 %73) #12, !dbg !701\l  br label %75, !dbg !701\l}"];
	Node0xb80950 -> Node0xb809a0;
	Node0xb809a0 [shape=record,label="{%75:\l\l  br label %76, !dbg !702\l}"];
	Node0xb809a0 -> Node0xb809f0;
	Node0xb809f0 [shape=record,label="{%76:\l\l  %77 = load i8, i8* @dev_debug, align 1, !dbg !703, !tbaa !706, !range !708\l  %78 = trunc i8 %77 to i1, !dbg !703\l  br i1 %78, label %79, label %85, !dbg !709\l|{<s0>T|<s1>F}}"];
	Node0xb809f0:s0 -> Node0xb80a40;
	Node0xb809f0:s1 -> Node0xb80a90;
	Node0xb80a40 [shape=record,label="{%79:\l\l  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg\l... !703, !tbaa !692\l  %81 = load x86_fp80, x86_fp80* %4, align 16, !dbg !703, !tbaa !620\l  %82 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !703\l  %83 = call i8* @quote(i8* %82), !dbg !703\l  %84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80,\l... i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.135, i32 0, i32 0),\l... x86_fp80 %81, i8* %83), !dbg !703\l  br label %85, !dbg !703\l}"];
	Node0xb80a40 -> Node0xb80a90;
	Node0xb80a90 [shape=record,label="{%85:\l\l  br label %86, !dbg !709\l}"];
	Node0xb80a90 -> Node0xb80ae0;
	Node0xb80ae0 [shape=record,label="{%86:\l\l  br label %87, !dbg !709\l}"];
	Node0xb80ae0 -> Node0xb80b30;
	Node0xb80b30 [shape=record,label="{%87:\l\l  %88 = load i64, i64* @padding_width, align 8, !dbg !710, !tbaa !625\l  %89 = icmp ne i64 %88, 0, !dbg !710\l  br i1 %89, label %90, label %115, !dbg !711\l|{<s0>T|<s1>F}}"];
	Node0xb80b30:s0 -> Node0xb80b80;
	Node0xb80b30:s1 -> Node0xb80db0;
	Node0xb80b80 [shape=record,label="{%90:\l\l  %91 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !712\l  %92 = call i64 @strlen(i8* %91) #13, !dbg !713\l  %93 = load i64, i64* @padding_width, align 8, !dbg !714, !tbaa !625\l  %94 = icmp ult i64 %92, %93, !dbg !715\l  br i1 %94, label %95, label %115, !dbg !716\l|{<s0>T|<s1>F}}"];
	Node0xb80b80:s0 -> Node0xb80bd0;
	Node0xb80b80:s1 -> Node0xb80db0;
	Node0xb80bd0 [shape=record,label="{%95:\l\l  %96 = bitcast i64* %10 to i8*, !dbg !717\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %96) #12, !dbg !717\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !617, metadata\l... !DIExpression()), !dbg !718\l  %97 = load i64, i64* @padding_width, align 8, !dbg !719, !tbaa !625\l  store i64 %97, i64* %10, align 8, !dbg !718, !tbaa !625\l  %98 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !720\l  %99 = load i8*, i8** @padding_buffer, align 8, !dbg !721, !tbaa !692\l  %100 = load i64, i64* @padding_buffer_size, align 8, !dbg !722, !tbaa !625\l  %101 = load i32, i32* @padding_alignment, align 4, !dbg !723, !tbaa !642\l  %102 = call i64 @mbsalign(i8* %98, i8* %99, i64 %100, i64* %10, i32 %101,\l... i32 2), !dbg !724\l  br label %103, !dbg !725\l}"];
	Node0xb80bd0 -> Node0xb80c20;
	Node0xb80c20 [shape=record,label="{%103:\l\l  %104 = load i8, i8* @dev_debug, align 1, !dbg !726, !tbaa !706, !range !708\l  %105 = trunc i8 %104 to i1, !dbg !726\l  br i1 %105, label %106, label %111, !dbg !729\l|{<s0>T|<s1>F}}"];
	Node0xb80c20:s0 -> Node0xb80c70;
	Node0xb80c20:s1 -> Node0xb80cc0;
	Node0xb80c70 [shape=record,label="{%106:\l\l  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg\l... !726, !tbaa !692\l  %108 = load i8*, i8** @padding_buffer, align 8, !dbg !726, !tbaa !692\l  %109 = call i8* @quote(i8* %108), !dbg !726\l  %110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %107, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.136, i32 0, i32\l... 0), i8* %109), !dbg !726\l  br label %111, !dbg !726\l}"];
	Node0xb80c70 -> Node0xb80cc0;
	Node0xb80cc0 [shape=record,label="{%111:\l\l  br label %112, !dbg !729\l}"];
	Node0xb80cc0 -> Node0xb80d10;
	Node0xb80d10 [shape=record,label="{%112:\l\l  br label %113, !dbg !729\l}"];
	Node0xb80d10 -> Node0xb80d60;
	Node0xb80d60 [shape=record,label="{%113:\l\l  %114 = bitcast i64* %10 to i8*, !dbg !730\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %114) #12, !dbg !730\l  br label %122, !dbg !731\l}"];
	Node0xb80d60 -> Node0xb80e00;
	Node0xb80db0 [shape=record,label="{%115:\l\l  %116 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !732\l  %117 = call i64 @strlen(i8* %116) #13, !dbg !734\l  %118 = add i64 %117, 1, !dbg !735\l  call void @setup_padding_buffer(i64 %118), !dbg !736\l  %119 = load i8*, i8** @padding_buffer, align 8, !dbg !737, !tbaa !692\l  %120 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0, !dbg\l... !738\l  %121 = call i8* @strcpy(i8* %119, i8* %120) #12, !dbg !739\l  br label %122\l}"];
	Node0xb80db0 -> Node0xb80e00;
	Node0xb80e00 [shape=record,label="{%122:\l\l  store i32 1, i32* %3, align 4, !dbg !740\l  store i32 1, i32* %9, align 4\l  br label %123, !dbg !740\l}"];
	Node0xb80e00 -> Node0xb80e50;
	Node0xb80e50 [shape=record,label="{%123:\l\l  %124 = bitcast i32* %8 to i8*, !dbg !741\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %124) #12, !dbg !741\l  %125 = bitcast i64* %7 to i8*, !dbg !741\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #12, !dbg !741\l  %126 = bitcast [128 x i8]* %6 to i8*, !dbg !741\l  call void @llvm.lifetime.end.p0i8(i64 128, i8* %126) #12, !dbg !741\l  %127 = load i32, i32* %3, align 4, !dbg !741\l  ret i32 %127, !dbg !741\l}"];
}
