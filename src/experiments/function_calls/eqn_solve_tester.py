import sympy
from sympy import symbols, sqrt, discriminant, Poly
from metric import cyclomatic_complexity, npath_complexity, path_complexity, fcn_call_path_complexity, eqn_solve_tests
from core.log import Log, LogLevel

x = sympy.symbols('x')

def taylor_expansion(f, x0, n):
    """
    Compute the Taylor series expansion of function f around x0 up to order n.

    Args:
        f (Sympy function): The function to expand.
        x0 (float): The point around which to expand the function.
        n (int): The order of the expansion.

    Returns:
        A Sympy expression representing the Taylor series expansion.
    """

    taylor = 0
    for i in range(n+1):
        taylor += (f.diff(x, i).subs(x, x0)) / \
            sympy.factorial(i) * (x - x0) ** i

    coeffs_dict = taylor.as_coefficients_dict()
    # get coeffs in a list of increasing degree
    coeffs_list = [coeffs_dict.get(x**i, 0) for i in range(n+1)]
    return coeffs_list

    # return taylor

def list_symbols(full_sys):
    symbols_set = set()
    for eqn in full_sys:
        symbols_set |= set(eqn.free_symbols - {x})
    symbs = list(symbols_set)
    # ensure T0 is first symbol
    symbs.remove(T0)
    symbs.insert(0, T0)
    # ensure T1 is second symbol
    if T1 in symbs:
        symbs.remove(T1)
        symbs.insert(1, T1)
    
    return symbs

def find_taylor_coeffs():
    f = x**5 / ((x - 1) * (x**5 - 1))
    f = x**4 / ((x - 1) * (x**7 - 1))
    f = (x**4 + x**8) / ((1 - x) * (1 - x**8))
    f = 1 / (x**4 * (1-x))
    f = (-sqrt((x + 1)*(2*x**6 + 2*x**5 - 1)*(4*x**17 + 2*x**15 - 4*x**13 - 4*x**12 + 2*x**11 + 8*x**10 + x**9 - 3*x**8 - 3*x**7 + x**6 - 2*x**4 + x**3 + x**2 + x - 1))*(x - 1)**2*(x**2 + x + 1)/(2*x**15) - (x - 1)**4*(x + 1)*(x**2 + x + 1)**2*(2*x**6 + 2*x**5 - 1)/(2*x**15))/(1 - x)
    f = (-x**3 - sqrt(4*x**11 - 4*x**8 + x**6 - 2*x**3 + 1) + 1)/(2*x**6*(1 - x))


    # Compute the Taylor series expansion of f(x) around x0 = 0 up to order n = 5
    x0 = 0
    n = 15
    taylor_series = taylor_expansion(f, x0, n)
    print(taylor_series)
    quit()


if __name__ == '__main__':
    # find_taylor_coeffs()

    T, T0, T1, T2, V0_0, V0_1, V0_2, V0_3, V0_4, V0_5, V0_6, V0_7, V0_8, V0_9, V0_10, V0_11, V0_12, V0_13, V0_14, V0_15, V0_16, V0_17, V0_18, V0_19, V0_20, V1_0, V1_1, V1_2, V1_3, V1_4, V1_5, V1_6, V1_7, V1_8, V1_9, V1_10, V1_11, V1_12, V1_13, V1_14, V1_15, V1_16, V1_17, V1_18, V1_19, V1_20, V1_21, V2_0, V2_1, V2_2, V2_3, x = symbols('T, T0 T1 T2 V0_0 V0_1 V0_2 V0_3 V0_4 V0_5 V0_6 V0_7 V0_8 V0_9 V0_10 V0_11 V0_12 V0_13 V0_14 V0_15 V0_16 V0_17 V0_18 V0_19 V0_20 V1_0 V1_1 V1_2 V1_3 V1_4 V1_5 V1_6 V1_7 V1_8 V1_9 V1_10 V1_11 V1_12 V1_13 V1_14 V1_15 V1_16 V1_17 V1_18 V1_19 V1_20 V1_21 V2_0 V2_1 V2_2 V2_3 x')

    full_sys = [-T0 + V0_0*x, -T1 + V1_0*x, T1*V0_1*x - V0_0, -V0_1 + x, -V1_0 + V1_1*x + V1_2*x, -V1_1 + x, T1*x - V1_2]
    full_sys = [-T0 + T1*x**3, -T1 + x**3 + T1*x**3]
    full_sys = [-T0 + T1**3*x**3, -T1 + x**3 + T1*x**3]
    full_sys = [-T0 + x**4 + x**8 + T0 * x**8]
    
    # mergeSort, but it calls fact() instead of merge -> ComplexInfinity 
    full_sys = [-T0 + V0_0*x, -T1 + V1_0*x, -V0_0 + V0_1*x + x, T0**2*T1*x - V0_1, -V1_0 + V1_1*x + V1_2*x, -V1_1 + x, T1*x - V1_2]

    # medley of fact and fib
    full_sys = [-T0 + V0_0*x, -T1 + V1_0*x, -T2 + V2_0*x, -T0 + T1*T2*x, -V1_0 + V1_1*x + V1_2*x, -V1_1 + x, T1*x - V1_2, -V2_0 + V2_1*x, -V2_1 + V2_2*x + x, -V2_2 + V2_3*x, V2_1*x - V2_3]

    # mergeSort
    # full_sys = [-T0 + V0_0*x, -T1 + V1_0*x, -V0_0 + V0_1*x + x, T0**2*T1*x - V0_1, -V1_0 + V1_1*x, -V1_1 + V1_2*x + V1_4*x, -V1_2 + V1_3*x, V1_1*x - V1_3, -V1_4 + V1_5*x, -V1_5 + V1_6*x + V1_8*x, -V1_6 + V1_7*x, V1_5*x - V1_7, -V1_8 + V1_9*x, V1_10*x + V1_11*x - V1_9, -V1_10 + V1_11*x, -V1_11 + V1_12*x + V1_16*x, -V1_12 + V1_13*x + V1_14*x, -V1_13 + V1_15*x, -V1_14 + V1_15*x, -V1_15 + V1_9*x, -V1_16 + V1_17*x, -V1_17 + V1_18*x + V1_19*x, V1_17*x - V1_18, -V1_19 + V1_20*x, -V1_20 + V1_21*x + x, V1_20*x - V1_21]
    
    symbs = list_symbols(full_sys)

    

    # print('SYMBOLS', symbs)
    # print('SYSTEM', full_sys)



    log = Log(log_level=LogLevel.DEBUG)
    eqnSolverTest = eqn_solve_tests.EqnSolverTest(log)
    # print(eqnSolverTest.fcn_call_apc(full_sys, symbs))

    gen = (-sqrt((x + 1)*(2*x**6 + 2*x**5 - 1)*(4*x**17 + 2*x**15 - 4*x**13 - 4*x**12 + 2*x**11 + 8*x**10 + x**9 - 3*x**8 - 3*x**7 + x**6 - 2*x**4 + x**3 + x**2 + x - 1))*(x - 1)**2*(x**2 + x + 1)/(2*x**15) - (x - 1)**4*(x + 1)*(x**2 + x + 1)**2*(2*x**6 + 2*x**5 - 1)/(2*x**15))/(1 - x)

    # discrim_merge = -(-16*T**7*x**108 - 48*T**7*x**107 + 112*T**7*x**106 + 528*T**7*x**105 - 112*T**7*x**104 - 2776*T**7*x**103 - 2232*T**7*x**102 + 8424*T**7*x**101 + 15640*T**7*x**100 - 11032*T**7*x**99 - 53844*T**7*x**98 - 22308*T**7*x**97 + 103172*T**7*x**96 + 140148*T**7*x**95 - 72508*T**7*x**94 - 307218*T**7*x**93 - 145634*T**7*x**92 + 322974*T**7*x**91 + 449510*T**7*x**90 - 29766*T**7*x**89 - 492434*T**7*x**88 - 330968*T**7*x**87 + 148500*T**7*x**86 + 306444*T**7*x**85 + 150924*T**7*x**84 + 62446*T**7*x**83 + 10318*T**7*x**82 - 207396*T**7*x**81 - 343532*T**7*x**80 - 76324*T**7*x**79 + 312680*T**7*x**78 + 318112*T**7*x**77 + 780*T**7*x**76 - 188886*T**7*x**75 - 126030*T**7*x**74 - 34018*T**7*x**73 - 6550*T**7*x**72 + 42794*T**7*x**71 + 97738*T**7*x**70 + 58874*T**7*x**69 - 39526*T**7*x**68 - 73460*T**7*x**67 - 25868*T**7*x**66 + 19112*T**7*x**65 + 20680*T**7*x**64 + 7900*T**7*x**63 + 3272*T**7*x**62 - 290*T**7*x**61 - 6070*T**7*x**60 - 6220*T**7*x**59 - 356*T**7*x**58 + 3492*T**7*x**57 + 2204*T**7*x**56 - 326*T**7*x**55 - 954*T**7*x**54 - 314*T**7*x**53 + 126*T**7*x**52 + 114*T**7*x**51 + 14*T**7*x**50 - 12*T**7*x**49 - 4*T**7*x**48 + 16*T**6*x**112 + 32*T**6*x**111 - 208*T**6*x**110 - 544*T**6*x**109 + 1088*T**6*x**108 + 4384*T**6*x**107 - 1760*T**6*x**106 - 21648*T**6*x**105 - 12192*T**6*x**104 + 68480*T**6*x**103 + 101288*T**6*x**102 - 119408*T**6*x**101 - 388192*T**6*x**100 - 29016*T**6*x**99 + 901632*T**6*x**98 + 831488*T**6*x**97 - 1148952*T**6*x**96 - 2529460*T**6*x**95 - 32328*T**6*x**94 + 4098448*T**6*x**93 + 3245593*T**6*x**92 - 3216454*T**6*x**91 - 6515599*T**6*x**90 - 974924*T**6*x**89 + 6092548*T**6*x**88 + 4991382*T**6*x**87 - 1513772*T**6*x**86 - 3998590*T**6*x**85 - 1808558*T**6*x**84 - 899556*T**6*x**83 - 864173*T**6*x**82 + 2601550*T**6*x**81 + 5839355*T**6*x**80 + 1848504*T**6*x**79 - 5609482*T**6*x**78 - 6205160*T**6*x**77 + 314809*T**6*x**76 + 4488346*T**6*x**75 + 2654987*T**6*x**74 + 65544*T**6*x**73 - 332362*T**6*x**72 - 1036474*T**6*x**71 - 2374342*T**6*x**70 - 1380678*T**6*x**69 + 1561003*T**6*x**68 + 2522126*T**6*x**67 + 588910*T**6*x**66 - 1150770*T**6*x**65 - 955285*T**6*x**64 - 183550*T**6*x**63 + 11626*T**6*x**62 + 110618*T**6*x**61 + 405590*T**6*x**60 + 365080*T**6*x**59 - 90693*T**6*x**58 - 348550*T**6*x**57 - 162891*T**6*x**56 + 82476*T**6*x**55 + 106202*T**6*x**54 + 28508*T**6*x**53 + 755*T**6*x**52 - 114*T**6*x**51 - 16817*T**6*x**50 - 23052*T**6*x**49 - 3514*T**6*x**48 + 13322*T**6*x**47 + 9352*T**6*x**46 - 1554*T**6*x**45 - 4476*T**6*x**44 - 1324*T**6*x**43 + 857*T**6*x**42 + 650*T**6*x**41 + 13*T**6*x**40 - 120*T**6*x**39 - 32*T**6*x**38 + 8*T**6*x**37 + 4*T**6*x**36 - 256*T**5*x**116 - 256*T**5*x**115 + 4480*T**5*x**114 + 6400*T**5*x**113 - 36160*T**5*x**112 - 74432*T**5*x**111 + 166464*T**5*x**110 + 533440*T**5*x**109 - 366976*T**5*x**108 - 2602144*T**5*x**107 - 689568*T**5*x**106 + 8835424*T**5*x**105 + 9577632*T**5*x**104 - 19505312*T**5*x**103 - 43681744*T**5*x**102 + 16924720*T**5*x**101 + 124222640*T**5*x**100 + 60202736*T**5*x**99 - 228633696*T**5*x**98 - 307464920*T**5*x**97 + 209589880*T**5*x**96 + 732143128*T**5*x**95 + 192764704*T**5*x**94 - 1054192920*T**5*x**93 - 1071628664*T**5*x**92 + 742626144*T**5*x**91 + 1958140912*T**5*x**90 + 416769032*T**5*x**89 - 1966245480*T**5*x**88 - 1687295856*T**5*x**87 + 813474992*T**5*x**86 + 1827230760*T**5*x**85 + 392009464*T**5*x**84 - 677961272*T**5*x**83 - 187005448*T**5*x**82 - 193383768*T**5*x**81 - 1172557584*T**5*x**80 - 625017304*T**5*x**79 + 1694247048*T**5*x**78 + 2223801608*T**5*x**77 - 372826680*T**5*x**76 - 2433347888*T**5*x**75 - 1206346344*T**5*x**74 + 960441512*T**5*x**73 + 1116406000*T**5*x**72 + 197639920*T**5*x**71 + 133689400*T**5*x**70 + 232991728*T**5*x**69 - 594082704*T**5*x**68 - 1135170416*T**5*x**67 - 166403784*T**5*x**66 + 1033632552*T**5*x**65 + 812575208*T**5*x**64 - 209486168*T**5*x**63 - 539681560*T**5*x**62 - 184738256*T**5*x**61 - 8404368*T**5*x**60 - 57570800*T**5*x**59 + 93363144*T**5*x**58 + 283029848*T**5*x**57 + 131414784*T**5*x**56 - 170964376*T**5*x**55 - 207172952*T**5*x**54 - 16238288*T**5*x**53 + 89537504*T**5*x**52 + 46894736*T**5*x**51 + 5160680*T**5*x**50 + 9553560*T**5*x**49 - 1876376*T**5*x**48 - 28980568*T**5*x**47 - 23080480*T**5*x**46 + 8336040*T**5*x**45 + 20236880*T**5*x**44 + 6380128*T**5*x**43 - 5733368*T**5*x**42 - 4617376*T**5*x**41 - 481064*T**5*x**40 + 18408*T**5*x**39 - 180928*T**5*x**38 + 771448*T**5*x**37 + 1029736*T**5*x**36 + 49560*T**5*x**35 - 636408*T**5*x**34 - 353728*T**5*x**33 + 127208*T**5*x**32 + 198880*T**5*x**31 + 35120*T**5*x**30 - 50200*T**5*x**29 - 27632*T**5*x**28 + 3600*T**5*x**27 + 7176*T**5*x**26 + 1256*T**5*x**25 - 864*T**5*x**24 - 352*T**5*x**23 + 32*T**5*x**22 + 32*T**5*x**21 - 128*T**4*x**118 - 128*T**4*x**117 + 1984*T**4*x**116 + 2944*T**4*x**115 - 12992*T**4*x**114 - 29504*T**4*x**113 + 37504*T**4*x**112 + 165312*T**4*x**111 + 46784*T**4*x**110 - 499456*T**4*x**109 - 882688*T**4*x**108 + 130784*T**4*x**107 + 3467808*T**4*x**106 + 6278368*T**4*x**105 - 3272288*T**4*x**104 - 31044192*T**4*x**103 - 31344528*T**4*x**102 + 70542880*T**4*x**101 + 185763536*T**4*x**100 - 10623232*T**4*x**99 - 535922856*T**4*x**98 - 506214752*T**4*x**97 + 832852780*T**4*x**96 + 1941272448*T**4*x**95 - 52059708*T**4*x**94 - 3997006676*T**4*x**93 - 3315208020*T**4*x**92 + 4448583372*T**4*x**91 + 9238244464*T**4*x**90 + 193126800*T**4*x**89 - 13722015956*T**4*x**88 - 10524995196*T**4*x**87 + 10438340140*T**4*x**86 + 20192214812*T**4*x**85 + 1765974520*T**4*x**84 - 19749449080*T**4*x**83 - 13546828896*T**4*x**82 + 8509146344*T**4*x**81 + 13125937184*T**4*x**80 + 633313260*T**4*x**79 - 2342518688*T**4*x**78 + 4460501724*T**4*x**77 - 2291694864*T**4*x**76 - 17118953944*T**4*x**75 - 8966145856*T**4*x**74 + 18383331408*T**4*x**73 + 23469871304*T**4*x**72 - 3646019428*T**4*x**71 - 22589502412*T**4*x**70 - 9526301432*T**4*x**69 + 8523694824*T**4*x**68 + 6468660984*T**4*x**67 - 582046016*T**4*x**66 + 4141164876*T**4*x**65 + 6578230912*T**4*x**64 - 5302082308*T**4*x**63 - 13770234588*T**4*x**62 - 3280406244*T**4*x**61 + 10565177680*T**4*x**60 + 8352462324*T**4*x**59 - 2283756172*T**4*x**58 - 4653182936*T**4*x**57 - 526122168*T**4*x**56 - 233959320*T**4*x**55 - 2248485932*T**4*x**54 + 84373764*T**4*x**53 + 3782175236*T**4*x**52 + 2378057228*T**4*x**51 - 1861448172*T**4*x**50 - 2648035092*T**4*x**49 - 199788468*T**4*x**48 + 1026718888*T**4*x**47 + 281859908*T**4*x**46 - 54453164*T**4*x**45 + 401296656*T**4*x**44 + 250768164*T**4*x**43 - 450322580*T**4*x**42 - 517686492*T**4*x**41 + 62888532*T**4*x**40 + 348277444*T**4*x**39 + 117424824*T**4*x**38 - 89126752*T**4*x**37 - 44586040*T**4*x**36 + 13473868*T**4*x**35 - 25888352*T**4*x**34 - 38736160*T**4*x**33 + 14585200*T**4*x**32 + 41461660*T**4*x**31 + 10565644*T**4*x**30 - 17990080*T**4*x**29 - 11955548*T**4*x**28 + 2467972*T**4*x**27 + 3782084*T**4*x**26 - 224300*T**4*x**25 - 147904*T**4*x**24 + 1215620*T**4*x**23 + 318516*T**4*x**22 - 943832*T**4*x**21 - 635788*T**4*x**20 + 235976*T**4*x**19 + 394948*T**4*x**18 + 58912*T**4*x**17 - 121800*T**4*x**16 - 61788*T**4*x**15 + 15144*T**4*x**14 + 20664*T**4*x**13 + 2352*T**4*x**12 - 3600*T**4*x**11 - 1252*T**4*x**10 + 288*T**4*x**9 + 208*T**4*x**8 - 16*T**4*x**6 + 512*T**3*x**120 + 512*T**3*x**119 - 10624*T**3*x**118 - 16128*T**3*x**117 + 96384*T**3*x**116 + 213248*T**3*x**115 - 463488*T**3*x**114 - 1618816*T**3*x**113 + 884352*T**3*x**112 + 7882624*T**3*x**111 + 3407360*T**3*x**110 - 25147072*T**3*x**109 - 32765120*T**3*x**108 + 47223616*T**3*x**107 + 130234816*T**3*x**106 - 12414464*T**3*x**105 - 319936928*T**3*x**104 - 230915008*T**3*x**103 + 479037088*T**3*x**102 + 821231360*T**3*x**101 - 238625056*T**3*x**100 - 1572005552*T**3*x**99 - 778141688*T**3*x**98 + 1768175200*T**3*x**97 + 2312984456*T**3*x**96 - 683013712*T**3*x**95 - 3175715088*T**3*x**94 - 1288572152*T**3*x**93 + 2277060464*T**3*x**92 + 2388947304*T**3*x**91 - 324561472*T**3*x**90 - 1341681024*T**3*x**89 - 348002944*T**3*x**88 - 552783808*T**3*x**87 - 1353512816*T**3*x**86 + 522463152*T**3*x**85 + 3296930160*T**3*x**84 + 1888366592*T**3*x**83 - 2630920248*T**3*x**82 - 3730151296*T**3*x**81 - 92514504*T**3*x**80 + 2620120272*T**3*x**79 + 1479310464*T**3*x**78 - 200466456*T**3*x**77 - 145149008*T**3*x**76 - 335770072*T**3*x**75 - 1490356728*T**3*x**74 - 1145351872*T**3*x**73 + 1077783992*T**3*x**72 + 2041891888*T**3*x**71 + 445520064*T**3*x**70 - 1166334104*T**3*x**69 - 906677184*T**3*x**68 - 8267672*T**3*x**67 + 158650688*T**3*x**66 + 107428608*T**3*x**65 + 384994864*T**3*x**64 + 390716256*T**3*x**63 - 153903056*T**3*x**62 - 499316240*T**3*x**61 - 207308000*T**3*x**60 + 188677168*T**3*x**59 + 200692056*T**3*x**58 + 30046672*T**3*x**57 - 20160072*T**3*x**56 - 6486304*T**3*x**55 - 42953472*T**3*x**54 - 59420344*T**3*x**53 - 988720*T**3*x**52 + 49413848*T**3*x**51 + 29769152*T**3*x**50 - 10904544*T**3*x**49 - 17892048*T**3*x**48 - 3856832*T**3*x**47 + 2117312*T**3*x**46 + 421728*T**3*x**45 + 1112992*T**3*x**44 + 2542784*T**3*x**43 + 757344*T**3*x**42 - 1559024*T**3*x**41 - 1301584*T**3*x**40 + 182416*T**3*x**39 + 658160*T**3*x**38 + 194208*T**3*x**37 - 152960*T**3*x**36 - 111184*T**3*x**35 + 5488*T**3*x**34 + 27360*T**3*x**33 + 5984*T**3*x**32 - 3264*T**3*x**31 - 1472*T**3*x**30 + 128*T**3*x**29 + 128*T**3*x**28 + 384*T**2*x**122 + 384*T**2*x**121 - 7168*T**2*x**120 - 11008*T**2*x**119 + 56320*T**2*x**118 + 130240*T**2*x**117 - 206016*T**2*x**116 - 843136*T**2*x**115 - 3328*T**2*x**114 + 3104704*T**2*x**113 + 3615168*T**2*x**112 - 4696512*T**2*x**111 - 16680896*T**2*x**110 - 12843520*T**2*x**109 + 27422528*T**2*x**108 + 89915488*T**2*x**107 + 61714976*T**2*x**106 - 201805568*T**2*x**105 - 477232128*T**2*x**104 - 9708896*T**2*x**103 + 1294038008*T**2*x**102 + 1422746808*T**2*x**101 - 1605084384*T**2*x**100 - 4674732912*T**2*x**99 - 1022373120*T**2*x**98 + 8056202428*T**2*x**97 + 8712345316*T**2*x**96 - 6357926360*T**2*x**95 - 18774049072*T**2*x**94 - 5109870052*T**2*x**93 + 21964599216*T**2*x**92 + 22291128520*T**2*x**91 - 10488980620*T**2*x**90 - 30966035256*T**2*x**89 - 9198004276*T**2*x**88 + 21059838952*T**2*x**87 + 17692556008*T**2*x**86 - 3335688804*T**2*x**85 - 5279207808*T**2*x**84 + 1464992680*T**2*x**83 - 10731007908*T**2*x**82 - 20912560928*T**2*x**81 + 4777297500*T**2*x**80 + 36806605920*T**2*x**79 + 20670260192*T**2*x**78 - 25679384076*T**2*x**77 - 34941101112*T**2*x**76 - 183347880*T**2*x**75 + 21439138956*T**2*x**74 + 8974409596*T**2*x**73 - 1183252504*T**2*x**72 + 5382485576*T**2*x**71 + 1125637816*T**2*x**70 - 17221546488*T**2*x**69 - 16174672192*T**2*x**68 + 9201209784*T**2*x**67 + 21599307896*T**2*x**66 + 5360921484*T**2*x**65 - 11041400436*T**2*x**64 - 7516063632*T**2*x**63 + 740371136*T**2*x**62 - 329733860*T**2*x**61 - 1499623056*T**2*x**60 + 4110157904*T**2*x**59 + 6318361100*T**2*x**58 - 488401344*T**2*x**57 - 6048916820*T**2*x**56 - 2987385640*T**2*x**55 + 2061111272*T**2*x**54 + 2138298380*T**2*x**53 + 37810160*T**2*x**52 + 2317936*T**2*x**51 + 562930156*T**2*x**50 - 376048408*T**2*x**49 - 1194123228*T**2*x**48 - 344155536*T**2*x**47 + 748435056*T**2*x**46 + 581364444*T**2*x**45 - 126376424*T**2*x**44 - 259543128*T**2*x**43 - 19537228*T**2*x**42 + 12946956*T**2*x**41 - 74230576*T**2*x**40 - 10989720*T**2*x**39 + 91724512*T**2*x**38 + 56373112*T**2*x**37 - 34625616*T**2*x**36 - 45321128*T**2*x**35 - 1646816*T**2*x**34 + 15314976*T**2*x**33 + 3280112*T**2*x**32 - 2383688*T**2*x**31 + 1783584*T**2*x**30 + 1871256*T**2*x**29 - 1884352*T**2*x**28 - 2256824*T**2*x**27 + 237888*T**2*x**26 + 1266224*T**2*x**25 + 379184*T**2*x**24 - 358864*T**2*x**23 - 253344*T**2*x**22 + 30208*T**2*x**21 + 78144*T**2*x**20 + 13832*T**2*x**19 - 13184*T**2*x**18 - 5424*T**2*x**17 + 1024*T**2*x**16 + 864*T**2*x**15 - 64*T**2*x**13 + 256*T*x**120 + 512*T*x**119 - 4352*T*x**118 - 11776*T*x**117 + 28672*T*x**116 + 120064*T*x**115 - 55168*T*x**114 - 703360*T*x**113 - 453376*T*x**112 + 2487680*T*x**111 + 4149120*T*x**110 - 4467968*T*x**109 - 17168000*T*x**108 - 3247104*T*x**107 + 42374336*T*x**106 + 46098752*T*x**105 - 55632064*T*x**104 - 145771328*T*x**103 - 13927232*T*x**102 + 256836256*T*x**101 + 232752240*T*x**100 - 226457056*T*x**99 - 522655632*T*x**98 - 81583616*T*x**97 + 608339472*T*x**96 + 529147200*T*x**95 - 283640024*T*x**94 - 690040120*T*x**93 - 202060768*T*x**92 + 340442592*T*x**91 + 280853800*T*x**90 + 93332096*T*x**89 + 178644816*T*x**88 + 29247608*T*x**87 - 535851008*T*x**86 - 620048184*T*x**85 + 209785552*T*x**84 + 872749424*T*x**83 + 419178952*T*x**82 - 424063712*T*x**81 - 528203408*T*x**80 - 94147448*T*x**79 + 76687728*T*x**78 + 34583016*T*x**77 + 208037888*T*x**76 + 335893488*T*x**75 + 10105000*T*x**74 - 390079952*T*x**73 - 289192896*T*x**72 + 107798184*T*x**71 + 233621624*T*x**70 + 71331360*T*x**69 - 23269280*T*x**68 + 1304192*T*x**67 - 33457952*T*x**66 - 96467808*T*x**65 - 42599536*T*x**64 + 67409808*T*x**63 + 76052392*T*x**62 + 172824*T*x**61 - 36412544*T*x**60 - 14279392*T*x**59 + 1441528*T*x**58 - 4308864*T*x**57 - 1127888*T*x**56 + 10636744*T*x**55 + 8800528*T*x**54 - 3383224*T*x**53 - 7225296*T*x**52 - 1535408*T*x**51 + 2225800*T*x**50 + 1034112*T*x**49 - 204880*T*x**48 + 202600*T*x**47 + 311360*T*x**46 - 274952*T*x**45 - 421152*T*x**44 - 12912*T*x**43 + 219960*T*x**42 + 93584*T*x**41 - 50688*T*x**40 - 48616*T*x**39 - 328*T*x**38 + 12144*T*x**37 + 3120*T*x**36 - 1504*T*x**35 - 736*T*x**34 + 64*T*x**33 + 64*T*x**32 - 256*x**124 - 256*x**123 + 5632*x**122 + 8704*x**121 - 55040*x**120 - 125312*x**119 + 289792*x**118 + 1045248*x**117 - 626944*x**116 - 5645312*x**115 - 2428288*x**114 + 20190784*x**113 + 27103488*x**112 - 43283712*x**111 - 122537856*x**110 + 17080768*x**109 + 344574912*x**108 + 252482432*x**107 - 599842432*x**106 - 1059587648*x**105 + 381174448*x**104 + 2386238224*x**103 + 1188365664*x**102 - 3222092064*x**101 - 4401049392*x**100 + 1657134088*x**99 + 7536680544*x**98 + 3138402224*x**97 - 7221126672*x**96 - 8432359872*x**95 + 2119551952*x**94 + 9151790620*x**93 + 3541974496*x**92 - 4015906624*x**91 - 3164910160*x**90 - 634890552*x**89 - 3330821124*x**88 - 2590134752*x**87 + 7065982176*x**86 + 11204682452*x**85 - 1186405592*x**84 - 14150048320*x**83 - 8338246744*x**82 + 6840908724*x**81 + 9753090324*x**80 + 1401725048*x**79 - 2260672000*x**78 - 379947812*x**77 - 2879949932*x**76 - 6431475896*x**75 - 875414408*x**74 + 8118312420*x**73 + 6739499180*x**72 - 2715938520*x**71 - 6317383376*x**70 - 1752451232*x**69 + 1529475988*x**68 + 566173928*x**67 + 617309096*x**66 + 2280965604*x**65 + 1116731648*x**64 - 2188609848*x**63 - 2578980672*x**62 + 181089092*x**61 + 1697016260*x**60 + 668938768*x**59 - 286377696*x**58 - 57332032*x**57 + 12688516*x**56 - 441346096*x**55 - 384504128*x**54 + 241955844*x**53 + 454243456*x**52 + 68959344*x**51 - 203766376*x**50 - 95782132*x**49 + 29358212*x**48 - 3499416*x**47 - 22489536*x**46 + 33577668*x**45 + 46747308*x**44 - 6257624*x**43 - 34215336*x**42 - 10472972*x**41 + 11318564*x**40 + 6579608*x**39 - 1868336*x**38 - 600248*x**37 + 1500820*x**36 - 467360*x**35 - 1707528*x**34 - 263540*x**33 + 913240*x**32 + 464728*x**31 - 229584*x**30 - 248352*x**29 + 508*x**28 + 72128*x**27 + 18208*x**26 - 11840*x**25 - 5856*x**24 + 896*x**23 + 896*x**22 - 64*x**20)/(T**10*(-2*x**25 + 12*x**23 + 4*x**22 - 28*x**21 - 23*x**20 + 30*x**19 + 50*x**18 - 8*x**17 - 50*x**16 - 12*x**15 + 21*x**14 + 4*x**13 - 5*x**12 + 14*x**11 + 12*x**10 - 14*x**9 - 16*x**8 + 4*x**7 + 9*x**6 - 2*x**4))

    # eqnSolverTest.realnroots(discrim_merge)

    gamma = -2*T0**3*x**25/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 12*T0**3*x**23/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 4*T0**3*x**22/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 28*T0**3*x**21/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 23*T0**3*x**20/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 30*T0**3*x**19/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 50*T0**3*x**18/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 8*T0**3*x**17/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 50*T0**3*x**16/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 12*T0**3*x**15/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 21*T0**3*x**14/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 4*T0**3*x**13/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 5*T0**3*x**12/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 14*T0**3*x**11/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 12*T0**3*x**10/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 14*T0**3*x**9/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 16*T0**3*x**8/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 4*T0**3*x**7/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 9*T0**3*x**6/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 2*T0**3*x**4/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 2*T0**2*x**27/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 12*T0**2*x**25/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - T0**2*x**25/(x**5 - 2*x**3 + x) - 4*T0**2*x**24/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 28*T0**2*x**23/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 4*T0**2*x**23/(x**5 - 2*x**3 + x) + 23*T0**2*x**22/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 30*T0**2*x**21/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 5*T0**2*x**21/(x**5 - 2*x**3 + x) + T0**2*x**20 - 50*T0**2*x**20/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 8*T0**2*x**19/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 2*T0**2*x**19/(x**5 - 2*x**3 + x) - 2*T0**2*x**18 + 50*T0**2*x**18/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 12*T0**2*x**17/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + T0**2*x**16 - 21*T0**2*x**16/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + T0**2*x**15 - 4*T0**2*x**15/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 5*T0**2*x**14/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 14*T0**2*x**13/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 12*T0**2*x**12/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 14*T0**2*x**11/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 16*T0**2*x**10/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 4*T0**2*x**9/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) - 9*T0**2*x**8/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 2*T0**2*x**6/(T0**2*x**5 - 2*T0**2*x**3 + T0**2*x) + 2*T0*x**20 - 8*T0*x**18 - 4*T0*x**17 + 12*T0*x**16 + 17*T0*x**15 - 6*T0*x**14 - 24*T0*x**13 - 8*T0*x**12 + 13*T0*x**11 + 11*T0*x**10 - T0*x**9 + 2*T0*x**7 - 3*T0*x**6 - 7*T0*x**5 - T0*x**4 + 4*T0*x**3 + 2*T0*x**2 - T0 - 2*x**22 + 8*x**20 + 4*x**19 - 12*x**18 - 17*x**17 + 6*x**16 + 24*x**15 + 8*x**14 - 13*x**13 - 11*x**12 + x**11 - 2*x**9 + 3*x**8 + 7*x**7 + x**6 - 4*x**5 - 2*x**4 + x**2

    # gamma = T0**2*x**6 - T0 + x**2 + 1 - 2*x**2/T0 + x**4/T0**2
    # gamma = T0**4*x**6 - T0**3 + T0**2*x**2 + T0**2 - 2*T0*x**2 + x**4
    gamma = sympy.fraction(sympy.together(gamma))[0]
    print(discriminant(gamma, T0))
    # print(eqnSolverTest.calculateDiscrim(gamma))

    print()

    