digraph "CFG for 'rpl_mbrtoc32' function" {
	label="CFG for 'rpl_mbrtoc32' function";

	Node0x19d1670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca i32*, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca %struct.__mbstate_t*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i32, align 4\l  store i32* %0, i32** %6, align 8, !tbaa !710\l  call void @llvm.dbg.declare(metadata i32** %6, metadata !705, metadata\l... !DIExpression()), !dbg !714\l  store i8* %1, i8** %7, align 8, !tbaa !710\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !706, metadata\l... !DIExpression()), !dbg !715\l  store i64 %2, i64* %8, align 8, !tbaa !716\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !707, metadata\l... !DIExpression()), !dbg !718\l  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %9, align 8, !tbaa !710\l  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %9, metadata\l... !708, metadata !DIExpression()), !dbg !719\l  %12 = load i8*, i8** %7, align 8, !dbg !720, !tbaa !710\l  %13 = icmp eq i8* %12, null, !dbg !722\l  br i1 %13, label %14, label %15, !dbg !723\l|{<s0>T|<s1>F}}"];
	Node0x19d1670:s0 -> Node0x19d2bb0;
	Node0x19d1670:s1 -> Node0x19d2c00;
	Node0x19d2bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%14:\l14:                                               \l  store i32* null, i32** %6, align 8, !dbg !724, !tbaa !710\l  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.176, i64 0, i64\l... 0), i8** %7, align 8, !dbg !726, !tbaa !710\l  store i64 1, i64* %8, align 8, !dbg !727, !tbaa !716\l  br label %15, !dbg !728\l}"];
	Node0x19d2bb0 -> Node0x19d2c00;
	Node0x19d2c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  %16 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8, !dbg\l... !729, !tbaa !710\l  %17 = icmp eq %struct.__mbstate_t* %16, null, !dbg !731\l  br i1 %17, label %18, label %19, !dbg !732\l|{<s0>T|<s1>F}}"];
	Node0x19d2c00:s0 -> Node0x19d2c50;
	Node0x19d2c00:s1 -> Node0x19d2ca0;
	Node0x19d2c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%18:\l18:                                               \l  store %struct.__mbstate_t* @internal_state, %struct.__mbstate_t** %9, align\l... 8, !dbg !733, !tbaa !710\l  br label %19, !dbg !734\l}"];
	Node0x19d2c50 -> Node0x19d2ca0;
	Node0x19d2ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = bitcast i64* %10 to i8*, !dbg !735\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #22, !dbg !735\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !709, metadata\l... !DIExpression()), !dbg !736\l  %21 = load i32*, i32** %6, align 8, !dbg !737, !tbaa !710\l  %22 = load i8*, i8** %7, align 8, !dbg !738, !tbaa !710\l  %23 = load i64, i64* %8, align 8, !dbg !739, !tbaa !716\l  %24 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8, !dbg\l... !740, !tbaa !710\l  %25 = call i64 @mbrtoc32(i32* noundef %21, i8* noundef %22, i64 noundef %23,\l... %struct.__mbstate_t* noundef %24) #22, !dbg !741\l  store i64 %25, i64* %10, align 8, !dbg !736, !tbaa !716\l  %26 = load i64, i64* %10, align 8, !dbg !742, !tbaa !716\l  %27 = icmp ule i64 -2, %26, !dbg !744\l  br i1 %27, label %28, label %42, !dbg !745\l|{<s0>T|<s1>F}}"];
	Node0x19d2ca0:s0 -> Node0x19d2cf0;
	Node0x19d2ca0:s1 -> Node0x19d2e80;
	Node0x19d2cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%28:\l28:                                               \l  %29 = load i64, i64* %8, align 8, !dbg !746, !tbaa !716\l  %30 = icmp ne i64 %29, 0, !dbg !747\l  br i1 %30, label %31, label %42, !dbg !748\l|{<s0>T|<s1>F}}"];
	Node0x19d2cf0:s0 -> Node0x19d2d40;
	Node0x19d2cf0:s1 -> Node0x19d2e80;
	Node0x19d2d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%31:\l31:                                               \l  %32 = call zeroext i1 @hard_locale(i32 noundef 0), !dbg !749\l  br i1 %32, label %42, label %33, !dbg !750\l|{<s0>T|<s1>F}}"];
	Node0x19d2d40:s0 -> Node0x19d2e80;
	Node0x19d2d40:s1 -> Node0x19d2d90;
	Node0x19d2d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%33:\l33:                                               \l  %34 = load i32*, i32** %6, align 8, !dbg !751, !tbaa !710\l  %35 = icmp ne i32* %34, null, !dbg !754\l  br i1 %35, label %36, label %41, !dbg !755\l|{<s0>T|<s1>F}}"];
	Node0x19d2d90:s0 -> Node0x19d2de0;
	Node0x19d2d90:s1 -> Node0x19d2e30;
	Node0x19d2de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%36:\l36:                                               \l  %37 = load i8*, i8** %7, align 8, !dbg !756, !tbaa !710\l  %38 = load i8, i8* %37, align 1, !dbg !757, !tbaa !758\l  %39 = zext i8 %38 to i32, !dbg !759\l  %40 = load i32*, i32** %6, align 8, !dbg !760, !tbaa !710\l  store i32 %39, i32* %40, align 4, !dbg !761, !tbaa !762\l  br label %41, !dbg !764\l}"];
	Node0x19d2de0 -> Node0x19d2e30;
	Node0x19d2e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%41:\l41:                                               \l  store i64 1, i64* %5, align 8, !dbg !765\l  store i32 1, i32* %11, align 4\l  br label %44, !dbg !765\l}"];
	Node0x19d2e30 -> Node0x19d2ed0;
	Node0x19d2e80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%42:\l42:                                               \l  %43 = load i64, i64* %10, align 8, !dbg !766, !tbaa !716\l  store i64 %43, i64* %5, align 8, !dbg !767\l  store i32 1, i32* %11, align 4\l  br label %44, !dbg !767\l}"];
	Node0x19d2e80 -> Node0x19d2ed0;
	Node0x19d2ed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = bitcast i64* %10 to i8*, !dbg !768\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #22, !dbg !768\l  %46 = load i64, i64* %5, align 8, !dbg !768\l  ret i64 %46, !dbg !768\l}"];
}
