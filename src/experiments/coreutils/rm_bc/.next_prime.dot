digraph "CFG for 'next_prime' function" {
	label="CFG for 'next_prime' function";

	Node0x1e3f220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%1:\l  %2 = alloca i64, align 8\l  store i64 %0, i64* %2, align 8, !tbaa !1016\l  call void @llvm.dbg.declare(metadata i64* %2, metadata !1015, metadata\l... !DIExpression()), !dbg !1020\l  %3 = load i64, i64* %2, align 8, !dbg !1021, !tbaa !1016\l  %4 = icmp ult i64 %3, 10, !dbg !1023\l  br i1 %4, label %5, label %6, !dbg !1024\l|{<s0>T|<s1>F}}"];
	Node0x1e3f220:s0 -> Node0x1e3f270;
	Node0x1e3f220:s1 -> Node0x1e3f2c0;
	Node0x1e3f270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%5:\l5:                                                \l  store i64 10, i64* %2, align 8, !dbg !1025, !tbaa !1016\l  br label %6, !dbg !1026\l}"];
	Node0x1e3f270 -> Node0x1e3f2c0;
	Node0x1e3f2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%6:\l6:                                                \l  %7 = load i64, i64* %2, align 8, !dbg !1027, !tbaa !1016\l  %8 = or i64 %7, 1, !dbg !1027\l  store i64 %8, i64* %2, align 8, !dbg !1027, !tbaa !1016\l  br label %9, !dbg !1028\l}"];
	Node0x1e3f2c0 -> Node0x1e3f310;
	Node0x1e3f310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l9:                                                \l  %10 = load i64, i64* %2, align 8, !dbg !1029, !tbaa !1016\l  %11 = icmp ne i64 -1, %10, !dbg !1030\l  br i1 %11, label %12, label %16, !dbg !1031\l|{<s0>T|<s1>F}}"];
	Node0x1e3f310:s0 -> Node0x1e3f360;
	Node0x1e3f310:s1 -> Node0x1e3f3b0;
	Node0x1e3f360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%12:\l12:                                               \l  %13 = load i64, i64* %2, align 8, !dbg !1032, !tbaa !1016\l  %14 = call zeroext i1 @is_prime(i64 noundef %13) #22, !dbg !1033\l  %15 = xor i1 %14, true, !dbg !1034\l  br label %16\l}"];
	Node0x1e3f360 -> Node0x1e3f3b0;
	Node0x1e3f3b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  %17 = phi i1 [ false, %9 ], [ %15, %12 ], !dbg !1035\l  br i1 %17, label %18, label %21, !dbg !1028\l|{<s0>T|<s1>F}}"];
	Node0x1e3f3b0:s0 -> Node0x1e3f400;
	Node0x1e3f3b0:s1 -> Node0x1e3f450;
	Node0x1e3f400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%18:\l18:                                               \l  %19 = load i64, i64* %2, align 8, !dbg !1036, !tbaa !1016\l  %20 = add i64 %19, 2, !dbg !1036\l  store i64 %20, i64* %2, align 8, !dbg !1036, !tbaa !1016\l  br label %9, !dbg !1028, !llvm.loop !1037\l}"];
	Node0x1e3f400 -> Node0x1e3f310;
	Node0x1e3f450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%21:\l21:                                               \l  %22 = load i64, i64* %2, align 8, !dbg !1041, !tbaa !1016\l  ret i64 %22, !dbg !1042\l}"];
}
