digraph "CFG for 'rpl_mbrtoc32' function" {
	label="CFG for 'rpl_mbrtoc32' function";

	Node0x1fb9130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca i32*, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca %struct.__mbstate_t*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i32, align 4\l  store i32* %0, i32** %6, align 8, !tbaa !1026\l  call void @llvm.dbg.declare(metadata i32** %6, metadata !1021, metadata\l... !DIExpression()), !dbg !1030\l  store i8* %1, i8** %7, align 8, !tbaa !1026\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !1022, metadata\l... !DIExpression()), !dbg !1031\l  store i64 %2, i64* %8, align 8, !tbaa !1032\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1023, metadata\l... !DIExpression()), !dbg !1034\l  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %9, align 8, !tbaa !1026\l  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %9, metadata\l... !1024, metadata !DIExpression()), !dbg !1035\l  %12 = load i8*, i8** %7, align 8, !dbg !1036, !tbaa !1026\l  %13 = icmp eq i8* %12, null, !dbg !1038\l  br i1 %13, label %14, label %15, !dbg !1039\l|{<s0>T|<s1>F}}"];
	Node0x1fb9130:s0 -> Node0x1fba640;
	Node0x1fb9130:s1 -> Node0x1fba690;
	Node0x1fba640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%14:\l14:                                               \l  store i32* null, i32** %6, align 8, !dbg !1040, !tbaa !1026\l  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.312, i64 0, i64\l... 0), i8** %7, align 8, !dbg !1042, !tbaa !1026\l  store i64 1, i64* %8, align 8, !dbg !1043, !tbaa !1032\l  br label %15, !dbg !1044\l}"];
	Node0x1fba640 -> Node0x1fba690;
	Node0x1fba690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  %16 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8, !dbg\l... !1045, !tbaa !1026\l  %17 = icmp eq %struct.__mbstate_t* %16, null, !dbg !1047\l  br i1 %17, label %18, label %19, !dbg !1048\l|{<s0>T|<s1>F}}"];
	Node0x1fba690:s0 -> Node0x1fba6e0;
	Node0x1fba690:s1 -> Node0x1fba730;
	Node0x1fba6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%18:\l18:                                               \l  store %struct.__mbstate_t* @internal_state, %struct.__mbstate_t** %9, align\l... 8, !dbg !1049, !tbaa !1026\l  br label %19, !dbg !1050\l}"];
	Node0x1fba6e0 -> Node0x1fba730;
	Node0x1fba730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = bitcast i64* %10 to i8*, !dbg !1051\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #22, !dbg !1051\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1025, metadata\l... !DIExpression()), !dbg !1052\l  %21 = load i32*, i32** %6, align 8, !dbg !1053, !tbaa !1026\l  %22 = load i8*, i8** %7, align 8, !dbg !1054, !tbaa !1026\l  %23 = load i64, i64* %8, align 8, !dbg !1055, !tbaa !1032\l  %24 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8, !dbg\l... !1056, !tbaa !1026\l  %25 = call i64 @mbrtoc32(i32* noundef %21, i8* noundef %22, i64 noundef %23,\l... %struct.__mbstate_t* noundef %24) #22, !dbg !1057\l  store i64 %25, i64* %10, align 8, !dbg !1052, !tbaa !1032\l  %26 = load i64, i64* %10, align 8, !dbg !1058, !tbaa !1032\l  %27 = icmp ule i64 -2, %26, !dbg !1060\l  br i1 %27, label %28, label %42, !dbg !1061\l|{<s0>T|<s1>F}}"];
	Node0x1fba730:s0 -> Node0x1fba780;
	Node0x1fba730:s1 -> Node0x1fba910;
	Node0x1fba780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%28:\l28:                                               \l  %29 = load i64, i64* %8, align 8, !dbg !1062, !tbaa !1032\l  %30 = icmp ne i64 %29, 0, !dbg !1063\l  br i1 %30, label %31, label %42, !dbg !1064\l|{<s0>T|<s1>F}}"];
	Node0x1fba780:s0 -> Node0x1fba7d0;
	Node0x1fba780:s1 -> Node0x1fba910;
	Node0x1fba7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%31:\l31:                                               \l  %32 = call zeroext i1 @hard_locale(i32 noundef 0), !dbg !1065\l  br i1 %32, label %42, label %33, !dbg !1066\l|{<s0>T|<s1>F}}"];
	Node0x1fba7d0:s0 -> Node0x1fba910;
	Node0x1fba7d0:s1 -> Node0x1fba820;
	Node0x1fba820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%33:\l33:                                               \l  %34 = load i32*, i32** %6, align 8, !dbg !1067, !tbaa !1026\l  %35 = icmp ne i32* %34, null, !dbg !1070\l  br i1 %35, label %36, label %41, !dbg !1071\l|{<s0>T|<s1>F}}"];
	Node0x1fba820:s0 -> Node0x1fba870;
	Node0x1fba820:s1 -> Node0x1fba8c0;
	Node0x1fba870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%36:\l36:                                               \l  %37 = load i8*, i8** %7, align 8, !dbg !1072, !tbaa !1026\l  %38 = load i8, i8* %37, align 1, !dbg !1073, !tbaa !1074\l  %39 = zext i8 %38 to i32, !dbg !1075\l  %40 = load i32*, i32** %6, align 8, !dbg !1076, !tbaa !1026\l  store i32 %39, i32* %40, align 4, !dbg !1077, !tbaa !1078\l  br label %41, !dbg !1080\l}"];
	Node0x1fba870 -> Node0x1fba8c0;
	Node0x1fba8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%41:\l41:                                               \l  store i64 1, i64* %5, align 8, !dbg !1081\l  store i32 1, i32* %11, align 4\l  br label %44, !dbg !1081\l}"];
	Node0x1fba8c0 -> Node0x1fba960;
	Node0x1fba910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%42:\l42:                                               \l  %43 = load i64, i64* %10, align 8, !dbg !1082, !tbaa !1032\l  store i64 %43, i64* %5, align 8, !dbg !1083\l  store i32 1, i32* %11, align 4\l  br label %44, !dbg !1083\l}"];
	Node0x1fba910 -> Node0x1fba960;
	Node0x1fba960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = bitcast i64* %10 to i8*, !dbg !1084\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #22, !dbg !1084\l  %46 = load i64, i64* %5, align 8, !dbg !1084\l  ret i64 %46, !dbg !1084\l}"];
}
