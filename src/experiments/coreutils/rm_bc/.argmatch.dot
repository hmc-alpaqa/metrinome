digraph "CFG for 'argmatch' function" {
	label="CFG for 'argmatch' function";

	Node0x1ccae90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i8**, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i8, align 1\l  %14 = alloca i32, align 4\l  store i8* %0, i8** %6, align 8, !tbaa !1024\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1016, metadata\l... !DIExpression()), !dbg !1028\l  store i8** %1, i8*** %7, align 8, !tbaa !1024\l  call void @llvm.dbg.declare(metadata i8*** %7, metadata !1017, metadata\l... !DIExpression()), !dbg !1029\l  store i8* %2, i8** %8, align 8, !tbaa !1024\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1018, metadata\l... !DIExpression()), !dbg !1030\l  store i64 %3, i64* %9, align 8, !tbaa !1031\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1019, metadata\l... !DIExpression()), !dbg !1033\l  %15 = bitcast i64* %10 to i8*, !dbg !1034\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #22, !dbg !1034\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1020, metadata\l... !DIExpression()), !dbg !1035\l  %16 = bitcast i64* %11 to i8*, !dbg !1036\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #22, !dbg !1036\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1021, metadata\l... !DIExpression()), !dbg !1037\l  %17 = bitcast i64* %12 to i8*, !dbg !1038\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #22, !dbg !1038\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1022, metadata\l... !DIExpression()), !dbg !1039\l  store i64 -1, i64* %12, align 8, !dbg !1039, !tbaa !1031\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #22, !dbg !1040\l  call void @llvm.dbg.declare(metadata i8* %13, metadata !1023, metadata\l... !DIExpression()), !dbg !1041\l  store i8 0, i8* %13, align 1, !dbg !1041, !tbaa !1042\l  %18 = load i8*, i8** %6, align 8, !dbg !1044, !tbaa !1024\l  %19 = call i64 @strlen(i8* noundef %18) #23, !dbg !1045\l  store i64 %19, i64* %11, align 8, !dbg !1046, !tbaa !1031\l  store i64 0, i64* %10, align 8, !dbg !1047, !tbaa !1031\l  br label %20, !dbg !1049\l}"];
	Node0x1ccae90 -> Node0x1ccaf80;
	Node0x1ccaf80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = load i8**, i8*** %7, align 8, !dbg !1050, !tbaa !1024\l  %22 = load i64, i64* %10, align 8, !dbg !1052, !tbaa !1031\l  %23 = getelementptr inbounds i8*, i8** %21, i64 %22, !dbg !1050\l  %24 = load i8*, i8** %23, align 8, !dbg !1050, !tbaa !1024\l  %25 = icmp ne i8* %24, null, !dbg !1053\l  br i1 %25, label %26, label %75, !dbg !1053\l|{<s0>T|<s1>F}}"];
	Node0x1ccaf80:s0 -> Node0x1ccafd0;
	Node0x1ccaf80:s1 -> Node0x1ccb3e0;
	Node0x1ccafd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i8**, i8*** %7, align 8, !dbg !1054, !tbaa !1024\l  %28 = load i64, i64* %10, align 8, !dbg !1057, !tbaa !1031\l  %29 = getelementptr inbounds i8*, i8** %27, i64 %28, !dbg !1054\l  %30 = load i8*, i8** %29, align 8, !dbg !1054, !tbaa !1024\l  %31 = load i8*, i8** %6, align 8, !dbg !1058, !tbaa !1024\l  %32 = load i64, i64* %11, align 8, !dbg !1059, !tbaa !1031\l  %33 = call i32 @strncmp(i8* noundef %30, i8* noundef %31, i64 noundef %32)\l... #23, !dbg !1060\l  %34 = icmp ne i32 %33, 0, !dbg !1060\l  br i1 %34, label %71, label %35, !dbg !1061\l|{<s0>T|<s1>F}}"];
	Node0x1ccafd0:s0 -> Node0x1ccb340;
	Node0x1ccafd0:s1 -> Node0x1ccb020;
	Node0x1ccb020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%35:\l35:                                               \l  %36 = load i8**, i8*** %7, align 8, !dbg !1062, !tbaa !1024\l  %37 = load i64, i64* %10, align 8, !dbg !1065, !tbaa !1031\l  %38 = getelementptr inbounds i8*, i8** %36, i64 %37, !dbg !1062\l  %39 = load i8*, i8** %38, align 8, !dbg !1062, !tbaa !1024\l  %40 = call i64 @strlen(i8* noundef %39) #23, !dbg !1066\l  %41 = load i64, i64* %11, align 8, !dbg !1067, !tbaa !1031\l  %42 = icmp eq i64 %40, %41, !dbg !1068\l  br i1 %42, label %43, label %45, !dbg !1069\l|{<s0>T|<s1>F}}"];
	Node0x1ccb020:s0 -> Node0x1ccb070;
	Node0x1ccb020:s1 -> Node0x1ccb0c0;
	Node0x1ccb070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%43:\l43:                                               \l  %44 = load i64, i64* %10, align 8, !dbg !1070, !tbaa !1031\l  store i64 %44, i64* %5, align 8, !dbg !1071\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1071\l}"];
	Node0x1ccb070 -> Node0x1ccb4d0;
	Node0x1ccb0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%45:\l45:                                               \l  %46 = load i64, i64* %12, align 8, !dbg !1072, !tbaa !1031\l  %47 = icmp eq i64 %46, -1, !dbg !1074\l  br i1 %47, label %48, label %50, !dbg !1075\l|{<s0>T|<s1>F}}"];
	Node0x1ccb0c0:s0 -> Node0x1ccb110;
	Node0x1ccb0c0:s1 -> Node0x1ccb160;
	Node0x1ccb110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%48:\l48:                                               \l  %49 = load i64, i64* %10, align 8, !dbg !1076, !tbaa !1031\l  store i64 %49, i64* %12, align 8, !dbg !1077, !tbaa !1031\l  br label %69, !dbg !1078\l}"];
	Node0x1ccb110 -> Node0x1ccb2a0;
	Node0x1ccb160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%50:\l50:                                               \l  %51 = load i8*, i8** %8, align 8, !dbg !1079, !tbaa !1024\l  %52 = icmp eq i8* %51, null, !dbg !1082\l  br i1 %52, label %67, label %53, !dbg !1083\l|{<s0>T|<s1>F}}"];
	Node0x1ccb160:s0 -> Node0x1ccb200;
	Node0x1ccb160:s1 -> Node0x1ccb1b0;
	Node0x1ccb1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%53:\l53:                                               \l  %54 = load i8*, i8** %8, align 8, !dbg !1084, !tbaa !1024\l  %55 = load i64, i64* %9, align 8, !dbg !1085, !tbaa !1031\l  %56 = load i64, i64* %12, align 8, !dbg !1086, !tbaa !1031\l  %57 = mul i64 %55, %56, !dbg !1087\l  %58 = getelementptr inbounds i8, i8* %54, i64 %57, !dbg !1088\l  %59 = load i8*, i8** %8, align 8, !dbg !1089, !tbaa !1024\l  %60 = load i64, i64* %9, align 8, !dbg !1090, !tbaa !1031\l  %61 = load i64, i64* %10, align 8, !dbg !1091, !tbaa !1031\l  %62 = mul i64 %60, %61, !dbg !1092\l  %63 = getelementptr inbounds i8, i8* %59, i64 %62, !dbg !1093\l  %64 = load i64, i64* %9, align 8, !dbg !1094, !tbaa !1031\l  %65 = call i32 @memcmp(i8* noundef %58, i8* noundef %63, i64 noundef %64)\l... #23, !dbg !1095\l  %66 = icmp ne i32 %65, 0, !dbg !1095\l  br i1 %66, label %67, label %68, !dbg !1096\l|{<s0>T|<s1>F}}"];
	Node0x1ccb1b0:s0 -> Node0x1ccb200;
	Node0x1ccb1b0:s1 -> Node0x1ccb250;
	Node0x1ccb200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%67:\l67:                                               \l  store i8 1, i8* %13, align 1, !dbg !1097, !tbaa !1042\l  br label %68, !dbg !1099\l}"];
	Node0x1ccb200 -> Node0x1ccb250;
	Node0x1ccb250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%68:\l68:                                               \l  br label %69\l}"];
	Node0x1ccb250 -> Node0x1ccb2a0;
	Node0x1ccb2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%69:\l69:                                               \l  br label %70\l}"];
	Node0x1ccb2a0 -> Node0x1ccb2f0;
	Node0x1ccb2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%70:\l70:                                               \l  br label %71, !dbg !1100\l}"];
	Node0x1ccb2f0 -> Node0x1ccb340;
	Node0x1ccb340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%71:\l71:                                               \l  br label %72, !dbg !1101\l}"];
	Node0x1ccb340 -> Node0x1ccb390;
	Node0x1ccb390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%72:\l72:                                               \l  %73 = load i64, i64* %10, align 8, !dbg !1102, !tbaa !1031\l  %74 = add i64 %73, 1, !dbg !1102\l  store i64 %74, i64* %10, align 8, !dbg !1102, !tbaa !1031\l  br label %20, !dbg !1103, !llvm.loop !1104\l}"];
	Node0x1ccb390 -> Node0x1ccaf80;
	Node0x1ccb3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%75:\l75:                                               \l  %76 = load i8, i8* %13, align 1, !dbg !1108, !tbaa !1042, !range !1110\l  %77 = trunc i8 %76 to i1, !dbg !1108\l  br i1 %77, label %78, label %79, !dbg !1111\l|{<s0>T|<s1>F}}"];
	Node0x1ccb3e0:s0 -> Node0x1ccb430;
	Node0x1ccb3e0:s1 -> Node0x1ccb480;
	Node0x1ccb430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%78:\l78:                                               \l  store i64 -2, i64* %5, align 8, !dbg !1112\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1112\l}"];
	Node0x1ccb430 -> Node0x1ccb4d0;
	Node0x1ccb480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%79:\l79:                                               \l  %80 = load i64, i64* %12, align 8, !dbg !1113, !tbaa !1031\l  store i64 %80, i64* %5, align 8, !dbg !1114\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1114\l}"];
	Node0x1ccb480 -> Node0x1ccb4d0;
	Node0x1ccb4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%81:\l81:                                               \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #22, !dbg !1115\l  %82 = bitcast i64* %12 to i8*, !dbg !1115\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #22, !dbg !1115\l  %83 = bitcast i64* %11 to i8*, !dbg !1115\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #22, !dbg !1115\l  %84 = bitcast i64* %10 to i8*, !dbg !1115\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #22, !dbg !1115\l  %85 = load i64, i64* %5, align 8, !dbg !1115\l  ret i64 %85, !dbg !1115\l}"];
}
