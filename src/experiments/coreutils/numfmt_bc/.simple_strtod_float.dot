digraph "CFG for 'simple_strtod_float' function" {
	label="CFG for 'simple_strtod_float' function";

	Node0xd0bae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = alloca i32, align 4\l  %6 = alloca i8*, align 8\l  %7 = alloca i8**, align 8\l  %8 = alloca x86_fp80*, align 8\l  %9 = alloca i64*, align 8\l  %10 = alloca i8, align 1\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca i8*, align 8\l  %14 = alloca x86_fp80, align 16\l  %15 = alloca i8, align 1\l  %16 = alloca i32, align 4\l  %17 = alloca i64, align 8\l  store i8* %0, i8** %6, align 8, !tbaa !889\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !876, metadata\l... !DIExpression()), !dbg !893\l  store i8** %1, i8*** %7, align 8, !tbaa !889\l  call void @llvm.dbg.declare(metadata i8*** %7, metadata !877, metadata\l... !DIExpression()), !dbg !894\l  store x86_fp80* %2, x86_fp80** %8, align 8, !tbaa !889\l  call void @llvm.dbg.declare(metadata x86_fp80** %8, metadata !878, metadata\l... !DIExpression()), !dbg !895\l  store i64* %3, i64** %9, align 8, !tbaa !889\l  call void @llvm.dbg.declare(metadata i64** %9, metadata !879, metadata\l... !DIExpression()), !dbg !896\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %10) #23, !dbg !897\l  call void @llvm.dbg.declare(metadata i8* %10, metadata !880, metadata\l... !DIExpression()), !dbg !898\l  %18 = bitcast i32* %11 to i8*, !dbg !899\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %18) #23, !dbg !899\l  call void @llvm.dbg.declare(metadata i32* %11, metadata !881, metadata\l... !DIExpression()), !dbg !900\l  store i32 0, i32* %11, align 4, !dbg !900, !tbaa !901\l  %19 = load i64*, i64** %9, align 8, !dbg !902, !tbaa !889\l  %20 = icmp ne i64* %19, null, !dbg !902\l  br i1 %20, label %21, label %23, !dbg !904\l|{<s0>T|<s1>F}}"];
	Node0xd0bae0:s0 -> Node0xd0bc00;
	Node0xd0bae0:s1 -> Node0xd0bc50;
	Node0xd0bc00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%21:\l21:                                               \l  %22 = load i64*, i64** %9, align 8, !dbg !905, !tbaa !889\l  store i64 0, i64* %22, align 8, !dbg !906, !tbaa !907\l  br label %23, !dbg !909\l}"];
	Node0xd0bc00 -> Node0xd0bc50;
	Node0xd0bc50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = load i8*, i8** %6, align 8, !dbg !910, !tbaa !889\l  %25 = load i8**, i8*** %7, align 8, !dbg !911, !tbaa !889\l  %26 = load x86_fp80*, x86_fp80** %8, align 8, !dbg !912, !tbaa !889\l  %27 = call i32 @simple_strtod_int(i8* noundef %24, i8** noundef %25,\l... x86_fp80* noundef %26, i8* noundef %10), !dbg !913\l  store i32 %27, i32* %11, align 4, !dbg !914, !tbaa !901\l  %28 = load i32, i32* %11, align 4, !dbg !915, !tbaa !901\l  %29 = icmp ne i32 %28, 0, !dbg !917\l  br i1 %29, label %30, label %35, !dbg !918\l|{<s0>T|<s1>F}}"];
	Node0xd0bc50:s0 -> Node0xd0bca0;
	Node0xd0bc50:s1 -> Node0xd0bd40;
	Node0xd0bca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%30:\l30:                                               \l  %31 = load i32, i32* %11, align 4, !dbg !919, !tbaa !901\l  %32 = icmp ne i32 %31, 1, !dbg !920\l  br i1 %32, label %33, label %35, !dbg !921\l|{<s0>T|<s1>F}}"];
	Node0xd0bca0:s0 -> Node0xd0bcf0;
	Node0xd0bca0:s1 -> Node0xd0bd40;
	Node0xd0bcf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%33:\l33:                                               \l  %34 = load i32, i32* %11, align 4, !dbg !922, !tbaa !901\l  store i32 %34, i32* %5, align 4, !dbg !923\l  store i32 1, i32* %12, align 4\l  br label %118, !dbg !923\l}"];
	Node0xd0bcf0 -> Node0xd0c330;
	Node0xd0bd40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%35:\l35:                                               \l  %36 = load i8**, i8*** %7, align 8, !dbg !924, !tbaa !889\l  %37 = load i8*, i8** %36, align 8, !dbg !924, !tbaa !889\l  %38 = load i8*, i8** @decimal_point, align 8, !dbg !924, !tbaa !889\l  %39 = load i32, i32* @decimal_point_length, align 4, !dbg !924, !tbaa !925\l  %40 = sext i32 %39 to i64, !dbg !924\l  %41 = call i32 @strncmp(i8* noundef %37, i8* noundef %38, i64 noundef %40)\l... #24, !dbg !924\l  %42 = icmp eq i32 %41, 0, !dbg !924\l  br i1 %42, label %43, label %116, !dbg !927\l|{<s0>T|<s1>F}}"];
	Node0xd0bd40:s0 -> Node0xd0bd90;
	Node0xd0bd40:s1 -> Node0xd0c2e0;
	Node0xd0bd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%43:\l43:                                               \l  %44 = bitcast i8** %13 to i8*, !dbg !928\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #23, !dbg !928\l  call void @llvm.dbg.declare(metadata i8** %13, metadata !882, metadata\l... !DIExpression()), !dbg !929\l  %45 = bitcast x86_fp80* %14 to i8*, !dbg !930\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* %45) #23, !dbg !930\l  call void @llvm.dbg.declare(metadata x86_fp80* %14, metadata !885, metadata\l... !DIExpression()), !dbg !931\l  store x86_fp80 0xK00000000000000000000, x86_fp80* %14, align 16, !dbg !931,\l... !tbaa !932\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #23, !dbg !934\l  call void @llvm.dbg.declare(metadata i8* %15, metadata !886, metadata\l... !DIExpression()), !dbg !935\l  %46 = load i32, i32* @decimal_point_length, align 4, !dbg !936, !tbaa !925\l  %47 = load i8**, i8*** %7, align 8, !dbg !937, !tbaa !889\l  %48 = load i8*, i8** %47, align 8, !dbg !938, !tbaa !889\l  %49 = sext i32 %46 to i64, !dbg !938\l  %50 = getelementptr inbounds i8, i8* %48, i64 %49, !dbg !938\l  store i8* %50, i8** %47, align 8, !dbg !938, !tbaa !889\l  %51 = bitcast i32* %16 to i8*, !dbg !939\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #23, !dbg !939\l  call void @llvm.dbg.declare(metadata i32* %16, metadata !887, metadata\l... !DIExpression()), !dbg !940\l  %52 = load i8**, i8*** %7, align 8, !dbg !941, !tbaa !889\l  %53 = load i8*, i8** %52, align 8, !dbg !942, !tbaa !889\l  %54 = call i32 @simple_strtod_int(i8* noundef %53, i8** noundef %13,\l... x86_fp80* noundef %14, i8* noundef %15), !dbg !943\l  store i32 %54, i32* %16, align 4, !dbg !940, !tbaa !901\l  %55 = load i32, i32* %16, align 4, !dbg !944, !tbaa !901\l  %56 = icmp ne i32 %55, 0, !dbg !946\l  br i1 %56, label %57, label %62, !dbg !947\l|{<s0>T|<s1>F}}"];
	Node0xd0bd90:s0 -> Node0xd0bde0;
	Node0xd0bd90:s1 -> Node0xd0be80;
	Node0xd0bde0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%57:\l57:                                               \l  %58 = load i32, i32* %16, align 4, !dbg !948, !tbaa !901\l  %59 = icmp ne i32 %58, 1, !dbg !949\l  br i1 %59, label %60, label %62, !dbg !950\l|{<s0>T|<s1>F}}"];
	Node0xd0bde0:s0 -> Node0xd0be30;
	Node0xd0bde0:s1 -> Node0xd0be80;
	Node0xd0be30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%60:\l60:                                               \l  %61 = load i32, i32* %16, align 4, !dbg !951, !tbaa !901\l  store i32 %61, i32* %5, align 4, !dbg !952\l  store i32 1, i32* %12, align 4\l  br label %110, !dbg !952\l}"];
	Node0xd0be30 -> Node0xd0c240;
	Node0xd0be80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%62:\l62:                                               \l  %63 = load i32, i32* %16, align 4, !dbg !953, !tbaa !901\l  %64 = icmp eq i32 %63, 1, !dbg !955\l  br i1 %64, label %65, label %67, !dbg !956\l|{<s0>T|<s1>F}}"];
	Node0xd0be80:s0 -> Node0xd0bed0;
	Node0xd0be80:s1 -> Node0xd0bf20;
	Node0xd0bed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%65:\l65:                                               \l  %66 = load i32, i32* %16, align 4, !dbg !957, !tbaa !901\l  store i32 %66, i32* %11, align 4, !dbg !958, !tbaa !901\l  br label %67, !dbg !959\l}"];
	Node0xd0bed0 -> Node0xd0bf20;
	Node0xd0bf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%67:\l67:                                               \l  %68 = load i8, i8* %15, align 1, !dbg !960, !tbaa !962, !range !964\l  %69 = trunc i8 %68 to i1, !dbg !960\l  br i1 %69, label %70, label %71, !dbg !965\l|{<s0>T|<s1>F}}"];
	Node0xd0bf20:s0 -> Node0xd0bf70;
	Node0xd0bf20:s1 -> Node0xd0bfc0;
	Node0xd0bf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%70:\l70:                                               \l  store i32 3, i32* %5, align 4, !dbg !966\l  store i32 1, i32* %12, align 4\l  br label %110, !dbg !966\l}"];
	Node0xd0bf70 -> Node0xd0c240;
	Node0xd0bfc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%71:\l71:                                               \l  %72 = bitcast i64* %17 to i8*, !dbg !967\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %72) #23, !dbg !967\l  call void @llvm.dbg.declare(metadata i64* %17, metadata !888, metadata\l... !DIExpression()), !dbg !968\l  %73 = load i8*, i8** %13, align 8, !dbg !969, !tbaa !889\l  %74 = load i8**, i8*** %7, align 8, !dbg !970, !tbaa !889\l  %75 = load i8*, i8** %74, align 8, !dbg !971, !tbaa !889\l  %76 = ptrtoint i8* %73 to i64, !dbg !972\l  %77 = ptrtoint i8* %75 to i64, !dbg !972\l  %78 = sub i64 %76, %77, !dbg !972\l  store i64 %78, i64* %17, align 8, !dbg !968, !tbaa !907\l  %79 = load x86_fp80, x86_fp80* %14, align 16, !dbg !973, !tbaa !932\l  %80 = load i64, i64* %17, align 8, !dbg !974, !tbaa !907\l  %81 = trunc i64 %80 to i32, !dbg !974\l  %82 = call x86_fp80 @powerld(x86_fp80 noundef 0xK4002A000000000000000, i32\l... noundef %81), !dbg !975\l  %83 = fdiv x86_fp80 %79, %82, !dbg !976\l  store x86_fp80 %83, x86_fp80* %14, align 16, !dbg !977, !tbaa !932\l  %84 = load x86_fp80*, x86_fp80** %8, align 8, !dbg !978, !tbaa !889\l  %85 = icmp ne x86_fp80* %84, null, !dbg !978\l  br i1 %85, label %86, label %100, !dbg !980\l|{<s0>T|<s1>F}}"];
	Node0xd0bfc0:s0 -> Node0xd0c010;
	Node0xd0bfc0:s1 -> Node0xd0c150;
	Node0xd0c010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%86:\l86:                                               \l  %87 = load i8, i8* %10, align 1, !dbg !981, !tbaa !962, !range !964\l  %88 = trunc i8 %87 to i1, !dbg !981\l  br i1 %88, label %89, label %94, !dbg !984\l|{<s0>T|<s1>F}}"];
	Node0xd0c010:s0 -> Node0xd0c060;
	Node0xd0c010:s1 -> Node0xd0c0b0;
	Node0xd0c060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%89:\l89:                                               \l  %90 = load x86_fp80, x86_fp80* %14, align 16, !dbg !985, !tbaa !932\l  %91 = load x86_fp80*, x86_fp80** %8, align 8, !dbg !986, !tbaa !889\l  %92 = load x86_fp80, x86_fp80* %91, align 16, !dbg !987, !tbaa !932\l  %93 = fsub x86_fp80 %92, %90, !dbg !987\l  store x86_fp80 %93, x86_fp80* %91, align 16, !dbg !987, !tbaa !932\l  br label %99, !dbg !988\l}"];
	Node0xd0c060 -> Node0xd0c100;
	Node0xd0c0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%94:\l94:                                               \l  %95 = load x86_fp80, x86_fp80* %14, align 16, !dbg !989, !tbaa !932\l  %96 = load x86_fp80*, x86_fp80** %8, align 8, !dbg !990, !tbaa !889\l  %97 = load x86_fp80, x86_fp80* %96, align 16, !dbg !991, !tbaa !932\l  %98 = fadd x86_fp80 %97, %95, !dbg !991\l  store x86_fp80 %98, x86_fp80* %96, align 16, !dbg !991, !tbaa !932\l  br label %99\l}"];
	Node0xd0c0b0 -> Node0xd0c100;
	Node0xd0c100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%99:\l99:                                               \l  br label %100, !dbg !992\l}"];
	Node0xd0c100 -> Node0xd0c150;
	Node0xd0c150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%100:\l100:                                              \l  %101 = load i64*, i64** %9, align 8, !dbg !993, !tbaa !889\l  %102 = icmp ne i64* %101, null, !dbg !993\l  br i1 %102, label %103, label %106, !dbg !995\l|{<s0>T|<s1>F}}"];
	Node0xd0c150:s0 -> Node0xd0c1a0;
	Node0xd0c150:s1 -> Node0xd0c1f0;
	Node0xd0c1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%103:\l103:                                              \l  %104 = load i64, i64* %17, align 8, !dbg !996, !tbaa !907\l  %105 = load i64*, i64** %9, align 8, !dbg !997, !tbaa !889\l  store i64 %104, i64* %105, align 8, !dbg !998, !tbaa !907\l  br label %106, !dbg !999\l}"];
	Node0xd0c1a0 -> Node0xd0c1f0;
	Node0xd0c1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%106:\l106:                                              \l  %107 = load i8*, i8** %13, align 8, !dbg !1000, !tbaa !889\l  %108 = load i8**, i8*** %7, align 8, !dbg !1001, !tbaa !889\l  store i8* %107, i8** %108, align 8, !dbg !1002, !tbaa !889\l  %109 = bitcast i64* %17 to i8*, !dbg !1003\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %109) #23, !dbg !1003\l  store i32 0, i32* %12, align 4, !dbg !1003\l  br label %110, !dbg !1003\l}"];
	Node0xd0c1f0 -> Node0xd0c240;
	Node0xd0c240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%110:\l110:                                              \l  %111 = bitcast i32* %16 to i8*, !dbg !1003\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %111) #23, !dbg !1003\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #23, !dbg !1003\l  %112 = bitcast x86_fp80* %14 to i8*, !dbg !1003\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* %112) #23, !dbg !1003\l  %113 = bitcast i8** %13 to i8*, !dbg !1003\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %113) #23, !dbg !1003\l  %114 = load i32, i32* %12, align 4\l  switch i32 %114, label %118 [\l    i32 0, label %115\l  ]\l|{<s0>def|<s1>0}}"];
	Node0xd0c240:s0 -> Node0xd0c330;
	Node0xd0c240:s1 -> Node0xd0c290;
	Node0xd0c290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%115:\l115:                                              \l  br label %116, !dbg !1004\l}"];
	Node0xd0c290 -> Node0xd0c2e0;
	Node0xd0c2e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d8564670",label="{%116:\l116:                                              \l  %117 = load i32, i32* %11, align 4, !dbg !1005, !tbaa !901\l  store i32 %117, i32* %5, align 4, !dbg !1006\l  store i32 1, i32* %12, align 4\l  br label %118, !dbg !1006\l}"];
	Node0xd0c2e0 -> Node0xd0c330;
	Node0xd0c330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%118:\l118:                                              \l  %119 = bitcast i32* %11 to i8*, !dbg !1007\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %119) #23, !dbg !1007\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #23, !dbg !1007\l  %120 = load i32, i32* %5, align 4, !dbg !1007\l  ret i32 %120, !dbg !1007\l}"];
}
