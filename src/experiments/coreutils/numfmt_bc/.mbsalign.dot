digraph "CFG for 'mbsalign' function" {
	label="CFG for 'mbsalign' function";

	Node0xd617a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = alloca i64, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i8*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64*, align 8\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i8*, align 8\l  %17 = alloca i32*, align 8\l  %18 = alloca i8*, align 8\l  %19 = alloca i64, align 8\l  %20 = alloca i64, align 8\l  %21 = alloca i64, align 8\l  %22 = alloca i8, align 1\l  %23 = alloca i8, align 1\l  %24 = alloca i64, align 8\l  %25 = alloca i32, align 4\l  %26 = alloca i64, align 8\l  %27 = alloca i64, align 8\l  %28 = alloca i64, align 8\l  %29 = alloca i8*, align 8\l  store i8* %0, i8** %8, align 8, !tbaa !904\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !874, metadata\l... !DIExpression()), !dbg !908\l  store i8* %1, i8** %9, align 8, !tbaa !904\l  call void @llvm.dbg.declare(metadata i8** %9, metadata !875, metadata\l... !DIExpression()), !dbg !909\l  store i64 %2, i64* %10, align 8, !tbaa !910\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !876, metadata\l... !DIExpression()), !dbg !912\l  store i64* %3, i64** %11, align 8, !tbaa !904\l  call void @llvm.dbg.declare(metadata i64** %11, metadata !877, metadata\l... !DIExpression()), !dbg !913\l  store i32 %4, i32* %12, align 4, !tbaa !914\l  call void @llvm.dbg.declare(metadata i32* %12, metadata !878, metadata\l... !DIExpression()), !dbg !915\l  store i32 %5, i32* %13, align 4, !tbaa !916\l  call void @llvm.dbg.declare(metadata i32* %13, metadata !879, metadata\l... !DIExpression()), !dbg !918\l  %30 = bitcast i64* %14 to i8*, !dbg !919\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #23, !dbg !919\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !880, metadata\l... !DIExpression()), !dbg !920\l  store i64 -1, i64* %14, align 8, !dbg !920, !tbaa !910\l  %31 = bitcast i64* %15 to i8*, !dbg !921\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #23, !dbg !921\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !881, metadata\l... !DIExpression()), !dbg !922\l  %32 = load i8*, i8** %8, align 8, !dbg !923, !tbaa !904\l  %33 = call i64 @strlen(i8* noundef %32) #24, !dbg !924\l  %34 = add i64 %33, 1, !dbg !925\l  store i64 %34, i64* %15, align 8, !dbg !922, !tbaa !910\l  %35 = bitcast i8** %16 to i8*, !dbg !926\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #23, !dbg !926\l  call void @llvm.dbg.declare(metadata i8** %16, metadata !882, metadata\l... !DIExpression()), !dbg !927\l  store i8* null, i8** %16, align 8, !dbg !927, !tbaa !904\l  %36 = bitcast i32** %17 to i8*, !dbg !928\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #23, !dbg !928\l  call void @llvm.dbg.declare(metadata i32** %17, metadata !883, metadata\l... !DIExpression()), !dbg !929\l  store i32* null, i32** %17, align 8, !dbg !929, !tbaa !904\l  %37 = bitcast i8** %18 to i8*, !dbg !930\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #23, !dbg !930\l  call void @llvm.dbg.declare(metadata i8** %18, metadata !886, metadata\l... !DIExpression()), !dbg !931\l  %38 = load i8*, i8** %8, align 8, !dbg !932, !tbaa !904\l  store i8* %38, i8** %18, align 8, !dbg !931, !tbaa !904\l  %39 = bitcast i64* %19 to i8*, !dbg !933\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #23, !dbg !933\l  call void @llvm.dbg.declare(metadata i64* %19, metadata !887, metadata\l... !DIExpression()), !dbg !934\l  %40 = load i64, i64* %15, align 8, !dbg !935, !tbaa !910\l  %41 = sub i64 %40, 1, !dbg !936\l  store i64 %41, i64* %19, align 8, !dbg !934, !tbaa !910\l  %42 = bitcast i64* %20 to i8*, !dbg !937\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #23, !dbg !937\l  call void @llvm.dbg.declare(metadata i64* %20, metadata !888, metadata\l... !DIExpression()), !dbg !938\l  %43 = load i64, i64* %19, align 8, !dbg !939, !tbaa !910\l  store i64 %43, i64* %20, align 8, !dbg !938, !tbaa !910\l  %44 = bitcast i64* %21 to i8*, !dbg !940\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #23, !dbg !940\l  call void @llvm.dbg.declare(metadata i64* %21, metadata !889, metadata\l... !DIExpression()), !dbg !941\l  store i64 0, i64* %21, align 8, !dbg !941, !tbaa !910\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #23, !dbg !942\l  call void @llvm.dbg.declare(metadata i8* %22, metadata !890, metadata\l... !DIExpression()), !dbg !943\l  store i8 0, i8* %22, align 1, !dbg !943, !tbaa !944\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %23) #23, !dbg !946\l  call void @llvm.dbg.declare(metadata i8* %23, metadata !891, metadata\l... !DIExpression()), !dbg !947\l  store i8 0, i8* %23, align 1, !dbg !947, !tbaa !944\l  %45 = load i32, i32* %13, align 4, !dbg !948, !tbaa !916\l  %46 = and i32 %45, 2, !dbg !949\l  %47 = icmp ne i32 %46, 0, !dbg !949\l  br i1 %47, label %101, label %48, !dbg !950\l|{<s0>T|<s1>F}}"];
	Node0xd617a0:s0 -> Node0xd61c90;
	Node0xd617a0:s1 -> Node0xd61830;
	Node0xd61830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%48:\l48:                                               \l  %49 = call i64 @__ctype_get_mb_cur_max() #23, !dbg !951\l  %50 = icmp ugt i64 %49, 1, !dbg !952\l  br i1 %50, label %51, label %101, !dbg !953\l|{<s0>T|<s1>F}}"];
	Node0xd61830:s0 -> Node0xd61880;
	Node0xd61830:s1 -> Node0xd61c90;
	Node0xd61880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%51:\l51:                                               \l  %52 = bitcast i64* %24 to i8*, !dbg !954\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #23, !dbg !954\l  call void @llvm.dbg.declare(metadata i64* %24, metadata !892, metadata\l... !DIExpression()), !dbg !955\l  %53 = load i8*, i8** %8, align 8, !dbg !956, !tbaa !904\l  %54 = call i64 @mbstowcs(i32* noundef null, i8* noundef %53, i64 noundef 0)\l... #23, !dbg !957\l  store i64 %54, i64* %24, align 8, !dbg !955, !tbaa !910\l  %55 = load i64, i64* %24, align 8, !dbg !958, !tbaa !910\l  %56 = icmp eq i64 %55, -1, !dbg !960\l  br i1 %56, label %57, label %63, !dbg !961\l|{<s0>T|<s1>F}}"];
	Node0xd61880:s0 -> Node0xd618d0;
	Node0xd61880:s1 -> Node0xd619c0;
	Node0xd618d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%57:\l57:                                               \l  %58 = load i32, i32* %13, align 4, !dbg !962, !tbaa !916\l  %59 = and i32 %58, 1, !dbg !965\l  %60 = icmp ne i32 %59, 0, !dbg !965\l  br i1 %60, label %61, label %62, !dbg !966\l|{<s0>T|<s1>F}}"];
	Node0xd618d0:s0 -> Node0xd61920;
	Node0xd618d0:s1 -> Node0xd61970;
	Node0xd61920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%61:\l61:                                               \l  store i32 2, i32* %25, align 4\l  br label %97, !dbg !967\l}"];
	Node0xd61920 -> Node0xd61bf0;
	Node0xd61970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%62:\l62:                                               \l  store i32 3, i32* %25, align 4\l  br label %97, !dbg !968\l}"];
	Node0xd61970 -> Node0xd61bf0;
	Node0xd619c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%63:\l63:                                               \l  %64 = load i64, i64* %24, align 8, !dbg !969, !tbaa !910\l  %65 = add i64 %64, 1, !dbg !969\l  store i64 %65, i64* %24, align 8, !dbg !969, !tbaa !910\l  %66 = load i64, i64* %24, align 8, !dbg !970, !tbaa !910\l  %67 = mul i64 %66, 4, !dbg !971\l  %68 = call noalias i8* @malloc(i64 noundef %67) #23, !dbg !972\l  %69 = bitcast i8* %68 to i32*, !dbg !972\l  store i32* %69, i32** %17, align 8, !dbg !973, !tbaa !904\l  %70 = load i32*, i32** %17, align 8, !dbg !974, !tbaa !904\l  %71 = icmp eq i32* %70, null, !dbg !976\l  br i1 %71, label %72, label %78, !dbg !977\l|{<s0>T|<s1>F}}"];
	Node0xd619c0:s0 -> Node0xd61a10;
	Node0xd619c0:s1 -> Node0xd61b00;
	Node0xd61a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%72:\l72:                                               \l  %73 = load i32, i32* %13, align 4, !dbg !978, !tbaa !916\l  %74 = and i32 %73, 1, !dbg !981\l  %75 = icmp ne i32 %74, 0, !dbg !981\l  br i1 %75, label %76, label %77, !dbg !982\l|{<s0>T|<s1>F}}"];
	Node0xd61a10:s0 -> Node0xd61a60;
	Node0xd61a10:s1 -> Node0xd61ab0;
	Node0xd61a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%76:\l76:                                               \l  store i32 2, i32* %25, align 4\l  br label %97, !dbg !983\l}"];
	Node0xd61a60 -> Node0xd61bf0;
	Node0xd61ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%77:\l77:                                               \l  store i32 3, i32* %25, align 4\l  br label %97, !dbg !984\l}"];
	Node0xd61ab0 -> Node0xd61bf0;
	Node0xd61b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%78:\l78:                                               \l  %79 = load i32*, i32** %17, align 8, !dbg !985, !tbaa !904\l  %80 = load i8*, i8** %8, align 8, !dbg !987, !tbaa !904\l  %81 = load i64, i64* %24, align 8, !dbg !988, !tbaa !910\l  %82 = call i64 @mbstowcs(i32* noundef %79, i8* noundef %80, i64 noundef %81)\l... #23, !dbg !989\l  %83 = icmp ne i64 %82, 0, !dbg !990\l  br i1 %83, label %84, label %96, !dbg !991\l|{<s0>T|<s1>F}}"];
	Node0xd61b00:s0 -> Node0xd61b50;
	Node0xd61b00:s1 -> Node0xd61ba0;
	Node0xd61b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%84:\l84:                                               \l  %85 = load i32*, i32** %17, align 8, !dbg !992, !tbaa !904\l  %86 = load i64, i64* %24, align 8, !dbg !994, !tbaa !910\l  %87 = sub i64 %86, 1, !dbg !995\l  %88 = getelementptr inbounds i32, i32* %85, i64 %87, !dbg !992\l  store i32 0, i32* %88, align 4, !dbg !996, !tbaa !916\l  store i8 1, i8* %23, align 1, !dbg !997, !tbaa !944\l  %89 = load i32*, i32** %17, align 8, !dbg !998, !tbaa !904\l  %90 = call zeroext i1 @wc_ensure_printable(i32* noundef %89), !dbg !999\l  %91 = zext i1 %90 to i8, !dbg !1000\l  store i8 %91, i8* %22, align 1, !dbg !1000, !tbaa !944\l  %92 = load i32*, i32** %17, align 8, !dbg !1001, !tbaa !904\l  %93 = load i64, i64* %24, align 8, !dbg !1002, !tbaa !910\l  %94 = call i32 @wcswidth(i32* noundef %92, i64 noundef %93) #23, !dbg !1003\l  %95 = sext i32 %94 to i64, !dbg !1003\l  store i64 %95, i64* %19, align 8, !dbg !1004, !tbaa !910\l  br label %96, !dbg !1005\l}"];
	Node0xd61b50 -> Node0xd61ba0;
	Node0xd61ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%96:\l96:                                               \l  store i32 0, i32* %25, align 4, !dbg !1006\l  br label %97, !dbg !1006\l}"];
	Node0xd61ba0 -> Node0xd61bf0;
	Node0xd61bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%97:\l97:                                               \l  %98 = bitcast i64* %24 to i8*, !dbg !1006\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #23, !dbg !1006\l  %99 = load i32, i32* %25, align 4\l  switch i32 %99, label %240 [\l    i32 0, label %100\l    i32 2, label %141\l    i32 3, label %235\l  ]\l|{<s0>def|<s1>0|<s2>2|<s3>3}}"];
	Node0xd61bf0:s0 -> Node0xd62640;
	Node0xd61bf0:s1 -> Node0xd61c40;
	Node0xd61bf0:s2 -> Node0xd62000;
	Node0xd61bf0:s3 -> Node0xd625f0;
	Node0xd61c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%100:\l100:                                              \l  br label %101, !dbg !1007\l}"];
	Node0xd61c40 -> Node0xd61c90;
	Node0xd61c90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%101:\l101:                                              \l  %102 = load i8, i8* %23, align 1, !dbg !1008, !tbaa !944, !range !1010\l  %103 = trunc i8 %102 to i1, !dbg !1008\l  br i1 %103, label %104, label %140, !dbg !1011\l|{<s0>T|<s1>F}}"];
	Node0xd61c90:s0 -> Node0xd61ce0;
	Node0xd61c90:s1 -> Node0xd61fb0;
	Node0xd61ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%104:\l104:                                              \l  %105 = load i8, i8* %22, align 1, !dbg !1012, !tbaa !944, !range !1010\l  %106 = trunc i8 %105 to i1, !dbg !1012\l  br i1 %106, label %112, label %107, !dbg !1013\l|{<s0>T|<s1>F}}"];
	Node0xd61ce0:s0 -> Node0xd61d80;
	Node0xd61ce0:s1 -> Node0xd61d30;
	Node0xd61d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%107:\l107:                                              \l  %108 = load i64, i64* %19, align 8, !dbg !1014, !tbaa !910\l  %109 = load i64*, i64** %11, align 8, !dbg !1015, !tbaa !904\l  %110 = load i64, i64* %109, align 8, !dbg !1016, !tbaa !910\l  %111 = icmp ugt i64 %108, %110, !dbg !1017\l  br i1 %111, label %112, label %140, !dbg !1018\l|{<s0>T|<s1>F}}"];
	Node0xd61d30:s0 -> Node0xd61d80;
	Node0xd61d30:s1 -> Node0xd61fb0;
	Node0xd61d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%112:\l112:                                              \l  %113 = load i8, i8* %22, align 1, !dbg !1019, !tbaa !944, !range !1010\l  %114 = trunc i8 %113 to i1, !dbg !1019\l  br i1 %114, label %115, label %119, !dbg !1022\l|{<s0>T|<s1>F}}"];
	Node0xd61d80:s0 -> Node0xd61dd0;
	Node0xd61d80:s1 -> Node0xd61e20;
	Node0xd61dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%115:\l115:                                              \l  %116 = load i32*, i32** %17, align 8, !dbg !1023, !tbaa !904\l  %117 = call i64 @wcstombs(i8* noundef null, i32* noundef %116, i64 noundef\l... 0) #23, !dbg !1025\l  %118 = add i64 %117, 1, !dbg !1026\l  store i64 %118, i64* %15, align 8, !dbg !1027, !tbaa !910\l  br label %119, !dbg !1028\l}"];
	Node0xd61dd0 -> Node0xd61e20;
	Node0xd61e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%119:\l119:                                              \l  %120 = load i64, i64* %15, align 8, !dbg !1029, !tbaa !910\l  %121 = call noalias i8* @malloc(i64 noundef %120) #23, !dbg !1030\l  store i8* %121, i8** %16, align 8, !dbg !1031, !tbaa !904\l  %122 = load i8*, i8** %16, align 8, !dbg !1032, !tbaa !904\l  %123 = icmp eq i8* %122, null, !dbg !1034\l  br i1 %123, label %124, label %130, !dbg !1035\l|{<s0>T|<s1>F}}"];
	Node0xd61e20:s0 -> Node0xd61e70;
	Node0xd61e20:s1 -> Node0xd61f60;
	Node0xd61e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%124:\l124:                                              \l  %125 = load i32, i32* %13, align 4, !dbg !1036, !tbaa !916\l  %126 = and i32 %125, 1, !dbg !1039\l  %127 = icmp ne i32 %126, 0, !dbg !1039\l  br i1 %127, label %128, label %129, !dbg !1040\l|{<s0>T|<s1>F}}"];
	Node0xd61e70:s0 -> Node0xd61ec0;
	Node0xd61e70:s1 -> Node0xd61f10;
	Node0xd61ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%128:\l128:                                              \l  br label %141, !dbg !1041\l}"];
	Node0xd61ec0 -> Node0xd62000;
	Node0xd61f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%129:\l129:                                              \l  br label %235, !dbg !1042\l}"];
	Node0xd61f10 -> Node0xd625f0;
	Node0xd61f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%130:\l130:                                              \l  %131 = load i8*, i8** %16, align 8, !dbg !1043, !tbaa !904\l  store i8* %131, i8** %18, align 8, !dbg !1044, !tbaa !904\l  %132 = load i32*, i32** %17, align 8, !dbg !1045, !tbaa !904\l  %133 = load i64*, i64** %11, align 8, !dbg !1046, !tbaa !904\l  %134 = load i64, i64* %133, align 8, !dbg !1047, !tbaa !910\l  %135 = call i64 @wc_truncate(i32* noundef %132, i64 noundef %134), !dbg !1048\l  store i64 %135, i64* %19, align 8, !dbg !1049, !tbaa !910\l  %136 = load i8*, i8** %16, align 8, !dbg !1050, !tbaa !904\l  %137 = load i32*, i32** %17, align 8, !dbg !1051, !tbaa !904\l  %138 = load i64, i64* %15, align 8, !dbg !1052, !tbaa !910\l  %139 = call i64 @wcstombs(i8* noundef %136, i32* noundef %137, i64 noundef\l... %138) #23, !dbg !1053\l  store i64 %139, i64* %20, align 8, !dbg !1054, !tbaa !910\l  br label %140, !dbg !1055\l}"];
	Node0xd61f60 -> Node0xd61fb0;
	Node0xd61fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%140:\l140:                                              \l  br label %141, !dbg !1056\l}"];
	Node0xd61fb0 -> Node0xd62000;
	Node0xd62000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%141:\l141:                                              \l  call void @llvm.dbg.label(metadata !902), !dbg !1057\l  %142 = load i64, i64* %19, align 8, !dbg !1058, !tbaa !910\l  %143 = load i64*, i64** %11, align 8, !dbg !1060, !tbaa !904\l  %144 = load i64, i64* %143, align 8, !dbg !1061, !tbaa !910\l  %145 = icmp ugt i64 %142, %144, !dbg !1062\l  br i1 %145, label %146, label %150, !dbg !1063\l|{<s0>T|<s1>F}}"];
	Node0xd62000:s0 -> Node0xd62050;
	Node0xd62000:s1 -> Node0xd620a0;
	Node0xd62050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%146:\l146:                                              \l  %147 = load i64*, i64** %11, align 8, !dbg !1064, !tbaa !904\l  %148 = load i64, i64* %147, align 8, !dbg !1066, !tbaa !910\l  store i64 %148, i64* %19, align 8, !dbg !1067, !tbaa !910\l  %149 = load i64, i64* %19, align 8, !dbg !1068, !tbaa !910\l  store i64 %149, i64* %20, align 8, !dbg !1069, !tbaa !910\l  br label %150, !dbg !1070\l}"];
	Node0xd62050 -> Node0xd620a0;
	Node0xd620a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%150:\l150:                                              \l  %151 = load i64*, i64** %11, align 8, !dbg !1071, !tbaa !904\l  %152 = load i64, i64* %151, align 8, !dbg !1073, !tbaa !910\l  %153 = load i64, i64* %19, align 8, !dbg !1074, !tbaa !910\l  %154 = icmp ugt i64 %152, %153, !dbg !1075\l  br i1 %154, label %155, label %160, !dbg !1076\l|{<s0>T|<s1>F}}"];
	Node0xd620a0:s0 -> Node0xd620f0;
	Node0xd620a0:s1 -> Node0xd62140;
	Node0xd620f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%155:\l155:                                              \l  %156 = load i64*, i64** %11, align 8, !dbg !1077, !tbaa !904\l  %157 = load i64, i64* %156, align 8, !dbg !1078, !tbaa !910\l  %158 = load i64, i64* %19, align 8, !dbg !1079, !tbaa !910\l  %159 = sub i64 %157, %158, !dbg !1080\l  store i64 %159, i64* %21, align 8, !dbg !1081, !tbaa !910\l  br label %160, !dbg !1082\l}"];
	Node0xd620f0 -> Node0xd62140;
	Node0xd62140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%160:\l160:                                              \l  %161 = load i64, i64* %19, align 8, !dbg !1083, !tbaa !910\l  %162 = load i64*, i64** %11, align 8, !dbg !1084, !tbaa !904\l  store i64 %161, i64* %162, align 8, !dbg !1085, !tbaa !910\l  %163 = bitcast i64* %26 to i8*, !dbg !1086\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %163) #23, !dbg !1086\l  call void @llvm.dbg.declare(metadata i64* %26, metadata !895, metadata\l... !DIExpression()), !dbg !1087\l  %164 = bitcast i64* %27 to i8*, !dbg !1086\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %164) #23, !dbg !1086\l  call void @llvm.dbg.declare(metadata i64* %27, metadata !897, metadata\l... !DIExpression()), !dbg !1088\l  %165 = load i32, i32* %12, align 4, !dbg !1089, !tbaa !914\l  switch i32 %165, label %171 [\l    i32 0, label %166\l    i32 1, label %168\l    i32 2, label %170\l  ], !dbg !1090\l|{<s0>def|<s1>0|<s2>1|<s3>2}}"];
	Node0xd62140:s0 -> Node0xd62280;
	Node0xd62140:s1 -> Node0xd62190;
	Node0xd62140:s2 -> Node0xd621e0;
	Node0xd62140:s3 -> Node0xd62230;
	Node0xd62190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%166:\l166:                                              \l  store i64 0, i64* %26, align 8, !dbg !1091, !tbaa !910\l  %167 = load i64, i64* %21, align 8, !dbg !1093, !tbaa !910\l  store i64 %167, i64* %27, align 8, !dbg !1094, !tbaa !910\l  br label %179, !dbg !1095\l}"];
	Node0xd62190 -> Node0xd622d0;
	Node0xd621e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%168:\l168:                                              \l  %169 = load i64, i64* %21, align 8, !dbg !1096, !tbaa !910\l  store i64 %169, i64* %26, align 8, !dbg !1097, !tbaa !910\l  store i64 0, i64* %27, align 8, !dbg !1098, !tbaa !910\l  br label %179, !dbg !1099\l}"];
	Node0xd621e0 -> Node0xd622d0;
	Node0xd62230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%170:\l170:                                              \l  br label %171, !dbg !1100\l}"];
	Node0xd62230 -> Node0xd62280;
	Node0xd62280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%171:\l171:                                              \l  %172 = load i64, i64* %21, align 8, !dbg !1101, !tbaa !910\l  %173 = udiv i64 %172, 2, !dbg !1102\l  %174 = load i64, i64* %21, align 8, !dbg !1103, !tbaa !910\l  %175 = urem i64 %174, 2, !dbg !1104\l  %176 = add i64 %173, %175, !dbg !1105\l  store i64 %176, i64* %26, align 8, !dbg !1106, !tbaa !910\l  %177 = load i64, i64* %21, align 8, !dbg !1107, !tbaa !910\l  %178 = udiv i64 %177, 2, !dbg !1108\l  store i64 %178, i64* %27, align 8, !dbg !1109, !tbaa !910\l  br label %179, !dbg !1110\l}"];
	Node0xd62280 -> Node0xd622d0;
	Node0xd622d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%179:\l179:                                              \l  %180 = load i32, i32* %13, align 4, !dbg !1111, !tbaa !916\l  %181 = and i32 %180, 4, !dbg !1113\l  %182 = icmp ne i32 %181, 0, !dbg !1113\l  br i1 %182, label %183, label %184, !dbg !1114\l|{<s0>T|<s1>F}}"];
	Node0xd622d0:s0 -> Node0xd62320;
	Node0xd622d0:s1 -> Node0xd62370;
	Node0xd62320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%183:\l183:                                              \l  store i64 0, i64* %26, align 8, !dbg !1115, !tbaa !910\l  br label %184, !dbg !1116\l}"];
	Node0xd62320 -> Node0xd62370;
	Node0xd62370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%184:\l184:                                              \l  %185 = load i32, i32* %13, align 4, !dbg !1117, !tbaa !916\l  %186 = and i32 %185, 8, !dbg !1119\l  %187 = icmp ne i32 %186, 0, !dbg !1119\l  br i1 %187, label %188, label %189, !dbg !1120\l|{<s0>T|<s1>F}}"];
	Node0xd62370:s0 -> Node0xd623c0;
	Node0xd62370:s1 -> Node0xd62410;
	Node0xd623c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%188:\l188:                                              \l  store i64 0, i64* %27, align 8, !dbg !1121, !tbaa !910\l  br label %189, !dbg !1122\l}"];
	Node0xd623c0 -> Node0xd62410;
	Node0xd62410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%189:\l189:                                              \l  %190 = load i64, i64* %10, align 8, !dbg !1123, !tbaa !910\l  %191 = icmp ne i64 %190, 0, !dbg !1124\l  br i1 %191, label %192, label %226, !dbg !1125\l|{<s0>T|<s1>F}}"];
	Node0xd62410:s0 -> Node0xd62460;
	Node0xd62410:s1 -> Node0xd625a0;
	Node0xd62460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%192:\l192:                                              \l  %193 = bitcast i64* %28 to i8*, !dbg !1126\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %193) #23, !dbg !1126\l  call void @llvm.dbg.declare(metadata i64* %28, metadata !898, metadata\l... !DIExpression()), !dbg !1127\l  %194 = bitcast i8** %29 to i8*, !dbg !1128\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %194) #23, !dbg !1128\l  call void @llvm.dbg.declare(metadata i8** %29, metadata !901, metadata\l... !DIExpression()), !dbg !1129\l  %195 = load i8*, i8** %9, align 8, !dbg !1130, !tbaa !904\l  %196 = load i64, i64* %10, align 8, !dbg !1131, !tbaa !910\l  %197 = getelementptr inbounds i8, i8* %195, i64 %196, !dbg !1132\l  %198 = getelementptr inbounds i8, i8* %197, i64 -1, !dbg !1133\l  store i8* %198, i8** %29, align 8, !dbg !1129, !tbaa !904\l  %199 = load i8*, i8** %9, align 8, !dbg !1134, !tbaa !904\l  %200 = load i8*, i8** %29, align 8, !dbg !1135, !tbaa !904\l  %201 = load i64, i64* %26, align 8, !dbg !1136, !tbaa !910\l  %202 = call i8* @mbs_align_pad(i8* noundef %199, i8* noundef %200, i64\l... noundef %201), !dbg !1137\l  store i8* %202, i8** %9, align 8, !dbg !1138, !tbaa !904\l  %203 = load i8*, i8** %29, align 8, !dbg !1139, !tbaa !904\l  %204 = load i8*, i8** %9, align 8, !dbg !1140, !tbaa !904\l  %205 = ptrtoint i8* %203 to i64, !dbg !1141\l  %206 = ptrtoint i8* %204 to i64, !dbg !1141\l  %207 = sub i64 %205, %206, !dbg !1141\l  store i64 %207, i64* %28, align 8, !dbg !1142, !tbaa !910\l  %208 = load i8*, i8** %9, align 8, !dbg !1143, !tbaa !904\l  %209 = load i8*, i8** %18, align 8, !dbg !1144, !tbaa !904\l  %210 = load i64, i64* %20, align 8, !dbg !1145, !tbaa !910\l  %211 = load i64, i64* %28, align 8, !dbg !1145, !tbaa !910\l  %212 = icmp ult i64 %210, %211, !dbg !1145\l  br i1 %212, label %213, label %215, !dbg !1145\l|{<s0>T|<s1>F}}"];
	Node0xd62460:s0 -> Node0xd624b0;
	Node0xd62460:s1 -> Node0xd62500;
	Node0xd624b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%213:\l213:                                              \l  %214 = load i64, i64* %20, align 8, !dbg !1145, !tbaa !910\l  br label %217, !dbg !1145\l}"];
	Node0xd624b0 -> Node0xd62550;
	Node0xd62500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%215:\l215:                                              \l  %216 = load i64, i64* %28, align 8, !dbg !1145, !tbaa !910\l  br label %217, !dbg !1145\l}"];
	Node0xd62500 -> Node0xd62550;
	Node0xd62550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%217:\l217:                                              \l  %218 = phi i64 [ %214, %213 ], [ %216, %215 ], !dbg !1145\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %208, i8* align 1 %209, i64\l... %218, i1 false), !dbg !1146\l  %219 = getelementptr inbounds i8, i8* %208, i64 %218, !dbg !1146\l  store i8* %219, i8** %9, align 8, !dbg !1147, !tbaa !904\l  %220 = load i8*, i8** %9, align 8, !dbg !1148, !tbaa !904\l  %221 = load i8*, i8** %29, align 8, !dbg !1149, !tbaa !904\l  %222 = load i64, i64* %27, align 8, !dbg !1150, !tbaa !910\l  %223 = call i8* @mbs_align_pad(i8* noundef %220, i8* noundef %221, i64\l... noundef %222), !dbg !1151\l  %224 = bitcast i8** %29 to i8*, !dbg !1152\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %224) #23, !dbg !1152\l  %225 = bitcast i64* %28 to i8*, !dbg !1152\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %225) #23, !dbg !1152\l  br label %226, !dbg !1153\l}"];
	Node0xd62550 -> Node0xd625a0;
	Node0xd625a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%226:\l226:                                              \l  %227 = load i64, i64* %20, align 8, !dbg !1154, !tbaa !910\l  %228 = load i64, i64* %26, align 8, !dbg !1155, !tbaa !910\l  %229 = load i64, i64* %27, align 8, !dbg !1156, !tbaa !910\l  %230 = add i64 %228, %229, !dbg !1157\l  %231 = mul i64 %230, 1, !dbg !1158\l  %232 = add i64 %227, %231, !dbg !1159\l  store i64 %232, i64* %14, align 8, !dbg !1160, !tbaa !910\l  %233 = bitcast i64* %27 to i8*, !dbg !1161\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %233) #23, !dbg !1161\l  %234 = bitcast i64* %26 to i8*, !dbg !1161\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %234) #23, !dbg !1161\l  br label %235, !dbg !1162\l}"];
	Node0xd625a0 -> Node0xd625f0;
	Node0xd625f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%235:\l235:                                              \l  call void @llvm.dbg.label(metadata !903), !dbg !1163\l  %236 = load i32*, i32** %17, align 8, !dbg !1164, !tbaa !904\l  %237 = bitcast i32* %236 to i8*, !dbg !1164\l  call void @free(i8* noundef %237) #23, !dbg !1165\l  %238 = load i8*, i8** %16, align 8, !dbg !1166, !tbaa !904\l  call void @free(i8* noundef %238) #23, !dbg !1167\l  %239 = load i64, i64* %14, align 8, !dbg !1168, !tbaa !910\l  store i64 %239, i64* %7, align 8, !dbg !1169\l  store i32 1, i32* %25, align 4\l  br label %240, !dbg !1169\l}"];
	Node0xd625f0 -> Node0xd62640;
	Node0xd62640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%240:\l240:                                              \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %23) #23, !dbg !1170\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #23, !dbg !1170\l  %241 = bitcast i64* %21 to i8*, !dbg !1170\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %241) #23, !dbg !1170\l  %242 = bitcast i64* %20 to i8*, !dbg !1170\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %242) #23, !dbg !1170\l  %243 = bitcast i64* %19 to i8*, !dbg !1170\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %243) #23, !dbg !1170\l  %244 = bitcast i8** %18 to i8*, !dbg !1170\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %244) #23, !dbg !1170\l  %245 = bitcast i32** %17 to i8*, !dbg !1170\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %245) #23, !dbg !1170\l  %246 = bitcast i8** %16 to i8*, !dbg !1170\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %246) #23, !dbg !1170\l  %247 = bitcast i64* %15 to i8*, !dbg !1170\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %247) #23, !dbg !1170\l  %248 = bitcast i64* %14 to i8*, !dbg !1170\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %248) #23, !dbg !1170\l  %249 = load i64, i64* %7, align 8, !dbg !1170\l  ret i64 %249, !dbg !1170\l}"];
}
