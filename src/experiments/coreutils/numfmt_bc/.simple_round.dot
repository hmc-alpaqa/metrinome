digraph "CFG for 'simple_round' function" {
	label="CFG for 'simple_round' function";

	Node0xc9b9d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca x86_fp80, align 16\l  %4 = alloca x86_fp80, align 16\l  %5 = alloca i32, align 4\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i32, align 4\l  store x86_fp80 %0, x86_fp80* %4, align 16, !tbaa !880\l  call void @llvm.dbg.declare(metadata x86_fp80* %4, metadata !874, metadata\l... !DIExpression()), !dbg !884\l  store i32 %1, i32* %5, align 4, !tbaa !885\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !875, metadata\l... !DIExpression()), !dbg !886\l  %9 = bitcast i64* %6 to i8*, !dbg !887\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #23, !dbg !887\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !876, metadata\l... !DIExpression()), !dbg !888\l  %10 = bitcast i64* %7 to i8*, !dbg !889\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #23, !dbg !889\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !879, metadata\l... !DIExpression()), !dbg !890\l  %11 = load x86_fp80, x86_fp80* %4, align 16, !dbg !891, !tbaa !880\l  %12 = fdiv x86_fp80 %11, 0xK403DFFFFFFFFFFFFFFFE, !dbg !892\l  %13 = fptosi x86_fp80 %12 to i64, !dbg !891\l  store i64 %13, i64* %7, align 8, !dbg !890, !tbaa !893\l  %14 = load i64, i64* %7, align 8, !dbg !895, !tbaa !893\l  %15 = sitofp i64 %14 to x86_fp80, !dbg !895\l  %16 = load x86_fp80, x86_fp80* %4, align 16, !dbg !896, !tbaa !880\l  %17 = call x86_fp80 @llvm.fmuladd.f80(x86_fp80 0xKC03DFFFFFFFFFFFFFFFE,\l... x86_fp80 %15, x86_fp80 %16), !dbg !896\l  store x86_fp80 %17, x86_fp80* %4, align 16, !dbg !896, !tbaa !880\l  %18 = load i32, i32* %5, align 4, !dbg !897, !tbaa !885\l  switch i32 %18, label %34 [\l    i32 0, label %19\l    i32 1, label %22\l    i32 2, label %25\l    i32 3, label %28\l    i32 4, label %31\l  ], !dbg !898\l|{<s0>def|<s1>0|<s2>1|<s3>2|<s4>3|<s5>4}}"];
	Node0xc9b9d0:s0 -> Node0xc9bbb0;
	Node0xc9b9d0:s1 -> Node0xc9ba20;
	Node0xc9b9d0:s2 -> Node0xc9ba70;
	Node0xc9b9d0:s3 -> Node0xc9bac0;
	Node0xc9b9d0:s4 -> Node0xc9bb10;
	Node0xc9b9d0:s5 -> Node0xc9bb60;
	Node0xc9ba20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%19:\l19:                                               \l  %20 = load x86_fp80, x86_fp80* %4, align 16, !dbg !899, !tbaa !880\l  %21 = call i64 @simple_round_ceiling(x86_fp80 noundef %20), !dbg !901\l  store i64 %21, i64* %6, align 8, !dbg !902, !tbaa !893\l  br label %35, !dbg !903\l}"];
	Node0xc9ba20 -> Node0xc9bc00;
	Node0xc9ba70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%22:\l22:                                               \l  %23 = load x86_fp80, x86_fp80* %4, align 16, !dbg !904, !tbaa !880\l  %24 = call i64 @simple_round_floor(x86_fp80 noundef %23), !dbg !905\l  store i64 %24, i64* %6, align 8, !dbg !906, !tbaa !893\l  br label %35, !dbg !907\l}"];
	Node0xc9ba70 -> Node0xc9bc00;
	Node0xc9bac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%25:\l25:                                               \l  %26 = load x86_fp80, x86_fp80* %4, align 16, !dbg !908, !tbaa !880\l  %27 = call i64 @simple_round_from_zero(x86_fp80 noundef %26), !dbg !909\l  store i64 %27, i64* %6, align 8, !dbg !910, !tbaa !893\l  br label %35, !dbg !911\l}"];
	Node0xc9bac0 -> Node0xc9bc00;
	Node0xc9bb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%28:\l28:                                               \l  %29 = load x86_fp80, x86_fp80* %4, align 16, !dbg !912, !tbaa !880\l  %30 = call i64 @simple_round_to_zero(x86_fp80 noundef %29), !dbg !913\l  store i64 %30, i64* %6, align 8, !dbg !914, !tbaa !893\l  br label %35, !dbg !915\l}"];
	Node0xc9bb10 -> Node0xc9bc00;
	Node0xc9bb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%31:\l31:                                               \l  %32 = load x86_fp80, x86_fp80* %4, align 16, !dbg !916, !tbaa !880\l  %33 = call i64 @simple_round_nearest(x86_fp80 noundef %32), !dbg !917\l  store i64 %33, i64* %6, align 8, !dbg !918, !tbaa !893\l  br label %35, !dbg !919\l}"];
	Node0xc9bb60 -> Node0xc9bc00;
	Node0xc9bbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%34:\l34:                                               \l  store x86_fp80 0xK00000000000000000000, x86_fp80* %3, align 16, !dbg !920\l  store i32 1, i32* %8, align 4\l  br label %41, !dbg !920\l}"];
	Node0xc9bbb0 -> Node0xc9bc50;
	Node0xc9bc00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%35:\l35:                                               \l  %36 = load i64, i64* %7, align 8, !dbg !921, !tbaa !893\l  %37 = sitofp i64 %36 to x86_fp80, !dbg !921\l  %38 = load i64, i64* %6, align 8, !dbg !922, !tbaa !893\l  %39 = sitofp i64 %38 to x86_fp80, !dbg !922\l  %40 = call x86_fp80 @llvm.fmuladd.f80(x86_fp80 0xK403DFFFFFFFFFFFFFFFE,\l... x86_fp80 %37, x86_fp80 %39), !dbg !923\l  store x86_fp80 %40, x86_fp80* %3, align 16, !dbg !924\l  store i32 1, i32* %8, align 4\l  br label %41, !dbg !924\l}"];
	Node0xc9bc00 -> Node0xc9bc50;
	Node0xc9bc50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = bitcast i64* %7 to i8*, !dbg !925\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #23, !dbg !925\l  %43 = bitcast i64* %6 to i8*, !dbg !925\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #23, !dbg !925\l  %44 = load x86_fp80, x86_fp80* %3, align 16, !dbg !925\l  ret x86_fp80 %44, !dbg !925\l}"];
}
