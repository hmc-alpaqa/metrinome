digraph "CFG for 'xalloc_die' function" {
	label="CFG for 'xalloc_die' function";

	Node0x141d030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%0:\l  %1 = alloca i32, align 4\l  %2 = bitcast i32* %1 to i8*, !dbg !690\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #21, !dbg !690\l  call void @llvm.dbg.declare(metadata i32* %1, metadata !687, metadata\l... !DIExpression()), !dbg !690\l  %3 = load volatile i32, i32* @exit_failure, align 4, !dbg !690, !tbaa !691\l  store i32 %3, i32* %1, align 4, !dbg !690, !tbaa !691\l  %4 = load i32, i32* %1, align 4, !dbg !690, !tbaa !691\l  call void (i32, i32, i8*, ...) @error(i32 noundef %4, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0),\l... i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.129, i64 0,\l... i64 0)), !dbg !690\l  %5 = load i32, i32* %1, align 4, !dbg !690, !tbaa !691\l  %6 = icmp ne i32 %5, 0, !dbg !690\l  br i1 %6, label %7, label %9, !dbg !690\l|{<s0>T|<s1>F}}"];
	Node0x141d030:s0 -> Node0x141d920;
	Node0x141d030:s1 -> Node0x141d9c0;
	Node0x141d920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%7:\l7:                                                \l  unreachable, !dbg !690\l}"];
	Node0x141d970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#3d50c370",label="{%8:\l8:                                                \l  br label %10, !dbg !690\l}"];
	Node0x141d970 -> Node0x141da10;
	Node0x141d9c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l9:                                                \l  br label %10, !dbg !690\l}"];
	Node0x141d9c0 -> Node0x141da10;
	Node0x141da10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l10:                                               \l  %11 = bitcast i32* %1 to i8*, !dbg !695\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %11) #21, !dbg !695\l  call void @abort() #22, !dbg !696\l  unreachable, !dbg !696\l}"];
}
