digraph "CFG for 'validate_tab_stops' function" {
	label="CFG for 'validate_tab_stops' function";

	Node0x1177880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%2:\l  %3 = alloca i64*, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  store i64* %0, i64** %3, align 8, !tbaa !769\l  call void @llvm.dbg.declare(metadata i64** %3, metadata !764, metadata\l... !DIExpression()), !dbg !773\l  store i64 %1, i64* %4, align 8, !tbaa !774\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !765, metadata\l... !DIExpression()), !dbg !776\l  %7 = bitcast i64* %5 to i8*, !dbg !777\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #21, !dbg !777\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !766, metadata\l... !DIExpression()), !dbg !778\l  store i64 0, i64* %5, align 8, !dbg !778, !tbaa !774\l  %8 = bitcast i64* %6 to i8*, !dbg !779\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #21, !dbg !779\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !767, metadata\l... !DIExpression()), !dbg !780\l  store i64 0, i64* %6, align 8, !dbg !780, !tbaa !774\l  br label %9, !dbg !779\l}"];
	Node0x1177880 -> Node0x1177940;
	Node0x1177940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l9:                                                \l  %10 = load i64, i64* %6, align 8, !dbg !781, !tbaa !774\l  %11 = load i64, i64* %4, align 8, !dbg !783, !tbaa !774\l  %12 = icmp ult i64 %10, %11, !dbg !784\l  br i1 %12, label %15, label %13, !dbg !785\l|{<s0>T|<s1>F}}"];
	Node0x1177940:s0 -> Node0x11779e0;
	Node0x1177940:s1 -> Node0x1177990;
	Node0x1177990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%13:\l13:                                               \l  %14 = bitcast i64* %6 to i8*, !dbg !786\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %14) #21, !dbg !786\l  br label %38\l}"];
	Node0x1177990 -> Node0x1177bc0;
	Node0x11779e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  %16 = load i64*, i64** %3, align 8, !dbg !787, !tbaa !769\l  %17 = load i64, i64* %6, align 8, !dbg !790, !tbaa !774\l  %18 = getelementptr inbounds i64, i64* %16, i64 %17, !dbg !787\l  %19 = load i64, i64* %18, align 8, !dbg !787, !tbaa !774\l  %20 = icmp eq i64 %19, 0, !dbg !791\l  br i1 %20, label %21, label %22, !dbg !792\l|{<s0>T|<s1>F}}"];
	Node0x11779e0:s0 -> Node0x1177a30;
	Node0x11779e0:s1 -> Node0x1177a80;
	Node0x1177a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%21:\l21:                                               \l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.47, i64 0, i64\l... 0)), !dbg !793\l  unreachable, !dbg !793\l}"];
	Node0x1177a80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = load i64*, i64** %3, align 8, !dbg !794, !tbaa !769\l  %24 = load i64, i64* %6, align 8, !dbg !796, !tbaa !774\l  %25 = getelementptr inbounds i64, i64* %23, i64 %24, !dbg !794\l  %26 = load i64, i64* %25, align 8, !dbg !794, !tbaa !774\l  %27 = load i64, i64* %5, align 8, !dbg !797, !tbaa !774\l  %28 = icmp ule i64 %26, %27, !dbg !798\l  br i1 %28, label %29, label %30, !dbg !799\l|{<s0>T|<s1>F}}"];
	Node0x1177a80:s0 -> Node0x1177ad0;
	Node0x1177a80:s1 -> Node0x1177b20;
	Node0x1177ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%29:\l29:                                               \l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14.48, i64 0, i64\l... 0)), !dbg !800\l  unreachable, !dbg !800\l}"];
	Node0x1177b20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = load i64*, i64** %3, align 8, !dbg !801, !tbaa !769\l  %32 = load i64, i64* %6, align 8, !dbg !802, !tbaa !774\l  %33 = getelementptr inbounds i64, i64* %31, i64 %32, !dbg !801\l  %34 = load i64, i64* %33, align 8, !dbg !801, !tbaa !774\l  store i64 %34, i64* %5, align 8, !dbg !803, !tbaa !774\l  br label %35, !dbg !804\l}"];
	Node0x1177b20 -> Node0x1177b70;
	Node0x1177b70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = load i64, i64* %6, align 8, !dbg !805, !tbaa !774\l  %37 = add i64 %36, 1, !dbg !805\l  store i64 %37, i64* %6, align 8, !dbg !805, !tbaa !774\l  br label %9, !dbg !786, !llvm.loop !806\l}"];
	Node0x1177b70 -> Node0x1177940;
	Node0x1177bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%38:\l38:                                               \l  %39 = load i64, i64* @increment_size, align 8, !dbg !810, !tbaa !774\l  %40 = icmp ne i64 %39, 0, !dbg !810\l  br i1 %40, label %41, label %45, !dbg !812\l|{<s0>T|<s1>F}}"];
	Node0x1177bc0:s0 -> Node0x1177c10;
	Node0x1177bc0:s1 -> Node0x1177cb0;
	Node0x1177c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%41:\l41:                                               \l  %42 = load i64, i64* @extend_size, align 8, !dbg !813, !tbaa !774\l  %43 = icmp ne i64 %42, 0, !dbg !813\l  br i1 %43, label %44, label %45, !dbg !814\l|{<s0>T|<s1>F}}"];
	Node0x1177c10:s0 -> Node0x1177c60;
	Node0x1177c10:s1 -> Node0x1177cb0;
	Node0x1177c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#536edd70",label="{%44:\l44:                                               \l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.49, i64 0, i64\l... 0)), !dbg !815\l  unreachable, !dbg !815\l}"];
	Node0x1177cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%45:\l45:                                               \l  %46 = bitcast i64* %5 to i8*, !dbg !816\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #21, !dbg !816\l  ret void, !dbg !816\l}"];
}
