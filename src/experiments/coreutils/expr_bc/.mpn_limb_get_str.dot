digraph "CFG for 'mpn_limb_get_str' function" {
	label="CFG for 'mpn_limb_get_str' function";

	Node0x25f1700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca %struct.gmp_div_inverse*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i32, align 4\l  %16 = alloca i64, align 8\l  %17 = alloca i64, align 8\l  %18 = alloca i64, align 8\l  %19 = alloca i64, align 8\l  %20 = alloca i32, align 4\l  %21 = alloca i32, align 4\l  %22 = alloca i32, align 4\l  %23 = alloca i32, align 4\l  %24 = alloca i64, align 8\l  %25 = alloca i64, align 8\l  %26 = alloca i64, align 8\l  store i8* %0, i8** %4, align 8, !tbaa !831\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !799, metadata\l... !DIExpression()), !dbg !835\l  store i64 %1, i64* %5, align 8, !tbaa !836\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !800, metadata\l... !DIExpression()), !dbg !838\l  store %struct.gmp_div_inverse* %2, %struct.gmp_div_inverse** %6, align 8,\l... !tbaa !831\l  call void @llvm.dbg.declare(metadata %struct.gmp_div_inverse** %6, metadata\l... !801, metadata !DIExpression()), !dbg !839\l  %27 = bitcast i64* %7 to i8*, !dbg !840\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #22, !dbg !840\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !802, metadata\l... !DIExpression()), !dbg !841\l  store i64 0, i64* %7, align 8, !dbg !842, !tbaa !836\l  br label %28, !dbg !843\l}"];
	Node0x25f1700 -> Node0x26011f0;
	Node0x26011f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = load i64, i64* %5, align 8, !dbg !844, !tbaa !836\l  %30 = icmp ugt i64 %29, 0, !dbg !845\l  br i1 %30, label %31, label %230, !dbg !846\l|{<s0>T|<s1>F}}"];
	Node0x26011f0:s0 -> Node0x2601240;
	Node0x26011f0:s1 -> Node0x26017e0;
	Node0x2601240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = bitcast i64* %8 to i8*, !dbg !847\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #22, !dbg !847\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !803, metadata\l... !DIExpression()), !dbg !848\l  %33 = bitcast i64* %9 to i8*, !dbg !847\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #22, !dbg !847\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !807, metadata\l... !DIExpression()), !dbg !849\l  %34 = bitcast i64* %10 to i8*, !dbg !847\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #22, !dbg !847\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !808, metadata\l... !DIExpression()), !dbg !850\l  %35 = load i64, i64* %5, align 8, !dbg !851, !tbaa !836\l  %36 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !852, !tbaa !831\l  %37 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %36, i32 0, i32 0, !dbg !853\l  %38 = load i32, i32* %37, align 8, !dbg !853, !tbaa !854\l  %39 = zext i32 %38 to i64, !dbg !852\l  %40 = sub i64 64, %39, !dbg !857\l  %41 = lshr i64 %35, %40, !dbg !858\l  store i64 %41, i64* %8, align 8, !dbg !859, !tbaa !836\l  %42 = load i64, i64* %5, align 8, !dbg !860, !tbaa !836\l  %43 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !861, !tbaa !831\l  %44 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %43, i32 0, i32 0, !dbg !862\l  %45 = load i32, i32* %44, align 8, !dbg !862, !tbaa !854\l  %46 = zext i32 %45 to i64, !dbg !863\l  %47 = shl i64 %42, %46, !dbg !863\l  store i64 %47, i64* %9, align 8, !dbg !864, !tbaa !836\l  br label %48, !dbg !865\l}"];
	Node0x2601240 -> Node0x2601290;
	Node0x2601290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = bitcast i64* %11 to i8*, !dbg !866\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #22, !dbg !866\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !809, metadata\l... !DIExpression()), !dbg !866\l  %50 = bitcast i64* %12 to i8*, !dbg !866\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #22, !dbg !866\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !811, metadata\l... !DIExpression()), !dbg !866\l  %51 = bitcast i64* %13 to i8*, !dbg !866\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #22, !dbg !866\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !812, metadata\l... !DIExpression()), !dbg !866\l  %52 = bitcast i64* %14 to i8*, !dbg !866\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #22, !dbg !866\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !813, metadata\l... !DIExpression()), !dbg !866\l  br label %53, !dbg !866\l}"];
	Node0x2601290 -> Node0x26012e0;
	Node0x26012e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = bitcast i32* %15 to i8*, !dbg !867\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #22, !dbg !867\l  call void @llvm.dbg.declare(metadata i32* %15, metadata !814, metadata\l... !DIExpression()), !dbg !867\l  store i32 64, i32* %15, align 4, !dbg !867, !tbaa !868\l  %55 = bitcast i64* %16 to i8*, !dbg !869\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #22, !dbg !869\l  call void @llvm.dbg.declare(metadata i64* %16, metadata !816, metadata\l... !DIExpression()), !dbg !869\l  %56 = bitcast i64* %17 to i8*, !dbg !869\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #22, !dbg !869\l  call void @llvm.dbg.declare(metadata i64* %17, metadata !820, metadata\l... !DIExpression()), !dbg !869\l  %57 = bitcast i64* %18 to i8*, !dbg !869\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #22, !dbg !869\l  call void @llvm.dbg.declare(metadata i64* %18, metadata !821, metadata\l... !DIExpression()), !dbg !869\l  %58 = bitcast i64* %19 to i8*, !dbg !869\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %58) #22, !dbg !869\l  call void @llvm.dbg.declare(metadata i64* %19, metadata !822, metadata\l... !DIExpression()), !dbg !869\l  %59 = bitcast i32* %20 to i8*, !dbg !869\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %59) #22, !dbg !869\l  call void @llvm.dbg.declare(metadata i32* %20, metadata !823, metadata\l... !DIExpression()), !dbg !869\l  %60 = bitcast i32* %21 to i8*, !dbg !869\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #22, !dbg !869\l  call void @llvm.dbg.declare(metadata i32* %21, metadata !824, metadata\l... !DIExpression()), !dbg !869\l  %61 = bitcast i32* %22 to i8*, !dbg !869\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %61) #22, !dbg !869\l  call void @llvm.dbg.declare(metadata i32* %22, metadata !825, metadata\l... !DIExpression()), !dbg !869\l  %62 = bitcast i32* %23 to i8*, !dbg !869\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %62) #22, !dbg !869\l  call void @llvm.dbg.declare(metadata i32* %23, metadata !826, metadata\l... !DIExpression()), !dbg !869\l  %63 = bitcast i64* %24 to i8*, !dbg !869\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %63) #22, !dbg !869\l  call void @llvm.dbg.declare(metadata i64* %24, metadata !827, metadata\l... !DIExpression()), !dbg !869\l  %64 = load i64, i64* %8, align 8, !dbg !869, !tbaa !836\l  store i64 %64, i64* %24, align 8, !dbg !869, !tbaa !836\l  %65 = bitcast i64* %25 to i8*, !dbg !869\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %65) #22, !dbg !869\l  call void @llvm.dbg.declare(metadata i64* %25, metadata !828, metadata\l... !DIExpression()), !dbg !869\l  %66 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !869, !tbaa !831\l  %67 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %66, i32 0, i32 3, !dbg !869\l  %68 = load i64, i64* %67, align 8, !dbg !869, !tbaa !870\l  store i64 %68, i64* %25, align 8, !dbg !869, !tbaa !836\l  %69 = load i64, i64* %24, align 8, !dbg !869, !tbaa !836\l  %70 = and i64 %69, 4294967295, !dbg !869\l  %71 = trunc i64 %70 to i32, !dbg !869\l  store i32 %71, i32* %20, align 4, !dbg !869, !tbaa !868\l  %72 = load i64, i64* %24, align 8, !dbg !869, !tbaa !836\l  %73 = lshr i64 %72, 32, !dbg !869\l  %74 = trunc i64 %73 to i32, !dbg !869\l  store i32 %74, i32* %22, align 4, !dbg !869, !tbaa !868\l  %75 = load i64, i64* %25, align 8, !dbg !869, !tbaa !836\l  %76 = and i64 %75, 4294967295, !dbg !869\l  %77 = trunc i64 %76 to i32, !dbg !869\l  store i32 %77, i32* %21, align 4, !dbg !869, !tbaa !868\l  %78 = load i64, i64* %25, align 8, !dbg !869, !tbaa !836\l  %79 = lshr i64 %78, 32, !dbg !869\l  %80 = trunc i64 %79 to i32, !dbg !869\l  store i32 %80, i32* %23, align 4, !dbg !869, !tbaa !868\l  %81 = load i32, i32* %20, align 4, !dbg !869, !tbaa !868\l  %82 = zext i32 %81 to i64, !dbg !869\l  %83 = load i32, i32* %21, align 4, !dbg !869, !tbaa !868\l  %84 = zext i32 %83 to i64, !dbg !869\l  %85 = mul i64 %82, %84, !dbg !869\l  store i64 %85, i64* %16, align 8, !dbg !869, !tbaa !836\l  %86 = load i32, i32* %20, align 4, !dbg !869, !tbaa !868\l  %87 = zext i32 %86 to i64, !dbg !869\l  %88 = load i32, i32* %23, align 4, !dbg !869, !tbaa !868\l  %89 = zext i32 %88 to i64, !dbg !869\l  %90 = mul i64 %87, %89, !dbg !869\l  store i64 %90, i64* %17, align 8, !dbg !869, !tbaa !836\l  %91 = load i32, i32* %22, align 4, !dbg !869, !tbaa !868\l  %92 = zext i32 %91 to i64, !dbg !869\l  %93 = load i32, i32* %21, align 4, !dbg !869, !tbaa !868\l  %94 = zext i32 %93 to i64, !dbg !869\l  %95 = mul i64 %92, %94, !dbg !869\l  store i64 %95, i64* %18, align 8, !dbg !869, !tbaa !836\l  %96 = load i32, i32* %22, align 4, !dbg !869, !tbaa !868\l  %97 = zext i32 %96 to i64, !dbg !869\l  %98 = load i32, i32* %23, align 4, !dbg !869, !tbaa !868\l  %99 = zext i32 %98 to i64, !dbg !869\l  %100 = mul i64 %97, %99, !dbg !869\l  store i64 %100, i64* %19, align 8, !dbg !869, !tbaa !836\l  %101 = load i64, i64* %16, align 8, !dbg !869, !tbaa !836\l  %102 = lshr i64 %101, 32, !dbg !869\l  %103 = load i64, i64* %17, align 8, !dbg !869, !tbaa !836\l  %104 = add i64 %103, %102, !dbg !869\l  store i64 %104, i64* %17, align 8, !dbg !869, !tbaa !836\l  %105 = load i64, i64* %18, align 8, !dbg !869, !tbaa !836\l  %106 = load i64, i64* %17, align 8, !dbg !869, !tbaa !836\l  %107 = add i64 %106, %105, !dbg !869\l  store i64 %107, i64* %17, align 8, !dbg !869, !tbaa !836\l  %108 = load i64, i64* %17, align 8, !dbg !871, !tbaa !836\l  %109 = load i64, i64* %18, align 8, !dbg !871, !tbaa !836\l  %110 = icmp ult i64 %108, %109, !dbg !871\l  br i1 %110, label %111, label %114, !dbg !869\l|{<s0>T|<s1>F}}"];
	Node0x26012e0:s0 -> Node0x2601330;
	Node0x26012e0:s1 -> Node0x2601380;
	Node0x2601330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%111:\l111:                                              \l  %112 = load i64, i64* %19, align 8, !dbg !871, !tbaa !836\l  %113 = add i64 %112, 4294967296, !dbg !871\l  store i64 %113, i64* %19, align 8, !dbg !871, !tbaa !836\l  br label %114, !dbg !871\l}"];
	Node0x2601330 -> Node0x2601380;
	Node0x2601380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  %115 = load i64, i64* %19, align 8, !dbg !869, !tbaa !836\l  %116 = load i64, i64* %17, align 8, !dbg !869, !tbaa !836\l  %117 = lshr i64 %116, 32, !dbg !869\l  %118 = add i64 %115, %117, !dbg !869\l  store i64 %118, i64* %11, align 8, !dbg !869, !tbaa !836\l  %119 = load i64, i64* %17, align 8, !dbg !869, !tbaa !836\l  %120 = shl i64 %119, 32, !dbg !869\l  %121 = load i64, i64* %16, align 8, !dbg !869, !tbaa !836\l  %122 = and i64 %121, 4294967295, !dbg !869\l  %123 = add i64 %120, %122, !dbg !869\l  store i64 %123, i64* %12, align 8, !dbg !869, !tbaa !836\l  %124 = bitcast i64* %25 to i8*, !dbg !873\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %124) #22, !dbg !873\l  %125 = bitcast i64* %24 to i8*, !dbg !873\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #22, !dbg !873\l  %126 = bitcast i32* %23 to i8*, !dbg !873\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %126) #22, !dbg !873\l  %127 = bitcast i32* %22 to i8*, !dbg !873\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %127) #22, !dbg !873\l  %128 = bitcast i32* %21 to i8*, !dbg !873\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %128) #22, !dbg !873\l  %129 = bitcast i32* %20 to i8*, !dbg !873\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %129) #22, !dbg !873\l  %130 = bitcast i64* %19 to i8*, !dbg !873\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %130) #22, !dbg !873\l  %131 = bitcast i64* %18 to i8*, !dbg !873\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %131) #22, !dbg !873\l  %132 = bitcast i64* %17 to i8*, !dbg !873\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %132) #22, !dbg !873\l  %133 = bitcast i64* %16 to i8*, !dbg !873\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %133) #22, !dbg !873\l  %134 = bitcast i32* %15 to i8*, !dbg !866\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %134) #22, !dbg !866\l  br label %135, !dbg !867\l}"];
	Node0x2601380 -> Node0x26013d0;
	Node0x26013d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%135:\l135:                                              \l  br label %136, !dbg !867\l}"];
	Node0x26013d0 -> Node0x2601420;
	Node0x2601420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%136:\l136:                                              \l  br label %137, !dbg !866\l}"];
	Node0x2601420 -> Node0x2601470;
	Node0x2601470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%137:\l137:                                              \l  %138 = bitcast i64* %26 to i8*, !dbg !874\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %138) #22, !dbg !874\l  call void @llvm.dbg.declare(metadata i64* %26, metadata !829, metadata\l... !DIExpression()), !dbg !874\l  %139 = load i64, i64* %12, align 8, !dbg !874, !tbaa !836\l  %140 = load i64, i64* %9, align 8, !dbg !874, !tbaa !836\l  %141 = add i64 %139, %140, !dbg !874\l  store i64 %141, i64* %26, align 8, !dbg !874, !tbaa !836\l  %142 = load i64, i64* %11, align 8, !dbg !874, !tbaa !836\l  %143 = load i64, i64* %8, align 8, !dbg !874, !tbaa !836\l  %144 = add i64 %143, 1, !dbg !874\l  %145 = add i64 %142, %144, !dbg !874\l  %146 = load i64, i64* %26, align 8, !dbg !874, !tbaa !836\l  %147 = load i64, i64* %12, align 8, !dbg !874, !tbaa !836\l  %148 = icmp ult i64 %146, %147, !dbg !874\l  %149 = zext i1 %148 to i32, !dbg !874\l  %150 = sext i32 %149 to i64, !dbg !874\l  %151 = add i64 %145, %150, !dbg !874\l  store i64 %151, i64* %11, align 8, !dbg !874, !tbaa !836\l  %152 = load i64, i64* %26, align 8, !dbg !874, !tbaa !836\l  store i64 %152, i64* %12, align 8, !dbg !874, !tbaa !836\l  %153 = bitcast i64* %26 to i8*, !dbg !866\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %153) #22, !dbg !866\l  br label %154, !dbg !874\l}"];
	Node0x2601470 -> Node0x26014c0;
	Node0x26014c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%154:\l154:                                              \l  br label %155, !dbg !874\l}"];
	Node0x26014c0 -> Node0x2601510;
	Node0x2601510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%155:\l155:                                              \l  %156 = load i64, i64* %9, align 8, !dbg !866, !tbaa !836\l  %157 = load i64, i64* %11, align 8, !dbg !866, !tbaa !836\l  %158 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !866, !tbaa !831\l  %159 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %158, i32 0, i32 1, !dbg !866\l  %160 = load i64, i64* %159, align 8, !dbg !866, !tbaa !875\l  %161 = mul i64 %157, %160, !dbg !866\l  %162 = sub i64 %156, %161, !dbg !866\l  store i64 %162, i64* %13, align 8, !dbg !866, !tbaa !836\l  %163 = load i64, i64* %13, align 8, !dbg !866, !tbaa !836\l  %164 = load i64, i64* %12, align 8, !dbg !866, !tbaa !836\l  %165 = icmp ugt i64 %163, %164, !dbg !866\l  %166 = zext i1 %165 to i32, !dbg !866\l  %167 = sext i32 %166 to i64, !dbg !866\l  %168 = sub i64 0, %167, !dbg !866\l  store i64 %168, i64* %14, align 8, !dbg !866, !tbaa !836\l  %169 = load i64, i64* %14, align 8, !dbg !866, !tbaa !836\l  %170 = load i64, i64* %11, align 8, !dbg !866, !tbaa !836\l  %171 = add i64 %170, %169, !dbg !866\l  store i64 %171, i64* %11, align 8, !dbg !866, !tbaa !836\l  %172 = load i64, i64* %14, align 8, !dbg !866, !tbaa !836\l  %173 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !866, !tbaa !831\l  %174 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %173, i32 0, i32 1, !dbg !866\l  %175 = load i64, i64* %174, align 8, !dbg !866, !tbaa !875\l  %176 = and i64 %172, %175, !dbg !866\l  %177 = load i64, i64* %13, align 8, !dbg !866, !tbaa !836\l  %178 = add i64 %177, %176, !dbg !866\l  store i64 %178, i64* %13, align 8, !dbg !866, !tbaa !836\l  %179 = load i64, i64* %13, align 8, !dbg !876, !tbaa !836\l  %180 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !876, !tbaa !831\l  %181 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %180, i32 0, i32 1, !dbg !876\l  %182 = load i64, i64* %181, align 8, !dbg !876, !tbaa !875\l  %183 = icmp uge i64 %179, %182, !dbg !876\l  br i1 %183, label %184, label %192, !dbg !866\l|{<s0>T|<s1>F}}"];
	Node0x2601510:s0 -> Node0x2601560;
	Node0x2601510:s1 -> Node0x26015b0;
	Node0x2601560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%184:\l184:                                              \l  %185 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !878, !tbaa !831\l  %186 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %185, i32 0, i32 1, !dbg !878\l  %187 = load i64, i64* %186, align 8, !dbg !878, !tbaa !875\l  %188 = load i64, i64* %13, align 8, !dbg !878, !tbaa !836\l  %189 = sub i64 %188, %187, !dbg !878\l  store i64 %189, i64* %13, align 8, !dbg !878, !tbaa !836\l  %190 = load i64, i64* %11, align 8, !dbg !878, !tbaa !836\l  %191 = add i64 %190, 1, !dbg !878\l  store i64 %191, i64* %11, align 8, !dbg !878, !tbaa !836\l  br label %192, !dbg !878\l}"];
	Node0x2601560 -> Node0x26015b0;
	Node0x26015b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%192:\l192:                                              \l  %193 = load i64, i64* %13, align 8, !dbg !866, !tbaa !836\l  store i64 %193, i64* %10, align 8, !dbg !866, !tbaa !836\l  %194 = load i64, i64* %11, align 8, !dbg !866, !tbaa !836\l  store i64 %194, i64* %5, align 8, !dbg !866, !tbaa !836\l  %195 = bitcast i64* %14 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %195) #22, !dbg !865\l  %196 = bitcast i64* %13 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #22, !dbg !865\l  %197 = bitcast i64* %12 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #22, !dbg !865\l  %198 = bitcast i64* %11 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #22, !dbg !865\l  br label %199, !dbg !866\l}"];
	Node0x26015b0 -> Node0x2601600;
	Node0x2601600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%199:\l199:                                              \l  br label %200, !dbg !866\l}"];
	Node0x2601600 -> Node0x2601650;
	Node0x2601650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%200:\l200:                                              \l  %201 = load i64, i64* %10, align 8, !dbg !880, !tbaa !836\l  %202 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !880, !tbaa !831\l  %203 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %202, i32 0, i32 0, !dbg !880\l  %204 = load i32, i32* %203, align 8, !dbg !880, !tbaa !854\l  %205 = zext i32 %204 to i64, !dbg !880\l  %206 = sub i64 64, %205, !dbg !880\l  %207 = lshr i64 -1, %206, !dbg !880\l  %208 = and i64 %201, %207, !dbg !880\l  %209 = icmp eq i64 %208, 0, !dbg !880\l  br i1 %209, label %210, label %211, !dbg !883\l|{<s0>T|<s1>F}}"];
	Node0x2601650:s0 -> Node0x26016a0;
	Node0x2601650:s1 -> Node0x26016f0;
	Node0x26016a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%210:\l210:                                              \l  br label %212, !dbg !883\l}"];
	Node0x26016a0 -> Node0x2601740;
	Node0x26016f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%211:\l211:                                              \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([59 x i8], [59\l... x i8]* @.str.46.98, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 1268, i8* noundef\l... getelementptr inbounds ([84 x i8], [84 x i8]*\l... @__PRETTY_FUNCTION__.mpn_limb_get_str, i64 0, i64 0)) #23, !dbg !880\l  unreachable, !dbg !880\l}"];
	Node0x2601740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%212:\l212:                                              \l  %213 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !884, !tbaa !831\l  %214 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %213, i32 0, i32 0, !dbg !885\l  %215 = load i32, i32* %214, align 8, !dbg !885, !tbaa !854\l  %216 = load i64, i64* %10, align 8, !dbg !886, !tbaa !836\l  %217 = zext i32 %215 to i64, !dbg !886\l  %218 = lshr i64 %216, %217, !dbg !886\l  store i64 %218, i64* %10, align 8, !dbg !886, !tbaa !836\l  %219 = load i64, i64* %10, align 8, !dbg !887, !tbaa !836\l  %220 = trunc i64 %219 to i8, !dbg !887\l  %221 = load i8*, i8** %4, align 8, !dbg !888, !tbaa !831\l  %222 = load i64, i64* %7, align 8, !dbg !889, !tbaa !836\l  %223 = getelementptr inbounds i8, i8* %221, i64 %222, !dbg !888\l  store i8 %220, i8* %223, align 1, !dbg !890, !tbaa !891\l  %224 = bitcast i64* %10 to i8*, !dbg !892\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %224) #22, !dbg !892\l  %225 = bitcast i64* %9 to i8*, !dbg !892\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %225) #22, !dbg !892\l  %226 = bitcast i64* %8 to i8*, !dbg !892\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %226) #22, !dbg !892\l  br label %227, !dbg !893\l}"];
	Node0x2601740 -> Node0x2601790;
	Node0x2601790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%227:\l227:                                              \l  %228 = load i64, i64* %7, align 8, !dbg !894, !tbaa !836\l  %229 = add nsw i64 %228, 1, !dbg !894\l  store i64 %229, i64* %7, align 8, !dbg !894, !tbaa !836\l  br label %28, !dbg !895, !llvm.loop !896\l}"];
	Node0x2601790 -> Node0x26011f0;
	Node0x26017e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%230:\l230:                                              \l  %231 = load i64, i64* %7, align 8, !dbg !900, !tbaa !836\l  %232 = bitcast i64* %7 to i8*, !dbg !901\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %232) #22, !dbg !901\l  ret i64 %231, !dbg !902\l}"];
}
