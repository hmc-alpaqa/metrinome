digraph "CFG for 'mbs_logical_substr' function" {
	label="CFG for 'mbs_logical_substr' function";

	Node0x2545b20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i8*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i32, align 4\l  %13 = alloca i64, align 8\l  %14 = alloca %struct.mbuiter_multi, align 8\l  %15 = alloca i64, align 8\l  store i8* %0, i8** %5, align 8, !tbaa !834\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !791, metadata\l... !DIExpression()), !dbg !838\l  store i64 %1, i64* %6, align 8, !tbaa !839\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !792, metadata\l... !DIExpression()), !dbg !841\l  store i64 %2, i64* %7, align 8, !tbaa !839\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !793, metadata\l... !DIExpression()), !dbg !842\l  %16 = bitcast i8** %8 to i8*, !dbg !843\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #22, !dbg !843\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !794, metadata\l... !DIExpression()), !dbg !844\l  %17 = bitcast i8** %9 to i8*, !dbg !843\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #22, !dbg !843\l  call void @llvm.dbg.declare(metadata i8** %9, metadata !795, metadata\l... !DIExpression()), !dbg !845\l  %18 = bitcast i64* %10 to i8*, !dbg !846\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #22, !dbg !846\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !796, metadata\l... !DIExpression()), !dbg !847\l  %19 = load i8*, i8** %5, align 8, !dbg !848, !tbaa !834\l  %20 = call i64 @strlen(i8* noundef %19) #23, !dbg !849\l  store i64 %20, i64* %10, align 8, !dbg !847, !tbaa !839\l  %21 = bitcast i64* %11 to i8*, !dbg !850\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #22, !dbg !850\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !797, metadata\l... !DIExpression()), !dbg !851\l  %22 = call i64 @__ctype_get_mb_cur_max() #22, !dbg !852\l  %23 = icmp ugt i64 %22, 1, !dbg !853\l  br i1 %23, label %24, label %27, !dbg !854\l|{<s0>T|<s1>F}}"];
	Node0x2545b20:s0 -> Node0x2545c50;
	Node0x2545b20:s1 -> Node0x2545ca0;
	Node0x2545c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%24:\l24:                                               \l  %25 = load i8*, i8** %5, align 8, !dbg !855, !tbaa !834\l  %26 = call i64 @mbslen(i8* noundef %25) #23, !dbg !856\l  br label %29, !dbg !854\l}"];
	Node0x2545c50 -> Node0x2545cf0;
	Node0x2545ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%27:\l27:                                               \l  %28 = load i64, i64* %10, align 8, !dbg !857, !tbaa !839\l  br label %29, !dbg !854\l}"];
	Node0x2545ca0 -> Node0x2545cf0;
	Node0x2545cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%29:\l29:                                               \l  %30 = phi i64 [ %26, %24 ], [ %28, %27 ], !dbg !854\l  store i64 %30, i64* %11, align 8, !dbg !851, !tbaa !839\l  %31 = load i64, i64* %11, align 8, !dbg !858, !tbaa !839\l  %32 = load i64, i64* %6, align 8, !dbg !860, !tbaa !839\l  %33 = icmp ult i64 %31, %32, !dbg !861\l  br i1 %33, label %43, label %34, !dbg !862\l|{<s0>T|<s1>F}}"];
	Node0x2545cf0:s0 -> Node0x2545e30;
	Node0x2545cf0:s1 -> Node0x2545d40;
	Node0x2545d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%34:\l34:                                               \l  %35 = load i64, i64* %6, align 8, !dbg !863, !tbaa !839\l  %36 = icmp eq i64 %35, 0, !dbg !864\l  br i1 %36, label %43, label %37, !dbg !865\l|{<s0>T|<s1>F}}"];
	Node0x2545d40:s0 -> Node0x2545e30;
	Node0x2545d40:s1 -> Node0x2545d90;
	Node0x2545d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%37:\l37:                                               \l  %38 = load i64, i64* %7, align 8, !dbg !866, !tbaa !839\l  %39 = icmp eq i64 %38, 0, !dbg !867\l  br i1 %39, label %43, label %40, !dbg !868\l|{<s0>T|<s1>F}}"];
	Node0x2545d90:s0 -> Node0x2545e30;
	Node0x2545d90:s1 -> Node0x2545de0;
	Node0x2545de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%40:\l40:                                               \l  %41 = load i64, i64* %7, align 8, !dbg !869, !tbaa !839\l  %42 = icmp eq i64 %41, -1, !dbg !870\l  br i1 %42, label %43, label %45, !dbg !871\l|{<s0>T|<s1>F}}"];
	Node0x2545de0:s0 -> Node0x2545e30;
	Node0x2545de0:s1 -> Node0x2545e80;
	Node0x2545e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%43:\l43:                                               \l  %44 = call noalias nonnull i8* @xstrdup(i8* noundef getelementptr inbounds\l... ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0)), !dbg !872\l  store i8* %44, i8** %4, align 8, !dbg !873\l  store i32 1, i32* %12, align 4\l  br label %142, !dbg !873\l}"];
	Node0x2545e30 -> Node0x25463d0;
	Node0x2545e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%45:\l45:                                               \l  %46 = bitcast i64* %13 to i8*, !dbg !874\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #22, !dbg !874\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !798, metadata\l... !DIExpression()), !dbg !875\l  %47 = load i64, i64* %7, align 8, !dbg !876, !tbaa !839\l  %48 = load i64, i64* %11, align 8, !dbg !876, !tbaa !839\l  %49 = load i64, i64* %6, align 8, !dbg !876, !tbaa !839\l  %50 = sub i64 %48, %49, !dbg !876\l  %51 = add i64 %50, 1, !dbg !876\l  %52 = icmp ult i64 %47, %51, !dbg !876\l  br i1 %52, label %53, label %55, !dbg !876\l|{<s0>T|<s1>F}}"];
	Node0x2545e80:s0 -> Node0x2545ed0;
	Node0x2545e80:s1 -> Node0x2545f20;
	Node0x2545ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%53:\l53:                                               \l  %54 = load i64, i64* %7, align 8, !dbg !876, !tbaa !839\l  br label %60, !dbg !876\l}"];
	Node0x2545ed0 -> Node0x2545f70;
	Node0x2545f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%55:\l55:                                               \l  %56 = load i64, i64* %11, align 8, !dbg !876, !tbaa !839\l  %57 = load i64, i64* %6, align 8, !dbg !876, !tbaa !839\l  %58 = sub i64 %56, %57, !dbg !876\l  %59 = add i64 %58, 1, !dbg !876\l  br label %60, !dbg !876\l}"];
	Node0x2545f20 -> Node0x2545f70;
	Node0x2545f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%60:\l60:                                               \l  %61 = phi i64 [ %54, %53 ], [ %59, %55 ], !dbg !876\l  store i64 %61, i64* %13, align 8, !dbg !875, !tbaa !839\l  %62 = call i64 @__ctype_get_mb_cur_max() #22, !dbg !877\l  %63 = icmp eq i64 %62, 1, !dbg !878\l  br i1 %63, label %64, label %75, !dbg !879\l|{<s0>T|<s1>F}}"];
	Node0x2545f70:s0 -> Node0x2545fc0;
	Node0x2545f70:s1 -> Node0x2546010;
	Node0x2545fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%64:\l64:                                               \l  %65 = load i64, i64* %13, align 8, !dbg !880, !tbaa !839\l  %66 = add i64 %65, 1, !dbg !882\l  %67 = call noalias nonnull i8* @xmalloc(i64 noundef %66) #24, !dbg !883\l  store i8* %67, i8** %8, align 8, !dbg !884, !tbaa !834\l  %68 = load i8*, i8** %8, align 8, !dbg !885, !tbaa !834\l  %69 = load i8*, i8** %5, align 8, !dbg !886, !tbaa !834\l  %70 = load i64, i64* %6, align 8, !dbg !887, !tbaa !839\l  %71 = getelementptr inbounds i8, i8* %69, i64 %70, !dbg !888\l  %72 = getelementptr inbounds i8, i8* %71, i64 -1, !dbg !889\l  %73 = load i64, i64* %13, align 8, !dbg !890, !tbaa !839\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %68, i8* align 1 %72, i64\l... %73, i1 false), !dbg !891\l  %74 = getelementptr inbounds i8, i8* %68, i64 %73, !dbg !891\l  store i8* %74, i8** %9, align 8, !dbg !892, !tbaa !834\l  br label %138, !dbg !893\l}"];
	Node0x2545fc0 -> Node0x2546380;
	Node0x2546010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%75:\l75:                                               \l  %76 = load i64, i64* %10, align 8, !dbg !894, !tbaa !839\l  %77 = add i64 %76, 1, !dbg !895\l  %78 = call noalias nonnull i8* @xmalloc(i64 noundef %77) #24, !dbg !896\l  store i8* %78, i8** %8, align 8, !dbg !897, !tbaa !834\l  store i8* %78, i8** %9, align 8, !dbg !898, !tbaa !834\l  %79 = bitcast %struct.mbuiter_multi* %14 to i8*, !dbg !899\l  call void @llvm.lifetime.start.p0i8(i64 48, i8* %79) #22, !dbg !899\l  call void @llvm.dbg.declare(metadata %struct.mbuiter_multi* %14, metadata\l... !799, metadata !DIExpression()), !dbg !900\l  %80 = bitcast i64* %15 to i8*, !dbg !901\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %80) #22, !dbg !901\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !833, metadata\l... !DIExpression()), !dbg !902\l  store i64 1, i64* %15, align 8, !dbg !902, !tbaa !839\l  %81 = load i8*, i8** %5, align 8, !dbg !903, !tbaa !834\l  %82 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 4, !dbg !903\l  %83 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %82, i32 0, i32\l... 0, !dbg !903\l  store i8* %81, i8** %83, align 8, !dbg !903, !tbaa !905\l  %84 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 0, !dbg !903\l  store i8 0, i8* %84, align 8, !dbg !903, !tbaa !911\l  %85 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 1, !dbg !903\l  call void @mbszero(%struct.__mbstate_t* noundef %85), !dbg !903\l  %86 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 2, !dbg !903\l  store i8 0, i8* %86, align 4, !dbg !903, !tbaa !912\l  %87 = call i64 @__ctype_get_mb_cur_max() #22, !dbg !903\l  %88 = trunc i64 %87 to i32, !dbg !903\l  %89 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 3, !dbg !903\l  store i32 %88, i32* %89, align 8, !dbg !903, !tbaa !913\l  br label %90, !dbg !903\l}"];
	Node0x2546010 -> Node0x2546060;
	Node0x2546060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  call void @mbuiter_multi_next(%struct.mbuiter_multi* noundef %14), !dbg !914\l  %91 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 4, !dbg !914\l  %92 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %91, i32 0, i32\l... 2, !dbg !914\l  %93 = load i8, i8* %92, align 8, !dbg !914, !tbaa !916, !range !917\l  %94 = trunc i8 %93 to i1, !dbg !914\l  br i1 %94, label %95, label %100, !dbg !914\l|{<s0>T|<s1>F}}"];
	Node0x2546060:s0 -> Node0x25460b0;
	Node0x2546060:s1 -> Node0x2546100;
	Node0x25460b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%95:\l95:                                               \l  %96 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 4, !dbg !914\l  %97 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %96, i32 0, i32\l... 3, !dbg !914\l  %98 = load i32, i32* %97, align 4, !dbg !914, !tbaa !918\l  %99 = icmp eq i32 %98, 0, !dbg !914\l  br label %100\l}"];
	Node0x25460b0 -> Node0x2546100;
	Node0x2546100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%100:\l100:                                              \l  %101 = phi i1 [ false, %90 ], [ %99, %95 ], !dbg !919\l  %102 = xor i1 %101, true, !dbg !914\l  br i1 %102, label %103, label %106, !dbg !920\l|{<s0>T|<s1>F}}"];
	Node0x2546100:s0 -> Node0x2546150;
	Node0x2546100:s1 -> Node0x25461a0;
	Node0x2546150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%103:\l103:                                              \l  %104 = load i64, i64* %13, align 8, !dbg !921, !tbaa !839\l  %105 = icmp ugt i64 %104, 0, !dbg !922\l  br label %106\l}"];
	Node0x2546150 -> Node0x25461a0;
	Node0x25461a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  %107 = phi i1 [ false, %100 ], [ %105, %103 ], !dbg !919\l  br i1 %107, label %108, label %135, !dbg !923\l|{<s0>T|<s1>F}}"];
	Node0x25461a0:s0 -> Node0x25461f0;
	Node0x25461a0:s1 -> Node0x2546330;
	Node0x25461f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%108:\l108:                                              \l  %109 = load i64, i64* %15, align 8, !dbg !924, !tbaa !839\l  %110 = load i64, i64* %6, align 8, !dbg !927, !tbaa !839\l  %111 = icmp ult i64 %109, %110, !dbg !928\l  br i1 %111, label %112, label %113, !dbg !929\l|{<s0>T|<s1>F}}"];
	Node0x25461f0:s0 -> Node0x2546240;
	Node0x25461f0:s1 -> Node0x2546290;
	Node0x2546240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%112:\l112:                                              \l  br label %124, !dbg !930\l}"];
	Node0x2546240 -> Node0x25462e0;
	Node0x2546290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%113:\l113:                                              \l  %114 = load i64, i64* %13, align 8, !dbg !931, !tbaa !839\l  %115 = add i64 %114, -1, !dbg !931\l  store i64 %115, i64* %13, align 8, !dbg !931, !tbaa !839\l  %116 = load i8*, i8** %9, align 8, !dbg !932, !tbaa !834\l  %117 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 4, !dbg !933\l  %118 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %117, i32 0,\l... i32 0, !dbg !933\l  %119 = load i8*, i8** %118, align 8, !dbg !933, !tbaa !905\l  %120 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 4, !dbg !934\l  %121 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %120, i32 0,\l... i32 1, !dbg !934\l  %122 = load i64, i64* %121, align 8, !dbg !934, !tbaa !935\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %119, i64\l... %122, i1 false), !dbg !936\l  %123 = getelementptr inbounds i8, i8* %116, i64 %122, !dbg !936\l  store i8* %123, i8** %9, align 8, !dbg !937, !tbaa !834\l  br label %124, !dbg !938\l}"];
	Node0x2546290 -> Node0x25462e0;
	Node0x25462e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%124:\l124:                                              \l  %125 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 4, !dbg !939\l  %126 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %125, i32 0,\l... i32 1, !dbg !939\l  %127 = load i64, i64* %126, align 8, !dbg !939, !tbaa !935\l  %128 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 4, !dbg !939\l  %129 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %128, i32 0,\l... i32 0, !dbg !939\l  %130 = load i8*, i8** %129, align 8, !dbg !939, !tbaa !905\l  %131 = getelementptr inbounds i8, i8* %130, i64 %127, !dbg !939\l  store i8* %131, i8** %129, align 8, !dbg !939, !tbaa !905\l  %132 = getelementptr inbounds %struct.mbuiter_multi, %struct.mbuiter_multi*\l... %14, i32 0, i32 2, !dbg !939\l  store i8 0, i8* %132, align 4, !dbg !939, !tbaa !912\l  %133 = load i64, i64* %15, align 8, !dbg !940, !tbaa !839\l  %134 = add i64 %133, 1, !dbg !940\l  store i64 %134, i64* %15, align 8, !dbg !940, !tbaa !839\l  br label %90, !dbg !941, !llvm.loop !942\l}"];
	Node0x25462e0 -> Node0x2546060;
	Node0x2546330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%135:\l135:                                              \l  %136 = bitcast i64* %15 to i8*, !dbg !946\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %136) #22, !dbg !946\l  %137 = bitcast %struct.mbuiter_multi* %14 to i8*, !dbg !946\l  call void @llvm.lifetime.end.p0i8(i64 48, i8* %137) #22, !dbg !946\l  br label %138\l}"];
	Node0x2546330 -> Node0x2546380;
	Node0x2546380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%138:\l138:                                              \l  %139 = load i8*, i8** %9, align 8, !dbg !947, !tbaa !834\l  store i8 0, i8* %139, align 1, !dbg !948, !tbaa !949\l  %140 = load i8*, i8** %8, align 8, !dbg !950, !tbaa !834\l  store i8* %140, i8** %4, align 8, !dbg !951\l  store i32 1, i32* %12, align 4\l  %141 = bitcast i64* %13 to i8*, !dbg !952\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %141) #22, !dbg !952\l  br label %142\l}"];
	Node0x2546380 -> Node0x25463d0;
	Node0x25463d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%142:\l142:                                              \l  %143 = bitcast i64* %11 to i8*, !dbg !952\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %143) #22, !dbg !952\l  %144 = bitcast i64* %10 to i8*, !dbg !952\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %144) #22, !dbg !952\l  %145 = bitcast i8** %9 to i8*, !dbg !952\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %145) #22, !dbg !952\l  %146 = bitcast i8** %8 to i8*, !dbg !952\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %146) #22, !dbg !952\l  %147 = load i8*, i8** %4, align 8, !dbg !952\l  ret i8* %147, !dbg !952\l}"];
}
