digraph "CFG for 'mpn_lshift' function" {
	label="CFG for 'mpn_lshift' function";

	Node0x25b7d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%4:\l  %5 = alloca i64*, align 8\l  %6 = alloca i64*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i32, align 4\l  %12 = alloca i64, align 8\l  store i64* %0, i64** %5, align 8, !tbaa !801\l  call void @llvm.dbg.declare(metadata i64** %5, metadata !793, metadata\l... !DIExpression()), !dbg !805\l  store i64* %1, i64** %6, align 8, !tbaa !801\l  call void @llvm.dbg.declare(metadata i64** %6, metadata !794, metadata\l... !DIExpression()), !dbg !806\l  store i64 %2, i64* %7, align 8, !tbaa !807\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !795, metadata\l... !DIExpression()), !dbg !809\l  store i32 %3, i32* %8, align 4, !tbaa !810\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !796, metadata\l... !DIExpression()), !dbg !812\l  %13 = bitcast i64* %9 to i8*, !dbg !813\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #22, !dbg !813\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !797, metadata\l... !DIExpression()), !dbg !814\l  %14 = bitcast i64* %10 to i8*, !dbg !813\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #22, !dbg !813\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !798, metadata\l... !DIExpression()), !dbg !815\l  %15 = bitcast i32* %11 to i8*, !dbg !816\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #22, !dbg !816\l  call void @llvm.dbg.declare(metadata i32* %11, metadata !799, metadata\l... !DIExpression()), !dbg !817\l  %16 = bitcast i64* %12 to i8*, !dbg !818\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #22, !dbg !818\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !800, metadata\l... !DIExpression()), !dbg !819\l  %17 = load i64, i64* %7, align 8, !dbg !820, !tbaa !807\l  %18 = icmp sge i64 %17, 1, !dbg !820\l  br i1 %18, label %19, label %20, !dbg !823\l|{<s0>T|<s1>F}}"];
	Node0x25b7d40:s0 -> Node0x25b7e00;
	Node0x25b7d40:s1 -> Node0x25b7e50;
	Node0x25b7e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%19:\l19:                                               \l  br label %21, !dbg !823\l}"];
	Node0x25b7e00 -> Node0x25b7ea0;
	Node0x25b7e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%20:\l20:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([7 x i8], [7 x\l... i8]* @.str.3.87, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 668, i8* noundef\l... getelementptr inbounds ([65 x i8], [65 x i8]*\l... @__PRETTY_FUNCTION__.mpn_lshift, i64 0, i64 0)) #23, !dbg !820\l  unreachable, !dbg !820\l}"];
	Node0x25b7ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%21:\l21:                                               \l  %22 = load i32, i32* %8, align 4, !dbg !824, !tbaa !810\l  %23 = icmp uge i32 %22, 1, !dbg !824\l  br i1 %23, label %24, label %25, !dbg !827\l|{<s0>T|<s1>F}}"];
	Node0x25b7ea0:s0 -> Node0x25b7ef0;
	Node0x25b7ea0:s1 -> Node0x25b7f40;
	Node0x25b7ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%24:\l24:                                               \l  br label %26, !dbg !827\l}"];
	Node0x25b7ef0 -> Node0x25b7f90;
	Node0x25b7f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%25:\l25:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([9 x i8], [9 x\l... i8]* @.str.8.92, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 669, i8* noundef\l... getelementptr inbounds ([65 x i8], [65 x i8]*\l... @__PRETTY_FUNCTION__.mpn_lshift, i64 0, i64 0)) #23, !dbg !824\l  unreachable, !dbg !824\l}"];
	Node0x25b7f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%26:\l26:                                               \l  %27 = load i32, i32* %8, align 4, !dbg !828, !tbaa !810\l  %28 = zext i32 %27 to i64, !dbg !828\l  %29 = icmp ult i64 %28, 64, !dbg !828\l  br i1 %29, label %30, label %31, !dbg !831\l|{<s0>T|<s1>F}}"];
	Node0x25b7f90:s0 -> Node0x25b7fe0;
	Node0x25b7f90:s1 -> Node0x25b8030;
	Node0x25b7fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%30:\l30:                                               \l  br label %32, !dbg !831\l}"];
	Node0x25b7fe0 -> Node0x25b8080;
	Node0x25b8030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%31:\l31:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([20 x i8], [20\l... x i8]* @.str.9.93, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 670, i8* noundef\l... getelementptr inbounds ([65 x i8], [65 x i8]*\l... @__PRETTY_FUNCTION__.mpn_lshift, i64 0, i64 0)) #23, !dbg !828\l  unreachable, !dbg !828\l}"];
	Node0x25b8080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%32:\l32:                                               \l  %33 = load i64, i64* %7, align 8, !dbg !832, !tbaa !807\l  %34 = load i64*, i64** %6, align 8, !dbg !833, !tbaa !801\l  %35 = getelementptr inbounds i64, i64* %34, i64 %33, !dbg !833\l  store i64* %35, i64** %6, align 8, !dbg !833, !tbaa !801\l  %36 = load i64, i64* %7, align 8, !dbg !834, !tbaa !807\l  %37 = load i64*, i64** %5, align 8, !dbg !835, !tbaa !801\l  %38 = getelementptr inbounds i64, i64* %37, i64 %36, !dbg !835\l  store i64* %38, i64** %5, align 8, !dbg !835, !tbaa !801\l  %39 = load i32, i32* %8, align 4, !dbg !836, !tbaa !810\l  %40 = zext i32 %39 to i64, !dbg !836\l  %41 = sub i64 64, %40, !dbg !837\l  %42 = trunc i64 %41 to i32, !dbg !838\l  store i32 %42, i32* %11, align 4, !dbg !839, !tbaa !810\l  %43 = load i64*, i64** %6, align 8, !dbg !840, !tbaa !801\l  %44 = getelementptr inbounds i64, i64* %43, i32 -1, !dbg !840\l  store i64* %44, i64** %6, align 8, !dbg !840, !tbaa !801\l  %45 = load i64, i64* %44, align 8, !dbg !841, !tbaa !807\l  store i64 %45, i64* %10, align 8, !dbg !842, !tbaa !807\l  %46 = load i64, i64* %10, align 8, !dbg !843, !tbaa !807\l  %47 = load i32, i32* %11, align 4, !dbg !844, !tbaa !810\l  %48 = zext i32 %47 to i64, !dbg !845\l  %49 = lshr i64 %46, %48, !dbg !845\l  store i64 %49, i64* %12, align 8, !dbg !846, !tbaa !807\l  %50 = load i64, i64* %10, align 8, !dbg !847, !tbaa !807\l  %51 = load i32, i32* %8, align 4, !dbg !848, !tbaa !810\l  %52 = zext i32 %51 to i64, !dbg !849\l  %53 = shl i64 %50, %52, !dbg !849\l  store i64 %53, i64* %9, align 8, !dbg !850, !tbaa !807\l  br label %54, !dbg !851\l}"];
	Node0x25b8080 -> Node0x25b80d0;
	Node0x25b80d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = load i64, i64* %7, align 8, !dbg !852, !tbaa !807\l  %56 = add nsw i64 %55, -1, !dbg !852\l  store i64 %56, i64* %7, align 8, !dbg !852, !tbaa !807\l  %57 = icmp ne i64 %56, 0, !dbg !853\l  br i1 %57, label %58, label %74, !dbg !851\l|{<s0>T|<s1>F}}"];
	Node0x25b80d0:s0 -> Node0x25b8120;
	Node0x25b80d0:s1 -> Node0x25b8170;
	Node0x25b8120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = load i64*, i64** %6, align 8, !dbg !854, !tbaa !801\l  %60 = getelementptr inbounds i64, i64* %59, i32 -1, !dbg !854\l  store i64* %60, i64** %6, align 8, !dbg !854, !tbaa !801\l  %61 = load i64, i64* %60, align 8, !dbg !856, !tbaa !807\l  store i64 %61, i64* %10, align 8, !dbg !857, !tbaa !807\l  %62 = load i64, i64* %9, align 8, !dbg !858, !tbaa !807\l  %63 = load i64, i64* %10, align 8, !dbg !859, !tbaa !807\l  %64 = load i32, i32* %11, align 4, !dbg !860, !tbaa !810\l  %65 = zext i32 %64 to i64, !dbg !861\l  %66 = lshr i64 %63, %65, !dbg !861\l  %67 = or i64 %62, %66, !dbg !862\l  %68 = load i64*, i64** %5, align 8, !dbg !863, !tbaa !801\l  %69 = getelementptr inbounds i64, i64* %68, i32 -1, !dbg !863\l  store i64* %69, i64** %5, align 8, !dbg !863, !tbaa !801\l  store i64 %67, i64* %69, align 8, !dbg !864, !tbaa !807\l  %70 = load i64, i64* %10, align 8, !dbg !865, !tbaa !807\l  %71 = load i32, i32* %8, align 4, !dbg !866, !tbaa !810\l  %72 = zext i32 %71 to i64, !dbg !867\l  %73 = shl i64 %70, %72, !dbg !867\l  store i64 %73, i64* %9, align 8, !dbg !868, !tbaa !807\l  br label %54, !dbg !851, !llvm.loop !869\l}"];
	Node0x25b8120 -> Node0x25b80d0;
	Node0x25b8170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%74:\l74:                                               \l  %75 = load i64, i64* %9, align 8, !dbg !873, !tbaa !807\l  %76 = load i64*, i64** %5, align 8, !dbg !874, !tbaa !801\l  %77 = getelementptr inbounds i64, i64* %76, i32 -1, !dbg !874\l  store i64* %77, i64** %5, align 8, !dbg !874, !tbaa !801\l  store i64 %75, i64* %77, align 8, !dbg !875, !tbaa !807\l  %78 = load i64, i64* %12, align 8, !dbg !876, !tbaa !807\l  %79 = bitcast i64* %12 to i8*, !dbg !877\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %79) #22, !dbg !877\l  %80 = bitcast i32* %11 to i8*, !dbg !877\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %80) #22, !dbg !877\l  %81 = bitcast i64* %10 to i8*, !dbg !877\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %81) #22, !dbg !877\l  %82 = bitcast i64* %9 to i8*, !dbg !877\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #22, !dbg !877\l  ret i64 %78, !dbg !878\l}"];
}
