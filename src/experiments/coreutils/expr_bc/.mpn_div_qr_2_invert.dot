digraph "CFG for 'mpn_div_qr_2_invert' function" {
	label="CFG for 'mpn_div_qr_2_invert' function";

	Node0x26f70d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%3:\l  %4 = alloca %struct.gmp_div_inverse*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca i64, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  store %struct.gmp_div_inverse* %0, %struct.gmp_div_inverse** %4, align 8,\l... !tbaa !806\l  call void @llvm.dbg.declare(metadata %struct.gmp_div_inverse** %4, metadata\l... !798, metadata !DIExpression()), !dbg !810\l  store i64 %1, i64* %5, align 8, !tbaa !811\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !799, metadata\l... !DIExpression()), !dbg !813\l  store i64 %2, i64* %6, align 8, !tbaa !811\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !800, metadata\l... !DIExpression()), !dbg !814\l  %11 = bitcast i32* %7 to i8*, !dbg !815\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #22, !dbg !815\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !801, metadata\l... !DIExpression()), !dbg !816\l  %12 = load i64, i64* %5, align 8, !dbg !817, !tbaa !811\l  %13 = icmp ugt i64 %12, 0, !dbg !817\l  br i1 %13, label %14, label %15, !dbg !820\l|{<s0>T|<s1>F}}"];
	Node0x26f70d0:s0 -> Node0x26f71c0;
	Node0x26f70d0:s1 -> Node0x26f7210;
	Node0x26f71c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%14:\l14:                                               \l  br label %16, !dbg !820\l}"];
	Node0x26f71c0 -> Node0x26f7260;
	Node0x26f7210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%15:\l15:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([7 x i8], [7 x\l... i8]* @.str.55.131, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 924, i8* noundef\l... getelementptr inbounds ([73 x i8], [73 x i8]*\l... @__PRETTY_FUNCTION__.mpn_div_qr_2_invert, i64 0, i64 0)) #23, !dbg !817\l  unreachable, !dbg !817\l}"];
	Node0x26f7260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%16:\l16:                                               \l  br label %17, !dbg !821\l}"];
	Node0x26f7260 -> Node0x26f72b0;
	Node0x26f72b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%17:\l17:                                               \l  %18 = bitcast i64* %8 to i8*, !dbg !822\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #22, !dbg !822\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !802, metadata\l... !DIExpression()), !dbg !822\l  %19 = load i64, i64* %5, align 8, !dbg !822, !tbaa !811\l  store i64 %19, i64* %8, align 8, !dbg !822, !tbaa !811\l  %20 = bitcast i32* %9 to i8*, !dbg !822\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #22, !dbg !822\l  call void @llvm.dbg.declare(metadata i32* %9, metadata !804, metadata\l... !DIExpression()), !dbg !822\l  store i32 0, i32* %9, align 4, !dbg !822, !tbaa !823\l  %21 = bitcast i32* %10 to i8*, !dbg !822\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #22, !dbg !822\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !805, metadata\l... !DIExpression()), !dbg !822\l  store i32 8, i32* %10, align 4, !dbg !822, !tbaa !823\l  %22 = load i32, i32* %10, align 4, !dbg !825, !tbaa !823\l  %23 = sext i32 %22 to i64, !dbg !825\l  %24 = icmp ugt i64 64, %23, !dbg !825\l  br i1 %24, label %25, label %39, !dbg !822\l|{<s0>T|<s1>F}}"];
	Node0x26f72b0:s0 -> Node0x26f7300;
	Node0x26f72b0:s1 -> Node0x26f7490;
	Node0x26f7300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%25:\l25:                                               \l  br label %26, !dbg !825\l}"];
	Node0x26f7300 -> Node0x26f7350;
	Node0x26f7350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%26:\l26:                                               \l  %27 = load i64, i64* %8, align 8, !dbg !827, !tbaa !811\l  %28 = and i64 %27, -72057594037927936, !dbg !827\l  %29 = icmp eq i64 %28, 0, !dbg !827\l  br i1 %29, label %30, label %38, !dbg !830\l|{<s0>T|<s1>F}}"];
	Node0x26f7350:s0 -> Node0x26f73a0;
	Node0x26f7350:s1 -> Node0x26f7440;
	Node0x26f73a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%30:\l30:                                               \l  %31 = load i32, i32* %10, align 4, !dbg !831, !tbaa !823\l  %32 = load i64, i64* %8, align 8, !dbg !831, !tbaa !811\l  %33 = zext i32 %31 to i64, !dbg !831\l  %34 = shl i64 %32, %33, !dbg !831\l  store i64 %34, i64* %8, align 8, !dbg !831, !tbaa !811\l  br label %35, !dbg !831\l}"];
	Node0x26f73a0 -> Node0x26f73f0;
	Node0x26f73f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%35:\l35:                                               \l  %36 = load i32, i32* %9, align 4, !dbg !827, !tbaa !823\l  %37 = add i32 %36, 8, !dbg !827\l  store i32 %37, i32* %9, align 4, !dbg !827, !tbaa !823\l  br label %26, !dbg !827, !llvm.loop !833\l}"];
	Node0x26f73f0 -> Node0x26f7350;
	Node0x26f7440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%38:\l38:                                               \l  br label %39, !dbg !830\l}"];
	Node0x26f7440 -> Node0x26f7490;
	Node0x26f7490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%39:\l39:                                               \l  br label %40, !dbg !822\l}"];
	Node0x26f7490 -> Node0x26f74e0;
	Node0x26f74e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = load i64, i64* %8, align 8, !dbg !836, !tbaa !811\l  %42 = and i64 %41, -9223372036854775808, !dbg !836\l  %43 = icmp eq i64 %42, 0, !dbg !836\l  br i1 %43, label %44, label %50, !dbg !839\l|{<s0>T|<s1>F}}"];
	Node0x26f74e0:s0 -> Node0x26f7530;
	Node0x26f74e0:s1 -> Node0x26f75d0;
	Node0x26f7530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = load i64, i64* %8, align 8, !dbg !836, !tbaa !811\l  %46 = shl i64 %45, 1, !dbg !836\l  store i64 %46, i64* %8, align 8, !dbg !836, !tbaa !811\l  br label %47, !dbg !836\l}"];
	Node0x26f7530 -> Node0x26f7580;
	Node0x26f7580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = load i32, i32* %9, align 4, !dbg !836, !tbaa !823\l  %49 = add i32 %48, 1, !dbg !836\l  store i32 %49, i32* %9, align 4, !dbg !836, !tbaa !823\l  br label %40, !dbg !836, !llvm.loop !840\l}"];
	Node0x26f7580 -> Node0x26f74e0;
	Node0x26f75d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%50:\l50:                                               \l  %51 = load i32, i32* %9, align 4, !dbg !822, !tbaa !823\l  store i32 %51, i32* %7, align 4, !dbg !822, !tbaa !823\l  %52 = bitcast i32* %10 to i8*, !dbg !821\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %52) #22, !dbg !821\l  %53 = bitcast i32* %9 to i8*, !dbg !821\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %53) #22, !dbg !821\l  %54 = bitcast i64* %8 to i8*, !dbg !821\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %54) #22, !dbg !821\l  br label %55, !dbg !822\l}"];
	Node0x26f75d0 -> Node0x26f7620;
	Node0x26f7620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%55:\l55:                                               \l  br label %56, !dbg !822\l}"];
	Node0x26f7620 -> Node0x26f7670;
	Node0x26f7670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%56:\l56:                                               \l  %57 = load i32, i32* %7, align 4, !dbg !841, !tbaa !823\l  %58 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %4, align 8,\l... !dbg !842, !tbaa !806\l  %59 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %58, i32 0, i32 0, !dbg !843\l  store i32 %57, i32* %59, align 8, !dbg !844, !tbaa !845\l  %60 = load i32, i32* %7, align 4, !dbg !847, !tbaa !823\l  %61 = icmp ugt i32 %60, 0, !dbg !849\l  br i1 %61, label %62, label %77, !dbg !850\l|{<s0>T|<s1>F}}"];
	Node0x26f7670:s0 -> Node0x26f76c0;
	Node0x26f7670:s1 -> Node0x26f7710;
	Node0x26f76c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%62:\l62:                                               \l  %63 = load i64, i64* %5, align 8, !dbg !851, !tbaa !811\l  %64 = load i32, i32* %7, align 4, !dbg !853, !tbaa !823\l  %65 = zext i32 %64 to i64, !dbg !854\l  %66 = shl i64 %63, %65, !dbg !854\l  %67 = load i64, i64* %6, align 8, !dbg !855, !tbaa !811\l  %68 = load i32, i32* %7, align 4, !dbg !856, !tbaa !823\l  %69 = zext i32 %68 to i64, !dbg !856\l  %70 = sub i64 64, %69, !dbg !857\l  %71 = lshr i64 %67, %70, !dbg !858\l  %72 = or i64 %66, %71, !dbg !859\l  store i64 %72, i64* %5, align 8, !dbg !860, !tbaa !811\l  %73 = load i32, i32* %7, align 4, !dbg !861, !tbaa !823\l  %74 = load i64, i64* %6, align 8, !dbg !862, !tbaa !811\l  %75 = zext i32 %73 to i64, !dbg !862\l  %76 = shl i64 %74, %75, !dbg !862\l  store i64 %76, i64* %6, align 8, !dbg !862, !tbaa !811\l  br label %77, !dbg !863\l}"];
	Node0x26f76c0 -> Node0x26f7710;
	Node0x26f7710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%77:\l77:                                               \l  %78 = load i64, i64* %5, align 8, !dbg !864, !tbaa !811\l  %79 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %4, align 8,\l... !dbg !865, !tbaa !806\l  %80 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %79, i32 0, i32 1, !dbg !866\l  store i64 %78, i64* %80, align 8, !dbg !867, !tbaa !868\l  %81 = load i64, i64* %6, align 8, !dbg !869, !tbaa !811\l  %82 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %4, align 8,\l... !dbg !870, !tbaa !806\l  %83 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %82, i32 0, i32 2, !dbg !871\l  store i64 %81, i64* %83, align 8, !dbg !872, !tbaa !873\l  %84 = load i64, i64* %5, align 8, !dbg !874, !tbaa !811\l  %85 = load i64, i64* %6, align 8, !dbg !875, !tbaa !811\l  %86 = call i64 @mpn_invert_3by2(i64 noundef %84, i64 noundef %85), !dbg !876\l  %87 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %4, align 8,\l... !dbg !877, !tbaa !806\l  %88 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %87, i32 0, i32 3, !dbg !878\l  store i64 %86, i64* %88, align 8, !dbg !879, !tbaa !880\l  %89 = bitcast i32* %7 to i8*, !dbg !881\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %89) #22, !dbg !881\l  ret void, !dbg !881\l}"];
}
