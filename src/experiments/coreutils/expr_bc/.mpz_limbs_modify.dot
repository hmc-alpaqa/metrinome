digraph "CFG for 'mpz_limbs_modify' function" {
	label="CFG for 'mpz_limbs_modify' function";

	Node0x265b080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca %struct.__mpz_struct*, align 8\l  %4 = alloca i64, align 8\l  store %struct.__mpz_struct* %0, %struct.__mpz_struct** %3, align 8, !tbaa\l... !793\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %3, metadata\l... !791, metadata !DIExpression()), !dbg !797\l  store i64 %1, i64* %4, align 8, !tbaa !798\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !792, metadata\l... !DIExpression()), !dbg !800\l  %5 = load i64, i64* %4, align 8, !dbg !801, !tbaa !798\l  %6 = icmp sgt i64 %5, 0, !dbg !801\l  br i1 %6, label %7, label %8, !dbg !804\l|{<s0>T|<s1>F}}"];
	Node0x265b080:s0 -> Node0x24bf0a0;
	Node0x265b080:s1 -> Node0x24bf0f0;
	Node0x24bf0a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l7:                                                \l  br label %9, !dbg !804\l}"];
	Node0x24bf0a0 -> Node0x24bf140;
	Node0x24bf0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%8:\l8:                                                \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([6 x i8], [6 x\l... i8]* @.str.85, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x i8],\l... [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 1672, i8* noundef\l... getelementptr inbounds ([51 x i8], [51 x i8]*\l... @__PRETTY_FUNCTION__.mpz_limbs_modify, i64 0, i64 0)) #22, !dbg !801\l  unreachable, !dbg !801\l}"];
	Node0x24bf140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l9:                                                \l  %10 = load i64, i64* %4, align 8, !dbg !805, !tbaa !798\l  %11 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !805, !tbaa !793\l  %12 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %11, i32 0, i32 0, !dbg !805\l  %13 = load i32, i32* %12, align 8, !dbg !805, !tbaa !806\l  %14 = sext i32 %13 to i64, !dbg !805\l  %15 = icmp sgt i64 %10, %14, !dbg !805\l  br i1 %15, label %16, label %20, !dbg !805\l|{<s0>T|<s1>F}}"];
	Node0x24bf140:s0 -> Node0x24bf190;
	Node0x24bf140:s1 -> Node0x24bf1e0;
	Node0x24bf190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%16:\l16:                                               \l  %17 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !805, !tbaa !793\l  %18 = load i64, i64* %4, align 8, !dbg !805, !tbaa !798\l  %19 = call i64* @mpz_realloc(%struct.__mpz_struct* noundef %17, i64 noundef\l... %18), !dbg !805\l  br label %24, !dbg !805\l}"];
	Node0x24bf190 -> Node0x24bf230;
	Node0x24bf1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%20:\l20:                                               \l  %21 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !805, !tbaa !793\l  %22 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %21, i32 0, i32 2, !dbg !805\l  %23 = load i64*, i64** %22, align 8, !dbg !805, !tbaa !809\l  br label %24, !dbg !805\l}"];
	Node0x24bf1e0 -> Node0x24bf230;
	Node0x24bf230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i64* [ %19, %16 ], [ %23, %20 ], !dbg !805\l  ret i64* %25, !dbg !810\l}"];
}
