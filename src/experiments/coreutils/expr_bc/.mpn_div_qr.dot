digraph "CFG for 'mpn_div_qr' function" {
	label="CFG for 'mpn_div_qr' function";

	Node0x26d5cd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = alloca i64*, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca %struct.gmp_div_inverse, align 8\l  %12 = alloca i64*, align 8\l  %13 = alloca i64, align 8\l  store i64* %0, i64** %6, align 8, !tbaa !810\l  call void @llvm.dbg.declare(metadata i64** %6, metadata !793, metadata\l... !DIExpression()), !dbg !814\l  store i64* %1, i64** %7, align 8, !tbaa !810\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !794, metadata\l... !DIExpression()), !dbg !815\l  store i64 %2, i64* %8, align 8, !tbaa !816\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !795, metadata\l... !DIExpression()), !dbg !818\l  store i64* %3, i64** %9, align 8, !tbaa !810\l  call void @llvm.dbg.declare(metadata i64** %9, metadata !796, metadata\l... !DIExpression()), !dbg !819\l  store i64 %4, i64* %10, align 8, !tbaa !816\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !797, metadata\l... !DIExpression()), !dbg !820\l  %14 = bitcast %struct.gmp_div_inverse* %11 to i8*, !dbg !821\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* %14) #22, !dbg !821\l  call void @llvm.dbg.declare(metadata %struct.gmp_div_inverse* %11, metadata\l... !798, metadata !DIExpression()), !dbg !822\l  %15 = bitcast i64** %12 to i8*, !dbg !823\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #22, !dbg !823\l  call void @llvm.dbg.declare(metadata i64** %12, metadata !805, metadata\l... !DIExpression()), !dbg !824\l  store i64* null, i64** %12, align 8, !dbg !824, !tbaa !810\l  %16 = load i64, i64* %10, align 8, !dbg !825, !tbaa !816\l  %17 = icmp sgt i64 %16, 0, !dbg !825\l  br i1 %17, label %18, label %19, !dbg !828\l|{<s0>T|<s1>F}}"];
	Node0x26d5cd0:s0 -> Node0x26d5dc0;
	Node0x26d5cd0:s1 -> Node0x26d5e10;
	Node0x26d5dc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%18:\l18:                                               \l  br label %20, !dbg !828\l}"];
	Node0x26d5dc0 -> Node0x26d5e60;
	Node0x26d5e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%19:\l19:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([7 x i8], [7 x\l... i8]* @.str.50.122, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 1157, i8* noundef\l... getelementptr inbounds ([65 x i8], [65 x i8]*\l... @__PRETTY_FUNCTION__.mpn_div_qr, i64 0, i64 0)) #23, !dbg !825\l  unreachable, !dbg !825\l}"];
	Node0x26d5e60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = load i64, i64* %8, align 8, !dbg !829, !tbaa !816\l  %22 = load i64, i64* %10, align 8, !dbg !829, !tbaa !816\l  %23 = icmp sge i64 %21, %22, !dbg !829\l  br i1 %23, label %24, label %25, !dbg !832\l|{<s0>T|<s1>F}}"];
	Node0x26d5e60:s0 -> Node0x26d5eb0;
	Node0x26d5e60:s1 -> Node0x26d5f00;
	Node0x26d5eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  br label %26, !dbg !832\l}"];
	Node0x26d5eb0 -> Node0x26d5f50;
	Node0x26d5f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%25:\l25:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([9 x i8], [9 x\l... i8]* @.str.51.123, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 1158, i8* noundef\l... getelementptr inbounds ([65 x i8], [65 x i8]*\l... @__PRETTY_FUNCTION__.mpn_div_qr, i64 0, i64 0)) #23, !dbg !829\l  unreachable, !dbg !829\l}"];
	Node0x26d5f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i64*, i64** %9, align 8, !dbg !833, !tbaa !810\l  %28 = load i64, i64* %10, align 8, !dbg !834, !tbaa !816\l  call void @mpn_div_qr_invert(%struct.gmp_div_inverse* noundef %11, i64*\l... noundef %27, i64 noundef %28), !dbg !835\l  %29 = load i64, i64* %10, align 8, !dbg !836, !tbaa !816\l  %30 = icmp sgt i64 %29, 2, !dbg !837\l  br i1 %30, label %31, label %56, !dbg !838\l|{<s0>T|<s1>F}}"];
	Node0x26d5f50:s0 -> Node0x26d5fa0;
	Node0x26d5f50:s1 -> Node0x26d6220;
	Node0x26d5fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%31:\l31:                                               \l  %32 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %11, i32 0, i32 0, !dbg !839\l  %33 = load i32, i32* %32, align 8, !dbg !839, !tbaa !840\l  %34 = icmp ugt i32 %33, 0, !dbg !843\l  br i1 %34, label %35, label %56, !dbg !844\l|{<s0>T|<s1>F}}"];
	Node0x26d5fa0:s0 -> Node0x26d5ff0;
	Node0x26d5fa0:s1 -> Node0x26d6220;
	Node0x26d5ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%35:\l35:                                               \l  %36 = load i64, i64* %10, align 8, !dbg !845, !tbaa !816\l  %37 = call i64* @gmp_alloc_limbs(i64 noundef %36), !dbg !846\l  store i64* %37, i64** %12, align 8, !dbg !847, !tbaa !810\l  br label %38, !dbg !848\l}"];
	Node0x26d5ff0 -> Node0x26d6040;
	Node0x26d6040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%38:\l38:                                               \l  %39 = bitcast i64* %13 to i8*, !dbg !849\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #22, !dbg !849\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !806, metadata\l... !DIExpression()), !dbg !849\l  %40 = load i64*, i64** %12, align 8, !dbg !849, !tbaa !810\l  %41 = load i64*, i64** %9, align 8, !dbg !849, !tbaa !810\l  %42 = load i64, i64* %10, align 8, !dbg !849, !tbaa !816\l  %43 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %11, i32 0, i32 0, !dbg !849\l  %44 = load i32, i32* %43, align 8, !dbg !849, !tbaa !840\l  %45 = call i64 @mpn_lshift(i64* noundef %40, i64* noundef %41, i64 noundef\l... %42, i32 noundef %44), !dbg !849\l  store i64 %45, i64* %13, align 8, !dbg !849, !tbaa !816\l  %46 = load i64, i64* %13, align 8, !dbg !850, !tbaa !816\l  %47 = icmp eq i64 %46, 0, !dbg !850\l  br i1 %47, label %48, label %49, !dbg !853\l|{<s0>T|<s1>F}}"];
	Node0x26d6040:s0 -> Node0x26d6090;
	Node0x26d6040:s1 -> Node0x26d60e0;
	Node0x26d6090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%48:\l48:                                               \l  br label %50, !dbg !853\l}"];
	Node0x26d6090 -> Node0x26d6130;
	Node0x26d60e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%49:\l49:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([10 x i8], [10\l... x i8]* @.str.13.116, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 1164, i8* noundef\l... getelementptr inbounds ([65 x i8], [65 x i8]*\l... @__PRETTY_FUNCTION__.mpn_div_qr, i64 0, i64 0)) #23, !dbg !850\l  unreachable, !dbg !850\l}"];
	Node0x26d6130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%50:\l50:                                               \l  %51 = load i64, i64* %13, align 8, !dbg !849, !tbaa !816\l  %52 = bitcast i64* %13 to i8*, !dbg !848\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %52) #22, !dbg !848\l  br label %53, !dbg !849\l}"];
	Node0x26d6130 -> Node0x26d6180;
	Node0x26d6180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%53:\l53:                                               \l  br label %54, !dbg !849\l}"];
	Node0x26d6180 -> Node0x26d61d0;
	Node0x26d61d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%54:\l54:                                               \l  %55 = load i64*, i64** %12, align 8, !dbg !854, !tbaa !810\l  store i64* %55, i64** %9, align 8, !dbg !855, !tbaa !810\l  br label %56, !dbg !856\l}"];
	Node0x26d61d0 -> Node0x26d6220;
	Node0x26d6220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  %57 = load i64*, i64** %6, align 8, !dbg !857, !tbaa !810\l  %58 = load i64*, i64** %7, align 8, !dbg !858, !tbaa !810\l  %59 = load i64, i64* %8, align 8, !dbg !859, !tbaa !816\l  %60 = load i64*, i64** %9, align 8, !dbg !860, !tbaa !810\l  %61 = load i64, i64* %10, align 8, !dbg !861, !tbaa !816\l  call void @mpn_div_qr_preinv(i64* noundef %57, i64* noundef %58, i64 noundef\l... %59, i64* noundef %60, i64 noundef %61, %struct.gmp_div_inverse* noundef\l... %11), !dbg !862\l  %62 = load i64*, i64** %12, align 8, !dbg !863, !tbaa !810\l  %63 = icmp ne i64* %62, null, !dbg !863\l  br i1 %63, label %64, label %67, !dbg !865\l|{<s0>T|<s1>F}}"];
	Node0x26d6220:s0 -> Node0x26d6270;
	Node0x26d6220:s1 -> Node0x26d62c0;
	Node0x26d6270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%64:\l64:                                               \l  %65 = load i64*, i64** %12, align 8, !dbg !866, !tbaa !810\l  %66 = load i64, i64* %10, align 8, !dbg !867, !tbaa !816\l  call void @gmp_free_limbs(i64* noundef %65, i64 noundef %66), !dbg !868\l  br label %67, !dbg !868\l}"];
	Node0x26d6270 -> Node0x26d62c0;
	Node0x26d62c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = bitcast i64** %12 to i8*, !dbg !869\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %68) #22, !dbg !869\l  %69 = bitcast %struct.gmp_div_inverse* %11 to i8*, !dbg !869\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* %69) #22, !dbg !869\l  ret void, !dbg !869\l}"];
}
