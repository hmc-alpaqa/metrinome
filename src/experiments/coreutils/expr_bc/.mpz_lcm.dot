digraph "CFG for 'mpz_lcm' function" {
	label="CFG for 'mpz_lcm' function";

	Node0x264d400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca %struct.__mpz_struct*, align 8\l  %5 = alloca %struct.__mpz_struct*, align 8\l  %6 = alloca %struct.__mpz_struct*, align 8\l  %7 = alloca [1 x %struct.__mpz_struct], align 16\l  %8 = alloca i32, align 4\l  store %struct.__mpz_struct* %0, %struct.__mpz_struct** %4, align 8, !tbaa\l... !799\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %4, metadata\l... !793, metadata !DIExpression()), !dbg !803\l  store %struct.__mpz_struct* %1, %struct.__mpz_struct** %5, align 8, !tbaa\l... !799\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %5, metadata\l... !794, metadata !DIExpression()), !dbg !804\l  store %struct.__mpz_struct* %2, %struct.__mpz_struct** %6, align 8, !tbaa\l... !799\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %6, metadata\l... !795, metadata !DIExpression()), !dbg !805\l  %9 = bitcast [1 x %struct.__mpz_struct]* %7 to i8*, !dbg !806\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* %9) #22, !dbg !806\l  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %7,\l... metadata !796, metadata !DIExpression()), !dbg !807\l  %10 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !808, !tbaa !799\l  %11 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %10, i32 0, i32 1, !dbg !810\l  %12 = load i32, i32* %11, align 4, !dbg !810, !tbaa !811\l  %13 = icmp eq i32 %12, 0, !dbg !814\l  br i1 %13, label %19, label %14, !dbg !815\l|{<s0>T|<s1>F}}"];
	Node0x264d400:s0 -> Node0x264d4e0;
	Node0x264d400:s1 -> Node0x264d490;
	Node0x264d490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%14:\l14:                                               \l  %15 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !816, !tbaa !799\l  %16 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %15, i32 0, i32 1, !dbg !817\l  %17 = load i32, i32* %16, align 4, !dbg !817, !tbaa !811\l  %18 = icmp eq i32 %17, 0, !dbg !818\l  br i1 %18, label %19, label %22, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0x264d490:s0 -> Node0x264d4e0;
	Node0x264d490:s1 -> Node0x264d530;
	Node0x264d4e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%19:\l19:                                               \l  %20 = load %struct.__mpz_struct*, %struct.__mpz_struct** %4, align 8, !dbg\l... !820, !tbaa !799\l  %21 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %20, i32 0, i32 1, !dbg !822\l  store i32 0, i32* %21, align 4, !dbg !823, !tbaa !811\l  store i32 1, i32* %8, align 4\l  br label %36, !dbg !824\l}"];
	Node0x264d4e0 -> Node0x264d580;
	Node0x264d530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%22:\l22:                                               \l  %23 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %7, i64 0, i64 0, !dbg !825\l  call void @mpz_init(%struct.__mpz_struct* noundef %23), !dbg !826\l  %24 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %7, i64 0, i64 0, !dbg !827\l  %25 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !828, !tbaa !799\l  %26 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !829, !tbaa !799\l  call void @mpz_gcd(%struct.__mpz_struct* noundef %24, %struct.__mpz_struct*\l... noundef %25, %struct.__mpz_struct* noundef %26), !dbg !830\l  %27 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %7, i64 0, i64 0, !dbg !831\l  %28 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !832, !tbaa !799\l  %29 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %7, i64 0, i64 0, !dbg !833\l  call void @mpz_divexact(%struct.__mpz_struct* noundef %27,\l... %struct.__mpz_struct* noundef %28, %struct.__mpz_struct* noundef %29), !dbg\l... !834\l  %30 = load %struct.__mpz_struct*, %struct.__mpz_struct** %4, align 8, !dbg\l... !835, !tbaa !799\l  %31 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %7, i64 0, i64 0, !dbg !836\l  %32 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !837, !tbaa !799\l  call void @mpz_mul(%struct.__mpz_struct* noundef %30, %struct.__mpz_struct*\l... noundef %31, %struct.__mpz_struct* noundef %32), !dbg !838\l  %33 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %7, i64 0, i64 0, !dbg !839\l  call void @mpz_clear(%struct.__mpz_struct* noundef %33), !dbg !840\l  %34 = load %struct.__mpz_struct*, %struct.__mpz_struct** %4, align 8, !dbg\l... !841, !tbaa !799\l  %35 = load %struct.__mpz_struct*, %struct.__mpz_struct** %4, align 8, !dbg\l... !842, !tbaa !799\l  call void @mpz_abs(%struct.__mpz_struct* noundef %34, %struct.__mpz_struct*\l... noundef %35), !dbg !843\l  store i32 0, i32* %8, align 4, !dbg !844\l  br label %36, !dbg !844\l}"];
	Node0x264d530 -> Node0x264d580;
	Node0x264d580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = bitcast [1 x %struct.__mpz_struct]* %7 to i8*, !dbg !844\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* %37) #22, !dbg !844\l  %38 = load i32, i32* %8, align 4\l  switch i32 %38, label %40 [\l    i32 0, label %39\l    i32 1, label %39\l  ]\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0x264d580:s0 -> Node0x264d620;
	Node0x264d580:s1 -> Node0x264d5d0;
	Node0x264d580:s2 -> Node0x264d5d0;
	Node0x264d5d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  ret void, !dbg !844\l}"];
	Node0x264d620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%40:\l40:                                               \l  unreachable\l}"];
}
