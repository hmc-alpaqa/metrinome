digraph "CFG for 'gmp_realloc_limbs' function" {
	label="CFG for 'gmp_realloc_limbs' function";

	Node0x2636380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca i64*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  store i64* %0, i64** %4, align 8, !tbaa !794\l  call void @llvm.dbg.declare(metadata i64** %4, metadata !791, metadata\l... !DIExpression()), !dbg !798\l  store i64 %1, i64* %5, align 8, !tbaa !799\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !792, metadata\l... !DIExpression()), !dbg !801\l  store i64 %2, i64* %6, align 8, !tbaa !799\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !793, metadata\l... !DIExpression()), !dbg !802\l  %7 = load i64, i64* %6, align 8, !dbg !803, !tbaa !799\l  %8 = icmp sgt i64 %7, 0, !dbg !803\l  br i1 %8, label %9, label %10, !dbg !806\l|{<s0>T|<s1>F}}"];
	Node0x2636380:s0 -> Node0x2636400;
	Node0x2636380:s1 -> Node0x2636450;
	Node0x2636400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l9:                                                \l  br label %11, !dbg !806\l}"];
	Node0x2636400 -> Node0x26364a0;
	Node0x2636450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%10:\l10:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([9 x i8], [9 x\l... i8]* @.str.41.82, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 377, i8* noundef\l... getelementptr inbounds ([55 x i8], [55 x i8]*\l... @__PRETTY_FUNCTION__.gmp_realloc_limbs, i64 0, i64 0)) #22, !dbg !803\l  unreachable, !dbg !803\l}"];
	Node0x26364a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l11:                                               \l  %12 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** @gmp_reallocate_func,\l... align 8, !dbg !807, !tbaa !794\l  %13 = load i64*, i64** %4, align 8, !dbg !807, !tbaa !794\l  %14 = bitcast i64* %13 to i8*, !dbg !807\l  %15 = load i64, i64* %5, align 8, !dbg !807, !tbaa !799\l  %16 = mul i64 %15, 8, !dbg !807\l  %17 = load i64, i64* %6, align 8, !dbg !807, !tbaa !799\l  %18 = mul i64 %17, 8, !dbg !807\l  %19 = call i8* %12(i8* noundef %14, i64 noundef %16, i64 noundef %18), !dbg\l... !807\l  %20 = bitcast i8* %19 to i64*, !dbg !808\l  ret i64* %20, !dbg !809\l}"];
}
