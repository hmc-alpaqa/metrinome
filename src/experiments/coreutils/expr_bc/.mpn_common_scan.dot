digraph "CFG for 'mpn_common_scan' function" {
	label="CFG for 'mpn_common_scan' function";

	Node0x2550ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%5:\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i64, align 8\l  %15 = alloca i32, align 4\l  %16 = alloca i64, align 8\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  store i64 %0, i64* %7, align 8, !tbaa !806\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !793, metadata\l... !DIExpression()), !dbg !810\l  store i64 %1, i64* %8, align 8, !tbaa !806\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !794, metadata\l... !DIExpression()), !dbg !811\l  store i64* %2, i64** %9, align 8, !tbaa !812\l  call void @llvm.dbg.declare(metadata i64** %9, metadata !795, metadata\l... !DIExpression()), !dbg !814\l  store i64 %3, i64* %10, align 8, !tbaa !806\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !796, metadata\l... !DIExpression()), !dbg !815\l  store i64 %4, i64* %11, align 8, !tbaa !806\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !797, metadata\l... !DIExpression()), !dbg !816\l  %19 = bitcast i32* %12 to i8*, !dbg !817\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #22, !dbg !817\l  call void @llvm.dbg.declare(metadata i32* %12, metadata !798, metadata\l... !DIExpression()), !dbg !818\l  %20 = load i64, i64* %11, align 8, !dbg !819, !tbaa !806\l  %21 = icmp eq i64 %20, 0, !dbg !819\l  br i1 %21, label %25, label %22, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0x2550ca0:s0 -> Node0x2552620;
	Node0x2550ca0:s1 -> Node0x25525d0;
	Node0x25525d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%22:\l22:                                               \l  %23 = load i64, i64* %11, align 8, !dbg !819, !tbaa !806\l  %24 = icmp eq i64 %23, -1, !dbg !819\l  br i1 %24, label %25, label %26, !dbg !822\l|{<s0>T|<s1>F}}"];
	Node0x25525d0:s0 -> Node0x2552620;
	Node0x25525d0:s1 -> Node0x2552670;
	Node0x2552620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%25:\l25:                                               \l  br label %27, !dbg !822\l}"];
	Node0x2552620 -> Node0x25526c0;
	Node0x2552670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%26:\l26:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([30 x i8], [30\l... x i8]* @.str.44.94, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 724, i8* noundef\l... getelementptr inbounds ([83 x i8], [83 x i8]*\l... @__PRETTY_FUNCTION__.mpn_common_scan, i64 0, i64 0)) #23, !dbg !819\l  unreachable, !dbg !819\l}"];
	Node0x25526c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%27:\l27:                                               \l  %28 = load i64, i64* %8, align 8, !dbg !823, !tbaa !806\l  %29 = icmp sle i64 0, %28, !dbg !823\l  br i1 %29, label %30, label %35, !dbg !823\l|{<s0>T|<s1>F}}"];
	Node0x25526c0:s0 -> Node0x2552710;
	Node0x25526c0:s1 -> Node0x25527b0;
	Node0x2552710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%30:\l30:                                               \l  %31 = load i64, i64* %8, align 8, !dbg !823, !tbaa !806\l  %32 = load i64, i64* %10, align 8, !dbg !823, !tbaa !806\l  %33 = icmp sle i64 %31, %32, !dbg !823\l  br i1 %33, label %34, label %35, !dbg !826\l|{<s0>T|<s1>F}}"];
	Node0x2552710:s0 -> Node0x2552760;
	Node0x2552710:s1 -> Node0x25527b0;
	Node0x2552760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%34:\l34:                                               \l  br label %36, !dbg !826\l}"];
	Node0x2552760 -> Node0x2552800;
	Node0x25527b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%35:\l35:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([18 x i8], [18\l... x i8]* @.str.45.95, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 725, i8* noundef\l... getelementptr inbounds ([83 x i8], [83 x i8]*\l... @__PRETTY_FUNCTION__.mpn_common_scan, i64 0, i64 0)) #23, !dbg !823\l  unreachable, !dbg !823\l}"];
	Node0x2552800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%36:\l36:                                               \l  br label %37, !dbg !827\l}"];
	Node0x2552800 -> Node0x2552850;
	Node0x2552850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = load i64, i64* %7, align 8, !dbg !828, !tbaa !806\l  %39 = icmp eq i64 %38, 0, !dbg !829\l  br i1 %39, label %40, label %62, !dbg !827\l|{<s0>T|<s1>F}}"];
	Node0x2552850:s0 -> Node0x25528a0;
	Node0x2552850:s1 -> Node0x2552a80;
	Node0x25528a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = load i64, i64* %8, align 8, !dbg !830, !tbaa !806\l  %42 = add nsw i64 %41, 1, !dbg !830\l  store i64 %42, i64* %8, align 8, !dbg !830, !tbaa !806\l  %43 = load i64, i64* %8, align 8, !dbg !832, !tbaa !806\l  %44 = load i64, i64* %10, align 8, !dbg !834, !tbaa !806\l  %45 = icmp eq i64 %43, %44, !dbg !835\l  br i1 %45, label %46, label %55, !dbg !836\l|{<s0>T|<s1>F}}"];
	Node0x25528a0:s0 -> Node0x25528f0;
	Node0x25528a0:s1 -> Node0x2552a30;
	Node0x25528f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%46:\l46:                                               \l  %47 = load i64, i64* %11, align 8, !dbg !837, !tbaa !806\l  %48 = icmp eq i64 %47, 0, !dbg !838\l  br i1 %48, label %49, label %50, !dbg !837\l|{<s0>T|<s1>F}}"];
	Node0x25528f0:s0 -> Node0x2552940;
	Node0x25528f0:s1 -> Node0x2552990;
	Node0x2552940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%49:\l49:                                               \l  br label %53, !dbg !837\l}"];
	Node0x2552940 -> Node0x25529e0;
	Node0x2552990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%50:\l50:                                               \l  %51 = load i64, i64* %10, align 8, !dbg !839, !tbaa !806\l  %52 = mul i64 %51, 64, !dbg !840\l  br label %53, !dbg !837\l}"];
	Node0x2552990 -> Node0x25529e0;
	Node0x25529e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%53:\l53:                                               \l  %54 = phi i64 [ -1, %49 ], [ %52, %50 ], !dbg !837\l  store i64 %54, i64* %6, align 8, !dbg !841\l  store i32 1, i32* %13, align 4\l  br label %123, !dbg !841\l}"];
	Node0x25529e0 -> Node0x2552fd0;
	Node0x2552a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  %56 = load i64, i64* %11, align 8, !dbg !842, !tbaa !806\l  %57 = load i64*, i64** %9, align 8, !dbg !843, !tbaa !812\l  %58 = load i64, i64* %8, align 8, !dbg !844, !tbaa !806\l  %59 = getelementptr inbounds i64, i64* %57, i64 %58, !dbg !843\l  %60 = load i64, i64* %59, align 8, !dbg !843, !tbaa !806\l  %61 = xor i64 %56, %60, !dbg !845\l  store i64 %61, i64* %7, align 8, !dbg !846, !tbaa !806\l  br label %37, !dbg !827, !llvm.loop !847\l}"];
	Node0x2552a30 -> Node0x2552850;
	Node0x2552a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%62:\l62:                                               \l  br label %63, !dbg !851\l}"];
	Node0x2552a80 -> Node0x2552ad0;
	Node0x2552ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%63:\l63:                                               \l  %64 = bitcast i64* %14 to i8*, !dbg !852\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %64) #22, !dbg !852\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !799, metadata\l... !DIExpression()), !dbg !852\l  %65 = load i64, i64* %7, align 8, !dbg !852, !tbaa !806\l  store i64 %65, i64* %14, align 8, !dbg !852, !tbaa !806\l  %66 = bitcast i32* %15 to i8*, !dbg !852\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %66) #22, !dbg !852\l  call void @llvm.dbg.declare(metadata i32* %15, metadata !801, metadata\l... !DIExpression()), !dbg !852\l  store i32 0, i32* %15, align 4, !dbg !852, !tbaa !853\l  br label %67, !dbg !852\l}"];
	Node0x2552ad0 -> Node0x2552b20;
	Node0x2552b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%67:\l67:                                               \l  %68 = bitcast i64* %16 to i8*, !dbg !855\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %68) #22, !dbg !855\l  call void @llvm.dbg.declare(metadata i64* %16, metadata !802, metadata\l... !DIExpression()), !dbg !855\l  %69 = load i64, i64* %14, align 8, !dbg !855, !tbaa !806\l  %70 = load i64, i64* %14, align 8, !dbg !855, !tbaa !806\l  %71 = sub i64 0, %70, !dbg !855\l  %72 = and i64 %69, %71, !dbg !855\l  store i64 %72, i64* %16, align 8, !dbg !855, !tbaa !806\l  %73 = bitcast i32* %17 to i8*, !dbg !855\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %73) #22, !dbg !855\l  call void @llvm.dbg.declare(metadata i32* %17, metadata !804, metadata\l... !DIExpression()), !dbg !855\l  store i32 0, i32* %17, align 4, !dbg !855, !tbaa !853\l  %74 = bitcast i32* %18 to i8*, !dbg !855\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %74) #22, !dbg !855\l  call void @llvm.dbg.declare(metadata i32* %18, metadata !805, metadata\l... !DIExpression()), !dbg !855\l  store i32 8, i32* %18, align 4, !dbg !855, !tbaa !853\l  %75 = load i32, i32* %18, align 4, !dbg !856, !tbaa !853\l  %76 = sext i32 %75 to i64, !dbg !856\l  %77 = icmp ugt i64 64, %76, !dbg !856\l  br i1 %77, label %78, label %92, !dbg !855\l|{<s0>T|<s1>F}}"];
	Node0x2552b20:s0 -> Node0x2552b70;
	Node0x2552b20:s1 -> Node0x2552d00;
	Node0x2552b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%78:\l78:                                               \l  br label %79, !dbg !856\l}"];
	Node0x2552b70 -> Node0x2552bc0;
	Node0x2552bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%79:\l79:                                               \l  %80 = load i64, i64* %16, align 8, !dbg !858, !tbaa !806\l  %81 = and i64 %80, -72057594037927936, !dbg !858\l  %82 = icmp eq i64 %81, 0, !dbg !858\l  br i1 %82, label %83, label %91, !dbg !861\l|{<s0>T|<s1>F}}"];
	Node0x2552bc0:s0 -> Node0x2552c10;
	Node0x2552bc0:s1 -> Node0x2552cb0;
	Node0x2552c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%83:\l83:                                               \l  %84 = load i32, i32* %18, align 4, !dbg !862, !tbaa !853\l  %85 = load i64, i64* %16, align 8, !dbg !862, !tbaa !806\l  %86 = zext i32 %84 to i64, !dbg !862\l  %87 = shl i64 %85, %86, !dbg !862\l  store i64 %87, i64* %16, align 8, !dbg !862, !tbaa !806\l  br label %88, !dbg !862\l}"];
	Node0x2552c10 -> Node0x2552c60;
	Node0x2552c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%88:\l88:                                               \l  %89 = load i32, i32* %17, align 4, !dbg !858, !tbaa !853\l  %90 = add i32 %89, 8, !dbg !858\l  store i32 %90, i32* %17, align 4, !dbg !858, !tbaa !853\l  br label %79, !dbg !858, !llvm.loop !864\l}"];
	Node0x2552c60 -> Node0x2552bc0;
	Node0x2552cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%91:\l91:                                               \l  br label %92, !dbg !861\l}"];
	Node0x2552cb0 -> Node0x2552d00;
	Node0x2552d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%92:\l92:                                               \l  br label %93, !dbg !855\l}"];
	Node0x2552d00 -> Node0x2552d50;
	Node0x2552d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%93:\l93:                                               \l  %94 = load i64, i64* %16, align 8, !dbg !865, !tbaa !806\l  %95 = and i64 %94, -9223372036854775808, !dbg !865\l  %96 = icmp eq i64 %95, 0, !dbg !865\l  br i1 %96, label %97, label %103, !dbg !868\l|{<s0>T|<s1>F}}"];
	Node0x2552d50:s0 -> Node0x2552da0;
	Node0x2552d50:s1 -> Node0x2552e40;
	Node0x2552da0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  %98 = load i64, i64* %16, align 8, !dbg !865, !tbaa !806\l  %99 = shl i64 %98, 1, !dbg !865\l  store i64 %99, i64* %16, align 8, !dbg !865, !tbaa !806\l  br label %100, !dbg !865\l}"];
	Node0x2552da0 -> Node0x2552df0;
	Node0x2552df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%100:\l100:                                              \l  %101 = load i32, i32* %17, align 4, !dbg !865, !tbaa !853\l  %102 = add i32 %101, 1, !dbg !865\l  store i32 %102, i32* %17, align 4, !dbg !865, !tbaa !853\l  br label %93, !dbg !865, !llvm.loop !869\l}"];
	Node0x2552df0 -> Node0x2552d50;
	Node0x2552e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%103:\l103:                                              \l  %104 = load i32, i32* %17, align 4, !dbg !855, !tbaa !853\l  store i32 %104, i32* %15, align 4, !dbg !855, !tbaa !853\l  %105 = bitcast i32* %18 to i8*, !dbg !852\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %105) #22, !dbg !852\l  %106 = bitcast i32* %17 to i8*, !dbg !852\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %106) #22, !dbg !852\l  %107 = bitcast i64* %16 to i8*, !dbg !852\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107) #22, !dbg !852\l  br label %108, !dbg !855\l}"];
	Node0x2552e40 -> Node0x2552e90;
	Node0x2552e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%108:\l108:                                              \l  br label %109, !dbg !855\l}"];
	Node0x2552e90 -> Node0x2552ee0;
	Node0x2552ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%109:\l109:                                              \l  %110 = load i32, i32* %15, align 4, !dbg !852, !tbaa !853\l  %111 = zext i32 %110 to i64, !dbg !852\l  %112 = sub i64 63, %111, !dbg !852\l  %113 = trunc i64 %112 to i32, !dbg !852\l  store i32 %113, i32* %12, align 4, !dbg !852, !tbaa !853\l  %114 = bitcast i32* %15 to i8*, !dbg !851\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %114) #22, !dbg !851\l  %115 = bitcast i64* %14 to i8*, !dbg !851\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %115) #22, !dbg !851\l  br label %116, !dbg !852\l}"];
	Node0x2552ee0 -> Node0x2552f30;
	Node0x2552f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%116:\l116:                                              \l  br label %117, !dbg !852\l}"];
	Node0x2552f30 -> Node0x2552f80;
	Node0x2552f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%117:\l117:                                              \l  %118 = load i64, i64* %8, align 8, !dbg !870, !tbaa !806\l  %119 = mul i64 %118, 64, !dbg !871\l  %120 = load i32, i32* %12, align 4, !dbg !872, !tbaa !853\l  %121 = zext i32 %120 to i64, !dbg !872\l  %122 = add i64 %119, %121, !dbg !873\l  store i64 %122, i64* %6, align 8, !dbg !874\l  store i32 1, i32* %13, align 4\l  br label %123, !dbg !874\l}"];
	Node0x2552f80 -> Node0x2552fd0;
	Node0x2552fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%123:\l123:                                              \l  %124 = bitcast i32* %12 to i8*, !dbg !875\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %124) #22, !dbg !875\l  %125 = load i64, i64* %6, align 8, !dbg !875\l  ret i64 %125, !dbg !875\l}"];
}
