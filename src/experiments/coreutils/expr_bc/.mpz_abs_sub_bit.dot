digraph "CFG for 'mpz_abs_sub_bit' function" {
	label="CFG for 'mpz_abs_sub_bit' function";

	Node0x2647b20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca %struct.__mpz_struct*, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  store %struct.__mpz_struct* %0, %struct.__mpz_struct** %3, align 8, !tbaa\l... !799\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %3, metadata\l... !791, metadata !DIExpression()), !dbg !803\l  store i64 %1, i64* %4, align 8, !tbaa !804\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !792, metadata\l... !DIExpression()), !dbg !806\l  %10 = bitcast i64* %5 to i8*, !dbg !807\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #22, !dbg !807\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !793, metadata\l... !DIExpression()), !dbg !808\l  %11 = bitcast i64* %6 to i8*, !dbg !807\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #22, !dbg !807\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !794, metadata\l... !DIExpression()), !dbg !809\l  %12 = bitcast i64** %7 to i8*, !dbg !810\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #22, !dbg !810\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !795, metadata\l... !DIExpression()), !dbg !811\l  %13 = bitcast i64* %8 to i8*, !dbg !812\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #22, !dbg !812\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !796, metadata\l... !DIExpression()), !dbg !813\l  %14 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !814, !tbaa !799\l  %15 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %14, i32 0, i32 1, !dbg !814\l  %16 = load i32, i32* %15, align 4, !dbg !814, !tbaa !815\l  %17 = icmp sge i32 %16, 0, !dbg !814\l  br i1 %17, label %18, label %22, !dbg !814\l|{<s0>T|<s1>F}}"];
	Node0x2647b20:s0 -> Node0x2647c00;
	Node0x2647b20:s1 -> Node0x2647c50;
	Node0x2647c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%18:\l18:                                               \l  %19 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !814, !tbaa !799\l  %20 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %19, i32 0, i32 1, !dbg !814\l  %21 = load i32, i32* %20, align 4, !dbg !814, !tbaa !815\l  br label %27, !dbg !814\l}"];
	Node0x2647c00 -> Node0x2647ca0;
	Node0x2647c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%22:\l22:                                               \l  %23 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !814, !tbaa !799\l  %24 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %23, i32 0, i32 1, !dbg !814\l  %25 = load i32, i32* %24, align 4, !dbg !814, !tbaa !815\l  %26 = sub nsw i32 0, %25, !dbg !814\l  br label %27, !dbg !814\l}"];
	Node0x2647c50 -> Node0x2647ca0;
	Node0x2647ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %21, %18 ], [ %26, %22 ], !dbg !814\l  %29 = sext i32 %28 to i64, !dbg !814\l  store i64 %29, i64* %5, align 8, !dbg !818, !tbaa !804\l  %30 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !819, !tbaa !799\l  %31 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %30, i32 0, i32 2, !dbg !820\l  %32 = load i64*, i64** %31, align 8, !dbg !820, !tbaa !821\l  store i64* %32, i64** %7, align 8, !dbg !822, !tbaa !799\l  %33 = load i64, i64* %4, align 8, !dbg !823, !tbaa !804\l  %34 = udiv i64 %33, 64, !dbg !824\l  store i64 %34, i64* %6, align 8, !dbg !825, !tbaa !804\l  %35 = load i64, i64* %4, align 8, !dbg !826, !tbaa !804\l  %36 = urem i64 %35, 64, !dbg !827\l  %37 = shl i64 1, %36, !dbg !828\l  store i64 %37, i64* %8, align 8, !dbg !829, !tbaa !804\l  %38 = load i64, i64* %6, align 8, !dbg !830, !tbaa !804\l  %39 = load i64, i64* %5, align 8, !dbg !830, !tbaa !804\l  %40 = icmp slt i64 %38, %39, !dbg !830\l  br i1 %40, label %41, label %42, !dbg !833\l|{<s0>T|<s1>F}}"];
	Node0x2647ca0:s0 -> Node0x2647cf0;
	Node0x2647ca0:s1 -> Node0x2647d40;
	Node0x2647cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  br label %43, !dbg !833\l}"];
	Node0x2647cf0 -> Node0x2647d90;
	Node0x2647d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%42:\l42:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([16 x i8], [16\l... x i8]* @.str.71.140, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 3761, i8* noundef\l... getelementptr inbounds ([50 x i8], [50 x i8]*\l... @__PRETTY_FUNCTION__.mpz_abs_sub_bit, i64 0, i64 0)) #23, !dbg !830\l  unreachable, !dbg !830\l}"];
	Node0x2647d90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  br label %44, !dbg !834\l}"];
	Node0x2647d90 -> Node0x2647de0;
	Node0x2647de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = bitcast i64* %9 to i8*, !dbg !835\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #22, !dbg !835\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !797, metadata\l... !DIExpression()), !dbg !835\l  %46 = load i64*, i64** %7, align 8, !dbg !835, !tbaa !799\l  %47 = load i64, i64* %6, align 8, !dbg !835, !tbaa !804\l  %48 = getelementptr inbounds i64, i64* %46, i64 %47, !dbg !835\l  %49 = load i64*, i64** %7, align 8, !dbg !835, !tbaa !799\l  %50 = load i64, i64* %6, align 8, !dbg !835, !tbaa !804\l  %51 = getelementptr inbounds i64, i64* %49, i64 %50, !dbg !835\l  %52 = load i64, i64* %5, align 8, !dbg !835, !tbaa !804\l  %53 = load i64, i64* %6, align 8, !dbg !835, !tbaa !804\l  %54 = sub nsw i64 %52, %53, !dbg !835\l  %55 = load i64, i64* %8, align 8, !dbg !835, !tbaa !804\l  %56 = call i64 @mpn_sub_1(i64* noundef %48, i64* noundef %51, i64 noundef\l... %54, i64 noundef %55), !dbg !835\l  store i64 %56, i64* %9, align 8, !dbg !835, !tbaa !804\l  %57 = load i64, i64* %9, align 8, !dbg !836, !tbaa !804\l  %58 = icmp eq i64 %57, 0, !dbg !836\l  br i1 %58, label %59, label %60, !dbg !839\l|{<s0>T|<s1>F}}"];
	Node0x2647de0:s0 -> Node0x2647e30;
	Node0x2647de0:s1 -> Node0x2647e80;
	Node0x2647e30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  br label %61, !dbg !839\l}"];
	Node0x2647e30 -> Node0x2647ed0;
	Node0x2647e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%60:\l60:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([10 x i8], [10\l... x i8]* @.str.13.116, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 3764, i8* noundef\l... getelementptr inbounds ([50 x i8], [50 x i8]*\l... @__PRETTY_FUNCTION__.mpz_abs_sub_bit, i64 0, i64 0)) #23, !dbg !836\l  unreachable, !dbg !836\l}"];
	Node0x2647ed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = load i64, i64* %9, align 8, !dbg !835, !tbaa !804\l  %63 = bitcast i64* %9 to i8*, !dbg !834\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #22, !dbg !834\l  br label %64, !dbg !835\l}"];
	Node0x2647ed0 -> Node0x2647f20;
	Node0x2647f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  br label %65, !dbg !835\l}"];
	Node0x2647f20 -> Node0x2647f70;
	Node0x2647f70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = load i64*, i64** %7, align 8, !dbg !840, !tbaa !799\l  %67 = load i64, i64* %5, align 8, !dbg !841, !tbaa !804\l  %68 = call i64 @mpn_normalized_size(i64* noundef %66, i64 noundef %67), !dbg\l... !842\l  store i64 %68, i64* %5, align 8, !dbg !843, !tbaa !804\l  %69 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !844, !tbaa !799\l  %70 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %69, i32 0, i32 1, !dbg !845\l  %71 = load i32, i32* %70, align 4, !dbg !845, !tbaa !815\l  %72 = icmp slt i32 %71, 0, !dbg !846\l  br i1 %72, label %73, label %76, !dbg !847\l|{<s0>T|<s1>F}}"];
	Node0x2647f70:s0 -> Node0x2647fc0;
	Node0x2647f70:s1 -> Node0x2648010;
	Node0x2647fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%73:\l73:                                               \l  %74 = load i64, i64* %5, align 8, !dbg !848, !tbaa !804\l  %75 = sub nsw i64 0, %74, !dbg !849\l  br label %78, !dbg !847\l}"];
	Node0x2647fc0 -> Node0x2648060;
	Node0x2648010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%76:\l76:                                               \l  %77 = load i64, i64* %5, align 8, !dbg !850, !tbaa !804\l  br label %78, !dbg !847\l}"];
	Node0x2648010 -> Node0x2648060;
	Node0x2648060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%78:\l78:                                               \l  %79 = phi i64 [ %75, %73 ], [ %77, %76 ], !dbg !847\l  %80 = trunc i64 %79 to i32, !dbg !847\l  %81 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !851, !tbaa !799\l  %82 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %81, i32 0, i32 1, !dbg !852\l  store i32 %80, i32* %82, align 4, !dbg !853, !tbaa !815\l  %83 = bitcast i64* %8 to i8*, !dbg !854\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #22, !dbg !854\l  %84 = bitcast i64** %7 to i8*, !dbg !854\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #22, !dbg !854\l  %85 = bitcast i64* %6 to i8*, !dbg !854\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #22, !dbg !854\l  %86 = bitcast i64* %5 to i8*, !dbg !854\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #22, !dbg !854\l  ret void, !dbg !854\l}"];
}
