digraph "CFG for 'mpn_gcd_11' function" {
	label="CFG for 'mpn_gcd_11' function";

	Node0x2792230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca i64, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i64, align 8\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca i64, align 8\l  store i64 %0, i64* %4, align 8, !tbaa !804\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !791, metadata\l... !DIExpression()), !dbg !808\l  store i64 %1, i64* %5, align 8, !tbaa !804\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !792, metadata\l... !DIExpression()), !dbg !809\l  %14 = bitcast i32* %6 to i8*, !dbg !810\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #22, !dbg !810\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !793, metadata\l... !DIExpression()), !dbg !811\l  %15 = load i64, i64* %4, align 8, !dbg !812, !tbaa !804\l  %16 = load i64, i64* %5, align 8, !dbg !812, !tbaa !804\l  %17 = or i64 %15, %16, !dbg !812\l  %18 = icmp ugt i64 %17, 0, !dbg !812\l  br i1 %18, label %19, label %20, !dbg !815\l|{<s0>T|<s1>F}}"];
	Node0x2792230:s0 -> Node0x2792400;
	Node0x2792230:s1 -> Node0x2792450;
	Node0x2792400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%19:\l19:                                               \l  br label %21, !dbg !815\l}"];
	Node0x2792400 -> Node0x27924a0;
	Node0x2792450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%20:\l20:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([12 x i8], [12\l... x i8]* @.str.53.137, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 2671, i8* noundef\l... getelementptr inbounds ([43 x i8], [43 x i8]*\l... @__PRETTY_FUNCTION__.mpn_gcd_11, i64 0, i64 0)) #23, !dbg !812\l  unreachable, !dbg !812\l}"];
	Node0x27924a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%21:\l21:                                               \l  %22 = load i64, i64* %4, align 8, !dbg !816, !tbaa !804\l  %23 = icmp eq i64 %22, 0, !dbg !818\l  br i1 %23, label %24, label %26, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0x27924a0:s0 -> Node0x27924f0;
	Node0x27924a0:s1 -> Node0x2792540;
	Node0x27924f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%24:\l24:                                               \l  %25 = load i64, i64* %5, align 8, !dbg !820, !tbaa !804\l  store i64 %25, i64* %3, align 8, !dbg !821\l  store i32 1, i32* %7, align 4\l  br label %157, !dbg !821\l}"];
	Node0x27924f0 -> Node0x27931c0;
	Node0x2792540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%26:\l26:                                               \l  %27 = load i64, i64* %5, align 8, !dbg !822, !tbaa !804\l  %28 = icmp eq i64 %27, 0, !dbg !824\l  br i1 %28, label %29, label %31, !dbg !825\l|{<s0>T|<s1>F}}"];
	Node0x2792540:s0 -> Node0x2792590;
	Node0x2792540:s1 -> Node0x27925e0;
	Node0x2792590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%29:\l29:                                               \l  %30 = load i64, i64* %4, align 8, !dbg !826, !tbaa !804\l  store i64 %30, i64* %3, align 8, !dbg !827\l  store i32 1, i32* %7, align 4\l  br label %157, !dbg !827\l}"];
	Node0x2792590 -> Node0x27931c0;
	Node0x27925e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%31:\l31:                                               \l  br label %32\l}"];
	Node0x27925e0 -> Node0x2792630;
	Node0x2792630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%32:\l32:                                               \l  br label %33, !dbg !828\l}"];
	Node0x2792630 -> Node0x2792680;
	Node0x2792680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%33:\l33:                                               \l  %34 = bitcast i64* %8 to i8*, !dbg !829\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #22, !dbg !829\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !794, metadata\l... !DIExpression()), !dbg !829\l  %35 = load i64, i64* %4, align 8, !dbg !829, !tbaa !804\l  %36 = load i64, i64* %5, align 8, !dbg !829, !tbaa !804\l  %37 = or i64 %35, %36, !dbg !829\l  store i64 %37, i64* %8, align 8, !dbg !829, !tbaa !804\l  %38 = bitcast i32* %9 to i8*, !dbg !829\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #22, !dbg !829\l  call void @llvm.dbg.declare(metadata i32* %9, metadata !796, metadata\l... !DIExpression()), !dbg !829\l  store i32 0, i32* %9, align 4, !dbg !829, !tbaa !830\l  br label %39, !dbg !829\l}"];
	Node0x2792680 -> Node0x27926d0;
	Node0x27926d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%39:\l39:                                               \l  %40 = bitcast i64* %10 to i8*, !dbg !832\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #22, !dbg !832\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !797, metadata\l... !DIExpression()), !dbg !832\l  %41 = load i64, i64* %8, align 8, !dbg !832, !tbaa !804\l  %42 = load i64, i64* %8, align 8, !dbg !832, !tbaa !804\l  %43 = sub i64 0, %42, !dbg !832\l  %44 = and i64 %41, %43, !dbg !832\l  store i64 %44, i64* %10, align 8, !dbg !832, !tbaa !804\l  %45 = bitcast i32* %11 to i8*, !dbg !832\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #22, !dbg !832\l  call void @llvm.dbg.declare(metadata i32* %11, metadata !799, metadata\l... !DIExpression()), !dbg !832\l  store i32 0, i32* %11, align 4, !dbg !832, !tbaa !830\l  %46 = bitcast i32* %12 to i8*, !dbg !832\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #22, !dbg !832\l  call void @llvm.dbg.declare(metadata i32* %12, metadata !800, metadata\l... !DIExpression()), !dbg !832\l  store i32 8, i32* %12, align 4, !dbg !832, !tbaa !830\l  %47 = load i32, i32* %12, align 4, !dbg !833, !tbaa !830\l  %48 = sext i32 %47 to i64, !dbg !833\l  %49 = icmp ugt i64 64, %48, !dbg !833\l  br i1 %49, label %50, label %64, !dbg !832\l|{<s0>T|<s1>F}}"];
	Node0x27926d0:s0 -> Node0x2792720;
	Node0x27926d0:s1 -> Node0x27928b0;
	Node0x2792720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%50:\l50:                                               \l  br label %51, !dbg !833\l}"];
	Node0x2792720 -> Node0x2792770;
	Node0x2792770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%51:\l51:                                               \l  %52 = load i64, i64* %10, align 8, !dbg !835, !tbaa !804\l  %53 = and i64 %52, -72057594037927936, !dbg !835\l  %54 = icmp eq i64 %53, 0, !dbg !835\l  br i1 %54, label %55, label %63, !dbg !838\l|{<s0>T|<s1>F}}"];
	Node0x2792770:s0 -> Node0x27927c0;
	Node0x2792770:s1 -> Node0x2792860;
	Node0x27927c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%55:\l55:                                               \l  %56 = load i32, i32* %12, align 4, !dbg !839, !tbaa !830\l  %57 = load i64, i64* %10, align 8, !dbg !839, !tbaa !804\l  %58 = zext i32 %56 to i64, !dbg !839\l  %59 = shl i64 %57, %58, !dbg !839\l  store i64 %59, i64* %10, align 8, !dbg !839, !tbaa !804\l  br label %60, !dbg !839\l}"];
	Node0x27927c0 -> Node0x2792810;
	Node0x2792810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%60:\l60:                                               \l  %61 = load i32, i32* %11, align 4, !dbg !835, !tbaa !830\l  %62 = add i32 %61, 8, !dbg !835\l  store i32 %62, i32* %11, align 4, !dbg !835, !tbaa !830\l  br label %51, !dbg !835, !llvm.loop !841\l}"];
	Node0x2792810 -> Node0x2792770;
	Node0x2792860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%63:\l63:                                               \l  br label %64, !dbg !838\l}"];
	Node0x2792860 -> Node0x27928b0;
	Node0x27928b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%64:\l64:                                               \l  br label %65, !dbg !832\l}"];
	Node0x27928b0 -> Node0x2792900;
	Node0x2792900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%65:\l65:                                               \l  %66 = load i64, i64* %10, align 8, !dbg !844, !tbaa !804\l  %67 = and i64 %66, -9223372036854775808, !dbg !844\l  %68 = icmp eq i64 %67, 0, !dbg !844\l  br i1 %68, label %69, label %75, !dbg !847\l|{<s0>T|<s1>F}}"];
	Node0x2792900:s0 -> Node0x2792950;
	Node0x2792900:s1 -> Node0x27929f0;
	Node0x2792950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%69:\l69:                                               \l  %70 = load i64, i64* %10, align 8, !dbg !844, !tbaa !804\l  %71 = shl i64 %70, 1, !dbg !844\l  store i64 %71, i64* %10, align 8, !dbg !844, !tbaa !804\l  br label %72, !dbg !844\l}"];
	Node0x2792950 -> Node0x27929a0;
	Node0x27929a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%72:\l72:                                               \l  %73 = load i32, i32* %11, align 4, !dbg !844, !tbaa !830\l  %74 = add i32 %73, 1, !dbg !844\l  store i32 %74, i32* %11, align 4, !dbg !844, !tbaa !830\l  br label %65, !dbg !844, !llvm.loop !848\l}"];
	Node0x27929a0 -> Node0x2792900;
	Node0x27929f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%75:\l75:                                               \l  %76 = load i32, i32* %11, align 4, !dbg !832, !tbaa !830\l  store i32 %76, i32* %9, align 4, !dbg !832, !tbaa !830\l  %77 = bitcast i32* %12 to i8*, !dbg !829\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %77) #22, !dbg !829\l  %78 = bitcast i32* %11 to i8*, !dbg !829\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %78) #22, !dbg !829\l  %79 = bitcast i64* %10 to i8*, !dbg !829\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %79) #22, !dbg !829\l  br label %80, !dbg !832\l}"];
	Node0x27929f0 -> Node0x2792a40;
	Node0x2792a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%80:\l80:                                               \l  br label %81, !dbg !832\l}"];
	Node0x2792a40 -> Node0x2792a90;
	Node0x2792a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%81:\l81:                                               \l  %82 = load i32, i32* %9, align 4, !dbg !829, !tbaa !830\l  %83 = zext i32 %82 to i64, !dbg !829\l  %84 = sub i64 63, %83, !dbg !829\l  %85 = trunc i64 %84 to i32, !dbg !829\l  store i32 %85, i32* %6, align 4, !dbg !829, !tbaa !830\l  %86 = bitcast i32* %9 to i8*, !dbg !828\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %86) #22, !dbg !828\l  %87 = bitcast i64* %8 to i8*, !dbg !828\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87) #22, !dbg !828\l  br label %88, !dbg !829\l}"];
	Node0x2792a90 -> Node0x2792ae0;
	Node0x2792ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%88:\l88:                                               \l  br label %89, !dbg !829\l}"];
	Node0x2792ae0 -> Node0x2792b30;
	Node0x2792b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%89:\l89:                                               \l  %90 = load i32, i32* %6, align 4, !dbg !849, !tbaa !830\l  %91 = load i64, i64* %4, align 8, !dbg !850, !tbaa !804\l  %92 = zext i32 %90 to i64, !dbg !850\l  %93 = lshr i64 %91, %92, !dbg !850\l  store i64 %93, i64* %4, align 8, !dbg !850, !tbaa !804\l  %94 = load i32, i32* %6, align 4, !dbg !851, !tbaa !830\l  %95 = load i64, i64* %5, align 8, !dbg !852, !tbaa !804\l  %96 = zext i32 %94 to i64, !dbg !852\l  %97 = lshr i64 %95, %96, !dbg !852\l  store i64 %97, i64* %5, align 8, !dbg !852, !tbaa !804\l  %98 = load i64, i64* %4, align 8, !dbg !853, !tbaa !804\l  %99 = and i64 %98, 1, !dbg !854\l  %100 = icmp eq i64 %99, 0, !dbg !855\l  br i1 %100, label %101, label %110, !dbg !856\l|{<s0>T|<s1>F}}"];
	Node0x2792b30:s0 -> Node0x2792b80;
	Node0x2792b30:s1 -> Node0x2792cc0;
	Node0x2792b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%101:\l101:                                              \l  br label %102, !dbg !857\l}"];
	Node0x2792b80 -> Node0x2792bd0;
	Node0x2792bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%102:\l102:                                              \l  %103 = bitcast i64* %13 to i8*, !dbg !858\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %103) #22, !dbg !858\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !801, metadata\l... !DIExpression()), !dbg !858\l  %104 = load i64, i64* %4, align 8, !dbg !858, !tbaa !804\l  store i64 %104, i64* %13, align 8, !dbg !858, !tbaa !804\l  %105 = load i64, i64* %5, align 8, !dbg !858, !tbaa !804\l  store i64 %105, i64* %4, align 8, !dbg !858, !tbaa !804\l  %106 = load i64, i64* %13, align 8, !dbg !858, !tbaa !804\l  store i64 %106, i64* %5, align 8, !dbg !858, !tbaa !804\l  %107 = bitcast i64* %13 to i8*, !dbg !857\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107) #22, !dbg !857\l  br label %108, !dbg !858\l}"];
	Node0x2792bd0 -> Node0x2792c20;
	Node0x2792c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%108:\l108:                                              \l  br label %109, !dbg !858\l}"];
	Node0x2792c20 -> Node0x2792c70;
	Node0x2792c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%109:\l109:                                              \l  br label %110, !dbg !858\l}"];
	Node0x2792c70 -> Node0x2792cc0;
	Node0x2792cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%110:\l110:                                              \l  br label %111, !dbg !859\l}"];
	Node0x2792cc0 -> Node0x2792d10;
	Node0x2792d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%111:\l111:                                              \l  %112 = load i64, i64* %5, align 8, !dbg !860, !tbaa !804\l  %113 = and i64 %112, 1, !dbg !861\l  %114 = icmp eq i64 %113, 0, !dbg !862\l  br i1 %114, label %115, label %118, !dbg !859\l|{<s0>T|<s1>F}}"];
	Node0x2792d10:s0 -> Node0x2792d60;
	Node0x2792d10:s1 -> Node0x2792db0;
	Node0x2792d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%115:\l115:                                              \l  %116 = load i64, i64* %5, align 8, !dbg !863, !tbaa !804\l  %117 = lshr i64 %116, 1, !dbg !863\l  store i64 %117, i64* %5, align 8, !dbg !863, !tbaa !804\l  br label %111, !dbg !859, !llvm.loop !864\l}"];
	Node0x2792d60 -> Node0x2792d10;
	Node0x2792db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%118:\l118:                                              \l  br label %119, !dbg !866\l}"];
	Node0x2792db0 -> Node0x2792e00;
	Node0x2792e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%119:\l119:                                              \l  %120 = load i64, i64* %4, align 8, !dbg !867, !tbaa !804\l  %121 = load i64, i64* %5, align 8, !dbg !868, !tbaa !804\l  %122 = icmp ne i64 %120, %121, !dbg !869\l  br i1 %122, label %123, label %152, !dbg !866\l|{<s0>T|<s1>F}}"];
	Node0x2792e00:s0 -> Node0x2792e50;
	Node0x2792e00:s1 -> Node0x2793170;
	Node0x2792e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%123:\l123:                                              \l  %124 = load i64, i64* %4, align 8, !dbg !870, !tbaa !804\l  %125 = load i64, i64* %5, align 8, !dbg !873, !tbaa !804\l  %126 = icmp ugt i64 %124, %125, !dbg !874\l  br i1 %126, label %127, label %139, !dbg !875\l|{<s0>T|<s1>F}}"];
	Node0x2792e50:s0 -> Node0x2792ea0;
	Node0x2792e50:s1 -> Node0x2792fe0;
	Node0x2792ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%127:\l127:                                              \l  %128 = load i64, i64* %5, align 8, !dbg !876, !tbaa !804\l  %129 = load i64, i64* %4, align 8, !dbg !878, !tbaa !804\l  %130 = sub i64 %129, %128, !dbg !878\l  store i64 %130, i64* %4, align 8, !dbg !878, !tbaa !804\l  br label %131, !dbg !879\l}"];
	Node0x2792ea0 -> Node0x2792ef0;
	Node0x2792ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%131:\l131:                                              \l  %132 = load i64, i64* %4, align 8, !dbg !880, !tbaa !804\l  %133 = lshr i64 %132, 1, !dbg !880\l  store i64 %133, i64* %4, align 8, !dbg !880, !tbaa !804\l  br label %134, !dbg !881\l}"];
	Node0x2792ef0 -> Node0x2792f40;
	Node0x2792f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%134:\l134:                                              \l  %135 = load i64, i64* %4, align 8, !dbg !882, !tbaa !804\l  %136 = and i64 %135, 1, !dbg !883\l  %137 = icmp eq i64 %136, 0, !dbg !884\l  br i1 %137, label %131, label %138, !dbg !881, !llvm.loop !885\l|{<s0>T|<s1>F}}"];
	Node0x2792f40:s0 -> Node0x2792ef0;
	Node0x2792f40:s1 -> Node0x2792f90;
	Node0x2792f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%138:\l138:                                              \l  br label %151, !dbg !887\l}"];
	Node0x2792f90 -> Node0x2793120;
	Node0x2792fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%139:\l139:                                              \l  %140 = load i64, i64* %4, align 8, !dbg !888, !tbaa !804\l  %141 = load i64, i64* %5, align 8, !dbg !890, !tbaa !804\l  %142 = sub i64 %141, %140, !dbg !890\l  store i64 %142, i64* %5, align 8, !dbg !890, !tbaa !804\l  br label %143, !dbg !891\l}"];
	Node0x2792fe0 -> Node0x2793030;
	Node0x2793030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%143:\l143:                                              \l  %144 = load i64, i64* %5, align 8, !dbg !892, !tbaa !804\l  %145 = lshr i64 %144, 1, !dbg !892\l  store i64 %145, i64* %5, align 8, !dbg !892, !tbaa !804\l  br label %146, !dbg !893\l}"];
	Node0x2793030 -> Node0x2793080;
	Node0x2793080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%146:\l146:                                              \l  %147 = load i64, i64* %5, align 8, !dbg !894, !tbaa !804\l  %148 = and i64 %147, 1, !dbg !895\l  %149 = icmp eq i64 %148, 0, !dbg !896\l  br i1 %149, label %143, label %150, !dbg !893, !llvm.loop !897\l|{<s0>T|<s1>F}}"];
	Node0x2793080:s0 -> Node0x2793030;
	Node0x2793080:s1 -> Node0x27930d0;
	Node0x27930d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%150:\l150:                                              \l  br label %151\l}"];
	Node0x27930d0 -> Node0x2793120;
	Node0x2793120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%151:\l151:                                              \l  br label %119, !dbg !866, !llvm.loop !899\l}"];
	Node0x2793120 -> Node0x2792e00;
	Node0x2793170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%152:\l152:                                              \l  %153 = load i64, i64* %4, align 8, !dbg !901, !tbaa !804\l  %154 = load i32, i32* %6, align 4, !dbg !902, !tbaa !830\l  %155 = zext i32 %154 to i64, !dbg !903\l  %156 = shl i64 %153, %155, !dbg !903\l  store i64 %156, i64* %3, align 8, !dbg !904\l  store i32 1, i32* %7, align 4\l  br label %157, !dbg !904\l}"];
	Node0x2793170 -> Node0x27931c0;
	Node0x27931c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%157:\l157:                                              \l  %158 = bitcast i32* %6 to i8*, !dbg !905\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %158) #22, !dbg !905\l  %159 = load i64, i64* %3, align 8, !dbg !905\l  ret i64 %159, !dbg !905\l}"];
}
