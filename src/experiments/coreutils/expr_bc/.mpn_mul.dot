digraph "CFG for 'mpn_mul' function" {
	label="CFG for 'mpn_mul' function";

	Node0x25afe70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%5:\l  %6 = alloca i64*, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64*, align 8\l  %10 = alloca i64, align 8\l  store i64* %0, i64** %6, align 8, !tbaa !798\l  call void @llvm.dbg.declare(metadata i64** %6, metadata !793, metadata\l... !DIExpression()), !dbg !802\l  store i64* %1, i64** %7, align 8, !tbaa !798\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !794, metadata\l... !DIExpression()), !dbg !803\l  store i64 %2, i64* %8, align 8, !tbaa !804\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !795, metadata\l... !DIExpression()), !dbg !806\l  store i64* %3, i64** %9, align 8, !tbaa !798\l  call void @llvm.dbg.declare(metadata i64** %9, metadata !796, metadata\l... !DIExpression()), !dbg !807\l  store i64 %4, i64* %10, align 8, !tbaa !804\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !797, metadata\l... !DIExpression()), !dbg !808\l  %11 = load i64, i64* %8, align 8, !dbg !809, !tbaa !804\l  %12 = load i64, i64* %10, align 8, !dbg !809, !tbaa !804\l  %13 = icmp sge i64 %11, %12, !dbg !809\l  br i1 %13, label %14, label %15, !dbg !812\l|{<s0>T|<s1>F}}"];
	Node0x25afe70:s0 -> Node0x25aff60;
	Node0x25afe70:s1 -> Node0x25affb0;
	Node0x25aff60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%14:\l14:                                               \l  br label %16, !dbg !812\l}"];
	Node0x25aff60 -> Node0x25b0000;
	Node0x25affb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%15:\l15:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([9 x i8], [9 x\l... i8]* @.str.4.88, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 627, i8* noundef\l... getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__.mpn_mul,\l... i64 0, i64 0)) #22, !dbg !809\l  unreachable, !dbg !809\l}"];
	Node0x25b0000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%16:\l16:                                               \l  %17 = load i64, i64* %10, align 8, !dbg !813, !tbaa !804\l  %18 = icmp sge i64 %17, 1, !dbg !813\l  br i1 %18, label %19, label %20, !dbg !816\l|{<s0>T|<s1>F}}"];
	Node0x25b0000:s0 -> Node0x25b0050;
	Node0x25b0000:s1 -> Node0x25b00a0;
	Node0x25b0050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%19:\l19:                                               \l  br label %21, !dbg !816\l}"];
	Node0x25b0050 -> Node0x25b00f0;
	Node0x25b00a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%20:\l20:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([8 x i8], [8 x\l... i8]* @.str.5.89, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 628, i8* noundef\l... getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__.mpn_mul,\l... i64 0, i64 0)) #22, !dbg !813\l  unreachable, !dbg !813\l}"];
	Node0x25b00f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%21:\l21:                                               \l  %22 = load i64*, i64** %6, align 8, !dbg !817, !tbaa !798\l  %23 = load i64, i64* %8, align 8, !dbg !817, !tbaa !804\l  %24 = load i64, i64* %10, align 8, !dbg !817, !tbaa !804\l  %25 = add nsw i64 %23, %24, !dbg !817\l  %26 = getelementptr inbounds i64, i64* %22, i64 %25, !dbg !817\l  %27 = load i64*, i64** %7, align 8, !dbg !817, !tbaa !798\l  %28 = icmp ugt i64* %26, %27, !dbg !817\l  br i1 %28, label %29, label %35, !dbg !817\l|{<s0>T|<s1>F}}"];
	Node0x25b00f0:s0 -> Node0x25b0140;
	Node0x25b00f0:s1 -> Node0x25b0190;
	Node0x25b0140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%29:\l29:                                               \l  %30 = load i64*, i64** %7, align 8, !dbg !817, !tbaa !798\l  %31 = load i64, i64* %8, align 8, !dbg !817, !tbaa !804\l  %32 = getelementptr inbounds i64, i64* %30, i64 %31, !dbg !817\l  %33 = load i64*, i64** %6, align 8, !dbg !817, !tbaa !798\l  %34 = icmp ugt i64* %32, %33, !dbg !817\l  br i1 %34, label %36, label %35, !dbg !820\l|{<s0>T|<s1>F}}"];
	Node0x25b0140:s0 -> Node0x25b01e0;
	Node0x25b0140:s1 -> Node0x25b0190;
	Node0x25b0190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%35:\l35:                                               \l  br label %37, !dbg !820\l}"];
	Node0x25b0190 -> Node0x25b0230;
	Node0x25b01e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%36:\l36:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([40 x i8], [40\l... x i8]* @.str.6.90, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 629, i8* noundef\l... getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__.mpn_mul,\l... i64 0, i64 0)) #22, !dbg !817\l  unreachable, !dbg !817\l}"];
	Node0x25b0230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%37:\l37:                                               \l  %38 = load i64*, i64** %6, align 8, !dbg !821, !tbaa !798\l  %39 = load i64, i64* %8, align 8, !dbg !821, !tbaa !804\l  %40 = load i64, i64* %10, align 8, !dbg !821, !tbaa !804\l  %41 = add nsw i64 %39, %40, !dbg !821\l  %42 = getelementptr inbounds i64, i64* %38, i64 %41, !dbg !821\l  %43 = load i64*, i64** %9, align 8, !dbg !821, !tbaa !798\l  %44 = icmp ugt i64* %42, %43, !dbg !821\l  br i1 %44, label %45, label %51, !dbg !821\l|{<s0>T|<s1>F}}"];
	Node0x25b0230:s0 -> Node0x25b0280;
	Node0x25b0230:s1 -> Node0x25b02d0;
	Node0x25b0280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%45:\l45:                                               \l  %46 = load i64*, i64** %9, align 8, !dbg !821, !tbaa !798\l  %47 = load i64, i64* %10, align 8, !dbg !821, !tbaa !804\l  %48 = getelementptr inbounds i64, i64* %46, i64 %47, !dbg !821\l  %49 = load i64*, i64** %6, align 8, !dbg !821, !tbaa !798\l  %50 = icmp ugt i64* %48, %49, !dbg !821\l  br i1 %50, label %52, label %51, !dbg !824\l|{<s0>T|<s1>F}}"];
	Node0x25b0280:s0 -> Node0x25b0320;
	Node0x25b0280:s1 -> Node0x25b02d0;
	Node0x25b02d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%51:\l51:                                               \l  br label %53, !dbg !824\l}"];
	Node0x25b02d0 -> Node0x25b0370;
	Node0x25b0320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%52:\l52:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([40 x i8], [40\l... x i8]* @.str.7.91, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 630, i8* noundef\l... getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__.mpn_mul,\l... i64 0, i64 0)) #22, !dbg !821\l  unreachable, !dbg !821\l}"];
	Node0x25b0370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%53:\l53:                                               \l  %54 = load i64*, i64** %6, align 8, !dbg !825, !tbaa !798\l  %55 = load i64*, i64** %7, align 8, !dbg !826, !tbaa !798\l  %56 = load i64, i64* %8, align 8, !dbg !827, !tbaa !804\l  %57 = load i64*, i64** %9, align 8, !dbg !828, !tbaa !798\l  %58 = getelementptr inbounds i64, i64* %57, i64 0, !dbg !828\l  %59 = load i64, i64* %58, align 8, !dbg !828, !tbaa !804\l  %60 = call i64 @mpn_mul_1(i64* noundef %54, i64* noundef %55, i64 noundef\l... %56, i64 noundef %59), !dbg !829\l  %61 = load i64*, i64** %6, align 8, !dbg !830, !tbaa !798\l  %62 = load i64, i64* %8, align 8, !dbg !831, !tbaa !804\l  %63 = getelementptr inbounds i64, i64* %61, i64 %62, !dbg !830\l  store i64 %60, i64* %63, align 8, !dbg !832, !tbaa !804\l  br label %64, !dbg !833\l}"];
	Node0x25b0370 -> Node0x25b03c0;
	Node0x25b03c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = load i64, i64* %10, align 8, !dbg !834, !tbaa !804\l  %66 = add nsw i64 %65, -1, !dbg !834\l  store i64 %66, i64* %10, align 8, !dbg !834, !tbaa !804\l  %67 = icmp sge i64 %66, 1, !dbg !835\l  br i1 %67, label %68, label %83, !dbg !833\l|{<s0>T|<s1>F}}"];
	Node0x25b03c0:s0 -> Node0x25b0410;
	Node0x25b03c0:s1 -> Node0x25b0460;
	Node0x25b0410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = load i64*, i64** %6, align 8, !dbg !836, !tbaa !798\l  %70 = getelementptr inbounds i64, i64* %69, i64 1, !dbg !836\l  store i64* %70, i64** %6, align 8, !dbg !836, !tbaa !798\l  %71 = load i64*, i64** %9, align 8, !dbg !838, !tbaa !798\l  %72 = getelementptr inbounds i64, i64* %71, i64 1, !dbg !838\l  store i64* %72, i64** %9, align 8, !dbg !838, !tbaa !798\l  %73 = load i64*, i64** %6, align 8, !dbg !839, !tbaa !798\l  %74 = load i64*, i64** %7, align 8, !dbg !840, !tbaa !798\l  %75 = load i64, i64* %8, align 8, !dbg !841, !tbaa !804\l  %76 = load i64*, i64** %9, align 8, !dbg !842, !tbaa !798\l  %77 = getelementptr inbounds i64, i64* %76, i64 0, !dbg !842\l  %78 = load i64, i64* %77, align 8, !dbg !842, !tbaa !804\l  %79 = call i64 @mpn_addmul_1(i64* noundef %73, i64* noundef %74, i64 noundef\l... %75, i64 noundef %78), !dbg !843\l  %80 = load i64*, i64** %6, align 8, !dbg !844, !tbaa !798\l  %81 = load i64, i64* %8, align 8, !dbg !845, !tbaa !804\l  %82 = getelementptr inbounds i64, i64* %80, i64 %81, !dbg !844\l  store i64 %79, i64* %82, align 8, !dbg !846, !tbaa !804\l  br label %64, !dbg !833, !llvm.loop !847\l}"];
	Node0x25b0410 -> Node0x25b03c0;
	Node0x25b0460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%83:\l83:                                               \l  %84 = load i64*, i64** %6, align 8, !dbg !851, !tbaa !798\l  %85 = load i64, i64* %8, align 8, !dbg !852, !tbaa !804\l  %86 = getelementptr inbounds i64, i64* %84, i64 %85, !dbg !851\l  %87 = load i64, i64* %86, align 8, !dbg !851, !tbaa !804\l  ret i64 %87, !dbg !853\l}"];
}
