digraph "CFG for 'mpn_limb_size_in_base_2' function" {
	label="CFG for 'mpn_limb_size_in_base_2' function";

	Node0x25c23f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%1:\l  %2 = alloca i64, align 8\l  %3 = alloca i32, align 4\l  %4 = alloca i64, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  store i64 %0, i64* %2, align 8, !tbaa !797\l  call void @llvm.dbg.declare(metadata i64* %2, metadata !791, metadata\l... !DIExpression()), !dbg !801\l  %7 = bitcast i32* %3 to i8*, !dbg !802\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #22, !dbg !802\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !792, metadata\l... !DIExpression()), !dbg !803\l  %8 = load i64, i64* %2, align 8, !dbg !804, !tbaa !797\l  %9 = icmp ugt i64 %8, 0, !dbg !804\l  br i1 %9, label %10, label %11, !dbg !807\l|{<s0>T|<s1>F}}"];
	Node0x25c23f0:s0 -> Node0x25c24d0;
	Node0x25c23f0:s1 -> Node0x25c2520;
	Node0x25c24d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%10:\l10:                                               \l  br label %12, !dbg !807\l}"];
	Node0x25c24d0 -> Node0x25c2570;
	Node0x25c2520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%11:\l11:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([6 x i8], [6 x\l... i8]* @.str.72.100, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 1219, i8* noundef\l... getelementptr inbounds ([47 x i8], [47 x i8]*\l... @__PRETTY_FUNCTION__.mpn_limb_size_in_base_2, i64 0, i64 0)) #23, !dbg !804\l  unreachable, !dbg !804\l}"];
	Node0x25c2570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%12:\l12:                                               \l  br label %13, !dbg !808\l}"];
	Node0x25c2570 -> Node0x25c25c0;
	Node0x25c25c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%13:\l13:                                               \l  %14 = bitcast i64* %4 to i8*, !dbg !809\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #22, !dbg !809\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !793, metadata\l... !DIExpression()), !dbg !809\l  %15 = load i64, i64* %2, align 8, !dbg !809, !tbaa !797\l  store i64 %15, i64* %4, align 8, !dbg !809, !tbaa !797\l  %16 = bitcast i32* %5 to i8*, !dbg !809\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #22, !dbg !809\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !795, metadata\l... !DIExpression()), !dbg !809\l  store i32 0, i32* %5, align 4, !dbg !809, !tbaa !810\l  %17 = bitcast i32* %6 to i8*, !dbg !809\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #22, !dbg !809\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !796, metadata\l... !DIExpression()), !dbg !809\l  store i32 8, i32* %6, align 4, !dbg !809, !tbaa !810\l  %18 = load i32, i32* %6, align 4, !dbg !812, !tbaa !810\l  %19 = sext i32 %18 to i64, !dbg !812\l  %20 = icmp ugt i64 64, %19, !dbg !812\l  br i1 %20, label %21, label %35, !dbg !809\l|{<s0>T|<s1>F}}"];
	Node0x25c25c0:s0 -> Node0x25c2610;
	Node0x25c25c0:s1 -> Node0x25c27a0;
	Node0x25c2610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%21:\l21:                                               \l  br label %22, !dbg !812\l}"];
	Node0x25c2610 -> Node0x25c2660;
	Node0x25c2660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%22:\l22:                                               \l  %23 = load i64, i64* %4, align 8, !dbg !814, !tbaa !797\l  %24 = and i64 %23, -72057594037927936, !dbg !814\l  %25 = icmp eq i64 %24, 0, !dbg !814\l  br i1 %25, label %26, label %34, !dbg !817\l|{<s0>T|<s1>F}}"];
	Node0x25c2660:s0 -> Node0x25c26b0;
	Node0x25c2660:s1 -> Node0x25c2750;
	Node0x25c26b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%26:\l26:                                               \l  %27 = load i32, i32* %6, align 4, !dbg !818, !tbaa !810\l  %28 = load i64, i64* %4, align 8, !dbg !818, !tbaa !797\l  %29 = zext i32 %27 to i64, !dbg !818\l  %30 = shl i64 %28, %29, !dbg !818\l  store i64 %30, i64* %4, align 8, !dbg !818, !tbaa !797\l  br label %31, !dbg !818\l}"];
	Node0x25c26b0 -> Node0x25c2700;
	Node0x25c2700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%31:\l31:                                               \l  %32 = load i32, i32* %5, align 4, !dbg !814, !tbaa !810\l  %33 = add i32 %32, 8, !dbg !814\l  store i32 %33, i32* %5, align 4, !dbg !814, !tbaa !810\l  br label %22, !dbg !814, !llvm.loop !820\l}"];
	Node0x25c2700 -> Node0x25c2660;
	Node0x25c2750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%34:\l34:                                               \l  br label %35, !dbg !817\l}"];
	Node0x25c2750 -> Node0x25c27a0;
	Node0x25c27a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%35:\l35:                                               \l  br label %36, !dbg !809\l}"];
	Node0x25c27a0 -> Node0x25c27f0;
	Node0x25c27f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = load i64, i64* %4, align 8, !dbg !823, !tbaa !797\l  %38 = and i64 %37, -9223372036854775808, !dbg !823\l  %39 = icmp eq i64 %38, 0, !dbg !823\l  br i1 %39, label %40, label %46, !dbg !826\l|{<s0>T|<s1>F}}"];
	Node0x25c27f0:s0 -> Node0x25c2840;
	Node0x25c27f0:s1 -> Node0x25c28e0;
	Node0x25c2840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = load i64, i64* %4, align 8, !dbg !823, !tbaa !797\l  %42 = shl i64 %41, 1, !dbg !823\l  store i64 %42, i64* %4, align 8, !dbg !823, !tbaa !797\l  br label %43, !dbg !823\l}"];
	Node0x25c2840 -> Node0x25c2890;
	Node0x25c2890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = load i32, i32* %5, align 4, !dbg !823, !tbaa !810\l  %45 = add i32 %44, 1, !dbg !823\l  store i32 %45, i32* %5, align 4, !dbg !823, !tbaa !810\l  br label %36, !dbg !823, !llvm.loop !827\l}"];
	Node0x25c2890 -> Node0x25c27f0;
	Node0x25c28e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%46:\l46:                                               \l  %47 = load i32, i32* %5, align 4, !dbg !809, !tbaa !810\l  store i32 %47, i32* %3, align 4, !dbg !809, !tbaa !810\l  %48 = bitcast i32* %6 to i8*, !dbg !808\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %48) #22, !dbg !808\l  %49 = bitcast i32* %5 to i8*, !dbg !808\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %49) #22, !dbg !808\l  %50 = bitcast i64* %4 to i8*, !dbg !808\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #22, !dbg !808\l  br label %51, !dbg !809\l}"];
	Node0x25c28e0 -> Node0x25c2930;
	Node0x25c2930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%51:\l51:                                               \l  br label %52, !dbg !809\l}"];
	Node0x25c2930 -> Node0x25c2980;
	Node0x25c2980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%52:\l52:                                               \l  %53 = load i32, i32* %3, align 4, !dbg !828, !tbaa !810\l  %54 = zext i32 %53 to i64, !dbg !828\l  %55 = sub i64 64, %54, !dbg !829\l  %56 = bitcast i32* %3 to i8*, !dbg !830\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %56) #22, !dbg !830\l  ret i64 %55, !dbg !831\l}"];
}
