digraph "CFG for 'mpz_limbs_finish' function" {
	label="CFG for 'mpz_limbs_finish' function";

	Node0x265e060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca %struct.__mpz_struct*, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i64, align 8\l  store %struct.__mpz_struct* %0, %struct.__mpz_struct** %3, align 8, !tbaa\l... !794\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %3, metadata\l... !791, metadata !DIExpression()), !dbg !798\l  store i64 %1, i64* %4, align 8, !tbaa !799\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !792, metadata\l... !DIExpression()), !dbg !801\l  %6 = bitcast i64* %5 to i8*, !dbg !802\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #22, !dbg !802\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !793, metadata\l... !DIExpression()), !dbg !803\l  %7 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !804, !tbaa !794\l  %8 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %7,\l... i32 0, i32 2, !dbg !805\l  %9 = load i64*, i64** %8, align 8, !dbg !805, !tbaa !806\l  %10 = load i64, i64* %4, align 8, !dbg !809, !tbaa !799\l  %11 = icmp sge i64 %10, 0, !dbg !809\l  br i1 %11, label %12, label %14, !dbg !809\l|{<s0>T|<s1>F}}"];
	Node0x265e060:s0 -> Node0x265eaf0;
	Node0x265e060:s1 -> Node0x265eb40;
	Node0x265eaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%12:\l12:                                               \l  %13 = load i64, i64* %4, align 8, !dbg !809, !tbaa !799\l  br label %17, !dbg !809\l}"];
	Node0x265eaf0 -> Node0x265eb90;
	Node0x265eb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%14:\l14:                                               \l  %15 = load i64, i64* %4, align 8, !dbg !809, !tbaa !799\l  %16 = sub nsw i64 0, %15, !dbg !809\l  br label %17, !dbg !809\l}"];
	Node0x265eb40 -> Node0x265eb90;
	Node0x265eb90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = phi i64 [ %13, %12 ], [ %16, %14 ], !dbg !809\l  %19 = call i64 @mpn_normalized_size(i64* noundef %9, i64 noundef %18), !dbg\l... !810\l  store i64 %19, i64* %5, align 8, !dbg !811, !tbaa !799\l  %20 = load i64, i64* %4, align 8, !dbg !812, !tbaa !799\l  %21 = icmp slt i64 %20, 0, !dbg !813\l  br i1 %21, label %22, label %25, !dbg !812\l|{<s0>T|<s1>F}}"];
	Node0x265eb90:s0 -> Node0x265ebe0;
	Node0x265eb90:s1 -> Node0x265ec30;
	Node0x265ebe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%22:\l22:                                               \l  %23 = load i64, i64* %5, align 8, !dbg !814, !tbaa !799\l  %24 = sub nsw i64 0, %23, !dbg !815\l  br label %27, !dbg !812\l}"];
	Node0x265ebe0 -> Node0x265ec80;
	Node0x265ec30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%25:\l25:                                               \l  %26 = load i64, i64* %5, align 8, !dbg !816, !tbaa !799\l  br label %27, !dbg !812\l}"];
	Node0x265ec30 -> Node0x265ec80;
	Node0x265ec80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i64 [ %24, %22 ], [ %26, %25 ], !dbg !812\l  %29 = trunc i64 %28 to i32, !dbg !812\l  %30 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !817, !tbaa !794\l  %31 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %30, i32 0, i32 1, !dbg !818\l  store i32 %29, i32* %31, align 4, !dbg !819, !tbaa !820\l  %32 = bitcast i64* %5 to i8*, !dbg !821\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %32) #22, !dbg !821\l  ret void, !dbg !821\l}"];
}
