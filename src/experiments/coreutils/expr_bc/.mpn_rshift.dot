digraph "CFG for 'mpn_rshift' function" {
	label="CFG for 'mpn_rshift' function";

	Node0x25bdc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%4:\l  %5 = alloca i64*, align 8\l  %6 = alloca i64*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i32, align 4\l  %12 = alloca i64, align 8\l  store i64* %0, i64** %5, align 8, !tbaa !801\l  call void @llvm.dbg.declare(metadata i64** %5, metadata !793, metadata\l... !DIExpression()), !dbg !805\l  store i64* %1, i64** %6, align 8, !tbaa !801\l  call void @llvm.dbg.declare(metadata i64** %6, metadata !794, metadata\l... !DIExpression()), !dbg !806\l  store i64 %2, i64* %7, align 8, !tbaa !807\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !795, metadata\l... !DIExpression()), !dbg !809\l  store i32 %3, i32* %8, align 4, !tbaa !810\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !796, metadata\l... !DIExpression()), !dbg !812\l  %13 = bitcast i64* %9 to i8*, !dbg !813\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #22, !dbg !813\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !797, metadata\l... !DIExpression()), !dbg !814\l  %14 = bitcast i64* %10 to i8*, !dbg !813\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #22, !dbg !813\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !798, metadata\l... !DIExpression()), !dbg !815\l  %15 = bitcast i32* %11 to i8*, !dbg !816\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #22, !dbg !816\l  call void @llvm.dbg.declare(metadata i32* %11, metadata !799, metadata\l... !DIExpression()), !dbg !817\l  %16 = bitcast i64* %12 to i8*, !dbg !818\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #22, !dbg !818\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !800, metadata\l... !DIExpression()), !dbg !819\l  %17 = load i64, i64* %7, align 8, !dbg !820, !tbaa !807\l  %18 = icmp sge i64 %17, 1, !dbg !820\l  br i1 %18, label %19, label %20, !dbg !823\l|{<s0>T|<s1>F}}"];
	Node0x25bdc70:s0 -> Node0x25bdcc0;
	Node0x25bdc70:s1 -> Node0x25bdd10;
	Node0x25bdcc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%19:\l19:                                               \l  br label %21, !dbg !823\l}"];
	Node0x25bdcc0 -> Node0x25bdd60;
	Node0x25bdd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%20:\l20:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([7 x i8], [7 x\l... i8]* @.str.3.87, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 698, i8* noundef\l... getelementptr inbounds ([65 x i8], [65 x i8]*\l... @__PRETTY_FUNCTION__.mpn_rshift, i64 0, i64 0)) #23, !dbg !820\l  unreachable, !dbg !820\l}"];
	Node0x25bdd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%21:\l21:                                               \l  %22 = load i32, i32* %8, align 4, !dbg !824, !tbaa !810\l  %23 = icmp uge i32 %22, 1, !dbg !824\l  br i1 %23, label %24, label %25, !dbg !827\l|{<s0>T|<s1>F}}"];
	Node0x25bdd60:s0 -> Node0x25bddb0;
	Node0x25bdd60:s1 -> Node0x25bde00;
	Node0x25bddb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%24:\l24:                                               \l  br label %26, !dbg !827\l}"];
	Node0x25bddb0 -> Node0x25bde50;
	Node0x25bde00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%25:\l25:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([9 x i8], [9 x\l... i8]* @.str.8.92, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 699, i8* noundef\l... getelementptr inbounds ([65 x i8], [65 x i8]*\l... @__PRETTY_FUNCTION__.mpn_rshift, i64 0, i64 0)) #23, !dbg !824\l  unreachable, !dbg !824\l}"];
	Node0x25bde50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%26:\l26:                                               \l  %27 = load i32, i32* %8, align 4, !dbg !828, !tbaa !810\l  %28 = zext i32 %27 to i64, !dbg !828\l  %29 = icmp ult i64 %28, 64, !dbg !828\l  br i1 %29, label %30, label %31, !dbg !831\l|{<s0>T|<s1>F}}"];
	Node0x25bde50:s0 -> Node0x25bdea0;
	Node0x25bde50:s1 -> Node0x25bdef0;
	Node0x25bdea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%30:\l30:                                               \l  br label %32, !dbg !831\l}"];
	Node0x25bdea0 -> Node0x25bdf40;
	Node0x25bdef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%31:\l31:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([20 x i8], [20\l... x i8]* @.str.9.93, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.83, i64 0, i64 0), i32 noundef 700, i8* noundef\l... getelementptr inbounds ([65 x i8], [65 x i8]*\l... @__PRETTY_FUNCTION__.mpn_rshift, i64 0, i64 0)) #23, !dbg !828\l  unreachable, !dbg !828\l}"];
	Node0x25bdf40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%32:\l32:                                               \l  %33 = load i32, i32* %8, align 4, !dbg !832, !tbaa !810\l  %34 = zext i32 %33 to i64, !dbg !832\l  %35 = sub i64 64, %34, !dbg !833\l  %36 = trunc i64 %35 to i32, !dbg !834\l  store i32 %36, i32* %11, align 4, !dbg !835, !tbaa !810\l  %37 = load i64*, i64** %6, align 8, !dbg !836, !tbaa !801\l  %38 = getelementptr inbounds i64, i64* %37, i32 1, !dbg !836\l  store i64* %38, i64** %6, align 8, !dbg !836, !tbaa !801\l  %39 = load i64, i64* %37, align 8, !dbg !837, !tbaa !807\l  store i64 %39, i64* %9, align 8, !dbg !838, !tbaa !807\l  %40 = load i64, i64* %9, align 8, !dbg !839, !tbaa !807\l  %41 = load i32, i32* %11, align 4, !dbg !840, !tbaa !810\l  %42 = zext i32 %41 to i64, !dbg !841\l  %43 = shl i64 %40, %42, !dbg !841\l  store i64 %43, i64* %12, align 8, !dbg !842, !tbaa !807\l  %44 = load i64, i64* %9, align 8, !dbg !843, !tbaa !807\l  %45 = load i32, i32* %8, align 4, !dbg !844, !tbaa !810\l  %46 = zext i32 %45 to i64, !dbg !845\l  %47 = lshr i64 %44, %46, !dbg !845\l  store i64 %47, i64* %10, align 8, !dbg !846, !tbaa !807\l  br label %48, !dbg !847\l}"];
	Node0x25bdf40 -> Node0x25bdf90;
	Node0x25bdf90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = load i64, i64* %7, align 8, !dbg !848, !tbaa !807\l  %50 = add nsw i64 %49, -1, !dbg !848\l  store i64 %50, i64* %7, align 8, !dbg !848, !tbaa !807\l  %51 = icmp ne i64 %50, 0, !dbg !849\l  br i1 %51, label %52, label %68, !dbg !847\l|{<s0>T|<s1>F}}"];
	Node0x25bdf90:s0 -> Node0x25bdfe0;
	Node0x25bdf90:s1 -> Node0x25be030;
	Node0x25bdfe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = load i64*, i64** %6, align 8, !dbg !850, !tbaa !801\l  %54 = getelementptr inbounds i64, i64* %53, i32 1, !dbg !850\l  store i64* %54, i64** %6, align 8, !dbg !850, !tbaa !801\l  %55 = load i64, i64* %53, align 8, !dbg !852, !tbaa !807\l  store i64 %55, i64* %9, align 8, !dbg !853, !tbaa !807\l  %56 = load i64, i64* %10, align 8, !dbg !854, !tbaa !807\l  %57 = load i64, i64* %9, align 8, !dbg !855, !tbaa !807\l  %58 = load i32, i32* %11, align 4, !dbg !856, !tbaa !810\l  %59 = zext i32 %58 to i64, !dbg !857\l  %60 = shl i64 %57, %59, !dbg !857\l  %61 = or i64 %56, %60, !dbg !858\l  %62 = load i64*, i64** %5, align 8, !dbg !859, !tbaa !801\l  %63 = getelementptr inbounds i64, i64* %62, i32 1, !dbg !859\l  store i64* %63, i64** %5, align 8, !dbg !859, !tbaa !801\l  store i64 %61, i64* %62, align 8, !dbg !860, !tbaa !807\l  %64 = load i64, i64* %9, align 8, !dbg !861, !tbaa !807\l  %65 = load i32, i32* %8, align 4, !dbg !862, !tbaa !810\l  %66 = zext i32 %65 to i64, !dbg !863\l  %67 = lshr i64 %64, %66, !dbg !863\l  store i64 %67, i64* %10, align 8, !dbg !864, !tbaa !807\l  br label %48, !dbg !847, !llvm.loop !865\l}"];
	Node0x25bdfe0 -> Node0x25bdf90;
	Node0x25be030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%68:\l68:                                               \l  %69 = load i64, i64* %10, align 8, !dbg !869, !tbaa !807\l  %70 = load i64*, i64** %5, align 8, !dbg !870, !tbaa !801\l  store i64 %69, i64* %70, align 8, !dbg !871, !tbaa !807\l  %71 = load i64, i64* %12, align 8, !dbg !872, !tbaa !807\l  %72 = bitcast i64* %12 to i8*, !dbg !873\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %72) #22, !dbg !873\l  %73 = bitcast i32* %11 to i8*, !dbg !873\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %73) #22, !dbg !873\l  %74 = bitcast i64* %10 to i8*, !dbg !873\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #22, !dbg !873\l  %75 = bitcast i64* %9 to i8*, !dbg !873\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #22, !dbg !873\l  ret i64 %71, !dbg !874\l}"];
}
