digraph "CFG for 'mbslen' function" {
	label="CFG for 'mbslen' function";

	Node0x2910b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%1:\l  %2 = alloca i64, align 8\l  %3 = alloca i8*, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca %struct.mbuif_state, align 4\l  %6 = alloca i8*, align 8\l  %7 = alloca %struct.mbchar, align 8\l  store i8* %0, i8** %3, align 8, !tbaa !831\l  call void @llvm.dbg.declare(metadata i8** %3, metadata !791, metadata\l... !DIExpression()), !dbg !835\l  %8 = call i64 @__ctype_get_mb_cur_max() #22, !dbg !836\l  %9 = icmp ugt i64 %8, 1, !dbg !837\l  br i1 %9, label %10, label %46, !dbg !838\l|{<s0>T|<s1>F}}"];
	Node0x2910b00:s0 -> Node0x2910b50;
	Node0x2910b00:s1 -> Node0x2910d30;
	Node0x2910b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%10:\l10:                                               \l  %11 = bitcast i64* %4 to i8*, !dbg !839\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #22, !dbg !839\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !792, metadata\l... !DIExpression()), !dbg !840\l  store i64 0, i64* %4, align 8, !dbg !840, !tbaa !841\l  %12 = bitcast %struct.mbuif_state* %5 to i8*, !dbg !843\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* %12) #22, !dbg !843\l  call void @llvm.dbg.declare(metadata %struct.mbuif_state* %5, metadata !795,\l... metadata !DIExpression()), !dbg !844\l  %13 = bitcast i8** %6 to i8*, !dbg !845\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #22, !dbg !845\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !813, metadata\l... !DIExpression()), !dbg !846\l  %14 = getelementptr inbounds %struct.mbuif_state, %struct.mbuif_state* %5,\l... i32 0, i32 0, !dbg !847\l  store i8 0, i8* %14, align 4, !dbg !847, !tbaa !848\l  %15 = getelementptr inbounds %struct.mbuif_state, %struct.mbuif_state* %5,\l... i32 0, i32 1, !dbg !847\l  call void @mbszero(%struct.__mbstate_t* noundef %15), !dbg !847\l  %16 = call i64 @__ctype_get_mb_cur_max() #22, !dbg !847\l  %17 = trunc i64 %16 to i32, !dbg !847\l  %18 = getelementptr inbounds %struct.mbuif_state, %struct.mbuif_state* %5,\l... i32 0, i32 2, !dbg !847\l  store i32 %17, i32* %18, align 4, !dbg !847, !tbaa !853\l  %19 = load i8*, i8** %3, align 8, !dbg !854, !tbaa !831\l  store i8* %19, i8** %6, align 8, !dbg !855, !tbaa !831\l  br label %20, !dbg !847\l}"];
	Node0x2910b50 -> Node0x2910ba0;
	Node0x2910ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = getelementptr inbounds %struct.mbuif_state, %struct.mbuif_state* %5,\l... i32 0, i32 0, !dbg !856\l  %22 = load i8, i8* %21, align 4, !dbg !856, !tbaa !848, !range !857\l  %23 = trunc i8 %22 to i1, !dbg !856\l  br i1 %23, label %29, label %24, !dbg !856\l|{<s0>T|<s1>F}}"];
	Node0x2910ba0:s0 -> Node0x2910c40;
	Node0x2910ba0:s1 -> Node0x2910bf0;
	Node0x2910bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%24:\l24:                                               \l  %25 = load i8*, i8** %6, align 8, !dbg !856, !tbaa !831\l  %26 = load i8, i8* %25, align 1, !dbg !856, !tbaa !858\l  %27 = sext i8 %26 to i32, !dbg !856\l  %28 = icmp ne i32 %27, 0, !dbg !856\l  br label %29, !dbg !856\l}"];
	Node0x2910bf0 -> Node0x2910c40;
	Node0x2910c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i1 [ true, %20 ], [ %28, %24 ]\l  br i1 %30, label %31, label %41, !dbg !859\l|{<s0>T|<s1>F}}"];
	Node0x2910c40:s0 -> Node0x2910c90;
	Node0x2910c40:s1 -> Node0x2910ce0;
	Node0x2910c90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%31:\l31:                                               \l  %32 = bitcast %struct.mbchar* %7 to i8*, !dbg !860\l  call void @llvm.lifetime.start.p0i8(i64 24, i8* %32) #22, !dbg !860\l  call void @llvm.dbg.declare(metadata %struct.mbchar* %7, metadata !814,\l... metadata !DIExpression()), !dbg !861\l  %33 = load i8*, i8** %6, align 8, !dbg !862, !tbaa !831\l  call void @mbuiterf_next(%struct.mbchar* sret(%struct.mbchar) align 8 %7,\l... %struct.mbuif_state* noundef %5, i8* noundef %33), !dbg !862\l  %34 = load i64, i64* %4, align 8, !dbg !863, !tbaa !841\l  %35 = add i64 %34, 1, !dbg !863\l  store i64 %35, i64* %4, align 8, !dbg !863, !tbaa !841\l  %36 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %7, i32 0, i32\l... 1, !dbg !864\l  %37 = load i64, i64* %36, align 8, !dbg !864, !tbaa !865\l  %38 = load i8*, i8** %6, align 8, !dbg !867, !tbaa !831\l  %39 = getelementptr inbounds i8, i8* %38, i64 %37, !dbg !867\l  store i8* %39, i8** %6, align 8, !dbg !867, !tbaa !831\l  %40 = bitcast %struct.mbchar* %7 to i8*, !dbg !868\l  call void @llvm.lifetime.end.p0i8(i64 24, i8* %40) #22, !dbg !868\l  br label %20, !dbg !869, !llvm.loop !870\l}"];
	Node0x2910c90 -> Node0x2910ba0;
	Node0x2910ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%41:\l41:                                               \l  %42 = load i64, i64* %4, align 8, !dbg !874, !tbaa !841\l  store i64 %42, i64* %2, align 8, !dbg !875\l  %43 = bitcast i8** %6 to i8*, !dbg !876\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #22, !dbg !876\l  %44 = bitcast %struct.mbuif_state* %5 to i8*, !dbg !876\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* %44) #22, !dbg !876\l  %45 = bitcast i64* %4 to i8*, !dbg !876\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #22, !dbg !876\l  br label %49\l}"];
	Node0x2910ce0 -> Node0x2910d80;
	Node0x2910d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%46:\l46:                                               \l  %47 = load i8*, i8** %3, align 8, !dbg !877, !tbaa !831\l  %48 = call i64 @strlen(i8* noundef %47) #23, !dbg !878\l  store i64 %48, i64* %2, align 8, !dbg !879\l  br label %49, !dbg !879\l}"];
	Node0x2910d30 -> Node0x2910d80;
	Node0x2910d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%49:\l49:                                               \l  %50 = load i64, i64* %2, align 8, !dbg !880\l  ret i64 %50, !dbg !880\l}"];
}
