digraph "CFG for 'bkm_scale' function" {
	label="CFG for 'bkm_scale' function";

	Node0xdebea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i64*, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i64, align 8\l  %7 = alloca i32, align 4\l  store i64* %0, i64** %4, align 8, !tbaa !1041\l  call void @llvm.dbg.declare(metadata i64** %4, metadata !1038, metadata\l... !DIExpression()), !dbg !1045\l  store i32 %1, i32* %5, align 4, !tbaa !1046\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !1039, metadata\l... !DIExpression()), !dbg !1048\l  %8 = bitcast i64* %6 to i8*, !dbg !1049\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #24, !dbg !1049\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1040, metadata\l... !DIExpression()), !dbg !1050\l  %9 = load i64*, i64** %4, align 8, !dbg !1051, !tbaa !1041\l  %10 = load i64, i64* %9, align 8, !dbg !1051, !tbaa !1053\l  %11 = load i32, i32* %5, align 4, !dbg !1051, !tbaa !1046\l  %12 = sext i32 %11 to i64, !dbg !1051\l  %13 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %10, i64 %12), !dbg\l... !1051\l  %14 = extractvalue \{ i64, i1 \} %13, 1, !dbg !1051\l  %15 = extractvalue \{ i64, i1 \} %13, 0, !dbg !1051\l  store i64 %15, i64* %6, align 8, !dbg !1051\l  br i1 %14, label %16, label %23, !dbg !1055\l|{<s0>T|<s1>F}}"];
	Node0xdebea0:s0 -> Node0xdebf20;
	Node0xdebea0:s1 -> Node0xdebf70;
	Node0xdebf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%16:\l16:                                               \l  %17 = load i64*, i64** %4, align 8, !dbg !1056, !tbaa !1041\l  %18 = load i64, i64* %17, align 8, !dbg !1058, !tbaa !1053\l  %19 = icmp slt i64 %18, 0, !dbg !1059\l  %20 = zext i1 %19 to i64, !dbg !1058\l  %21 = select i1 %19, i64 -9223372036854775808, i64 9223372036854775807, !dbg\l... !1058\l  %22 = load i64*, i64** %4, align 8, !dbg !1060, !tbaa !1041\l  store i64 %21, i64* %22, align 8, !dbg !1061, !tbaa !1053\l  store i32 1, i32* %3, align 4, !dbg !1062\l  store i32 1, i32* %7, align 4\l  br label %26, !dbg !1062\l}"];
	Node0xdebf20 -> Node0xdebfc0;
	Node0xdebf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%23:\l23:                                               \l  %24 = load i64, i64* %6, align 8, !dbg !1063, !tbaa !1053\l  %25 = load i64*, i64** %4, align 8, !dbg !1064, !tbaa !1041\l  store i64 %24, i64* %25, align 8, !dbg !1065, !tbaa !1053\l  store i32 0, i32* %3, align 4, !dbg !1066\l  store i32 1, i32* %7, align 4\l  br label %26, !dbg !1066\l}"];
	Node0xdebf70 -> Node0xdebfc0;
	Node0xdebfc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = bitcast i64* %6 to i8*, !dbg !1067\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #24, !dbg !1067\l  %28 = load i32, i32* %3, align 4, !dbg !1067\l  ret i32 %28, !dbg !1067\l}"];
}
