digraph "CFG for 'base_len' function" {
	label="CFG for 'base_len' function";

	Node0xca7020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%1:\l  %2 = alloca i8*, align 8\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  store i8* %0, i8** %2, align 8, !tbaa !1038\l  call void @llvm.dbg.declare(metadata i8** %2, metadata !1035, metadata\l... !DIExpression()), !dbg !1042\l  %5 = bitcast i64* %3 to i8*, !dbg !1043\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #24, !dbg !1043\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !1036, metadata\l... !DIExpression()), !dbg !1044\l  %6 = bitcast i64* %4 to i8*, !dbg !1045\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #24, !dbg !1045\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !1037, metadata\l... !DIExpression()), !dbg !1046\l  %7 = load i8*, i8** %2, align 8, !dbg !1047, !tbaa !1038\l  store i64 0, i64* %4, align 8, !dbg !1046, !tbaa !1048\l  %8 = load i8*, i8** %2, align 8, !dbg !1050, !tbaa !1038\l  %9 = call i64 @strlen(i8* noundef %8) #25, !dbg !1052\l  store i64 %9, i64* %3, align 8, !dbg !1053, !tbaa !1048\l  br label %10, !dbg !1054\l}"];
	Node0xca7020 -> Node0xcaa210;
	Node0xcaa210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l10:                                               \l  %11 = load i64, i64* %3, align 8, !dbg !1055, !tbaa !1048\l  %12 = icmp ult i64 1, %11, !dbg !1057\l  br i1 %12, label %13, label %21, !dbg !1058\l|{<s0>T|<s1>F}}"];
	Node0xcaa210:s0 -> Node0xcaa260;
	Node0xcaa210:s1 -> Node0xcaa2b0;
	Node0xcaa260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%13:\l13:                                               \l  %14 = load i8*, i8** %2, align 8, !dbg !1059, !tbaa !1038\l  %15 = load i64, i64* %3, align 8, !dbg !1059, !tbaa !1048\l  %16 = sub i64 %15, 1, !dbg !1059\l  %17 = getelementptr inbounds i8, i8* %14, i64 %16, !dbg !1059\l  %18 = load i8, i8* %17, align 1, !dbg !1059, !tbaa !1060\l  %19 = sext i8 %18 to i32, !dbg !1059\l  %20 = icmp eq i32 %19, 47, !dbg !1059\l  br label %21\l}"];
	Node0xcaa260 -> Node0xcaa2b0;
	Node0xcaa2b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = phi i1 [ false, %10 ], [ %20, %13 ], !dbg !1061\l  br i1 %22, label %23, label %27, !dbg !1062\l|{<s0>T|<s1>F}}"];
	Node0xcaa2b0:s0 -> Node0xcaa300;
	Node0xcaa2b0:s1 -> Node0xcaa3a0;
	Node0xcaa300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%23:\l23:                                               \l  br label %24, !dbg !1063\l}"];
	Node0xcaa300 -> Node0xcaa350;
	Node0xcaa350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%24:\l24:                                               \l  %25 = load i64, i64* %3, align 8, !dbg !1064, !tbaa !1048\l  %26 = add i64 %25, -1, !dbg !1064\l  store i64 %26, i64* %3, align 8, !dbg !1064, !tbaa !1048\l  br label %10, !dbg !1065, !llvm.loop !1066\l}"];
	Node0xcaa350 -> Node0xcaa210;
	Node0xcaa3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%27:\l27:                                               \l  %28 = load i64, i64* %3, align 8, !dbg !1070, !tbaa !1048\l  %29 = bitcast i64* %4 to i8*, !dbg !1071\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #24, !dbg !1071\l  %30 = bitcast i64* %3 to i8*, !dbg !1071\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #24, !dbg !1071\l  ret i64 %28, !dbg !1072\l}"];
}
