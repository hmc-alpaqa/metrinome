digraph "CFG for 'full_write' function" {
	label="CFG for 'full_write' function";

	Node0xcc2df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i32, align 4\l  store i32 %0, i32* %4, align 4, !tbaa !1044\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !1037, metadata\l... !DIExpression()), !dbg !1048\l  store i8* %1, i8** %5, align 8, !tbaa !1049\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !1038, metadata\l... !DIExpression()), !dbg !1051\l  store i64 %2, i64* %6, align 8, !tbaa !1052\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1039, metadata\l... !DIExpression()), !dbg !1054\l  %11 = bitcast i64* %7 to i8*, !dbg !1055\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #24, !dbg !1055\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1040, metadata\l... !DIExpression()), !dbg !1056\l  store i64 0, i64* %7, align 8, !dbg !1056, !tbaa !1052\l  %12 = bitcast i8** %8 to i8*, !dbg !1057\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #24, !dbg !1057\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1041, metadata\l... !DIExpression()), !dbg !1058\l  %13 = load i8*, i8** %5, align 8, !dbg !1059, !tbaa !1049\l  store i8* %13, i8** %8, align 8, !dbg !1058, !tbaa !1049\l  br label %14, !dbg !1060\l}"];
	Node0xcc2df0 -> Node0xcc4980;
	Node0xcc4980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l14:                                               \l  %15 = load i64, i64* %6, align 8, !dbg !1061, !tbaa !1052\l  %16 = icmp ugt i64 %15, 0, !dbg !1062\l  br i1 %16, label %17, label %45, !dbg !1060\l|{<s0>T|<s1>F}}"];
	Node0xcc4980:s0 -> Node0xcc89b0;
	Node0xcc4980:s1 -> Node0xcc8be0;
	Node0xcc89b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = bitcast i64* %9 to i8*, !dbg !1063\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #24, !dbg !1063\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1042, metadata\l... !DIExpression()), !dbg !1064\l  %19 = load i32, i32* %4, align 4, !dbg !1065, !tbaa !1044\l  %20 = load i8*, i8** %8, align 8, !dbg !1066, !tbaa !1049\l  %21 = load i64, i64* %6, align 8, !dbg !1067, !tbaa !1052\l  %22 = call i64 @safe_write(i32 noundef %19, i8* noundef %20, i64 noundef\l... %21), !dbg !1068\l  store i64 %22, i64* %9, align 8, !dbg !1064, !tbaa !1052\l  %23 = load i64, i64* %9, align 8, !dbg !1069, !tbaa !1052\l  %24 = icmp eq i64 %23, -1, !dbg !1071\l  br i1 %24, label %25, label %26, !dbg !1072\l|{<s0>T|<s1>F}}"];
	Node0xcc89b0:s0 -> Node0xcc8a00;
	Node0xcc89b0:s1 -> Node0xcc8a50;
	Node0xcc8a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%25:\l25:                                               \l  store i32 3, i32* %10, align 4\l  br label %41, !dbg !1073\l}"];
	Node0xcc8a00 -> Node0xcc8b40;
	Node0xcc8a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%26:\l26:                                               \l  %27 = load i64, i64* %9, align 8, !dbg !1074, !tbaa !1052\l  %28 = icmp eq i64 %27, 0, !dbg !1076\l  br i1 %28, label %29, label %31, !dbg !1077\l|{<s0>T|<s1>F}}"];
	Node0xcc8a50:s0 -> Node0xcc8aa0;
	Node0xcc8a50:s1 -> Node0xcc8af0;
	Node0xcc8aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%29:\l29:                                               \l  %30 = call i32* @__errno_location() #25, !dbg !1078\l  store i32 28, i32* %30, align 4, !dbg !1080, !tbaa !1044\l  store i32 3, i32* %10, align 4\l  br label %41, !dbg !1081\l}"];
	Node0xcc8aa0 -> Node0xcc8b40;
	Node0xcc8af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%31:\l31:                                               \l  %32 = load i64, i64* %9, align 8, !dbg !1082, !tbaa !1052\l  %33 = load i64, i64* %7, align 8, !dbg !1083, !tbaa !1052\l  %34 = add i64 %33, %32, !dbg !1083\l  store i64 %34, i64* %7, align 8, !dbg !1083, !tbaa !1052\l  %35 = load i64, i64* %9, align 8, !dbg !1084, !tbaa !1052\l  %36 = load i8*, i8** %8, align 8, !dbg !1085, !tbaa !1049\l  %37 = getelementptr inbounds i8, i8* %36, i64 %35, !dbg !1085\l  store i8* %37, i8** %8, align 8, !dbg !1085, !tbaa !1049\l  %38 = load i64, i64* %9, align 8, !dbg !1086, !tbaa !1052\l  %39 = load i64, i64* %6, align 8, !dbg !1087, !tbaa !1052\l  %40 = sub i64 %39, %38, !dbg !1087\l  store i64 %40, i64* %6, align 8, !dbg !1087, !tbaa !1052\l  store i32 0, i32* %10, align 4, !dbg !1088\l  br label %41, !dbg !1088\l}"];
	Node0xcc8af0 -> Node0xcc8b40;
	Node0xcc8b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = bitcast i64* %9 to i8*, !dbg !1088\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #24, !dbg !1088\l  %43 = load i32, i32* %10, align 4\l  switch i32 %43, label %49 [\l    i32 0, label %44\l    i32 3, label %45\l  ]\l|{<s0>def|<s1>0|<s2>3}}"];
	Node0xcc8b40:s0 -> Node0xcc8c30;
	Node0xcc8b40:s1 -> Node0xcc8b90;
	Node0xcc8b40:s2 -> Node0xcc8be0;
	Node0xcc8b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  br label %14, !dbg !1060, !llvm.loop !1089\l}"];
	Node0xcc8b90 -> Node0xcc4980;
	Node0xcc8be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%45:\l45:                                               \l  %46 = load i64, i64* %7, align 8, !dbg !1092, !tbaa !1052\l  store i32 1, i32* %10, align 4\l  %47 = bitcast i8** %8 to i8*, !dbg !1093\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %47) #24, !dbg !1093\l  %48 = bitcast i64* %7 to i8*, !dbg !1093\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48) #24, !dbg !1093\l  ret i64 %46, !dbg !1094\l}"];
	Node0xcc8c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%49:\l49:                                               \l  unreachable\l}"];
}
