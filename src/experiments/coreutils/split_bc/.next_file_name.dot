digraph "CFG for 'next_file_name' function" {
	label="CFG for 'next_file_name' function";

	Node0xc7c5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%0:\l  %1 = alloca i8, align 1\l  %2 = alloca i8, align 1\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i64*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i32, align 4\l  %8 = load i8*, i8** @outfile, align 8, !dbg !1031, !tbaa !1032\l  %9 = icmp ne i8* %8, null, !dbg !1031\l  br i1 %9, label %154, label %10, !dbg !1036\l|{<s0>T|<s1>F}}"];
	Node0xc7c5b0:s0 -> Node0xc7ce60;
	Node0xc7c5b0:s1 -> Node0xc7c730;
	Node0xc7c730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%10:\l10:                                               \l  call void @llvm.dbg.declare(metadata i8* %1, metadata !196, metadata\l... !DIExpression()), !dbg !1037\l  call void @llvm.dbg.declare(metadata i8* %2, metadata !199, metadata\l... !DIExpression()), !dbg !1038\l  br label %11, !dbg !1039\l}"];
	Node0xc7c730 -> Node0xc7c780;
	Node0xc7c780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%11:\l11:                                               \l  call void @llvm.dbg.label(metadata !208), !dbg !1040\l  %12 = load i64, i64* @next_file_name.outfile_length, align 8, !dbg !1041,\l... !tbaa !1042\l  %13 = icmp ne i64 %12, 0, !dbg !1044\l  %14 = xor i1 %13, true, !dbg !1044\l  %15 = xor i1 %14, true, !dbg !1045\l  %16 = zext i1 %15 to i8, !dbg !1046\l  store i8 %16, i8* %2, align 1, !dbg !1046, !tbaa !1047\l  %17 = load i8, i8* %2, align 1, !dbg !1049, !tbaa !1047, !range !1051\l  %18 = trunc i8 %17 to i1, !dbg !1049\l  br i1 %18, label %38, label %19, !dbg !1052\l|{<s0>T|<s1>F}}"];
	Node0xc7c780:s0 -> Node0xc7c910;
	Node0xc7c780:s1 -> Node0xc7c7d0;
	Node0xc7c7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%19:\l19:                                               \l  %20 = load i8*, i8** @outbase, align 8, !dbg !1053, !tbaa !1032\l  %21 = call i64 @strlen(i8* noundef %20) #24, !dbg !1055\l  store i64 %21, i64* @next_file_name.outbase_length, align 8, !dbg !1056,\l... !tbaa !1042\l  %22 = load i8*, i8** @additional_suffix, align 8, !dbg !1057, !tbaa !1032\l  %23 = icmp ne i8* %22, null, !dbg !1057\l  br i1 %23, label %24, label %27, !dbg !1057\l|{<s0>T|<s1>F}}"];
	Node0xc7c7d0:s0 -> Node0xc7c820;
	Node0xc7c7d0:s1 -> Node0xc7c870;
	Node0xc7c820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%24:\l24:                                               \l  %25 = load i8*, i8** @additional_suffix, align 8, !dbg !1058, !tbaa !1032\l  %26 = call i64 @strlen(i8* noundef %25) #24, !dbg !1059\l  br label %28, !dbg !1057\l}"];
	Node0xc7c820 -> Node0xc7c8c0;
	Node0xc7c870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%27:\l27:                                               \l  br label %28, !dbg !1057\l}"];
	Node0xc7c870 -> Node0xc7c8c0;
	Node0xc7c8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%28:\l28:                                               \l  %29 = phi i64 [ %26, %24 ], [ 0, %27 ], !dbg !1057\l  store i64 %29, i64* @next_file_name.addsuf_length, align 8, !dbg !1060,\l... !tbaa !1042\l  %30 = load i64, i64* @next_file_name.outbase_length, align 8, !dbg !1061,\l... !tbaa !1042\l  %31 = load i64, i64* @next_file_name.addsuf_length, align 8, !dbg !1061,\l... !tbaa !1042\l  %32 = add nsw i64 %30, %31, !dbg !1061\l  %33 = load i64, i64* @suffix_length, align 8, !dbg !1061, !tbaa !1042\l  %34 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %32, i64 %33), !dbg\l... !1061\l  %35 = extractvalue \{ i64, i1 \} %34, 1, !dbg !1061\l  %36 = extractvalue \{ i64, i1 \} %34, 0, !dbg !1061\l  store i64 %36, i64* @next_file_name.outfile_length, align 8, !dbg !1061\l  %37 = zext i1 %35 to i8, !dbg !1062\l  store i8 %37, i8* %1, align 1, !dbg !1062, !tbaa !1047\l  br label %46, !dbg !1063\l}"];
	Node0xc7c8c0 -> Node0xc7c960;
	Node0xc7c910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%38:\l38:                                               \l  %39 = load i64, i64* @next_file_name.outfile_length, align 8, !dbg !1064,\l... !tbaa !1042\l  %40 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %39, i64 2), !dbg\l... !1064\l  %41 = extractvalue \{ i64, i1 \} %40, 1, !dbg !1064\l  %42 = extractvalue \{ i64, i1 \} %40, 0, !dbg !1064\l  store i64 %42, i64* @next_file_name.outfile_length, align 8, !dbg !1064\l  %43 = zext i1 %41 to i8, !dbg !1066\l  store i8 %43, i8* %1, align 1, !dbg !1066, !tbaa !1047\l  %44 = load i64, i64* @suffix_length, align 8, !dbg !1067, !tbaa !1042\l  %45 = add nsw i64 %44, 1, !dbg !1067\l  store i64 %45, i64* @suffix_length, align 8, !dbg !1067, !tbaa !1042\l  br label %46\l}"];
	Node0xc7c910 -> Node0xc7c960;
	Node0xc7c960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%46:\l46:                                               \l  %47 = bitcast i64* %3 to i8*, !dbg !1068\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #25, !dbg !1068\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !200, metadata\l... !DIExpression()), !dbg !1069\l  %48 = load i64, i64* @next_file_name.outfile_length, align 8, !dbg !1070,\l... !tbaa !1042\l  %49 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %48, i64 1), !dbg\l... !1070\l  %50 = extractvalue \{ i64, i1 \} %49, 1, !dbg !1070\l  %51 = extractvalue \{ i64, i1 \} %49, 0, !dbg !1070\l  store i64 %51, i64* %3, align 8, !dbg !1070\l  %52 = zext i1 %50 to i32, !dbg !1070\l  %53 = load i8, i8* %1, align 1, !dbg !1071, !tbaa !1047, !range !1051\l  %54 = trunc i8 %53 to i1, !dbg !1071\l  %55 = zext i1 %54 to i32, !dbg !1071\l  %56 = or i32 %55, %52, !dbg !1071\l  %57 = icmp ne i32 %56, 0, !dbg !1071\l  %58 = zext i1 %57 to i8, !dbg !1071\l  store i8 %58, i8* %1, align 1, !dbg !1071, !tbaa !1047\l  %59 = load i8, i8* %1, align 1, !dbg !1072, !tbaa !1047, !range !1051\l  %60 = trunc i8 %59 to i1, !dbg !1072\l  br i1 %60, label %61, label %62, !dbg !1074\l|{<s0>T|<s1>F}}"];
	Node0xc7c960:s0 -> Node0xc7c9b0;
	Node0xc7c960:s1 -> Node0xc7ca00;
	Node0xc7c9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%61:\l61:                                               \l  call void @xalloc_die() #26, !dbg !1075\l  unreachable, !dbg !1075\l}"];
	Node0xc7ca00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%62:\l62:                                               \l  %63 = load i8*, i8** @outfile, align 8, !dbg !1076, !tbaa !1032\l  %64 = load i64, i64* %3, align 8, !dbg !1077, !tbaa !1042\l  %65 = call nonnull i8* @xirealloc(i8* noundef %63, i64 noundef %64) #27,\l... !dbg !1078\l  store i8* %65, i8** @outfile, align 8, !dbg !1079, !tbaa !1032\l  %66 = load i8, i8* %2, align 1, !dbg !1080, !tbaa !1047, !range !1051\l  %67 = trunc i8 %66 to i1, !dbg !1080\l  br i1 %67, label %72, label %68, !dbg !1082\l|{<s0>T|<s1>F}}"];
	Node0xc7ca00:s0 -> Node0xc7caa0;
	Node0xc7ca00:s1 -> Node0xc7ca50;
	Node0xc7ca50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%68:\l68:                                               \l  %69 = load i8*, i8** @outfile, align 8, !dbg !1083, !tbaa !1032\l  %70 = load i8*, i8** @outbase, align 8, !dbg !1084, !tbaa !1032\l  %71 = load i64, i64* @next_file_name.outbase_length, align 8, !dbg !1085,\l... !tbaa !1042\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* align 1 %70, i64\l... %71, i1 false), !dbg !1086\l  br label %84, !dbg !1086\l}"];
	Node0xc7ca50 -> Node0xc7caf0;
	Node0xc7caa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%72:\l72:                                               \l  %73 = load i8*, i8** @suffix_alphabet, align 8, !dbg !1087, !tbaa !1032\l  %74 = load i64*, i64** @next_file_name.sufindex, align 8, !dbg !1089, !tbaa\l... !1032\l  %75 = getelementptr inbounds i64, i64* %74, i64 0, !dbg !1089\l  %76 = load i64, i64* %75, align 8, !dbg !1089, !tbaa !1042\l  %77 = getelementptr inbounds i8, i8* %73, i64 %76, !dbg !1087\l  %78 = load i8, i8* %77, align 1, !dbg !1087, !tbaa !1090\l  %79 = load i8*, i8** @outfile, align 8, !dbg !1091, !tbaa !1032\l  %80 = load i64, i64* @next_file_name.outbase_length, align 8, !dbg !1092,\l... !tbaa !1042\l  %81 = getelementptr inbounds i8, i8* %79, i64 %80, !dbg !1091\l  store i8 %78, i8* %81, align 1, !dbg !1093, !tbaa !1090\l  %82 = load i64, i64* @next_file_name.outbase_length, align 8, !dbg !1094,\l... !tbaa !1042\l  %83 = add nsw i64 %82, 1, !dbg !1094\l  store i64 %83, i64* @next_file_name.outbase_length, align 8, !dbg !1094,\l... !tbaa !1042\l  br label %84\l}"];
	Node0xc7caa0 -> Node0xc7caf0;
	Node0xc7caf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%84:\l84:                                               \l  %85 = load i8*, i8** @outfile, align 8, !dbg !1095, !tbaa !1032\l  %86 = load i64, i64* @next_file_name.outbase_length, align 8, !dbg !1096,\l... !tbaa !1042\l  %87 = getelementptr inbounds i8, i8* %85, i64 %86, !dbg !1097\l  store i8* %87, i8** @outfile_mid, align 8, !dbg !1098, !tbaa !1032\l  %88 = load i8*, i8** @outfile_mid, align 8, !dbg !1099, !tbaa !1032\l  %89 = load i8*, i8** @suffix_alphabet, align 8, !dbg !1100, !tbaa !1032\l  %90 = getelementptr inbounds i8, i8* %89, i64 0, !dbg !1100\l  %91 = load i8, i8* %90, align 1, !dbg !1100, !tbaa !1090\l  %92 = sext i8 %91 to i32, !dbg !1100\l  %93 = trunc i32 %92 to i8, !dbg !1101\l  %94 = load i64, i64* @suffix_length, align 8, !dbg !1102, !tbaa !1042\l  call void @llvm.memset.p0i8.i64(i8* align 1 %88, i8 %93, i64 %94, i1 false),\l... !dbg !1101\l  %95 = load i8*, i8** @additional_suffix, align 8, !dbg !1103, !tbaa !1032\l  %96 = icmp ne i8* %95, null, !dbg !1103\l  br i1 %96, label %97, label %103, !dbg !1105\l|{<s0>T|<s1>F}}"];
	Node0xc7caf0:s0 -> Node0xc7cb40;
	Node0xc7caf0:s1 -> Node0xc7cb90;
	Node0xc7cb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%97:\l97:                                               \l  %98 = load i8*, i8** @outfile_mid, align 8, !dbg !1106, !tbaa !1032\l  %99 = load i64, i64* @suffix_length, align 8, !dbg !1107, !tbaa !1042\l  %100 = getelementptr inbounds i8, i8* %98, i64 %99, !dbg !1108\l  %101 = load i8*, i8** @additional_suffix, align 8, !dbg !1109, !tbaa !1032\l  %102 = load i64, i64* @next_file_name.addsuf_length, align 8, !dbg !1110,\l... !tbaa !1042\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 %101, i64\l... %102, i1 false), !dbg !1111\l  br label %103, !dbg !1111\l}"];
	Node0xc7cb40 -> Node0xc7cb90;
	Node0xc7cb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%103:\l103:                                              \l  %104 = load i8*, i8** @outfile, align 8, !dbg !1112, !tbaa !1032\l  %105 = load i64, i64* @next_file_name.outfile_length, align 8, !dbg !1113,\l... !tbaa !1042\l  %106 = getelementptr inbounds i8, i8* %104, i64 %105, !dbg !1112\l  store i8 0, i8* %106, align 1, !dbg !1114, !tbaa !1090\l  %107 = load i64*, i64** @next_file_name.sufindex, align 8, !dbg !1115, !tbaa\l... !1032\l  %108 = bitcast i64* %107 to i8*, !dbg !1115\l  call void @free(i8* noundef %108) #25, !dbg !1116\l  %109 = load i64, i64* @suffix_length, align 8, !dbg !1117, !tbaa !1042\l  %110 = call noalias nonnull i8* @xicalloc(i64 noundef %109, i64 noundef 8)\l... #28, !dbg !1118\l  %111 = bitcast i8* %110 to i64*, !dbg !1118\l  store i64* %111, i64** @next_file_name.sufindex, align 8, !dbg !1119, !tbaa\l... !1032\l  %112 = load i8*, i8** @numeric_suffix_start, align 8, !dbg !1120, !tbaa !1032\l  %113 = icmp ne i8* %112, null, !dbg !1120\l  br i1 %113, label %114, label %152, !dbg !1121\l|{<s0>T|<s1>F}}"];
	Node0xc7cb90:s0 -> Node0xc7cbe0;
	Node0xc7cb90:s1 -> Node0xc7ce10;
	Node0xc7cbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%114:\l114:                                              \l  %115 = load i8, i8* %2, align 1, !dbg !1122, !tbaa !1047, !range !1051\l  %116 = trunc i8 %115 to i1, !dbg !1122\l  br i1 %116, label %118, label %117, !dbg !1125\l|{<s0>T|<s1>F}}"];
	Node0xc7cbe0:s0 -> Node0xc7cc80;
	Node0xc7cbe0:s1 -> Node0xc7cc30;
	Node0xc7cc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%117:\l117:                                              \l  br label %119, !dbg !1125\l}"];
	Node0xc7cc30 -> Node0xc7ccd0;
	Node0xc7cc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%118:\l118:                                              \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([8 x i8], [8 x\l... i8]* @.str.83, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8],\l... [15 x i8]* @.str.41, i64 0, i64 0), i32 noundef 423, i8* noundef\l... getelementptr inbounds ([26 x i8], [26 x i8]*\l... @__PRETTY_FUNCTION__.next_file_name, i64 0, i64 0)) #29, !dbg !1122\l  unreachable, !dbg !1122\l}"];
	Node0xc7ccd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%119:\l119:                                              \l  %120 = bitcast i64* %4 to i8*, !dbg !1126\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %120) #25, !dbg !1126\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !201, metadata\l... !DIExpression()), !dbg !1127\l  %121 = load i8*, i8** @numeric_suffix_start, align 8, !dbg !1128, !tbaa !1032\l  %122 = call i64 @strlen(i8* noundef %121) #24, !dbg !1129\l  store i64 %122, i64* %4, align 8, !dbg !1127, !tbaa !1042\l  %123 = load i8*, i8** @outfile_mid, align 8, !dbg !1130, !tbaa !1032\l  %124 = load i64, i64* @suffix_length, align 8, !dbg !1131, !tbaa !1042\l  %125 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !1132\l  %126 = load i64, i64* %4, align 8, !dbg !1133, !tbaa !1042\l  %127 = sub i64 0, %126, !dbg !1134\l  %128 = getelementptr inbounds i8, i8* %125, i64 %127, !dbg !1134\l  %129 = load i8*, i8** @numeric_suffix_start, align 8, !dbg !1135, !tbaa !1032\l  %130 = load i64, i64* %4, align 8, !dbg !1136, !tbaa !1042\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %128, i8* align 1 %129, i64\l... %130, i1 false), !dbg !1137\l  %131 = bitcast i64** %5 to i8*, !dbg !1138\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %131) #25, !dbg !1138\l  call void @llvm.dbg.declare(metadata i64** %5, metadata !204, metadata\l... !DIExpression()), !dbg !1139\l  %132 = load i64*, i64** @next_file_name.sufindex, align 8, !dbg !1140, !tbaa\l... !1032\l  %133 = load i64, i64* @suffix_length, align 8, !dbg !1141, !tbaa !1042\l  %134 = getelementptr inbounds i64, i64* %132, i64 %133, !dbg !1142\l  store i64* %134, i64** %5, align 8, !dbg !1139, !tbaa !1032\l  br label %135, !dbg !1143\l}"];
	Node0xc7ccd0 -> Node0xc7cd20;
	Node0xc7cd20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%135:\l135:                                              \l  %136 = load i64, i64* %4, align 8, !dbg !1144, !tbaa !1042\l  %137 = add nsw i64 %136, -1, !dbg !1144\l  store i64 %137, i64* %4, align 8, !dbg !1144, !tbaa !1042\l  %138 = icmp ne i64 %136, 0, !dbg !1145\l  br i1 %138, label %139, label %149, !dbg !1143\l|{<s0>T|<s1>F}}"];
	Node0xc7cd20:s0 -> Node0xc7cd70;
	Node0xc7cd20:s1 -> Node0xc7cdc0;
	Node0xc7cd70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%139:\l139:                                              \l  %140 = load i8*, i8** @numeric_suffix_start, align 8, !dbg !1146, !tbaa !1032\l  %141 = load i64, i64* %4, align 8, !dbg !1147, !tbaa !1042\l  %142 = getelementptr inbounds i8, i8* %140, i64 %141, !dbg !1146\l  %143 = load i8, i8* %142, align 1, !dbg !1146, !tbaa !1090\l  %144 = sext i8 %143 to i32, !dbg !1146\l  %145 = sub nsw i32 %144, 48, !dbg !1148\l  %146 = sext i32 %145 to i64, !dbg !1146\l  %147 = load i64*, i64** %5, align 8, !dbg !1149, !tbaa !1032\l  %148 = getelementptr inbounds i64, i64* %147, i32 -1, !dbg !1149\l  store i64* %148, i64** %5, align 8, !dbg !1149, !tbaa !1032\l  store i64 %146, i64* %148, align 8, !dbg !1150, !tbaa !1042\l  br label %135, !dbg !1143, !llvm.loop !1151\l}"];
	Node0xc7cd70 -> Node0xc7cd20;
	Node0xc7cdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%149:\l149:                                              \l  %150 = bitcast i64** %5 to i8*, !dbg !1155\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %150) #25, !dbg !1155\l  %151 = bitcast i64* %4 to i8*, !dbg !1155\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %151) #25, !dbg !1155\l  br label %152, !dbg !1156\l}"];
	Node0xc7cdc0 -> Node0xc7ce10;
	Node0xc7ce10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%152:\l152:                                              \l  %153 = bitcast i64* %3 to i8*, !dbg !1157\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %153) #25, !dbg !1157\l  br label %217, !dbg !1158\l}"];
	Node0xc7ce10 -> Node0xc7d1d0;
	Node0xc7ce60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%154:\l154:                                              \l  %155 = bitcast i64* %6 to i8*, !dbg !1159\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %155) #25, !dbg !1159\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !206, metadata\l... !DIExpression()), !dbg !1160\l  %156 = load i64, i64* @suffix_length, align 8, !dbg !1161, !tbaa !1042\l  store i64 %156, i64* %6, align 8, !dbg !1160, !tbaa !1042\l  br label %157, !dbg !1162\l}"];
	Node0xc7ce60 -> Node0xc7ceb0;
	Node0xc7ceb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%157:\l157:                                              \l  %158 = load i64, i64* %6, align 8, !dbg !1163, !tbaa !1042\l  %159 = add nsw i64 %158, -1, !dbg !1163\l  store i64 %159, i64* %6, align 8, !dbg !1163, !tbaa !1042\l  %160 = icmp ne i64 %158, 0, !dbg !1164\l  br i1 %160, label %161, label %213, !dbg !1162\l|{<s0>T|<s1>F}}"];
	Node0xc7ceb0:s0 -> Node0xc7cf00;
	Node0xc7ceb0:s1 -> Node0xc7d130;
	Node0xc7cf00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%161:\l161:                                              \l  %162 = load i64*, i64** @next_file_name.sufindex, align 8, !dbg !1165, !tbaa\l... !1032\l  %163 = load i64, i64* %6, align 8, !dbg !1167, !tbaa !1042\l  %164 = getelementptr inbounds i64, i64* %162, i64 %163, !dbg !1165\l  %165 = load i64, i64* %164, align 8, !dbg !1168, !tbaa !1042\l  %166 = add nsw i64 %165, 1, !dbg !1168\l  store i64 %166, i64* %164, align 8, !dbg !1168, !tbaa !1042\l  %167 = load i8, i8* @suffix_auto, align 1, !dbg !1169, !tbaa !1047, !range\l... !1051\l  %168 = trunc i8 %167 to i1, !dbg !1169\l  br i1 %168, label %169, label %182, !dbg !1171\l|{<s0>T|<s1>F}}"];
	Node0xc7cf00:s0 -> Node0xc7cf50;
	Node0xc7cf00:s1 -> Node0xc7d040;
	Node0xc7cf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%169:\l169:                                              \l  %170 = load i64, i64* %6, align 8, !dbg !1172, !tbaa !1042\l  %171 = icmp eq i64 %170, 0, !dbg !1173\l  br i1 %171, label %172, label %182, !dbg !1174\l|{<s0>T|<s1>F}}"];
	Node0xc7cf50:s0 -> Node0xc7cfa0;
	Node0xc7cf50:s1 -> Node0xc7d040;
	Node0xc7cfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%172:\l172:                                              \l  %173 = load i8*, i8** @suffix_alphabet, align 8, !dbg !1175, !tbaa !1032\l  %174 = load i64*, i64** @next_file_name.sufindex, align 8, !dbg !1176, !tbaa\l... !1032\l  %175 = getelementptr inbounds i64, i64* %174, i64 0, !dbg !1176\l  %176 = load i64, i64* %175, align 8, !dbg !1176, !tbaa !1042\l  %177 = add nsw i64 %176, 1, !dbg !1177\l  %178 = getelementptr inbounds i8, i8* %173, i64 %177, !dbg !1175\l  %179 = load i8, i8* %178, align 1, !dbg !1175, !tbaa !1090\l  %180 = icmp ne i8 %179, 0, !dbg !1175\l  br i1 %180, label %182, label %181, !dbg !1178\l|{<s0>T|<s1>F}}"];
	Node0xc7cfa0:s0 -> Node0xc7d040;
	Node0xc7cfa0:s1 -> Node0xc7cff0;
	Node0xc7cff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%181:\l181:                                              \l  store i32 2, i32* %7, align 4\l  br label %214, !dbg !1179\l}"];
	Node0xc7cff0 -> Node0xc7d180;
	Node0xc7d040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%182:\l182:                                              \l  %183 = load i8*, i8** @suffix_alphabet, align 8, !dbg !1180, !tbaa !1032\l  %184 = load i64*, i64** @next_file_name.sufindex, align 8, !dbg !1181, !tbaa\l... !1032\l  %185 = load i64, i64* %6, align 8, !dbg !1182, !tbaa !1042\l  %186 = getelementptr inbounds i64, i64* %184, i64 %185, !dbg !1181\l  %187 = load i64, i64* %186, align 8, !dbg !1181, !tbaa !1042\l  %188 = getelementptr inbounds i8, i8* %183, i64 %187, !dbg !1180\l  %189 = load i8, i8* %188, align 1, !dbg !1180, !tbaa !1090\l  %190 = load i8*, i8** @outfile_mid, align 8, !dbg !1183, !tbaa !1032\l  %191 = load i64, i64* %6, align 8, !dbg !1184, !tbaa !1042\l  %192 = getelementptr inbounds i8, i8* %190, i64 %191, !dbg !1183\l  store i8 %189, i8* %192, align 1, !dbg !1185, !tbaa !1090\l  %193 = load i8*, i8** @outfile_mid, align 8, !dbg !1186, !tbaa !1032\l  %194 = load i64, i64* %6, align 8, !dbg !1188, !tbaa !1042\l  %195 = getelementptr inbounds i8, i8* %193, i64 %194, !dbg !1186\l  %196 = load i8, i8* %195, align 1, !dbg !1186, !tbaa !1090\l  %197 = icmp ne i8 %196, 0, !dbg !1186\l  br i1 %197, label %198, label %199, !dbg !1189\l|{<s0>T|<s1>F}}"];
	Node0xc7d040:s0 -> Node0xc7d090;
	Node0xc7d040:s1 -> Node0xc7d0e0;
	Node0xc7d090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%198:\l198:                                              \l  store i32 1, i32* %7, align 4\l  br label %214, !dbg !1190\l}"];
	Node0xc7d090 -> Node0xc7d180;
	Node0xc7d0e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%199:\l199:                                              \l  %200 = load i64*, i64** @next_file_name.sufindex, align 8, !dbg !1191, !tbaa\l... !1032\l  %201 = load i64, i64* %6, align 8, !dbg !1192, !tbaa !1042\l  %202 = getelementptr inbounds i64, i64* %200, i64 %201, !dbg !1191\l  store i64 0, i64* %202, align 8, !dbg !1193, !tbaa !1042\l  %203 = load i8*, i8** @suffix_alphabet, align 8, !dbg !1194, !tbaa !1032\l  %204 = load i64*, i64** @next_file_name.sufindex, align 8, !dbg !1195, !tbaa\l... !1032\l  %205 = load i64, i64* %6, align 8, !dbg !1196, !tbaa !1042\l  %206 = getelementptr inbounds i64, i64* %204, i64 %205, !dbg !1195\l  %207 = load i64, i64* %206, align 8, !dbg !1195, !tbaa !1042\l  %208 = getelementptr inbounds i8, i8* %203, i64 %207, !dbg !1194\l  %209 = load i8, i8* %208, align 1, !dbg !1194, !tbaa !1090\l  %210 = load i8*, i8** @outfile_mid, align 8, !dbg !1197, !tbaa !1032\l  %211 = load i64, i64* %6, align 8, !dbg !1198, !tbaa !1042\l  %212 = getelementptr inbounds i8, i8* %210, i64 %211, !dbg !1197\l  store i8 %209, i8* %212, align 1, !dbg !1199, !tbaa !1090\l  br label %157, !dbg !1162, !llvm.loop !1200\l}"];
	Node0xc7d0e0 -> Node0xc7ceb0;
	Node0xc7d130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%213:\l213:                                              \l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.84, i64 0, i64\l... 0)), !dbg !1202\l  unreachable, !dbg !1202\l}"];
	Node0xc7d180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%214:\l214:                                              \l  %215 = bitcast i64* %6 to i8*, !dbg !1203\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %215) #25, !dbg !1203\l  %216 = load i32, i32* %7, align 4\l  switch i32 %216, label %218 [\l    i32 2, label %11\l    i32 1, label %217\l  ]\l|{<s0>def|<s1>2|<s2>1}}"];
	Node0xc7d180:s0 -> Node0xc7d220;
	Node0xc7d180:s1 -> Node0xc7c780;
	Node0xc7d180:s2 -> Node0xc7d1d0;
	Node0xc7d1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%217:\l217:                                              \l  ret void, !dbg !1204\l}"];
	Node0xc7d220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%218:\l218:                                              \l  unreachable\l}"];
}
