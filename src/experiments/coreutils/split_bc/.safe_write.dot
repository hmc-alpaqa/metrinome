digraph "CFG for 'safe_write' function" {
	label="CFG for 'safe_write' function";

	Node0xd73440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%3:\l  %4 = alloca i64, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i8*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i32, align 4\l  store i32 %0, i32* %5, align 4, !tbaa !1046\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !1038, metadata\l... !DIExpression()), !dbg !1050\l  store i8* %1, i8** %6, align 8, !tbaa !1051\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1039, metadata\l... !DIExpression()), !dbg !1053\l  store i64 %2, i64* %7, align 8, !tbaa !1054\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1040, metadata\l... !DIExpression()), !dbg !1056\l  br label %10, !dbg !1057\l}"];
	Node0xd73440 -> Node0xd73bf0;
	Node0xd73bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l10:                                               \l  %11 = bitcast i64* %8 to i8*, !dbg !1058\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #24, !dbg !1058\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1041, metadata\l... !DIExpression()), !dbg !1059\l  %12 = load i32, i32* %5, align 4, !dbg !1060, !tbaa !1046\l  %13 = load i8*, i8** %6, align 8, !dbg !1061, !tbaa !1051\l  %14 = load i64, i64* %7, align 8, !dbg !1062, !tbaa !1054\l  %15 = call i64 @write(i32 noundef %12, i8* noundef %13, i64 noundef %14),\l... !dbg !1063\l  store i64 %15, i64* %8, align 8, !dbg !1059, !tbaa !1054\l  %16 = load i64, i64* %8, align 8, !dbg !1064, !tbaa !1054\l  %17 = icmp sle i64 0, %16, !dbg !1066\l  br i1 %17, label %18, label %20, !dbg !1067\l|{<s0>T|<s1>F}}"];
	Node0xd73bf0:s0 -> Node0xd73c40;
	Node0xd73bf0:s1 -> Node0xd73c90;
	Node0xd73c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%18:\l18:                                               \l  %19 = load i64, i64* %8, align 8, !dbg !1068, !tbaa !1054\l  store i64 %19, i64* %4, align 8, !dbg !1069\l  store i32 1, i32* %9, align 4\l  br label %38, !dbg !1069\l}"];
	Node0xd73c40 -> Node0xd73f60;
	Node0xd73c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%20:\l20:                                               \l  %21 = call i32* @__errno_location() #25, !dbg !1070\l  %22 = load i32, i32* %21, align 4, !dbg !1070, !tbaa !1046\l  %23 = icmp eq i32 %22, 4, !dbg !1070\l  br i1 %23, label %24, label %25, !dbg !1072\l|{<s0>T|<s1>F}}"];
	Node0xd73c90:s0 -> Node0xd73ce0;
	Node0xd73c90:s1 -> Node0xd73d30;
	Node0xd73ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%24:\l24:                                               \l  store i32 3, i32* %9, align 4\l  br label %38, !dbg !1073, !llvm.loop !1074\l}"];
	Node0xd73ce0 -> Node0xd73f60;
	Node0xd73d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%25:\l25:                                               \l  %26 = call i32* @__errno_location() #25, !dbg !1078\l  %27 = load i32, i32* %26, align 4, !dbg !1078, !tbaa !1046\l  %28 = icmp eq i32 %27, 22, !dbg !1080\l  br i1 %28, label %29, label %33, !dbg !1081\l|{<s0>T|<s1>F}}"];
	Node0xd73d30:s0 -> Node0xd73d80;
	Node0xd73d30:s1 -> Node0xd73e20;
	Node0xd73d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%29:\l29:                                               \l  %30 = load i64, i64* %7, align 8, !dbg !1082, !tbaa !1054\l  %31 = icmp ult i64 2146435072, %30, !dbg !1083\l  br i1 %31, label %32, label %33, !dbg !1084\l|{<s0>T|<s1>F}}"];
	Node0xd73d80:s0 -> Node0xd73dd0;
	Node0xd73d80:s1 -> Node0xd73e20;
	Node0xd73dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%32:\l32:                                               \l  store i64 2146435072, i64* %7, align 8, !dbg !1085, !tbaa !1054\l  br label %35, !dbg !1086\l}"];
	Node0xd73dd0 -> Node0xd73e70;
	Node0xd73e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%33:\l33:                                               \l  %34 = load i64, i64* %8, align 8, !dbg !1087, !tbaa !1054\l  store i64 %34, i64* %4, align 8, !dbg !1088\l  store i32 1, i32* %9, align 4\l  br label %38, !dbg !1088\l}"];
	Node0xd73e20 -> Node0xd73f60;
	Node0xd73e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%35:\l35:                                               \l  br label %36\l}"];
	Node0xd73e70 -> Node0xd73ec0;
	Node0xd73ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%36:\l36:                                               \l  br label %37\l}"];
	Node0xd73ec0 -> Node0xd73f10;
	Node0xd73f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%37:\l37:                                               \l  store i32 0, i32* %9, align 4, !dbg !1089\l  br label %38, !dbg !1089\l}"];
	Node0xd73f10 -> Node0xd73f60;
	Node0xd73f60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = bitcast i64* %8 to i8*, !dbg !1089\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #24, !dbg !1089\l  %40 = load i32, i32* %9, align 4\l  switch i32 %40, label %44 [\l    i32 0, label %41\l    i32 1, label %42\l    i32 3, label %10\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>3}}"];
	Node0xd73f60:s0 -> Node0xd74050;
	Node0xd73f60:s1 -> Node0xd73fb0;
	Node0xd73f60:s2 -> Node0xd74000;
	Node0xd73f60:s3 -> Node0xd73bf0;
	Node0xd73fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%41:\l41:                                               \l  br label %10, !dbg !1090, !llvm.loop !1074\l}"];
	Node0xd73fb0 -> Node0xd73bf0;
	Node0xd74000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%42:\l42:                                               \l  %43 = load i64, i64* %4, align 8, !dbg !1091\l  ret i64 %43, !dbg !1091\l}"];
	Node0xd74050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%44:\l44:                                               \l  unreachable\l}"];
}
