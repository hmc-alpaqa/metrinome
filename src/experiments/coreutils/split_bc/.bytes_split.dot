digraph "CFG for 'bytes_split' function" {
	label="CFG for 'bytes_split' function";

	Node0xc08ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%6:\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i8*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i8, align 1\l  %14 = alloca i8, align 1\l  %15 = alloca i64, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i8, align 1\l  %18 = alloca i64, align 8\l  %19 = alloca i8*, align 8\l  %20 = alloca i32, align 4\l  store i64 %0, i64* %7, align 8, !tbaa !1049\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1035, metadata\l... !DIExpression()), !dbg !1053\l  store i64 %1, i64* %8, align 8, !tbaa !1049\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1036, metadata\l... !DIExpression()), !dbg !1054\l  store i8* %2, i8** %9, align 8, !tbaa !1055\l  call void @llvm.dbg.declare(metadata i8** %9, metadata !1037, metadata\l... !DIExpression()), !dbg !1057\l  store i64 %3, i64* %10, align 8, !tbaa !1049\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1038, metadata\l... !DIExpression()), !dbg !1058\l  store i64 %4, i64* %11, align 8, !tbaa !1049\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1039, metadata\l... !DIExpression()), !dbg !1059\l  store i64 %5, i64* %12, align 8, !tbaa !1049\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1040, metadata\l... !DIExpression()), !dbg !1060\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #24, !dbg !1061\l  call void @llvm.dbg.declare(metadata i8* %13, metadata !1041, metadata\l... !DIExpression()), !dbg !1062\l  store i8 1, i8* %13, align 1, !dbg !1062, !tbaa !1063\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %14) #24, !dbg !1065\l  call void @llvm.dbg.declare(metadata i8* %14, metadata !1042, metadata\l... !DIExpression()), !dbg !1066\l  store i8 1, i8* %14, align 1, !dbg !1066, !tbaa !1063\l  %21 = bitcast i64* %15 to i8*, !dbg !1067\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #24, !dbg !1067\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !1043, metadata\l... !DIExpression()), !dbg !1068\l  store i64 0, i64* %15, align 8, !dbg !1068, !tbaa !1049\l  %22 = bitcast i64* %16 to i8*, !dbg !1069\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #24, !dbg !1069\l  call void @llvm.dbg.declare(metadata i64* %16, metadata !1044, metadata\l... !DIExpression()), !dbg !1070\l  %23 = load i64, i64* %7, align 8, !dbg !1071, !tbaa !1049\l  %24 = load i64, i64* %8, align 8, !dbg !1072, !tbaa !1049\l  %25 = icmp slt i64 0, %24, !dbg !1073\l  %26 = zext i1 %25 to i32, !dbg !1073\l  %27 = sext i32 %26 to i64, !dbg !1074\l  %28 = add nsw i64 %23, %27, !dbg !1075\l  store i64 %28, i64* %16, align 8, !dbg !1070, !tbaa !1049\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #24, !dbg !1076\l  call void @llvm.dbg.declare(metadata i8* %17, metadata !1045, metadata\l... !DIExpression()), !dbg !1077\l  %29 = load i64, i64* %16, align 8, !dbg !1078, !tbaa !1049\l  %30 = icmp ne i64 %29, 0, !dbg !1079\l  %31 = xor i1 %30, true, !dbg !1079\l  %32 = zext i1 %31 to i8, !dbg !1077\l  store i8 %32, i8* %17, align 1, !dbg !1077, !tbaa !1063\l  br label %33, !dbg !1080\l}"];
	Node0xc08ae0 -> Node0xc08cf0;
	Node0xc08cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%33:\l33:                                               \l  %34 = load i8, i8* %17, align 1, !dbg !1081, !tbaa !1063, !range !1082\l  %35 = trunc i8 %34 to i1, !dbg !1081\l  %36 = xor i1 %35, true, !dbg !1083\l  br i1 %36, label %37, label %177, !dbg !1080\l|{<s0>T|<s1>F}}"];
	Node0xc08cf0:s0 -> Node0xc08d40;
	Node0xc08cf0:s1 -> Node0xc09740;
	Node0xc08d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%37:\l37:                                               \l  %38 = bitcast i64* %18 to i8*, !dbg !1084\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #24, !dbg !1084\l  call void @llvm.dbg.declare(metadata i64* %18, metadata !1046, metadata\l... !DIExpression()), !dbg !1085\l  %39 = load i64, i64* %11, align 8, !dbg !1086, !tbaa !1049\l  %40 = icmp sle i64 0, %39, !dbg !1088\l  br i1 %40, label %41, label %47, !dbg !1089\l|{<s0>T|<s1>F}}"];
	Node0xc08d40:s0 -> Node0xc08d90;
	Node0xc08d40:s1 -> Node0xc08de0;
	Node0xc08d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%41:\l41:                                               \l  %42 = load i64, i64* %11, align 8, !dbg !1090, !tbaa !1049\l  store i64 %42, i64* %18, align 8, !dbg !1092, !tbaa !1049\l  store i64 -1, i64* %11, align 8, !dbg !1093, !tbaa !1049\l  %43 = load i64, i64* %18, align 8, !dbg !1094, !tbaa !1049\l  %44 = load i64, i64* %10, align 8, !dbg !1095, !tbaa !1049\l  %45 = icmp slt i64 %43, %44, !dbg !1096\l  %46 = zext i1 %45 to i8, !dbg !1097\l  store i8 %46, i8* %17, align 1, !dbg !1097, !tbaa !1063\l  br label %78, !dbg !1098\l}"];
	Node0xc08d90 -> Node0xc08fc0;
	Node0xc08de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%47:\l47:                                               \l  %48 = load i8, i8* %14, align 1, !dbg !1099, !tbaa !1063, !range !1082\l  %49 = trunc i8 %48 to i1, !dbg !1099\l  br i1 %49, label %63, label %50, !dbg !1102\l|{<s0>T|<s1>F}}"];
	Node0xc08de0:s0 -> Node0xc08ed0;
	Node0xc08de0:s1 -> Node0xc08e30;
	Node0xc08e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%50:\l50:                                               \l  %51 = load i64, i64* %16, align 8, !dbg !1103, !tbaa !1049\l  %52 = call i64 @lseek(i32 noundef 0, i64 noundef %51, i32 noundef 1) #24,\l... !dbg !1104\l  %53 = icmp sle i64 0, %52, !dbg !1105\l  br i1 %53, label %54, label %63, !dbg !1106\l|{<s0>T|<s1>F}}"];
	Node0xc08e30:s0 -> Node0xc08e80;
	Node0xc08e30:s1 -> Node0xc08ed0;
	Node0xc08e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%54:\l54:                                               \l  %55 = load i64, i64* %7, align 8, !dbg !1107, !tbaa !1049\l  %56 = load i64, i64* %15, align 8, !dbg !1109, !tbaa !1049\l  %57 = add nsw i64 %56, 1, !dbg !1110\l  %58 = load i64, i64* %8, align 8, !dbg !1111, !tbaa !1049\l  %59 = icmp slt i64 %57, %58, !dbg !1112\l  %60 = zext i1 %59 to i32, !dbg !1112\l  %61 = sext i32 %60 to i64, !dbg !1113\l  %62 = add nsw i64 %55, %61, !dbg !1114\l  store i64 %62, i64* %16, align 8, !dbg !1115, !tbaa !1049\l  store i8 1, i8* %13, align 1, !dbg !1116, !tbaa !1063\l  br label %63, !dbg !1117\l}"];
	Node0xc08e80 -> Node0xc08ed0;
	Node0xc08ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%63:\l63:                                               \l  %64 = load i8*, i8** %9, align 8, !dbg !1118, !tbaa !1055\l  %65 = load i64, i64* %10, align 8, !dbg !1119, !tbaa !1049\l  %66 = call i64 @read(i32 noundef 0, i8* noundef %64, i64 noundef %65), !dbg\l... !1120\l  store i64 %66, i64* %18, align 8, !dbg !1121, !tbaa !1049\l  %67 = load i64, i64* %18, align 8, !dbg !1122, !tbaa !1049\l  %68 = icmp slt i64 %67, 0, !dbg !1124\l  br i1 %68, label %69, label %74, !dbg !1125\l|{<s0>T|<s1>F}}"];
	Node0xc08ed0:s0 -> Node0xc08f20;
	Node0xc08ed0:s1 -> Node0xc08f70;
	Node0xc08f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%69:\l69:                                               \l  %70 = call i32* @__errno_location() #25, !dbg !1126\l  %71 = load i32, i32* %70, align 4, !dbg !1126, !tbaa !1127\l  %72 = load i8*, i8** @infile, align 8, !dbg !1126, !tbaa !1055\l  %73 = call i8* @quotearg_n_style_colon(i32 noundef 0, i32 noundef 3, i8*\l... noundef %72), !dbg !1126\l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef %71, i8*\l... noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0),\l... i8* noundef %73), !dbg !1126\l  unreachable, !dbg !1126\l}"];
	Node0xc08f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%74:\l74:                                               \l  %75 = load i64, i64* %18, align 8, !dbg !1129, !tbaa !1049\l  %76 = icmp eq i64 %75, 0, !dbg !1130\l  %77 = zext i1 %76 to i8, !dbg !1131\l  store i8 %77, i8* %17, align 1, !dbg !1131, !tbaa !1063\l  br label %78\l}"];
	Node0xc08f70 -> Node0xc08fc0;
	Node0xc08fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%78:\l78:                                               \l  %79 = bitcast i8** %19 to i8*, !dbg !1132\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %79) #24, !dbg !1132\l  call void @llvm.dbg.declare(metadata i8** %19, metadata !1048, metadata\l... !DIExpression()), !dbg !1133\l  %80 = load i8*, i8** %9, align 8, !dbg !1134, !tbaa !1055\l  store i8* %80, i8** %19, align 8, !dbg !1133, !tbaa !1055\l  br label %81, !dbg !1135\l}"];
	Node0xc08fc0 -> Node0xc09010;
	Node0xc09010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = load i64, i64* %16, align 8, !dbg !1136, !tbaa !1049\l  %83 = icmp slt i64 0, %82, !dbg !1137\l  br i1 %83, label %84, label %88, !dbg !1138\l|{<s0>T|<s1>F}}"];
	Node0xc09010:s0 -> Node0xc09060;
	Node0xc09010:s1 -> Node0xc090b0;
	Node0xc09060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%84:\l84:                                               \l  %85 = load i64, i64* %16, align 8, !dbg !1139, !tbaa !1049\l  %86 = load i64, i64* %18, align 8, !dbg !1140, !tbaa !1049\l  %87 = icmp sle i64 %85, %86, !dbg !1141\l  br label %88\l}"];
	Node0xc09060 -> Node0xc090b0;
	Node0xc090b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  %89 = phi i1 [ false, %81 ], [ %87, %84 ], !dbg !1142\l  br i1 %89, label %90, label %138, !dbg !1135\l|{<s0>T|<s1>F}}"];
	Node0xc090b0:s0 -> Node0xc09100;
	Node0xc090b0:s1 -> Node0xc093d0;
	Node0xc09100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = load i8, i8* %14, align 1, !dbg !1143, !tbaa !1063, !range !1082\l  %92 = trunc i8 %91 to i1, !dbg !1143\l  br i1 %92, label %96, label %93, !dbg !1146\l|{<s0>T|<s1>F}}"];
	Node0xc09100:s0 -> Node0xc091a0;
	Node0xc09100:s1 -> Node0xc09150;
	Node0xc09150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%93:\l93:                                               \l  %94 = load i8, i8* %13, align 1, !dbg !1147, !tbaa !1063, !range !1082\l  %95 = trunc i8 %94 to i1, !dbg !1147\l  br i1 %95, label %96, label %103, !dbg !1148\l|{<s0>T|<s1>F}}"];
	Node0xc09150:s0 -> Node0xc091a0;
	Node0xc09150:s1 -> Node0xc091f0;
	Node0xc091a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%96:\l96:                                               \l  %97 = load i8, i8* %13, align 1, !dbg !1149, !tbaa !1063, !range !1082\l  %98 = trunc i8 %97 to i1, !dbg !1149\l  %99 = load i8*, i8** %19, align 8, !dbg !1150, !tbaa !1055\l  %100 = load i64, i64* %16, align 8, !dbg !1151, !tbaa !1049\l  %101 = call zeroext i1 @cwrite(i1 noundef zeroext %98, i8* noundef %99, i64\l... noundef %100), !dbg !1152\l  %102 = zext i1 %101 to i8, !dbg !1153\l  store i8 %102, i8* %14, align 1, !dbg !1153, !tbaa !1063\l  br label %103, !dbg !1154\l}"];
	Node0xc091a0 -> Node0xc091f0;
	Node0xc091f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%103:\l103:                                              \l  %104 = load i8, i8* %13, align 1, !dbg !1155, !tbaa !1063, !range !1082\l  %105 = trunc i8 %104 to i1, !dbg !1155\l  %106 = zext i1 %105 to i64, !dbg !1155\l  %107 = load i64, i64* %15, align 8, !dbg !1156, !tbaa !1049\l  %108 = add nsw i64 %107, %106, !dbg !1156\l  store i64 %108, i64* %15, align 8, !dbg !1156, !tbaa !1049\l  %109 = load i64, i64* %12, align 8, !dbg !1157, !tbaa !1049\l  %110 = icmp ne i64 %109, 0, !dbg !1157\l  br i1 %110, label %111, label %115, !dbg !1158\l|{<s0>T|<s1>F}}"];
	Node0xc091f0:s0 -> Node0xc09240;
	Node0xc091f0:s1 -> Node0xc09290;
	Node0xc09240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%111:\l111:                                              \l  %112 = load i64, i64* %15, align 8, !dbg !1159, !tbaa !1049\l  %113 = load i64, i64* %12, align 8, !dbg !1160, !tbaa !1049\l  %114 = icmp slt i64 %112, %113, !dbg !1161\l  br label %115, !dbg !1158\l}"];
	Node0xc09240 -> Node0xc09290;
	Node0xc09290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%115:\l115:                                              \l  %116 = phi i1 [ true, %103 ], [ %114, %111 ]\l  %117 = zext i1 %116 to i8, !dbg !1162\l  store i8 %117, i8* %13, align 1, !dbg !1162, !tbaa !1063\l  %118 = load i8, i8* %14, align 1, !dbg !1163, !tbaa !1063, !range !1082\l  %119 = trunc i8 %118 to i1, !dbg !1163\l  br i1 %119, label %124, label %120, !dbg !1165\l|{<s0>T|<s1>F}}"];
	Node0xc09290:s0 -> Node0xc09380;
	Node0xc09290:s1 -> Node0xc092e0;
	Node0xc092e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%120:\l120:                                              \l  %121 = load i8, i8* %13, align 1, !dbg !1166, !tbaa !1063, !range !1082\l  %122 = trunc i8 %121 to i1, !dbg !1166\l  br i1 %122, label %124, label %123, !dbg !1167\l|{<s0>T|<s1>F}}"];
	Node0xc092e0:s0 -> Node0xc09380;
	Node0xc092e0:s1 -> Node0xc09330;
	Node0xc09330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%123:\l123:                                              \l  store i64 0, i64* %18, align 8, !dbg !1168, !tbaa !1049\l  store i8 1, i8* %17, align 1, !dbg !1170, !tbaa !1063\l  br label %138, !dbg !1171\l}"];
	Node0xc09330 -> Node0xc093d0;
	Node0xc09380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%124:\l124:                                              \l  %125 = load i64, i64* %16, align 8, !dbg !1172, !tbaa !1049\l  %126 = load i8*, i8** %19, align 8, !dbg !1173, !tbaa !1055\l  %127 = getelementptr inbounds i8, i8* %126, i64 %125, !dbg !1173\l  store i8* %127, i8** %19, align 8, !dbg !1173, !tbaa !1055\l  %128 = load i64, i64* %16, align 8, !dbg !1174, !tbaa !1049\l  %129 = load i64, i64* %18, align 8, !dbg !1175, !tbaa !1049\l  %130 = sub nsw i64 %129, %128, !dbg !1175\l  store i64 %130, i64* %18, align 8, !dbg !1175, !tbaa !1049\l  %131 = load i64, i64* %7, align 8, !dbg !1176, !tbaa !1049\l  %132 = load i64, i64* %15, align 8, !dbg !1177, !tbaa !1049\l  %133 = load i64, i64* %8, align 8, !dbg !1178, !tbaa !1049\l  %134 = icmp slt i64 %132, %133, !dbg !1179\l  %135 = zext i1 %134 to i32, !dbg !1179\l  %136 = sext i32 %135 to i64, !dbg !1180\l  %137 = add nsw i64 %131, %136, !dbg !1181\l  store i64 %137, i64* %16, align 8, !dbg !1182, !tbaa !1049\l  br label %81, !dbg !1135, !llvm.loop !1183\l}"];
	Node0xc09380 -> Node0xc09010;
	Node0xc093d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%138:\l138:                                              \l  %139 = load i64, i64* %18, align 8, !dbg !1187, !tbaa !1049\l  %140 = icmp slt i64 0, %139, !dbg !1189\l  br i1 %140, label %141, label %171, !dbg !1190\l|{<s0>T|<s1>F}}"];
	Node0xc093d0:s0 -> Node0xc09420;
	Node0xc093d0:s1 -> Node0xc09650;
	Node0xc09420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%141:\l141:                                              \l  %142 = load i8, i8* %14, align 1, !dbg !1191, !tbaa !1063, !range !1082\l  %143 = trunc i8 %142 to i1, !dbg !1191\l  br i1 %143, label %147, label %144, !dbg !1194\l|{<s0>T|<s1>F}}"];
	Node0xc09420:s0 -> Node0xc094c0;
	Node0xc09420:s1 -> Node0xc09470;
	Node0xc09470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%144:\l144:                                              \l  %145 = load i8, i8* %13, align 1, !dbg !1195, !tbaa !1063, !range !1082\l  %146 = trunc i8 %145 to i1, !dbg !1195\l  br i1 %146, label %147, label %154, !dbg !1196\l|{<s0>T|<s1>F}}"];
	Node0xc09470:s0 -> Node0xc094c0;
	Node0xc09470:s1 -> Node0xc09510;
	Node0xc094c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%147:\l147:                                              \l  %148 = load i8, i8* %13, align 1, !dbg !1197, !tbaa !1063, !range !1082\l  %149 = trunc i8 %148 to i1, !dbg !1197\l  %150 = load i8*, i8** %19, align 8, !dbg !1198, !tbaa !1055\l  %151 = load i64, i64* %18, align 8, !dbg !1199, !tbaa !1049\l  %152 = call zeroext i1 @cwrite(i1 noundef zeroext %149, i8* noundef %150,\l... i64 noundef %151), !dbg !1200\l  %153 = zext i1 %152 to i8, !dbg !1201\l  store i8 %153, i8* %14, align 1, !dbg !1201, !tbaa !1063\l  br label %154, !dbg !1202\l}"];
	Node0xc094c0 -> Node0xc09510;
	Node0xc09510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%154:\l154:                                              \l  %155 = load i8, i8* %13, align 1, !dbg !1203, !tbaa !1063, !range !1082\l  %156 = trunc i8 %155 to i1, !dbg !1203\l  %157 = zext i1 %156 to i64, !dbg !1203\l  %158 = load i64, i64* %15, align 8, !dbg !1204, !tbaa !1049\l  %159 = add nsw i64 %158, %157, !dbg !1204\l  store i64 %159, i64* %15, align 8, !dbg !1204, !tbaa !1049\l  store i8 0, i8* %13, align 1, !dbg !1205, !tbaa !1063\l  %160 = load i8, i8* %14, align 1, !dbg !1206, !tbaa !1063, !range !1082\l  %161 = trunc i8 %160 to i1, !dbg !1206\l  br i1 %161, label %167, label %162, !dbg !1208\l|{<s0>T|<s1>F}}"];
	Node0xc09510:s0 -> Node0xc09600;
	Node0xc09510:s1 -> Node0xc09560;
	Node0xc09560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%162:\l162:                                              \l  %163 = load i64, i64* %15, align 8, !dbg !1209, !tbaa !1049\l  %164 = load i64, i64* %12, align 8, !dbg !1210, !tbaa !1049\l  %165 = icmp eq i64 %163, %164, !dbg !1211\l  br i1 %165, label %166, label %167, !dbg !1212\l|{<s0>T|<s1>F}}"];
	Node0xc09560:s0 -> Node0xc095b0;
	Node0xc09560:s1 -> Node0xc09600;
	Node0xc095b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%166:\l166:                                              \l  store i32 3, i32* %20, align 4\l  br label %172, !dbg !1213\l}"];
	Node0xc095b0 -> Node0xc096a0;
	Node0xc09600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%167:\l167:                                              \l  %168 = load i64, i64* %18, align 8, !dbg !1215, !tbaa !1049\l  %169 = load i64, i64* %16, align 8, !dbg !1216, !tbaa !1049\l  %170 = sub nsw i64 %169, %168, !dbg !1216\l  store i64 %170, i64* %16, align 8, !dbg !1216, !tbaa !1049\l  br label %171, !dbg !1217\l}"];
	Node0xc09600 -> Node0xc09650;
	Node0xc09650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%171:\l171:                                              \l  store i32 0, i32* %20, align 4, !dbg !1218\l  br label %172, !dbg !1218\l}"];
	Node0xc09650 -> Node0xc096a0;
	Node0xc096a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%172:\l172:                                              \l  %173 = bitcast i8** %19 to i8*, !dbg !1218\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %173) #24, !dbg !1218\l  %174 = bitcast i64* %18 to i8*, !dbg !1218\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %174) #24, !dbg !1218\l  %175 = load i32, i32* %20, align 4\l  switch i32 %175, label %188 [\l    i32 0, label %176\l    i32 3, label %177\l  ]\l|{<s0>def|<s1>0|<s2>3}}"];
	Node0xc096a0:s0 -> Node0xc09880;
	Node0xc096a0:s1 -> Node0xc096f0;
	Node0xc096a0:s2 -> Node0xc09740;
	Node0xc096f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%176:\l176:                                              \l  br label %33, !dbg !1080, !llvm.loop !1219\l}"];
	Node0xc096f0 -> Node0xc08cf0;
	Node0xc09740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%177:\l177:                                              \l  br label %178, !dbg !1220\l}"];
	Node0xc09740 -> Node0xc09790;
	Node0xc09790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%178:\l178:                                              \l  %179 = load i64, i64* %15, align 8, !dbg !1221, !tbaa !1049\l  %180 = add nsw i64 %179, 1, !dbg !1221\l  store i64 %180, i64* %15, align 8, !dbg !1221, !tbaa !1049\l  %181 = load i64, i64* %12, align 8, !dbg !1222, !tbaa !1049\l  %182 = icmp slt i64 %179, %181, !dbg !1223\l  br i1 %182, label %183, label %185, !dbg !1220\l|{<s0>T|<s1>F}}"];
	Node0xc09790:s0 -> Node0xc097e0;
	Node0xc09790:s1 -> Node0xc09830;
	Node0xc097e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%183:\l183:                                              \l  %184 = call zeroext i1 @cwrite(i1 noundef zeroext true, i8* noundef null,\l... i64 noundef 0), !dbg !1224\l  br label %178, !dbg !1220, !llvm.loop !1225\l}"];
	Node0xc097e0 -> Node0xc09790;
	Node0xc09830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%185:\l185:                                              \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #24, !dbg !1227\l  %186 = bitcast i64* %16 to i8*, !dbg !1227\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %186) #24, !dbg !1227\l  %187 = bitcast i64* %15 to i8*, !dbg !1227\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %187) #24, !dbg !1227\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %14) #24, !dbg !1227\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #24, !dbg !1227\l  ret void, !dbg !1227\l}"];
	Node0xc09880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%188:\l188:                                              \l  unreachable\l}"];
}
