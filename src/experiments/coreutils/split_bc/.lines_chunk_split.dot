digraph "CFG for 'lines_chunk_split' function" {
	label="CFG for 'lines_chunk_split' function";

	Node0xc3ccd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%6:\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i8*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i64, align 8\l  %18 = alloca i8, align 1\l  %19 = alloca i8, align 1\l  %20 = alloca i64, align 8\l  %21 = alloca i8*, align 8\l  %22 = alloca i8*, align 8\l  %23 = alloca i64, align 8\l  %24 = alloca i32, align 4\l  %25 = alloca i64, align 8\l  %26 = alloca i8, align 1\l  %27 = alloca i64, align 8\l  %28 = alloca i8*, align 8\l  store i64 %0, i64* %7, align 8, !tbaa !1060\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1035, metadata\l... !DIExpression()), !dbg !1064\l  store i64 %1, i64* %8, align 8, !tbaa !1060\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1036, metadata\l... !DIExpression()), !dbg !1065\l  store i8* %2, i8** %9, align 8, !tbaa !1066\l  call void @llvm.dbg.declare(metadata i8** %9, metadata !1037, metadata\l... !DIExpression()), !dbg !1068\l  store i64 %3, i64* %10, align 8, !tbaa !1060\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1038, metadata\l... !DIExpression()), !dbg !1069\l  store i64 %4, i64* %11, align 8, !tbaa !1060\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1039, metadata\l... !DIExpression()), !dbg !1070\l  store i64 %5, i64* %12, align 8, !tbaa !1060\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1040, metadata\l... !DIExpression()), !dbg !1071\l  %29 = load i64, i64* %8, align 8, !dbg !1072, !tbaa !1060\l  %30 = icmp ne i64 %29, 0, !dbg !1072\l  br i1 %30, label %31, label %36, !dbg !1072\l|{<s0>T|<s1>F}}"];
	Node0xc3ccd0:s0 -> Node0xc3cfb0;
	Node0xc3ccd0:s1 -> Node0xc3d050;
	Node0xc3cfb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%31:\l31:                                               \l  %32 = load i64, i64* %7, align 8, !dbg !1072, !tbaa !1060\l  %33 = load i64, i64* %8, align 8, !dbg !1072, !tbaa !1060\l  %34 = icmp sle i64 %32, %33, !dbg !1072\l  br i1 %34, label %35, label %36, !dbg !1075\l|{<s0>T|<s1>F}}"];
	Node0xc3cfb0:s0 -> Node0xc3d000;
	Node0xc3cfb0:s1 -> Node0xc3d050;
	Node0xc3d000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%35:\l35:                                               \l  br label %37, !dbg !1075\l}"];
	Node0xc3d000 -> Node0xc3d0a0;
	Node0xc3d050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%36:\l36:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([12 x i8], [12\l... x i8]* @.str.104, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x\l... i8], [15 x i8]* @.str.41, i64 0, i64 0), i32 noundef 885, i8* noundef\l... getelementptr inbounds ([74 x i8], [74 x i8]*\l... @__PRETTY_FUNCTION__.lines_chunk_split, i64 0, i64 0)) #24, !dbg !1072\l  unreachable, !dbg !1072\l}"];
	Node0xc3d0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%37:\l37:                                               \l  %38 = bitcast i64* %13 to i8*, !dbg !1076\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #25, !dbg !1076\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !1041, metadata\l... !DIExpression()), !dbg !1077\l  %39 = load i64, i64* %12, align 8, !dbg !1078, !tbaa !1060\l  %40 = load i64, i64* %8, align 8, !dbg !1079, !tbaa !1060\l  %41 = srem i64 %39, %40, !dbg !1080\l  store i64 %41, i64* %13, align 8, !dbg !1077, !tbaa !1060\l  %42 = bitcast i64* %14 to i8*, !dbg !1081\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #25, !dbg !1081\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !1042, metadata\l... !DIExpression()), !dbg !1082\l  %43 = load i64, i64* %12, align 8, !dbg !1083, !tbaa !1060\l  %44 = load i64, i64* %8, align 8, !dbg !1084, !tbaa !1060\l  %45 = sdiv i64 %43, %44, !dbg !1085\l  store i64 %45, i64* %14, align 8, !dbg !1082, !tbaa !1060\l  %46 = bitcast i64* %15 to i8*, !dbg !1086\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #25, !dbg !1086\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !1043, metadata\l... !DIExpression()), !dbg !1087\l  store i64 1, i64* %15, align 8, !dbg !1087, !tbaa !1060\l  %47 = bitcast i64* %16 to i8*, !dbg !1088\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #25, !dbg !1088\l  call void @llvm.dbg.declare(metadata i64* %16, metadata !1044, metadata\l... !DIExpression()), !dbg !1089\l  %48 = load i64, i64* %14, align 8, !dbg !1090, !tbaa !1060\l  %49 = load i64, i64* %13, align 8, !dbg !1091, !tbaa !1060\l  %50 = icmp slt i64 0, %49, !dbg !1092\l  %51 = zext i1 %50 to i32, !dbg !1092\l  %52 = sext i32 %51 to i64, !dbg !1093\l  %53 = add nsw i64 %48, %52, !dbg !1094\l  store i64 %53, i64* %16, align 8, !dbg !1089, !tbaa !1060\l  %54 = bitcast i64* %17 to i8*, !dbg !1095\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #25, !dbg !1095\l  call void @llvm.dbg.declare(metadata i64* %17, metadata !1045, metadata\l... !DIExpression()), !dbg !1096\l  store i64 0, i64* %17, align 8, !dbg !1096, !tbaa !1060\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #25, !dbg !1097\l  call void @llvm.dbg.declare(metadata i8* %18, metadata !1046, metadata\l... !DIExpression()), !dbg !1098\l  store i8 1, i8* %18, align 1, !dbg !1098, !tbaa !1099\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #25, !dbg !1101\l  call void @llvm.dbg.declare(metadata i8* %19, metadata !1047, metadata\l... !DIExpression()), !dbg !1102\l  store i8 0, i8* %19, align 1, !dbg !1102, !tbaa !1099\l  %55 = load i64, i64* %7, align 8, !dbg !1103, !tbaa !1060\l  %56 = icmp sgt i64 %55, 1, !dbg !1104\l  br i1 %56, label %57, label %116, !dbg !1105\l|{<s0>T|<s1>F}}"];
	Node0xc3d0a0:s0 -> Node0xc3d0f0;
	Node0xc3d0a0:s1 -> Node0xc3d460;
	Node0xc3d0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%57:\l57:                                               \l  %58 = load i64, i64* %12, align 8, !dbg !1106, !tbaa !1060\l  %59 = icmp slt i64 0, %58, !dbg !1107\l  br i1 %59, label %60, label %116, !dbg !1108\l|{<s0>T|<s1>F}}"];
	Node0xc3d0f0:s0 -> Node0xc3d140;
	Node0xc3d0f0:s1 -> Node0xc3d460;
	Node0xc3d140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%60:\l60:                                               \l  %61 = bitcast i64* %20 to i8*, !dbg !1109\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #25, !dbg !1109\l  call void @llvm.dbg.declare(metadata i64* %20, metadata !1048, metadata\l... !DIExpression()), !dbg !1110\l  %62 = load i64, i64* %7, align 8, !dbg !1111, !tbaa !1060\l  %63 = sub nsw i64 %62, 1, !dbg !1112\l  %64 = load i64, i64* %14, align 8, !dbg !1113, !tbaa !1060\l  %65 = mul nsw i64 %63, %64, !dbg !1114\l  %66 = load i64, i64* %7, align 8, !dbg !1115, !tbaa !1060\l  %67 = sub nsw i64 %66, 1, !dbg !1115\l  %68 = load i64, i64* %13, align 8, !dbg !1115, !tbaa !1060\l  %69 = icmp slt i64 %67, %68, !dbg !1115\l  br i1 %69, label %70, label %73, !dbg !1115\l|{<s0>T|<s1>F}}"];
	Node0xc3d140:s0 -> Node0xc3d190;
	Node0xc3d140:s1 -> Node0xc3d1e0;
	Node0xc3d190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%70:\l70:                                               \l  %71 = load i64, i64* %7, align 8, !dbg !1115, !tbaa !1060\l  %72 = sub nsw i64 %71, 1, !dbg !1115\l  br label %75, !dbg !1115\l}"];
	Node0xc3d190 -> Node0xc3d230;
	Node0xc3d1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%73:\l73:                                               \l  %74 = load i64, i64* %13, align 8, !dbg !1115, !tbaa !1060\l  br label %75, !dbg !1115\l}"];
	Node0xc3d1e0 -> Node0xc3d230;
	Node0xc3d230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%75:\l75:                                               \l  %76 = phi i64 [ %72, %70 ], [ %74, %73 ], !dbg !1115\l  %77 = add nsw i64 %65, %76, !dbg !1116\l  %78 = sub nsw i64 %77, 1, !dbg !1117\l  store i64 %78, i64* %20, align 8, !dbg !1110, !tbaa !1060\l  %79 = load i64, i64* %20, align 8, !dbg !1118, !tbaa !1060\l  %80 = load i64, i64* %11, align 8, !dbg !1120, !tbaa !1060\l  %81 = icmp slt i64 %79, %80, !dbg !1121\l  br i1 %81, label %82, label %93, !dbg !1122\l|{<s0>T|<s1>F}}"];
	Node0xc3d230:s0 -> Node0xc3d280;
	Node0xc3d230:s1 -> Node0xc3d2d0;
	Node0xc3d280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%82:\l82:                                               \l  %83 = load i8*, i8** %9, align 8, !dbg !1123, !tbaa !1066\l  %84 = load i8*, i8** %9, align 8, !dbg !1125, !tbaa !1066\l  %85 = load i64, i64* %20, align 8, !dbg !1126, !tbaa !1060\l  %86 = getelementptr inbounds i8, i8* %84, i64 %85, !dbg !1127\l  %87 = load i64, i64* %11, align 8, !dbg !1128, !tbaa !1060\l  %88 = load i64, i64* %20, align 8, !dbg !1129, !tbaa !1060\l  %89 = sub nsw i64 %87, %88, !dbg !1130\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %83, i8* align 1 %86, i64\l... %89, i1 false), !dbg !1131\l  %90 = load i64, i64* %20, align 8, !dbg !1132, !tbaa !1060\l  %91 = load i64, i64* %11, align 8, !dbg !1133, !tbaa !1060\l  %92 = sub nsw i64 %91, %90, !dbg !1133\l  store i64 %92, i64* %11, align 8, !dbg !1133, !tbaa !1060\l  br label %109, !dbg !1134\l}"];
	Node0xc3d280 -> Node0xc3d410;
	Node0xc3d2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%93:\l93:                                               \l  %94 = load i64, i64* %11, align 8, !dbg !1135, !tbaa !1060\l  %95 = load i64, i64* %20, align 8, !dbg !1138, !tbaa !1060\l  %96 = icmp slt i64 %94, %95, !dbg !1139\l  br i1 %96, label %97, label %108, !dbg !1140\l|{<s0>T|<s1>F}}"];
	Node0xc3d2d0:s0 -> Node0xc3d320;
	Node0xc3d2d0:s1 -> Node0xc3d3c0;
	Node0xc3d320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%97:\l97:                                               \l  %98 = load i64, i64* %20, align 8, !dbg !1141, !tbaa !1060\l  %99 = load i64, i64* %11, align 8, !dbg !1142, !tbaa !1060\l  %100 = sub nsw i64 %98, %99, !dbg !1143\l  %101 = call i64 @lseek(i32 noundef 0, i64 noundef %100, i32 noundef 1) #25,\l... !dbg !1144\l  %102 = icmp slt i64 %101, 0, !dbg !1145\l  br i1 %102, label %103, label %108, !dbg !1146\l|{<s0>T|<s1>F}}"];
	Node0xc3d320:s0 -> Node0xc3d370;
	Node0xc3d320:s1 -> Node0xc3d3c0;
	Node0xc3d370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4f69d970",label="{%103:\l103:                                              \l  %104 = call i32* @__errno_location() #26, !dbg !1147\l  %105 = load i32, i32* %104, align 4, !dbg !1147, !tbaa !1148\l  %106 = load i8*, i8** @infile, align 8, !dbg !1147, !tbaa !1066\l  %107 = call i8* @quotearg_n_style_colon(i32 noundef 0, i32 noundef 3, i8*\l... noundef %106), !dbg !1147\l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef %105, i8*\l... noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0),\l... i8* noundef %107), !dbg !1147\l  unreachable, !dbg !1147\l}"];
	Node0xc3d3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%108:\l108:                                              \l  store i64 -1, i64* %11, align 8, !dbg !1150, !tbaa !1060\l  br label %109\l}"];
	Node0xc3d3c0 -> Node0xc3d410;
	Node0xc3d410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%109:\l109:                                              \l  %110 = load i64, i64* %20, align 8, !dbg !1151, !tbaa !1060\l  store i64 %110, i64* %17, align 8, !dbg !1152, !tbaa !1060\l  %111 = load i64, i64* %7, align 8, !dbg !1153, !tbaa !1060\l  %112 = sub nsw i64 %111, 1, !dbg !1154\l  store i64 %112, i64* %15, align 8, !dbg !1155, !tbaa !1060\l  %113 = load i64, i64* %20, align 8, !dbg !1156, !tbaa !1060\l  %114 = add nsw i64 %113, 1, !dbg !1157\l  store i64 %114, i64* %16, align 8, !dbg !1158, !tbaa !1060\l  %115 = bitcast i64* %20 to i8*, !dbg !1159\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %115) #25, !dbg !1159\l  br label %116, !dbg !1160\l}"];
	Node0xc3d410 -> Node0xc3d460;
	Node0xc3d460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%116:\l116:                                              \l  br label %117, !dbg !1161\l}"];
	Node0xc3d460 -> Node0xc3d4b0;
	Node0xc3d4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%117:\l117:                                              \l  %118 = load i64, i64* %17, align 8, !dbg !1162, !tbaa !1060\l  %119 = load i64, i64* %12, align 8, !dbg !1163, !tbaa !1060\l  %120 = icmp slt i64 %118, %119, !dbg !1164\l  br i1 %120, label %121, label %317, !dbg !1161\l|{<s0>T|<s1>F}}"];
	Node0xc3d4b0:s0 -> Node0xc3d500;
	Node0xc3d4b0:s1 -> Node0xc3e540;
	Node0xc3d500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%121:\l121:                                              \l  %122 = bitcast i8** %21 to i8*, !dbg !1165\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %122) #25, !dbg !1165\l  call void @llvm.dbg.declare(metadata i8** %21, metadata !1051, metadata\l... !DIExpression()), !dbg !1166\l  %123 = load i8*, i8** %9, align 8, !dbg !1167, !tbaa !1066\l  store i8* %123, i8** %21, align 8, !dbg !1166, !tbaa !1066\l  %124 = bitcast i8** %22 to i8*, !dbg !1165\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %124) #25, !dbg !1165\l  call void @llvm.dbg.declare(metadata i8** %22, metadata !1053, metadata\l... !DIExpression()), !dbg !1168\l  %125 = bitcast i64* %23 to i8*, !dbg !1169\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %125) #25, !dbg !1169\l  call void @llvm.dbg.declare(metadata i64* %23, metadata !1054, metadata\l... !DIExpression()), !dbg !1170\l  %126 = load i64, i64* %11, align 8, !dbg !1171, !tbaa !1060\l  %127 = icmp sle i64 0, %126, !dbg !1173\l  br i1 %127, label %128, label %130, !dbg !1174\l|{<s0>T|<s1>F}}"];
	Node0xc3d500:s0 -> Node0xc3d550;
	Node0xc3d500:s1 -> Node0xc3d5a0;
	Node0xc3d550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%128:\l128:                                              \l  %129 = load i64, i64* %11, align 8, !dbg !1175, !tbaa !1060\l  store i64 %129, i64* %23, align 8, !dbg !1177, !tbaa !1060\l  store i64 -1, i64* %11, align 8, !dbg !1178, !tbaa !1060\l  br label %154, !dbg !1179\l}"];
	Node0xc3d550 -> Node0xc3d780;
	Node0xc3d5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%130:\l130:                                              \l  %131 = load i8*, i8** %9, align 8, !dbg !1180, !tbaa !1066\l  %132 = load i64, i64* %10, align 8, !dbg !1182, !tbaa !1060\l  %133 = load i64, i64* %12, align 8, !dbg !1182, !tbaa !1060\l  %134 = load i64, i64* %17, align 8, !dbg !1182, !tbaa !1060\l  %135 = sub nsw i64 %133, %134, !dbg !1182\l  %136 = icmp slt i64 %132, %135, !dbg !1182\l  br i1 %136, label %137, label %139, !dbg !1182\l|{<s0>T|<s1>F}}"];
	Node0xc3d5a0:s0 -> Node0xc3d5f0;
	Node0xc3d5a0:s1 -> Node0xc3d640;
	Node0xc3d5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%137:\l137:                                              \l  %138 = load i64, i64* %10, align 8, !dbg !1182, !tbaa !1060\l  br label %143, !dbg !1182\l}"];
	Node0xc3d5f0 -> Node0xc3d690;
	Node0xc3d640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%139:\l139:                                              \l  %140 = load i64, i64* %12, align 8, !dbg !1182, !tbaa !1060\l  %141 = load i64, i64* %17, align 8, !dbg !1182, !tbaa !1060\l  %142 = sub nsw i64 %140, %141, !dbg !1182\l  br label %143, !dbg !1182\l}"];
	Node0xc3d640 -> Node0xc3d690;
	Node0xc3d690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%143:\l143:                                              \l  %144 = phi i64 [ %138, %137 ], [ %142, %139 ], !dbg !1182\l  %145 = call i64 @read(i32 noundef 0, i8* noundef %131, i64 noundef %144),\l... !dbg !1183\l  store i64 %145, i64* %23, align 8, !dbg !1184, !tbaa !1060\l  %146 = load i64, i64* %23, align 8, !dbg !1185, !tbaa !1060\l  %147 = icmp slt i64 %146, 0, !dbg !1187\l  br i1 %147, label %148, label %153, !dbg !1188\l|{<s0>T|<s1>F}}"];
	Node0xc3d690:s0 -> Node0xc3d6e0;
	Node0xc3d690:s1 -> Node0xc3d730;
	Node0xc3d6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%148:\l148:                                              \l  %149 = call i32* @__errno_location() #26, !dbg !1189\l  %150 = load i32, i32* %149, align 4, !dbg !1189, !tbaa !1148\l  %151 = load i8*, i8** @infile, align 8, !dbg !1189, !tbaa !1066\l  %152 = call i8* @quotearg_n_style_colon(i32 noundef 0, i32 noundef 3, i8*\l... noundef %151), !dbg !1189\l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef %150, i8*\l... noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0),\l... i8* noundef %152), !dbg !1189\l  unreachable, !dbg !1189\l}"];
	Node0xc3d730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%153:\l153:                                              \l  br label %154\l}"];
	Node0xc3d730 -> Node0xc3d780;
	Node0xc3d780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%154:\l154:                                              \l  %155 = load i64, i64* %23, align 8, !dbg !1190, !tbaa !1060\l  %156 = icmp eq i64 %155, 0, !dbg !1192\l  br i1 %156, label %157, label %158, !dbg !1193\l|{<s0>T|<s1>F}}"];
	Node0xc3d780:s0 -> Node0xc3d7d0;
	Node0xc3d780:s1 -> Node0xc3d820;
	Node0xc3d7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%157:\l157:                                              \l  store i32 3, i32* %24, align 4\l  br label %311, !dbg !1194\l}"];
	Node0xc3d7d0 -> Node0xc3e4a0;
	Node0xc3d820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%158:\l158:                                              \l  store i8 0, i8* %19, align 1, !dbg !1195, !tbaa !1099\l  %159 = load i8*, i8** %9, align 8, !dbg !1196, !tbaa !1066\l  %160 = load i64, i64* %23, align 8, !dbg !1197, !tbaa !1060\l  %161 = getelementptr inbounds i8, i8* %159, i64 %160, !dbg !1198\l  store i8* %161, i8** %22, align 8, !dbg !1199, !tbaa !1066\l  br label %162, !dbg !1200\l}"];
	Node0xc3d820 -> Node0xc3d870;
	Node0xc3d870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%162:\l162:                                              \l  %163 = load i8*, i8** %21, align 8, !dbg !1201, !tbaa !1066\l  %164 = load i8*, i8** %22, align 8, !dbg !1202, !tbaa !1066\l  %165 = icmp ne i8* %163, %164, !dbg !1203\l  br i1 %165, label %166, label %310, !dbg !1200\l|{<s0>T|<s1>F}}"];
	Node0xc3d870:s0 -> Node0xc3d8c0;
	Node0xc3d870:s1 -> Node0xc3e450;
	Node0xc3d8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%166:\l166:                                              \l  %167 = bitcast i64* %25 to i8*, !dbg !1204\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %167) #25, !dbg !1204\l  call void @llvm.dbg.declare(metadata i64* %25, metadata !1055, metadata\l... !DIExpression()), !dbg !1205\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %26) #25, !dbg !1206\l  call void @llvm.dbg.declare(metadata i8* %26, metadata !1057, metadata\l... !DIExpression()), !dbg !1207\l  store i8 0, i8* %26, align 1, !dbg !1207, !tbaa !1099\l  %168 = bitcast i64* %27 to i8*, !dbg !1208\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %168) #25, !dbg !1208\l  call void @llvm.dbg.declare(metadata i64* %27, metadata !1058, metadata\l... !DIExpression()), !dbg !1209\l  %169 = load i64, i64* %23, align 8, !dbg !1210, !tbaa !1060\l  %170 = load i64, i64* %16, align 8, !dbg !1210, !tbaa !1060\l  %171 = sub nsw i64 %170, 1, !dbg !1210\l  %172 = load i64, i64* %17, align 8, !dbg !1210, !tbaa !1060\l  %173 = sub nsw i64 %171, %172, !dbg !1210\l  %174 = icmp sgt i64 0, %173, !dbg !1210\l  br i1 %174, label %175, label %176, !dbg !1210\l|{<s0>T|<s1>F}}"];
	Node0xc3d8c0:s0 -> Node0xc3d910;
	Node0xc3d8c0:s1 -> Node0xc3d960;
	Node0xc3d910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%175:\l175:                                              \l  br label %181, !dbg !1210\l}"];
	Node0xc3d910 -> Node0xc3d9b0;
	Node0xc3d960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%176:\l176:                                              \l  %177 = load i64, i64* %16, align 8, !dbg !1210, !tbaa !1060\l  %178 = sub nsw i64 %177, 1, !dbg !1210\l  %179 = load i64, i64* %17, align 8, !dbg !1210, !tbaa !1060\l  %180 = sub nsw i64 %178, %179, !dbg !1210\l  br label %181, !dbg !1210\l}"];
	Node0xc3d960 -> Node0xc3d9b0;
	Node0xc3d9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%181:\l181:                                              \l  %182 = phi i64 [ 0, %175 ], [ %180, %176 ], !dbg !1210\l  %183 = icmp slt i64 %169, %182, !dbg !1210\l  br i1 %183, label %184, label %186, !dbg !1210\l|{<s0>T|<s1>F}}"];
	Node0xc3d9b0:s0 -> Node0xc3da00;
	Node0xc3d9b0:s1 -> Node0xc3da50;
	Node0xc3da00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%184:\l184:                                              \l  %185 = load i64, i64* %23, align 8, !dbg !1210, !tbaa !1060\l  br label %200, !dbg !1210\l}"];
	Node0xc3da00 -> Node0xc3db90;
	Node0xc3da50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%186:\l186:                                              \l  %187 = load i64, i64* %16, align 8, !dbg !1210, !tbaa !1060\l  %188 = sub nsw i64 %187, 1, !dbg !1210\l  %189 = load i64, i64* %17, align 8, !dbg !1210, !tbaa !1060\l  %190 = sub nsw i64 %188, %189, !dbg !1210\l  %191 = icmp sgt i64 0, %190, !dbg !1210\l  br i1 %191, label %192, label %193, !dbg !1210\l|{<s0>T|<s1>F}}"];
	Node0xc3da50:s0 -> Node0xc3daa0;
	Node0xc3da50:s1 -> Node0xc3daf0;
	Node0xc3daa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%192:\l192:                                              \l  br label %198, !dbg !1210\l}"];
	Node0xc3daa0 -> Node0xc3db40;
	Node0xc3daf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%193:\l193:                                              \l  %194 = load i64, i64* %16, align 8, !dbg !1210, !tbaa !1060\l  %195 = sub nsw i64 %194, 1, !dbg !1210\l  %196 = load i64, i64* %17, align 8, !dbg !1210, !tbaa !1060\l  %197 = sub nsw i64 %195, %196, !dbg !1210\l  br label %198, !dbg !1210\l}"];
	Node0xc3daf0 -> Node0xc3db40;
	Node0xc3db40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%198:\l198:                                              \l  %199 = phi i64 [ 0, %192 ], [ %197, %193 ], !dbg !1210\l  br label %200, !dbg !1210\l}"];
	Node0xc3db40 -> Node0xc3db90;
	Node0xc3db90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%200:\l200:                                              \l  %201 = phi i64 [ %185, %184 ], [ %199, %198 ], !dbg !1210\l  store i64 %201, i64* %27, align 8, !dbg !1209, !tbaa !1060\l  %202 = bitcast i8** %28 to i8*, !dbg !1211\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %202) #25, !dbg !1211\l  call void @llvm.dbg.declare(metadata i8** %28, metadata !1059, metadata\l... !DIExpression()), !dbg !1212\l  %203 = load i8*, i8** %21, align 8, !dbg !1213, !tbaa !1066\l  %204 = load i64, i64* %27, align 8, !dbg !1214, !tbaa !1060\l  %205 = getelementptr inbounds i8, i8* %203, i64 %204, !dbg !1215\l  %206 = load i32, i32* @eolchar, align 4, !dbg !1216, !tbaa !1148\l  %207 = load i64, i64* %23, align 8, !dbg !1217, !tbaa !1060\l  %208 = load i64, i64* %27, align 8, !dbg !1218, !tbaa !1060\l  %209 = sub nsw i64 %207, %208, !dbg !1219\l  %210 = call i8* @memchr(i8* noundef %205, i32 noundef %206, i64 noundef\l... %209) #27, !dbg !1220\l  store i8* %210, i8** %28, align 8, !dbg !1212, !tbaa !1066\l  %211 = load i8*, i8** %28, align 8, !dbg !1221, !tbaa !1066\l  %212 = icmp ne i8* %211, null, !dbg !1221\l  br i1 %212, label %213, label %216, !dbg !1223\l|{<s0>T|<s1>F}}"];
	Node0xc3db90:s0 -> Node0xc3dbe0;
	Node0xc3db90:s1 -> Node0xc3dc30;
	Node0xc3dbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%213:\l213:                                              \l  %214 = load i8*, i8** %28, align 8, !dbg !1224, !tbaa !1066\l  %215 = getelementptr inbounds i8, i8* %214, i32 1, !dbg !1224\l  store i8* %215, i8** %28, align 8, !dbg !1224, !tbaa !1066\l  store i8 1, i8* %26, align 1, !dbg !1226, !tbaa !1099\l  br label %218, !dbg !1227\l}"];
	Node0xc3dbe0 -> Node0xc3dc80;
	Node0xc3dc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%216:\l216:                                              \l  %217 = load i8*, i8** %22, align 8, !dbg !1228, !tbaa !1066\l  store i8* %217, i8** %28, align 8, !dbg !1229, !tbaa !1066\l  br label %218\l}"];
	Node0xc3dc30 -> Node0xc3dc80;
	Node0xc3dc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%218:\l218:                                              \l  %219 = load i8*, i8** %28, align 8, !dbg !1230, !tbaa !1066\l  %220 = load i8*, i8** %21, align 8, !dbg !1231, !tbaa !1066\l  %221 = ptrtoint i8* %219 to i64, !dbg !1232\l  %222 = ptrtoint i8* %220 to i64, !dbg !1232\l  %223 = sub i64 %221, %222, !dbg !1232\l  store i64 %223, i64* %25, align 8, !dbg !1233, !tbaa !1060\l  %224 = load i64, i64* %7, align 8, !dbg !1234, !tbaa !1060\l  %225 = load i64, i64* %15, align 8, !dbg !1236, !tbaa !1060\l  %226 = icmp eq i64 %224, %225, !dbg !1237\l  br i1 %226, label %227, label %235, !dbg !1238\l|{<s0>T|<s1>F}}"];
	Node0xc3dc80:s0 -> Node0xc3dcd0;
	Node0xc3dc80:s1 -> Node0xc3ddc0;
	Node0xc3dcd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%227:\l227:                                              \l  %228 = load i8*, i8** %21, align 8, !dbg !1239, !tbaa !1066\l  %229 = load i64, i64* %25, align 8, !dbg !1242, !tbaa !1060\l  %230 = call i64 @full_write(i32 noundef 1, i8* noundef %228, i64 noundef\l... %229), !dbg !1243\l  %231 = load i64, i64* %25, align 8, !dbg !1244, !tbaa !1060\l  %232 = icmp ne i64 %230, %231, !dbg !1245\l  br i1 %232, label %233, label %234, !dbg !1246\l|{<s0>T|<s1>F}}"];
	Node0xc3dcd0:s0 -> Node0xc3dd20;
	Node0xc3dcd0:s1 -> Node0xc3dd70;
	Node0xc3dd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%233:\l233:                                              \l  call void @write_error(), !dbg !1247\l  br label %234, !dbg !1247\l}"];
	Node0xc3dd20 -> Node0xc3dd70;
	Node0xc3dd70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%234:\l234:                                              \l  br label %245, !dbg !1248\l}"];
	Node0xc3dd70 -> Node0xc3deb0;
	Node0xc3ddc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%235:\l235:                                              \l  %236 = load i64, i64* %7, align 8, !dbg !1249, !tbaa !1060\l  %237 = icmp ne i64 %236, 0, !dbg !1249\l  br i1 %237, label %244, label %238, !dbg !1251\l|{<s0>T|<s1>F}}"];
	Node0xc3ddc0:s0 -> Node0xc3de60;
	Node0xc3ddc0:s1 -> Node0xc3de10;
	Node0xc3de10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%238:\l238:                                              \l  %239 = load i8, i8* %18, align 1, !dbg !1252, !tbaa !1099, !range !1253\l  %240 = trunc i8 %239 to i1, !dbg !1252\l  %241 = load i8*, i8** %21, align 8, !dbg !1254, !tbaa !1066\l  %242 = load i64, i64* %25, align 8, !dbg !1255, !tbaa !1060\l  %243 = call zeroext i1 @cwrite(i1 noundef zeroext %240, i8* noundef %241,\l... i64 noundef %242), !dbg !1256\l  br label %244, !dbg !1256\l}"];
	Node0xc3de10 -> Node0xc3de60;
	Node0xc3de60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%244:\l244:                                              \l  br label %245\l}"];
	Node0xc3de60 -> Node0xc3deb0;
	Node0xc3deb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%245:\l245:                                              \l  %246 = load i64, i64* %25, align 8, !dbg !1257, !tbaa !1060\l  %247 = load i64, i64* %17, align 8, !dbg !1258, !tbaa !1060\l  %248 = add nsw i64 %247, %246, !dbg !1258\l  store i64 %248, i64* %17, align 8, !dbg !1258, !tbaa !1060\l  %249 = load i64, i64* %25, align 8, !dbg !1259, !tbaa !1060\l  %250 = load i8*, i8** %21, align 8, !dbg !1260, !tbaa !1066\l  %251 = getelementptr inbounds i8, i8* %250, i64 %249, !dbg !1260\l  store i8* %251, i8** %21, align 8, !dbg !1260, !tbaa !1066\l  %252 = load i64, i64* %25, align 8, !dbg !1261, !tbaa !1060\l  %253 = load i64, i64* %23, align 8, !dbg !1262, !tbaa !1060\l  %254 = sub nsw i64 %253, %252, !dbg !1262\l  store i64 %254, i64* %23, align 8, !dbg !1262, !tbaa !1060\l  %255 = load i8, i8* %26, align 1, !dbg !1263, !tbaa !1099, !range !1253\l  %256 = trunc i8 %255 to i1, !dbg !1263\l  %257 = zext i1 %256 to i8, !dbg !1264\l  store i8 %257, i8* %18, align 1, !dbg !1264, !tbaa !1099\l  br label %258, !dbg !1265\l}"];
	Node0xc3deb0 -> Node0xc3df00;
	Node0xc3df00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%258:\l258:                                              \l  %259 = load i8, i8* %26, align 1, !dbg !1266, !tbaa !1099, !range !1253\l  %260 = trunc i8 %259 to i1, !dbg !1266\l  br i1 %260, label %265, label %261, !dbg !1267\l|{<s0>T|<s1>F}}"];
	Node0xc3df00:s0 -> Node0xc3dfa0;
	Node0xc3df00:s1 -> Node0xc3df50;
	Node0xc3df50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%261:\l261:                                              \l  %262 = load i64, i64* %16, align 8, !dbg !1268, !tbaa !1060\l  %263 = load i64, i64* %17, align 8, !dbg !1269, !tbaa !1060\l  %264 = icmp sle i64 %262, %263, !dbg !1270\l  br label %265, !dbg !1267\l}"];
	Node0xc3df50 -> Node0xc3dfa0;
	Node0xc3dfa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%265:\l265:                                              \l  %266 = phi i1 [ true, %258 ], [ %264, %261 ]\l  br i1 %266, label %267, label %303, !dbg !1265\l|{<s0>T|<s1>F}}"];
	Node0xc3dfa0:s0 -> Node0xc3dff0;
	Node0xc3dfa0:s1 -> Node0xc3e360;
	Node0xc3dff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%267:\l267:                                              \l  %268 = load i8, i8* %26, align 1, !dbg !1271, !tbaa !1099, !range !1253\l  %269 = trunc i8 %268 to i1, !dbg !1271\l  br i1 %269, label %275, label %270, !dbg !1274\l|{<s0>T|<s1>F}}"];
	Node0xc3dff0:s0 -> Node0xc3e0e0;
	Node0xc3dff0:s1 -> Node0xc3e040;
	Node0xc3e040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%270:\l270:                                              \l  %271 = load i8*, i8** %21, align 8, !dbg !1275, !tbaa !1066\l  %272 = load i8*, i8** %22, align 8, !dbg !1276, !tbaa !1066\l  %273 = icmp eq i8* %271, %272, !dbg !1277\l  br i1 %273, label %274, label %275, !dbg !1278\l|{<s0>T|<s1>F}}"];
	Node0xc3e040:s0 -> Node0xc3e090;
	Node0xc3e040:s1 -> Node0xc3e0e0;
	Node0xc3e090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%274:\l274:                                              \l  store i8 1, i8* %19, align 1, !dbg !1279, !tbaa !1099\l  br label %303, !dbg !1281\l}"];
	Node0xc3e090 -> Node0xc3e360;
	Node0xc3e0e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%275:\l275:                                              \l  %276 = load i64, i64* %7, align 8, !dbg !1282, !tbaa !1060\l  %277 = load i64, i64* %15, align 8, !dbg !1284, !tbaa !1060\l  %278 = icmp eq i64 %276, %277, !dbg !1285\l  br i1 %278, label %279, label %280, !dbg !1286\l|{<s0>T|<s1>F}}"];
	Node0xc3e0e0:s0 -> Node0xc3e130;
	Node0xc3e0e0:s1 -> Node0xc3e180;
	Node0xc3e130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%279:\l279:                                              \l  store i32 1, i32* %24, align 4\l  br label %304, !dbg !1287\l}"];
	Node0xc3e130 -> Node0xc3e3b0;
	Node0xc3e180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%280:\l280:                                              \l  %281 = load i64, i64* %14, align 8, !dbg !1288, !tbaa !1060\l  %282 = load i64, i64* %15, align 8, !dbg !1289, !tbaa !1060\l  %283 = load i64, i64* %13, align 8, !dbg !1290, !tbaa !1060\l  %284 = icmp slt i64 %282, %283, !dbg !1291\l  %285 = zext i1 %284 to i32, !dbg !1291\l  %286 = sext i32 %285 to i64, !dbg !1292\l  %287 = add nsw i64 %281, %286, !dbg !1293\l  %288 = load i64, i64* %16, align 8, !dbg !1294, !tbaa !1060\l  %289 = add nsw i64 %288, %287, !dbg !1294\l  store i64 %289, i64* %16, align 8, !dbg !1294, !tbaa !1060\l  %290 = load i64, i64* %15, align 8, !dbg !1295, !tbaa !1060\l  %291 = add nsw i64 %290, 1, !dbg !1295\l  store i64 %291, i64* %15, align 8, !dbg !1295, !tbaa !1060\l  %292 = load i64, i64* %16, align 8, !dbg !1296, !tbaa !1060\l  %293 = load i64, i64* %17, align 8, !dbg !1298, !tbaa !1060\l  %294 = icmp sle i64 %292, %293, !dbg !1299\l  br i1 %294, label %295, label %301, !dbg !1300\l|{<s0>T|<s1>F}}"];
	Node0xc3e180:s0 -> Node0xc3e1d0;
	Node0xc3e180:s1 -> Node0xc3e2c0;
	Node0xc3e1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%295:\l295:                                              \l  %296 = load i64, i64* %7, align 8, !dbg !1301, !tbaa !1060\l  %297 = icmp ne i64 %296, 0, !dbg !1301\l  br i1 %297, label %300, label %298, !dbg !1304\l|{<s0>T|<s1>F}}"];
	Node0xc3e1d0:s0 -> Node0xc3e270;
	Node0xc3e1d0:s1 -> Node0xc3e220;
	Node0xc3e220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%298:\l298:                                              \l  %299 = call zeroext i1 @cwrite(i1 noundef zeroext true, i8* noundef null,\l... i64 noundef 0), !dbg !1305\l  br label %300, !dbg !1305\l}"];
	Node0xc3e220 -> Node0xc3e270;
	Node0xc3e270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%300:\l300:                                              \l  br label %302, !dbg !1306\l}"];
	Node0xc3e270 -> Node0xc3e310;
	Node0xc3e2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%301:\l301:                                              \l  store i8 0, i8* %26, align 1, !dbg !1307, !tbaa !1099\l  br label %302\l}"];
	Node0xc3e2c0 -> Node0xc3e310;
	Node0xc3e310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%302:\l302:                                              \l  br label %258, !dbg !1265, !llvm.loop !1308\l}"];
	Node0xc3e310 -> Node0xc3df00;
	Node0xc3e360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%303:\l303:                                              \l  store i32 0, i32* %24, align 4, !dbg !1312\l  br label %304, !dbg !1312\l}"];
	Node0xc3e360 -> Node0xc3e3b0;
	Node0xc3e3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%304:\l304:                                              \l  %305 = bitcast i8** %28 to i8*, !dbg !1312\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %305) #25, !dbg !1312\l  %306 = bitcast i64* %27 to i8*, !dbg !1312\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %306) #25, !dbg !1312\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %26) #25, !dbg !1312\l  %307 = bitcast i64* %25 to i8*, !dbg !1312\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %307) #25, !dbg !1312\l  %308 = load i32, i32* %24, align 4\l  switch i32 %308, label %311 [\l    i32 0, label %309\l  ]\l|{<s0>def|<s1>0}}"];
	Node0xc3e3b0:s0 -> Node0xc3e4a0;
	Node0xc3e3b0:s1 -> Node0xc3e400;
	Node0xc3e400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%309:\l309:                                              \l  br label %162, !dbg !1200, !llvm.loop !1313\l}"];
	Node0xc3e400 -> Node0xc3d870;
	Node0xc3e450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%310:\l310:                                              \l  store i32 0, i32* %24, align 4, !dbg !1314\l  br label %311, !dbg !1314\l}"];
	Node0xc3e450 -> Node0xc3e4a0;
	Node0xc3e4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%311:\l311:                                              \l  %312 = bitcast i64* %23 to i8*, !dbg !1314\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %312) #25, !dbg !1314\l  %313 = bitcast i8** %22 to i8*, !dbg !1314\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %313) #25, !dbg !1314\l  %314 = bitcast i8** %21 to i8*, !dbg !1314\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %314) #25, !dbg !1314\l  %315 = load i32, i32* %24, align 4\l  switch i32 %315, label %336 [\l    i32 0, label %316\l    i32 3, label %317\l  ]\l|{<s0>def|<s1>0|<s2>3}}"];
	Node0xc3e4a0:s0 -> Node0xc3e7c0;
	Node0xc3e4a0:s1 -> Node0xc3e4f0;
	Node0xc3e4a0:s2 -> Node0xc3e540;
	Node0xc3e4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%316:\l316:                                              \l  br label %117, !dbg !1161, !llvm.loop !1315\l}"];
	Node0xc3e4f0 -> Node0xc3d4b0;
	Node0xc3e540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%317:\l317:                                              \l  %318 = load i8, i8* %19, align 1, !dbg !1316, !tbaa !1099, !range !1253\l  %319 = trunc i8 %318 to i1, !dbg !1316\l  br i1 %319, label %320, label %323, !dbg !1318\l|{<s0>T|<s1>F}}"];
	Node0xc3e540:s0 -> Node0xc3e590;
	Node0xc3e540:s1 -> Node0xc3e5e0;
	Node0xc3e590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%320:\l320:                                              \l  %321 = load i64, i64* %15, align 8, !dbg !1319, !tbaa !1060\l  %322 = add nsw i64 %321, 1, !dbg !1319\l  store i64 %322, i64* %15, align 8, !dbg !1319, !tbaa !1060\l  br label %323, !dbg !1320\l}"];
	Node0xc3e590 -> Node0xc3e5e0;
	Node0xc3e5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%323:\l323:                                              \l  %324 = load i64, i64* %7, align 8, !dbg !1321, !tbaa !1060\l  %325 = icmp ne i64 %324, 0, !dbg !1321\l  br i1 %325, label %335, label %326, !dbg !1323\l|{<s0>T|<s1>F}}"];
	Node0xc3e5e0:s0 -> Node0xc3e770;
	Node0xc3e5e0:s1 -> Node0xc3e630;
	Node0xc3e630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%326:\l326:                                              \l  br label %327, !dbg !1324\l}"];
	Node0xc3e630 -> Node0xc3e680;
	Node0xc3e680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%327:\l327:                                              \l  %328 = load i64, i64* %15, align 8, !dbg !1325, !tbaa !1060\l  %329 = add nsw i64 %328, 1, !dbg !1325\l  store i64 %329, i64* %15, align 8, !dbg !1325, !tbaa !1060\l  %330 = load i64, i64* %8, align 8, !dbg !1326, !tbaa !1060\l  %331 = icmp sle i64 %328, %330, !dbg !1327\l  br i1 %331, label %332, label %334, !dbg !1324\l|{<s0>T|<s1>F}}"];
	Node0xc3e680:s0 -> Node0xc3e6d0;
	Node0xc3e680:s1 -> Node0xc3e720;
	Node0xc3e6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%332:\l332:                                              \l  %333 = call zeroext i1 @cwrite(i1 noundef zeroext true, i8* noundef null,\l... i64 noundef 0), !dbg !1328\l  br label %327, !dbg !1324, !llvm.loop !1329\l}"];
	Node0xc3e6d0 -> Node0xc3e680;
	Node0xc3e720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%334:\l334:                                              \l  br label %335, !dbg !1324\l}"];
	Node0xc3e720 -> Node0xc3e770;
	Node0xc3e770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%335:\l335:                                              \l  store i32 0, i32* %24, align 4, !dbg !1331\l  br label %336, !dbg !1331\l}"];
	Node0xc3e770 -> Node0xc3e7c0;
	Node0xc3e7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%336:\l336:                                              \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #25, !dbg !1331\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #25, !dbg !1331\l  %337 = bitcast i64* %17 to i8*, !dbg !1331\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %337) #25, !dbg !1331\l  %338 = bitcast i64* %16 to i8*, !dbg !1331\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %338) #25, !dbg !1331\l  %339 = bitcast i64* %15 to i8*, !dbg !1331\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %339) #25, !dbg !1331\l  %340 = bitcast i64* %14 to i8*, !dbg !1331\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %340) #25, !dbg !1331\l  %341 = bitcast i64* %13 to i8*, !dbg !1331\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %341) #25, !dbg !1331\l  %342 = load i32, i32* %24, align 4\l  switch i32 %342, label %344 [\l    i32 0, label %343\l    i32 1, label %343\l  ]\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0xc3e7c0:s0 -> Node0xc3e860;
	Node0xc3e7c0:s1 -> Node0xc3e810;
	Node0xc3e7c0:s2 -> Node0xc3e810;
	Node0xc3e810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%343:\l343:                                              \l  ret void, !dbg !1331\l}"];
	Node0xc3e860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%344:\l344:                                              \l  unreachable\l}"];
}
