digraph "CFG for 'bytes_chunk_extract' function" {
	label="CFG for 'bytes_chunk_extract' function";

	Node0xc27ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%6:\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i8*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i32, align 4\l  store i64 %0, i64* %7, align 8, !tbaa !1045\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1035, metadata\l... !DIExpression()), !dbg !1049\l  store i64 %1, i64* %8, align 8, !tbaa !1045\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1036, metadata\l... !DIExpression()), !dbg !1050\l  store i8* %2, i8** %9, align 8, !tbaa !1051\l  call void @llvm.dbg.declare(metadata i8** %9, metadata !1037, metadata\l... !DIExpression()), !dbg !1053\l  store i64 %3, i64* %10, align 8, !tbaa !1045\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1038, metadata\l... !DIExpression()), !dbg !1054\l  store i64 %4, i64* %11, align 8, !tbaa !1045\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1039, metadata\l... !DIExpression()), !dbg !1055\l  store i64 %5, i64* %12, align 8, !tbaa !1045\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1040, metadata\l... !DIExpression()), !dbg !1056\l  %17 = bitcast i64* %13 to i8*, !dbg !1057\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #24, !dbg !1057\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !1041, metadata\l... !DIExpression()), !dbg !1058\l  %18 = bitcast i64* %14 to i8*, !dbg !1059\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #24, !dbg !1059\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !1042, metadata\l... !DIExpression()), !dbg !1060\l  %19 = load i64, i64* %7, align 8, !dbg !1061, !tbaa !1045\l  %20 = icmp slt i64 0, %19, !dbg !1061\l  br i1 %20, label %21, label %26, !dbg !1061\l|{<s0>T|<s1>F}}"];
	Node0xc27ba0:s0 -> Node0xbe47f0;
	Node0xc27ba0:s1 -> Node0xbe4890;
	Node0xbe47f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%21:\l21:                                               \l  %22 = load i64, i64* %7, align 8, !dbg !1061, !tbaa !1045\l  %23 = load i64, i64* %8, align 8, !dbg !1061, !tbaa !1045\l  %24 = icmp sle i64 %22, %23, !dbg !1061\l  br i1 %24, label %25, label %26, !dbg !1064\l|{<s0>T|<s1>F}}"];
	Node0xbe47f0:s0 -> Node0xbe4840;
	Node0xbe47f0:s1 -> Node0xbe4890;
	Node0xbe4840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%25:\l25:                                               \l  br label %27, !dbg !1064\l}"];
	Node0xbe4840 -> Node0xbe48e0;
	Node0xbe4890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%26:\l26:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([16 x i8], [16\l... x i8]* @.str.103, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x\l... i8], [15 x i8]* @.str.41, i64 0, i64 0), i32 noundef 1014, i8* noundef\l... getelementptr inbounds ([76 x i8], [76 x i8]*\l... @__PRETTY_FUNCTION__.bytes_chunk_extract, i64 0, i64 0)) #25, !dbg !1061\l  unreachable, !dbg !1061\l}"];
	Node0xbe48e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%27:\l27:                                               \l  %28 = load i64, i64* %7, align 8, !dbg !1065, !tbaa !1045\l  %29 = sub nsw i64 %28, 1, !dbg !1066\l  %30 = load i64, i64* %12, align 8, !dbg !1067, !tbaa !1045\l  %31 = load i64, i64* %8, align 8, !dbg !1068, !tbaa !1045\l  %32 = sdiv i64 %30, %31, !dbg !1069\l  %33 = mul nsw i64 %29, %32, !dbg !1070\l  %34 = load i64, i64* %7, align 8, !dbg !1071, !tbaa !1045\l  %35 = sub nsw i64 %34, 1, !dbg !1071\l  %36 = load i64, i64* %12, align 8, !dbg !1071, !tbaa !1045\l  %37 = load i64, i64* %8, align 8, !dbg !1071, !tbaa !1045\l  %38 = srem i64 %36, %37, !dbg !1071\l  %39 = icmp slt i64 %35, %38, !dbg !1071\l  br i1 %39, label %40, label %43, !dbg !1071\l|{<s0>T|<s1>F}}"];
	Node0xbe48e0:s0 -> Node0xbe4930;
	Node0xbe48e0:s1 -> Node0xbe4980;
	Node0xbe4930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%40:\l40:                                               \l  %41 = load i64, i64* %7, align 8, !dbg !1071, !tbaa !1045\l  %42 = sub nsw i64 %41, 1, !dbg !1071\l  br label %47, !dbg !1071\l}"];
	Node0xbe4930 -> Node0xbe49d0;
	Node0xbe4980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%43:\l43:                                               \l  %44 = load i64, i64* %12, align 8, !dbg !1071, !tbaa !1045\l  %45 = load i64, i64* %8, align 8, !dbg !1071, !tbaa !1045\l  %46 = srem i64 %44, %45, !dbg !1071\l  br label %47, !dbg !1071\l}"];
	Node0xbe4980 -> Node0xbe49d0;
	Node0xbe49d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%47:\l47:                                               \l  %48 = phi i64 [ %42, %40 ], [ %46, %43 ], !dbg !1071\l  %49 = add nsw i64 %33, %48, !dbg !1072\l  store i64 %49, i64* %13, align 8, !dbg !1073, !tbaa !1045\l  %50 = load i64, i64* %7, align 8, !dbg !1074, !tbaa !1045\l  %51 = load i64, i64* %8, align 8, !dbg !1075, !tbaa !1045\l  %52 = icmp eq i64 %50, %51, !dbg !1076\l  br i1 %52, label %53, label %55, !dbg !1074\l|{<s0>T|<s1>F}}"];
	Node0xbe49d0:s0 -> Node0xbe4a20;
	Node0xbe49d0:s1 -> Node0xbe4a70;
	Node0xbe4a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%53:\l53:                                               \l  %54 = load i64, i64* %12, align 8, !dbg !1077, !tbaa !1045\l  br label %75, !dbg !1074\l}"];
	Node0xbe4a20 -> Node0xbe4bb0;
	Node0xbe4a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%55:\l55:                                               \l  %56 = load i64, i64* %7, align 8, !dbg !1078, !tbaa !1045\l  %57 = load i64, i64* %12, align 8, !dbg !1079, !tbaa !1045\l  %58 = load i64, i64* %8, align 8, !dbg !1080, !tbaa !1045\l  %59 = sdiv i64 %57, %58, !dbg !1081\l  %60 = mul nsw i64 %56, %59, !dbg !1082\l  %61 = load i64, i64* %7, align 8, !dbg !1083, !tbaa !1045\l  %62 = load i64, i64* %12, align 8, !dbg !1083, !tbaa !1045\l  %63 = load i64, i64* %8, align 8, !dbg !1083, !tbaa !1045\l  %64 = srem i64 %62, %63, !dbg !1083\l  %65 = icmp slt i64 %61, %64, !dbg !1083\l  br i1 %65, label %66, label %68, !dbg !1083\l|{<s0>T|<s1>F}}"];
	Node0xbe4a70:s0 -> Node0xbe4ac0;
	Node0xbe4a70:s1 -> Node0xbe4b10;
	Node0xbe4ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%66:\l66:                                               \l  %67 = load i64, i64* %7, align 8, !dbg !1083, !tbaa !1045\l  br label %72, !dbg !1083\l}"];
	Node0xbe4ac0 -> Node0xbe4b60;
	Node0xbe4b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%68:\l68:                                               \l  %69 = load i64, i64* %12, align 8, !dbg !1083, !tbaa !1045\l  %70 = load i64, i64* %8, align 8, !dbg !1083, !tbaa !1045\l  %71 = srem i64 %69, %70, !dbg !1083\l  br label %72, !dbg !1083\l}"];
	Node0xbe4b10 -> Node0xbe4b60;
	Node0xbe4b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%72:\l72:                                               \l  %73 = phi i64 [ %67, %66 ], [ %71, %68 ], !dbg !1083\l  %74 = add nsw i64 %60, %73, !dbg !1084\l  br label %75, !dbg !1074\l}"];
	Node0xbe4b60 -> Node0xbe4bb0;
	Node0xbe4bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%75:\l75:                                               \l  %76 = phi i64 [ %54, %53 ], [ %74, %72 ], !dbg !1074\l  store i64 %76, i64* %14, align 8, !dbg !1085, !tbaa !1045\l  %77 = load i64, i64* %13, align 8, !dbg !1086, !tbaa !1045\l  %78 = load i64, i64* %11, align 8, !dbg !1088, !tbaa !1045\l  %79 = icmp slt i64 %77, %78, !dbg !1089\l  br i1 %79, label %80, label %91, !dbg !1090\l|{<s0>T|<s1>F}}"];
	Node0xbe4bb0:s0 -> Node0xbe4c00;
	Node0xbe4bb0:s1 -> Node0xbe4c50;
	Node0xbe4c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%80:\l80:                                               \l  %81 = load i8*, i8** %9, align 8, !dbg !1091, !tbaa !1051\l  %82 = load i8*, i8** %9, align 8, !dbg !1093, !tbaa !1051\l  %83 = load i64, i64* %13, align 8, !dbg !1094, !tbaa !1045\l  %84 = getelementptr inbounds i8, i8* %82, i64 %83, !dbg !1095\l  %85 = load i64, i64* %11, align 8, !dbg !1096, !tbaa !1045\l  %86 = load i64, i64* %13, align 8, !dbg !1097, !tbaa !1045\l  %87 = sub nsw i64 %85, %86, !dbg !1098\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %84, i64\l... %87, i1 false), !dbg !1099\l  %88 = load i64, i64* %13, align 8, !dbg !1100, !tbaa !1045\l  %89 = load i64, i64* %11, align 8, !dbg !1101, !tbaa !1045\l  %90 = sub nsw i64 %89, %88, !dbg !1101\l  store i64 %90, i64* %11, align 8, !dbg !1101, !tbaa !1045\l  br label %107, !dbg !1102\l}"];
	Node0xbe4c00 -> Node0xbe4d90;
	Node0xbe4c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%91:\l91:                                               \l  %92 = load i64, i64* %11, align 8, !dbg !1103, !tbaa !1045\l  %93 = load i64, i64* %13, align 8, !dbg !1106, !tbaa !1045\l  %94 = icmp slt i64 %92, %93, !dbg !1107\l  br i1 %94, label %95, label %106, !dbg !1108\l|{<s0>T|<s1>F}}"];
	Node0xbe4c50:s0 -> Node0xbe4ca0;
	Node0xbe4c50:s1 -> Node0xbe4d40;
	Node0xbe4ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%95:\l95:                                               \l  %96 = load i64, i64* %13, align 8, !dbg !1109, !tbaa !1045\l  %97 = load i64, i64* %11, align 8, !dbg !1110, !tbaa !1045\l  %98 = sub nsw i64 %96, %97, !dbg !1111\l  %99 = call i64 @lseek(i32 noundef 0, i64 noundef %98, i32 noundef 1) #24,\l... !dbg !1112\l  %100 = icmp slt i64 %99, 0, !dbg !1113\l  br i1 %100, label %101, label %106, !dbg !1114\l|{<s0>T|<s1>F}}"];
	Node0xbe4ca0:s0 -> Node0xbe4cf0;
	Node0xbe4ca0:s1 -> Node0xbe4d40;
	Node0xbe4cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#536edd70",label="{%101:\l101:                                              \l  %102 = call i32* @__errno_location() #26, !dbg !1115\l  %103 = load i32, i32* %102, align 4, !dbg !1115, !tbaa !1116\l  %104 = load i8*, i8** @infile, align 8, !dbg !1115, !tbaa !1051\l  %105 = call i8* @quotearg_n_style_colon(i32 noundef 0, i32 noundef 3, i8*\l... noundef %104), !dbg !1115\l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef %103, i8*\l... noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0),\l... i8* noundef %105), !dbg !1115\l  unreachable, !dbg !1115\l}"];
	Node0xbe4d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%106:\l106:                                              \l  store i64 -1, i64* %11, align 8, !dbg !1118, !tbaa !1045\l  br label %107\l}"];
	Node0xbe4d40 -> Node0xbe4d90;
	Node0xbe4d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%107:\l107:                                              \l  br label %108, !dbg !1119\l}"];
	Node0xbe4d90 -> Node0xbe4de0;
	Node0xbe4de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%108:\l108:                                              \l  %109 = load i64, i64* %13, align 8, !dbg !1120, !tbaa !1045\l  %110 = load i64, i64* %14, align 8, !dbg !1121, !tbaa !1045\l  %111 = icmp slt i64 %109, %110, !dbg !1122\l  br i1 %111, label %112, label %169, !dbg !1119\l|{<s0>T|<s1>F}}"];
	Node0xbe4de0:s0 -> Node0xbe4e30;
	Node0xbe4de0:s1 -> Node0xbe5330;
	Node0xbe4e30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%112:\l112:                                              \l  %113 = bitcast i64* %15 to i8*, !dbg !1123\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %113) #24, !dbg !1123\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !1043, metadata\l... !DIExpression()), !dbg !1124\l  %114 = load i64, i64* %11, align 8, !dbg !1125, !tbaa !1045\l  %115 = icmp sle i64 0, %114, !dbg !1127\l  br i1 %115, label %116, label %118, !dbg !1128\l|{<s0>T|<s1>F}}"];
	Node0xbe4e30:s0 -> Node0xbe4e80;
	Node0xbe4e30:s1 -> Node0xbe4ed0;
	Node0xbe4e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%116:\l116:                                              \l  %117 = load i64, i64* %11, align 8, !dbg !1129, !tbaa !1045\l  store i64 %117, i64* %15, align 8, !dbg !1131, !tbaa !1045\l  store i64 -1, i64* %11, align 8, !dbg !1132, !tbaa !1045\l  br label %130, !dbg !1133\l}"];
	Node0xbe4e80 -> Node0xbe4fc0;
	Node0xbe4ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%118:\l118:                                              \l  %119 = load i8*, i8** %9, align 8, !dbg !1134, !tbaa !1051\l  %120 = load i64, i64* %10, align 8, !dbg !1136, !tbaa !1045\l  %121 = call i64 @read(i32 noundef 0, i8* noundef %119, i64 noundef %120),\l... !dbg !1137\l  store i64 %121, i64* %15, align 8, !dbg !1138, !tbaa !1045\l  %122 = load i64, i64* %15, align 8, !dbg !1139, !tbaa !1045\l  %123 = icmp slt i64 %122, 0, !dbg !1141\l  br i1 %123, label %124, label %129, !dbg !1142\l|{<s0>T|<s1>F}}"];
	Node0xbe4ed0:s0 -> Node0xbe4f20;
	Node0xbe4ed0:s1 -> Node0xbe4f70;
	Node0xbe4f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%124:\l124:                                              \l  %125 = call i32* @__errno_location() #26, !dbg !1143\l  %126 = load i32, i32* %125, align 4, !dbg !1143, !tbaa !1116\l  %127 = load i8*, i8** @infile, align 8, !dbg !1143, !tbaa !1051\l  %128 = call i8* @quotearg_n_style_colon(i32 noundef 0, i32 noundef 3, i8*\l... noundef %127), !dbg !1143\l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef %126, i8*\l... noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0),\l... i8* noundef %128), !dbg !1143\l  unreachable, !dbg !1143\l}"];
	Node0xbe4f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%129:\l129:                                              \l  br label %130\l}"];
	Node0xbe4f70 -> Node0xbe4fc0;
	Node0xbe4fc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%130:\l130:                                              \l  %131 = load i64, i64* %15, align 8, !dbg !1144, !tbaa !1045\l  %132 = icmp eq i64 %131, 0, !dbg !1146\l  br i1 %132, label %133, label %134, !dbg !1147\l|{<s0>T|<s1>F}}"];
	Node0xbe4fc0:s0 -> Node0xbe5010;
	Node0xbe4fc0:s1 -> Node0xbe5060;
	Node0xbe5010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%133:\l133:                                              \l  store i32 3, i32* %16, align 4\l  br label %165, !dbg !1148\l}"];
	Node0xbe5010 -> Node0xbe5290;
	Node0xbe5060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%134:\l134:                                              \l  %135 = load i64, i64* %15, align 8, !dbg !1149, !tbaa !1045\l  %136 = load i64, i64* %14, align 8, !dbg !1149, !tbaa !1045\l  %137 = load i64, i64* %13, align 8, !dbg !1149, !tbaa !1045\l  %138 = sub nsw i64 %136, %137, !dbg !1149\l  %139 = icmp slt i64 %135, %138, !dbg !1149\l  br i1 %139, label %140, label %142, !dbg !1149\l|{<s0>T|<s1>F}}"];
	Node0xbe5060:s0 -> Node0xbe50b0;
	Node0xbe5060:s1 -> Node0xbe5100;
	Node0xbe50b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%140:\l140:                                              \l  %141 = load i64, i64* %15, align 8, !dbg !1149, !tbaa !1045\l  br label %146, !dbg !1149\l}"];
	Node0xbe50b0 -> Node0xbe5150;
	Node0xbe5100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%142:\l142:                                              \l  %143 = load i64, i64* %14, align 8, !dbg !1149, !tbaa !1045\l  %144 = load i64, i64* %13, align 8, !dbg !1149, !tbaa !1045\l  %145 = sub nsw i64 %143, %144, !dbg !1149\l  br label %146, !dbg !1149\l}"];
	Node0xbe5100 -> Node0xbe5150;
	Node0xbe5150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%146:\l146:                                              \l  %147 = phi i64 [ %141, %140 ], [ %145, %142 ], !dbg !1149\l  store i64 %147, i64* %15, align 8, !dbg !1150, !tbaa !1045\l  %148 = load i8*, i8** %9, align 8, !dbg !1151, !tbaa !1051\l  %149 = load i64, i64* %15, align 8, !dbg !1153, !tbaa !1045\l  %150 = call i64 @full_write(i32 noundef 1, i8* noundef %148, i64 noundef\l... %149), !dbg !1154\l  %151 = load i64, i64* %15, align 8, !dbg !1155, !tbaa !1045\l  %152 = icmp ne i64 %150, %151, !dbg !1156\l  br i1 %152, label %153, label %161, !dbg !1157\l|{<s0>T|<s1>F}}"];
	Node0xbe5150:s0 -> Node0xbe51a0;
	Node0xbe5150:s1 -> Node0xbe5240;
	Node0xbe51a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%153:\l153:                                              \l  %154 = call i32* @__errno_location() #26, !dbg !1158\l  %155 = load i32, i32* %154, align 4, !dbg !1158, !tbaa !1116\l  %156 = call zeroext i1 @ignorable(i32 noundef %155), !dbg !1159\l  br i1 %156, label %161, label %157, !dbg !1160\l|{<s0>T|<s1>F}}"];
	Node0xbe51a0:s0 -> Node0xbe5240;
	Node0xbe51a0:s1 -> Node0xbe51f0;
	Node0xbe51f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%157:\l157:                                              \l  %158 = call i32* @__errno_location() #26, !dbg !1161\l  %159 = load i32, i32* %158, align 4, !dbg !1161, !tbaa !1116\l  %160 = call i8* @quotearg_n_style_colon(i32 noundef 0, i32 noundef 3, i8*\l... noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)),\l... !dbg !1161\l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef %159, i8*\l... noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0),\l... i8* noundef %160), !dbg !1161\l  unreachable, !dbg !1161\l}"];
	Node0xbe5240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%161:\l161:                                              \l  %162 = load i64, i64* %15, align 8, !dbg !1162, !tbaa !1045\l  %163 = load i64, i64* %13, align 8, !dbg !1163, !tbaa !1045\l  %164 = add nsw i64 %163, %162, !dbg !1163\l  store i64 %164, i64* %13, align 8, !dbg !1163, !tbaa !1045\l  store i32 0, i32* %16, align 4, !dbg !1164\l  br label %165, !dbg !1164\l}"];
	Node0xbe5240 -> Node0xbe5290;
	Node0xbe5290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%165:\l165:                                              \l  %166 = bitcast i64* %15 to i8*, !dbg !1164\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %166) #24, !dbg !1164\l  %167 = load i32, i32* %16, align 4\l  switch i32 %167, label %172 [\l    i32 0, label %168\l    i32 3, label %169\l  ]\l|{<s0>def|<s1>0|<s2>3}}"];
	Node0xbe5290:s0 -> Node0xbe5380;
	Node0xbe5290:s1 -> Node0xbe52e0;
	Node0xbe5290:s2 -> Node0xbe5330;
	Node0xbe52e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%168:\l168:                                              \l  br label %108, !dbg !1119, !llvm.loop !1165\l}"];
	Node0xbe52e0 -> Node0xbe4de0;
	Node0xbe5330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%169:\l169:                                              \l  %170 = bitcast i64* %14 to i8*, !dbg !1168\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %170) #24, !dbg !1168\l  %171 = bitcast i64* %13 to i8*, !dbg !1168\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %171) #24, !dbg !1168\l  ret void, !dbg !1168\l}"];
	Node0xbe5380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%172:\l172:                                              \l  unreachable\l}"];
}
