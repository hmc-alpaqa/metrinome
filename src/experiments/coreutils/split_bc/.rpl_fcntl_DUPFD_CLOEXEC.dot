digraph "CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function" {
	label="CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function";

	Node0xe3d000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4, !tbaa !1031\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !503, metadata\l... !DIExpression()), !dbg !1035\l  store i32 %1, i32* %4, align 4, !tbaa !1031\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !504, metadata\l... !DIExpression()), !dbg !1036\l  %8 = bitcast i32* %5 to i8*, !dbg !1037\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #24, !dbg !1037\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !505, metadata\l... !DIExpression()), !dbg !1038\l  %9 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1039, !tbaa !1031\l  %10 = icmp sle i32 0, %9, !dbg !1041\l  br i1 %10, label %11, label %31, !dbg !1042\l|{<s0>T|<s1>F}}"];
	Node0xe3d000:s0 -> Node0xe3e240;
	Node0xe3d000:s1 -> Node0xe3e470;
	Node0xe3e240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%11:\l11:                                               \l  %12 = load i32, i32* %3, align 4, !dbg !1043, !tbaa !1031\l  %13 = load i32, i32* %4, align 4, !dbg !1045, !tbaa !1031\l  %14 = call i32 (i32, i32, ...) @fcntl(i32 noundef %12, i32 noundef 1030, i32\l... noundef %13), !dbg !1046\l  store i32 %14, i32* %5, align 4, !dbg !1047, !tbaa !1031\l  %15 = load i32, i32* %5, align 4, !dbg !1048, !tbaa !1031\l  %16 = icmp sle i32 0, %15, !dbg !1050\l  br i1 %16, label %21, label %17, !dbg !1051\l|{<s0>T|<s1>F}}"];
	Node0xe3e240:s0 -> Node0xe3e2e0;
	Node0xe3e240:s1 -> Node0xe3e290;
	Node0xe3e290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%17:\l17:                                               \l  %18 = call i32* @__errno_location() #25, !dbg !1052\l  %19 = load i32, i32* %18, align 4, !dbg !1052, !tbaa !1031\l  %20 = icmp ne i32 %19, 22, !dbg !1053\l  br i1 %20, label %21, label %22, !dbg !1054\l|{<s0>T|<s1>F}}"];
	Node0xe3e290:s0 -> Node0xe3e2e0;
	Node0xe3e290:s1 -> Node0xe3e330;
	Node0xe3e2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%21:\l21:                                               \l  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg\l... !1055, !tbaa !1031\l  br label %30, !dbg !1057\l}"];
	Node0xe3e2e0 -> Node0xe3e420;
	Node0xe3e330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%22:\l22:                                               \l  %23 = load i32, i32* %3, align 4, !dbg !1058, !tbaa !1031\l  %24 = load i32, i32* %4, align 4, !dbg !1060, !tbaa !1031\l  %25 = call i32 @rpl_fcntl_DUPFD(i32 noundef %23, i32 noundef %24), !dbg !1061\l  store i32 %25, i32* %5, align 4, !dbg !1062, !tbaa !1031\l  %26 = load i32, i32* %5, align 4, !dbg !1063, !tbaa !1031\l  %27 = icmp sge i32 %26, 0, !dbg !1065\l  br i1 %27, label %28, label %29, !dbg !1066\l|{<s0>T|<s1>F}}"];
	Node0xe3e330:s0 -> Node0xe3e380;
	Node0xe3e330:s1 -> Node0xe3e3d0;
	Node0xe3e380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%28:\l28:                                               \l  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1067, !tbaa !1031\l  br label %29, !dbg !1068\l}"];
	Node0xe3e380 -> Node0xe3e3d0;
	Node0xe3e3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%29:\l29:                                               \l  br label %30\l}"];
	Node0xe3e3d0 -> Node0xe3e420;
	Node0xe3e420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%30:\l30:                                               \l  br label %35, !dbg !1069\l}"];
	Node0xe3e420 -> Node0xe3e4c0;
	Node0xe3e470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%31:\l31:                                               \l  %32 = load i32, i32* %3, align 4, !dbg !1070, !tbaa !1031\l  %33 = load i32, i32* %4, align 4, !dbg !1071, !tbaa !1031\l  %34 = call i32 @rpl_fcntl_DUPFD(i32 noundef %32, i32 noundef %33), !dbg !1072\l  store i32 %34, i32* %5, align 4, !dbg !1073, !tbaa !1031\l  br label %35\l}"];
	Node0xe3e470 -> Node0xe3e4c0;
	Node0xe3e4c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = load i32, i32* %5, align 4, !dbg !1074, !tbaa !1031\l  %37 = icmp sle i32 0, %36, !dbg !1075\l  br i1 %37, label %38, label %64, !dbg !1076\l|{<s0>T|<s1>F}}"];
	Node0xe3e4c0:s0 -> Node0xe3e510;
	Node0xe3e4c0:s1 -> Node0xe3e6a0;
	Node0xe3e510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%38:\l38:                                               \l  %39 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1077, !tbaa !1031\l  %40 = icmp eq i32 %39, -1, !dbg !1078\l  br i1 %40, label %41, label %64, !dbg !1079\l|{<s0>T|<s1>F}}"];
	Node0xe3e510:s0 -> Node0xe3e560;
	Node0xe3e510:s1 -> Node0xe3e6a0;
	Node0xe3e560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = bitcast i32* %6 to i8*, !dbg !1080\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #24, !dbg !1080\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !506, metadata\l... !DIExpression()), !dbg !1081\l  %43 = load i32, i32* %5, align 4, !dbg !1082, !tbaa !1031\l  %44 = call i32 (i32, i32, ...) @fcntl(i32 noundef %43, i32 noundef 1), !dbg\l... !1083\l  store i32 %44, i32* %6, align 4, !dbg !1081, !tbaa !1031\l  %45 = load i32, i32* %6, align 4, !dbg !1084, !tbaa !1031\l  %46 = icmp slt i32 %45, 0, !dbg !1085\l  br i1 %46, label %53, label %47, !dbg !1086\l|{<s0>T|<s1>F}}"];
	Node0xe3e560:s0 -> Node0xe3e600;
	Node0xe3e560:s1 -> Node0xe3e5b0;
	Node0xe3e5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%47:\l47:                                               \l  %48 = load i32, i32* %5, align 4, !dbg !1087, !tbaa !1031\l  %49 = load i32, i32* %6, align 4, !dbg !1088, !tbaa !1031\l  %50 = or i32 %49, 1, !dbg !1089\l  %51 = call i32 (i32, i32, ...) @fcntl(i32 noundef %48, i32 noundef 2, i32\l... noundef %50), !dbg !1090\l  %52 = icmp eq i32 %51, -1, !dbg !1091\l  br i1 %52, label %53, label %62, !dbg !1092\l|{<s0>T|<s1>F}}"];
	Node0xe3e5b0:s0 -> Node0xe3e600;
	Node0xe3e5b0:s1 -> Node0xe3e650;
	Node0xe3e600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%53:\l53:                                               \l  %54 = bitcast i32* %7 to i8*, !dbg !1093\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #24, !dbg !1093\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !509, metadata\l... !DIExpression()), !dbg !1094\l  %55 = call i32* @__errno_location() #25, !dbg !1095\l  %56 = load i32, i32* %55, align 4, !dbg !1095, !tbaa !1031\l  store i32 %56, i32* %7, align 4, !dbg !1094, !tbaa !1031\l  %57 = load i32, i32* %5, align 4, !dbg !1096, !tbaa !1031\l  %58 = call i32 @close(i32 noundef %57), !dbg !1097\l  %59 = load i32, i32* %7, align 4, !dbg !1098, !tbaa !1031\l  %60 = call i32* @__errno_location() #25, !dbg !1099\l  store i32 %59, i32* %60, align 4, !dbg !1100, !tbaa !1031\l  store i32 -1, i32* %5, align 4, !dbg !1101, !tbaa !1031\l  %61 = bitcast i32* %7 to i8*, !dbg !1102\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #24, !dbg !1102\l  br label %62, !dbg !1103\l}"];
	Node0xe3e600 -> Node0xe3e650;
	Node0xe3e650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%62:\l62:                                               \l  %63 = bitcast i32* %6 to i8*, !dbg !1104\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %63) #24, !dbg !1104\l  br label %64, !dbg !1105\l}"];
	Node0xe3e650 -> Node0xe3e6a0;
	Node0xe3e6a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = load i32, i32* %5, align 4, !dbg !1106, !tbaa !1031\l  %66 = bitcast i32* %5 to i8*, !dbg !1107\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #24, !dbg !1107\l  ret i32 %65, !dbg !1108\l}"];
}
