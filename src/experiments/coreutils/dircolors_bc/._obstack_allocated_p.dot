digraph "CFG for '_obstack_allocated_p' function" {
	label="CFG for '_obstack_allocated_p' function";

	Node0x23e1e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%2:\l  %3 = alloca %struct.obstack*, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca %struct._obstack_chunk*, align 8\l  %6 = alloca %struct._obstack_chunk*, align 8\l  store %struct.obstack* %0, %struct.obstack** %3, align 8, !tbaa !851\l  call void @llvm.dbg.declare(metadata %struct.obstack** %3, metadata !847,\l... metadata !DIExpression()), !dbg !855\l  store i8* %1, i8** %4, align 8, !tbaa !851\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !848, metadata\l... !DIExpression()), !dbg !856\l  %7 = bitcast %struct._obstack_chunk** %5 to i8*, !dbg !857\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #21, !dbg !857\l  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %5, metadata\l... !849, metadata !DIExpression()), !dbg !858\l  %8 = bitcast %struct._obstack_chunk** %6 to i8*, !dbg !859\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #21, !dbg !859\l  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %6, metadata\l... !850, metadata !DIExpression()), !dbg !860\l  %9 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !861, !tbaa\l... !851\l  %10 = getelementptr inbounds %struct.obstack, %struct.obstack* %9, i32 0,\l... i32 1, !dbg !862\l  %11 = load %struct._obstack_chunk*, %struct._obstack_chunk** %10, align 8,\l... !dbg !862, !tbaa !863\l  store %struct._obstack_chunk* %11, %struct._obstack_chunk** %5, align 8,\l... !dbg !867, !tbaa !851\l  br label %12, !dbg !868\l}"];
	Node0x23e1e50 -> Node0x23e1ea0;
	Node0x23e1ea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l12:                                               \l  %13 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8,\l... !dbg !869, !tbaa !851\l  %14 = icmp ne %struct._obstack_chunk* %13, null, !dbg !870\l  br i1 %14, label %15, label %28, !dbg !871\l|{<s0>T|<s1>F}}"];
	Node0x23e1ea0:s0 -> Node0x23e1ef0;
	Node0x23e1ea0:s1 -> Node0x23e1fe0;
	Node0x23e1ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%15:\l15:                                               \l  %16 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8,\l... !dbg !872, !tbaa !851\l  %17 = bitcast %struct._obstack_chunk* %16 to i8*, !dbg !873\l  %18 = load i8*, i8** %4, align 8, !dbg !874, !tbaa !851\l  %19 = icmp uge i8* %17, %18, !dbg !875\l  br i1 %19, label %26, label %20, !dbg !876\l|{<s0>T|<s1>F}}"];
	Node0x23e1ef0:s0 -> Node0x23e1f90;
	Node0x23e1ef0:s1 -> Node0x23e1f40;
	Node0x23e1f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%20:\l20:                                               \l  %21 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8,\l... !dbg !877, !tbaa !851\l  %22 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %21, i32 0, i32 0, !dbg !878\l  %23 = load i8*, i8** %22, align 8, !dbg !878, !tbaa !851\l  %24 = load i8*, i8** %4, align 8, !dbg !879, !tbaa !851\l  %25 = icmp ult i8* %23, %24, !dbg !880\l  br label %26, !dbg !876\l}"];
	Node0x23e1f40 -> Node0x23e1f90;
	Node0x23e1f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%26:\l26:                                               \l  %27 = phi i1 [ true, %15 ], [ %25, %20 ]\l  br label %28\l}"];
	Node0x23e1f90 -> Node0x23e1fe0;
	Node0x23e1fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i1 [ false, %12 ], [ %27, %26 ], !dbg !881\l  br i1 %29, label %30, label %35, !dbg !868\l|{<s0>T|<s1>F}}"];
	Node0x23e1fe0:s0 -> Node0x23e2030;
	Node0x23e1fe0:s1 -> Node0x23e2080;
	Node0x23e2030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%30:\l30:                                               \l  %31 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8,\l... !dbg !882, !tbaa !851\l  %32 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %31, i32 0, i32 1, !dbg !884\l  %33 = load %struct._obstack_chunk*, %struct._obstack_chunk** %32, align 8,\l... !dbg !884, !tbaa !851\l  store %struct._obstack_chunk* %33, %struct._obstack_chunk** %6, align 8,\l... !dbg !885, !tbaa !851\l  %34 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8,\l... !dbg !886, !tbaa !851\l  store %struct._obstack_chunk* %34, %struct._obstack_chunk** %5, align 8,\l... !dbg !887, !tbaa !851\l  br label %12, !dbg !868, !llvm.loop !888\l}"];
	Node0x23e2030 -> Node0x23e1ea0;
	Node0x23e2080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%35:\l35:                                               \l  %36 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8,\l... !dbg !892, !tbaa !851\l  %37 = icmp ne %struct._obstack_chunk* %36, null, !dbg !893\l  %38 = zext i1 %37 to i32, !dbg !893\l  %39 = bitcast %struct._obstack_chunk** %6 to i8*, !dbg !894\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #21, !dbg !894\l  %40 = bitcast %struct._obstack_chunk** %5 to i8*, !dbg !894\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #21, !dbg !894\l  ret i32 %38, !dbg !895\l}"];
}
