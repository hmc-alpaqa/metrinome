digraph "CFG for '_obstack_begin_worker' function" {
	label="CFG for '_obstack_begin_worker' function";

	Node0x23c0a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca %struct.obstack*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca %struct._obstack_chunk*, align 8\l  %8 = alloca i32, align 4\l  store %struct.obstack* %0, %struct.obstack** %4, align 8, !tbaa !854\l  call void @llvm.dbg.declare(metadata %struct.obstack** %4, metadata !847,\l... metadata !DIExpression()), !dbg !858\l  store i64 %1, i64* %5, align 8, !tbaa !859\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !848, metadata\l... !DIExpression()), !dbg !861\l  store i64 %2, i64* %6, align 8, !tbaa !859\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !849, metadata\l... !DIExpression()), !dbg !862\l  %9 = bitcast %struct._obstack_chunk** %7 to i8*, !dbg !863\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #21, !dbg !863\l  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %7, metadata\l... !850, metadata !DIExpression()), !dbg !864\l  %10 = load i64, i64* %6, align 8, !dbg !865, !tbaa !859\l  %11 = icmp eq i64 %10, 0, !dbg !867\l  br i1 %11, label %12, label %13, !dbg !868\l|{<s0>T|<s1>F}}"];
	Node0x23c0a30:s0 -> Node0x23c2be0;
	Node0x23c0a30:s1 -> Node0x23c2c30;
	Node0x23c2be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%12:\l12:                                               \l  store i64 16, i64* %6, align 8, !dbg !869, !tbaa !859\l  br label %13, !dbg !870\l}"];
	Node0x23c2be0 -> Node0x23c2c30;
	Node0x23c2c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%13:\l13:                                               \l  %14 = load i64, i64* %5, align 8, !dbg !871, !tbaa !859\l  %15 = icmp eq i64 %14, 0, !dbg !872\l  br i1 %15, label %16, label %22, !dbg !873\l|{<s0>T|<s1>F}}"];
	Node0x23c2c30:s0 -> Node0x23c2c80;
	Node0x23c2c30:s1 -> Node0x23c2cd0;
	Node0x23c2c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%16:\l16:                                               \l  %17 = bitcast i32* %8 to i8*, !dbg !874\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #21, !dbg !874\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !851, metadata\l... !DIExpression()), !dbg !875\l  store i32 32, i32* %8, align 4, !dbg !875, !tbaa !876\l  %18 = load i32, i32* %8, align 4, !dbg !878, !tbaa !876\l  %19 = sub nsw i32 4096, %18, !dbg !879\l  %20 = sext i32 %19 to i64, !dbg !880\l  store i64 %20, i64* %5, align 8, !dbg !881, !tbaa !859\l  %21 = bitcast i32* %8 to i8*, !dbg !882\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %21) #21, !dbg !882\l  br label %22, !dbg !883\l}"];
	Node0x23c2c80 -> Node0x23c2cd0;
	Node0x23c2cd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = load i64, i64* %5, align 8, !dbg !884, !tbaa !859\l  %24 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !885, !tbaa\l... !854\l  %25 = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0,\l... i32 0, !dbg !886\l  store i64 %23, i64* %25, align 8, !dbg !887, !tbaa !888\l  %26 = load i64, i64* %6, align 8, !dbg !890, !tbaa !859\l  %27 = sub i64 %26, 1, !dbg !891\l  %28 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !892, !tbaa\l... !854\l  %29 = getelementptr inbounds %struct.obstack, %struct.obstack* %28, i32 0,\l... i32 6, !dbg !893\l  store i64 %27, i64* %29, align 8, !dbg !894, !tbaa !895\l  %30 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !896, !tbaa\l... !854\l  %31 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !897, !tbaa\l... !854\l  %32 = getelementptr inbounds %struct.obstack, %struct.obstack* %31, i32 0,\l... i32 0, !dbg !898\l  %33 = load i64, i64* %32, align 8, !dbg !898, !tbaa !888\l  %34 = call i8* @call_chunkfun(%struct.obstack* noundef %30, i64 noundef\l... %33), !dbg !899\l  %35 = bitcast i8* %34 to %struct._obstack_chunk*, !dbg !899\l  %36 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !900, !tbaa\l... !854\l  %37 = getelementptr inbounds %struct.obstack, %struct.obstack* %36, i32 0,\l... i32 1, !dbg !901\l  store %struct._obstack_chunk* %35, %struct._obstack_chunk** %37, align 8,\l... !dbg !902, !tbaa !903\l  store %struct._obstack_chunk* %35, %struct._obstack_chunk** %7, align 8,\l... !dbg !904, !tbaa !854\l  %38 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8,\l... !dbg !905, !tbaa !854\l  %39 = icmp ne %struct._obstack_chunk* %38, null, !dbg !905\l  br i1 %39, label %42, label %40, !dbg !907\l|{<s0>T|<s1>F}}"];
	Node0x23c2cd0:s0 -> Node0x23c2d70;
	Node0x23c2cd0:s1 -> Node0x23c2d20;
	Node0x23c2d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%40:\l40:                                               \l  %41 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg\l... !908, !tbaa !854\l  call void %41() #22, !dbg !909\l  unreachable, !dbg !909\l}"];
	Node0x23c2d70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8,\l... !dbg !910, !tbaa !854\l  %44 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %43, i32 0, i32 2, !dbg !910\l  %45 = getelementptr inbounds [0 x i8], [0 x i8]* %44, i64 0, i64 0, !dbg !910\l  %46 = ptrtoint i8* %45 to i64, !dbg !910\l  %47 = sub i64 %46, 0, !dbg !910\l  %48 = load i64, i64* %6, align 8, !dbg !910, !tbaa !859\l  %49 = sub i64 %48, 1, !dbg !910\l  %50 = add i64 %47, %49, !dbg !910\l  %51 = load i64, i64* %6, align 8, !dbg !910, !tbaa !859\l  %52 = sub i64 %51, 1, !dbg !910\l  %53 = xor i64 %52, -1, !dbg !910\l  %54 = and i64 %50, %53, !dbg !910\l  %55 = getelementptr inbounds i8, i8* null, i64 %54, !dbg !910\l  %56 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !911, !tbaa\l... !854\l  %57 = getelementptr inbounds %struct.obstack, %struct.obstack* %56, i32 0,\l... i32 2, !dbg !912\l  store i8* %55, i8** %57, align 8, !dbg !913, !tbaa !914\l  %58 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !915, !tbaa\l... !854\l  %59 = getelementptr inbounds %struct.obstack, %struct.obstack* %58, i32 0,\l... i32 3, !dbg !916\l  store i8* %55, i8** %59, align 8, !dbg !917, !tbaa !918\l  %60 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8,\l... !dbg !919, !tbaa !854\l  %61 = bitcast %struct._obstack_chunk* %60 to i8*, !dbg !920\l  %62 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !921, !tbaa\l... !854\l  %63 = getelementptr inbounds %struct.obstack, %struct.obstack* %62, i32 0,\l... i32 0, !dbg !922\l  %64 = load i64, i64* %63, align 8, !dbg !922, !tbaa !888\l  %65 = getelementptr inbounds i8, i8* %61, i64 %64, !dbg !923\l  %66 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8,\l... !dbg !924, !tbaa !854\l  %67 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %66, i32 0, i32 0, !dbg !925\l  store i8* %65, i8** %67, align 8, !dbg !926, !tbaa !854\l  %68 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !927, !tbaa\l... !854\l  %69 = getelementptr inbounds %struct.obstack, %struct.obstack* %68, i32 0,\l... i32 4, !dbg !928\l  store i8* %65, i8** %69, align 8, !dbg !929, !tbaa !930\l  %70 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8,\l... !dbg !931, !tbaa !854\l  %71 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %70, i32 0, i32 1, !dbg !932\l  store %struct._obstack_chunk* null, %struct._obstack_chunk** %71, align 8,\l... !dbg !933, !tbaa !854\l  %72 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !934, !tbaa\l... !854\l  %73 = getelementptr inbounds %struct.obstack, %struct.obstack* %72, i32 0,\l... i32 10, !dbg !935\l  %74 = load i8, i8* %73, align 8, !dbg !936\l  %75 = and i8 %74, -3, !dbg !936\l  %76 = or i8 %75, 0, !dbg !936\l  store i8 %76, i8* %73, align 8, !dbg !936\l  %77 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !937, !tbaa\l... !854\l  %78 = getelementptr inbounds %struct.obstack, %struct.obstack* %77, i32 0,\l... i32 10, !dbg !938\l  %79 = load i8, i8* %78, align 8, !dbg !939\l  %80 = and i8 %79, -5, !dbg !939\l  %81 = or i8 %80, 0, !dbg !939\l  store i8 %81, i8* %78, align 8, !dbg !939\l  %82 = bitcast %struct._obstack_chunk** %7 to i8*, !dbg !940\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #21, !dbg !940\l  ret i32 1, !dbg !941\l}"];
}
