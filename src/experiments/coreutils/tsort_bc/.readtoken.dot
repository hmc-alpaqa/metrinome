digraph "CFG for 'readtoken' function" {
	label="CFG for 'readtoken' function";

	Node0x19853e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca %struct._IO_FILE*, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca %struct.tokenbuffer*, align 8\l  %10 = alloca i32, align 4\l  %11 = alloca i64, align 8\l  %12 = alloca [4 x i64], align 16\l  %13 = alloca i8, align 1\l  %14 = alloca i8*, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i32, align 4\l  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8, !tbaa !763\l  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !748,\l... metadata !DIExpression()), !dbg !767\l  store i8* %1, i8** %7, align 8, !tbaa !763\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !749, metadata\l... !DIExpression()), !dbg !768\l  store i64 %2, i64* %8, align 8, !tbaa !769\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !750, metadata\l... !DIExpression()), !dbg !771\l  store %struct.tokenbuffer* %3, %struct.tokenbuffer** %9, align 8, !tbaa !763\l  call void @llvm.dbg.declare(metadata %struct.tokenbuffer** %9, metadata\l... !751, metadata !DIExpression()), !dbg !772\l  %17 = bitcast i32* %10 to i8*, !dbg !773\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #21, !dbg !773\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !752, metadata\l... !DIExpression()), !dbg !774\l  %18 = bitcast i64* %11 to i8*, !dbg !775\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #21, !dbg !775\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !753, metadata\l... !DIExpression()), !dbg !776\l  %19 = bitcast [4 x i64]* %12 to i8*, !dbg !777\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* %19) #21, !dbg !777\l  call void @llvm.dbg.declare(metadata [4 x i64]* %12, metadata !754, metadata\l... !DIExpression()), !dbg !778\l  %20 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 0, !dbg\l... !779\l  %21 = bitcast i64* %20 to i8*, !dbg !779\l  call void @llvm.memset.p0i8.i64(i8* align 16 %21, i8 0, i64 32, i1 false),\l... !dbg !779\l  store i64 0, i64* %11, align 8, !dbg !780, !tbaa !769\l  br label %22, !dbg !781\l}"];
	Node0x19853e0 -> Node0x19854f0;
	Node0x19854f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = load i64, i64* %11, align 8, !dbg !782, !tbaa !769\l  %24 = load i64, i64* %8, align 8, !dbg !783, !tbaa !769\l  %25 = icmp ult i64 %23, %24, !dbg !784\l  br i1 %25, label %26, label %37, !dbg !785\l|{<s0>T|<s1>F}}"];
	Node0x19854f0:s0 -> Node0x1985540;
	Node0x19854f0:s1 -> Node0x19855e0;
	Node0x1985540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #21, !dbg !786\l  call void @llvm.dbg.declare(metadata i8* %13, metadata !757, metadata\l... !DIExpression()), !dbg !787\l  %27 = load i8*, i8** %7, align 8, !dbg !788, !tbaa !763\l  %28 = load i64, i64* %11, align 8, !dbg !789, !tbaa !769\l  %29 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !788\l  %30 = load i8, i8* %29, align 1, !dbg !788, !tbaa !790\l  store i8 %30, i8* %13, align 1, !dbg !787, !tbaa !790\l  %31 = load i8, i8* %13, align 1, !dbg !791, !tbaa !790\l  %32 = zext i8 %31 to i64, !dbg !791\l  %33 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 0, !dbg\l... !792\l  call void @set_nth_bit(i64 noundef %32, i64* noundef %33), !dbg !793\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #21, !dbg !794\l  br label %34, !dbg !795\l}"];
	Node0x1985540 -> Node0x1985590;
	Node0x1985590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = load i64, i64* %11, align 8, !dbg !796, !tbaa !769\l  %36 = add nsw i64 %35, 1, !dbg !796\l  store i64 %36, i64* %11, align 8, !dbg !796, !tbaa !769\l  br label %22, !dbg !797, !llvm.loop !798\l}"];
	Node0x1985590 -> Node0x19854f0;
	Node0x19855e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%37:\l37:                                               \l  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !802,\l... !tbaa !763\l  %39 = call i32 @getc_unlocked(%struct._IO_FILE* noundef %38), !dbg !802\l  store i32 %39, i32* %10, align 4, !dbg !804, !tbaa !805\l  br label %40, !dbg !807\l}"];
	Node0x19855e0 -> Node0x1985630;
	Node0x1985630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = load i32, i32* %10, align 4, !dbg !808, !tbaa !805\l  %42 = icmp sge i32 %41, 0, !dbg !810\l  br i1 %42, label %43, label %48, !dbg !811\l|{<s0>T|<s1>F}}"];
	Node0x1985630:s0 -> Node0x1985680;
	Node0x1985630:s1 -> Node0x19856d0;
	Node0x1985680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%43:\l43:                                               \l  %44 = load i32, i32* %10, align 4, !dbg !812, !tbaa !805\l  %45 = sext i32 %44 to i64, !dbg !812\l  %46 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 0, !dbg\l... !813\l  %47 = call zeroext i1 @get_nth_bit(i64 noundef %45, i64* noundef %46), !dbg\l... !814\l  br label %48\l}"];
	Node0x1985680 -> Node0x19856d0;
	Node0x19856d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i1 [ false, %40 ], [ %47, %43 ], !dbg !815\l  br i1 %49, label %50, label %54, !dbg !816\l|{<s0>T|<s1>F}}"];
	Node0x19856d0:s0 -> Node0x1985720;
	Node0x19856d0:s1 -> Node0x19857c0;
	Node0x1985720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  br label %51, !dbg !817\l}"];
	Node0x1985720 -> Node0x1985770;
	Node0x1985770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !819,\l... !tbaa !763\l  %53 = call i32 @getc_unlocked(%struct._IO_FILE* noundef %52), !dbg !819\l  store i32 %53, i32* %10, align 4, !dbg !820, !tbaa !805\l  br label %40, !dbg !821, !llvm.loop !822\l}"];
	Node0x1985770 -> Node0x1985630;
	Node0x19857c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%54:\l54:                                               \l  %55 = bitcast i8** %14 to i8*, !dbg !824\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #21, !dbg !824\l  call void @llvm.dbg.declare(metadata i8** %14, metadata !761, metadata\l... !DIExpression()), !dbg !825\l  %56 = load %struct.tokenbuffer*, %struct.tokenbuffer** %9, align 8, !dbg\l... !826, !tbaa !763\l  %57 = getelementptr inbounds %struct.tokenbuffer, %struct.tokenbuffer* %56,\l... i32 0, i32 1, !dbg !827\l  %58 = load i8*, i8** %57, align 8, !dbg !827, !tbaa !828\l  store i8* %58, i8** %14, align 8, !dbg !825, !tbaa !763\l  %59 = bitcast i64* %15 to i8*, !dbg !830\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #21, !dbg !830\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !762, metadata\l... !DIExpression()), !dbg !831\l  %60 = load %struct.tokenbuffer*, %struct.tokenbuffer** %9, align 8, !dbg\l... !832, !tbaa !763\l  %61 = getelementptr inbounds %struct.tokenbuffer, %struct.tokenbuffer* %60,\l... i32 0, i32 0, !dbg !833\l  %62 = load i64, i64* %61, align 8, !dbg !833, !tbaa !834\l  store i64 %62, i64* %15, align 8, !dbg !831, !tbaa !769\l  store i64 0, i64* %11, align 8, !dbg !835, !tbaa !769\l  br label %63, !dbg !836\l}"];
	Node0x19857c0 -> Node0x1985810;
	Node0x1985810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%63:\l63:                                               \l  %64 = load i32, i32* %10, align 4, !dbg !837, !tbaa !805\l  %65 = icmp slt i32 %64, 0, !dbg !842\l  br i1 %65, label %66, label %70, !dbg !843\l|{<s0>T|<s1>F}}"];
	Node0x1985810:s0 -> Node0x1985860;
	Node0x1985810:s1 -> Node0x1985900;
	Node0x1985860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%66:\l66:                                               \l  %67 = load i64, i64* %11, align 8, !dbg !844, !tbaa !769\l  %68 = icmp eq i64 %67, 0, !dbg !845\l  br i1 %68, label %69, label %70, !dbg !846\l|{<s0>T|<s1>F}}"];
	Node0x1985860:s0 -> Node0x19858b0;
	Node0x1985860:s1 -> Node0x1985900;
	Node0x19858b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%69:\l69:                                               \l  store i64 -1, i64* %5, align 8, !dbg !847\l  store i32 1, i32* %16, align 4\l  br label %110, !dbg !847\l}"];
	Node0x19858b0 -> Node0x1985b80;
	Node0x1985900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%70:\l70:                                               \l  %71 = load i64, i64* %11, align 8, !dbg !848, !tbaa !769\l  %72 = load i64, i64* %15, align 8, !dbg !850, !tbaa !769\l  %73 = icmp eq i64 %71, %72, !dbg !851\l  br i1 %73, label %74, label %77, !dbg !852\l|{<s0>T|<s1>F}}"];
	Node0x1985900:s0 -> Node0x1985950;
	Node0x1985900:s1 -> Node0x19859a0;
	Node0x1985950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%74:\l74:                                               \l  %75 = load i8*, i8** %14, align 8, !dbg !853, !tbaa !763\l  %76 = call nonnull i8* @xpalloc(i8* noundef %75, i64* noundef %15, i64\l... noundef 1, i64 noundef -1, i64 noundef 1), !dbg !854\l  store i8* %76, i8** %14, align 8, !dbg !855, !tbaa !763\l  br label %77, !dbg !856\l}"];
	Node0x1985950 -> Node0x19859a0;
	Node0x19859a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%77:\l77:                                               \l  %78 = load i32, i32* %10, align 4, !dbg !857, !tbaa !805\l  %79 = icmp slt i32 %78, 0, !dbg !859\l  br i1 %79, label %80, label %84, !dbg !860\l|{<s0>T|<s1>F}}"];
	Node0x19859a0:s0 -> Node0x19859f0;
	Node0x19859a0:s1 -> Node0x1985a40;
	Node0x19859f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%80:\l80:                                               \l  %81 = load i8*, i8** %14, align 8, !dbg !861, !tbaa !763\l  %82 = load i64, i64* %11, align 8, !dbg !863, !tbaa !769\l  %83 = getelementptr inbounds i8, i8* %81, i64 %82, !dbg !861\l  store i8 0, i8* %83, align 1, !dbg !864, !tbaa !790\l  br label %102, !dbg !865\l}"];
	Node0x19859f0 -> Node0x1985b30;
	Node0x1985a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%84:\l84:                                               \l  %85 = load i32, i32* %10, align 4, !dbg !866, !tbaa !805\l  %86 = sext i32 %85 to i64, !dbg !866\l  %87 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 0, !dbg\l... !868\l  %88 = call zeroext i1 @get_nth_bit(i64 noundef %86, i64* noundef %87), !dbg\l... !869\l  br i1 %88, label %89, label %93, !dbg !870\l|{<s0>T|<s1>F}}"];
	Node0x1985a40:s0 -> Node0x1985a90;
	Node0x1985a40:s1 -> Node0x1985ae0;
	Node0x1985a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%89:\l89:                                               \l  %90 = load i8*, i8** %14, align 8, !dbg !871, !tbaa !763\l  %91 = load i64, i64* %11, align 8, !dbg !873, !tbaa !769\l  %92 = getelementptr inbounds i8, i8* %90, i64 %91, !dbg !871\l  store i8 0, i8* %92, align 1, !dbg !874, !tbaa !790\l  br label %102, !dbg !875\l}"];
	Node0x1985a90 -> Node0x1985b30;
	Node0x1985ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%93:\l93:                                               \l  %94 = load i32, i32* %10, align 4, !dbg !876, !tbaa !805\l  %95 = trunc i32 %94 to i8, !dbg !876\l  %96 = load i8*, i8** %14, align 8, !dbg !877, !tbaa !763\l  %97 = load i64, i64* %11, align 8, !dbg !878, !tbaa !769\l  %98 = add nsw i64 %97, 1, !dbg !878\l  store i64 %98, i64* %11, align 8, !dbg !878, !tbaa !769\l  %99 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !877\l  store i8 %95, i8* %99, align 1, !dbg !879, !tbaa !790\l  %100 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !880,\l... !tbaa !763\l  %101 = call i32 @getc_unlocked(%struct._IO_FILE* noundef %100), !dbg !880\l  store i32 %101, i32* %10, align 4, !dbg !881, !tbaa !805\l  br label %63, !dbg !882, !llvm.loop !883\l}"];
	Node0x1985ae0 -> Node0x1985810;
	Node0x1985b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%102:\l102:                                              \l  %103 = load i8*, i8** %14, align 8, !dbg !886, !tbaa !763\l  %104 = load %struct.tokenbuffer*, %struct.tokenbuffer** %9, align 8, !dbg\l... !887, !tbaa !763\l  %105 = getelementptr inbounds %struct.tokenbuffer, %struct.tokenbuffer*\l... %104, i32 0, i32 1, !dbg !888\l  store i8* %103, i8** %105, align 8, !dbg !889, !tbaa !828\l  %106 = load i64, i64* %15, align 8, !dbg !890, !tbaa !769\l  %107 = load %struct.tokenbuffer*, %struct.tokenbuffer** %9, align 8, !dbg\l... !891, !tbaa !763\l  %108 = getelementptr inbounds %struct.tokenbuffer, %struct.tokenbuffer*\l... %107, i32 0, i32 0, !dbg !892\l  store i64 %106, i64* %108, align 8, !dbg !893, !tbaa !834\l  %109 = load i64, i64* %11, align 8, !dbg !894, !tbaa !769\l  store i64 %109, i64* %5, align 8, !dbg !895\l  store i32 1, i32* %16, align 4\l  br label %110, !dbg !895\l}"];
	Node0x1985b30 -> Node0x1985b80;
	Node0x1985b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%110:\l110:                                              \l  %111 = bitcast i64* %15 to i8*, !dbg !896\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %111) #21, !dbg !896\l  %112 = bitcast i8** %14 to i8*, !dbg !896\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %112) #21, !dbg !896\l  %113 = bitcast [4 x i64]* %12 to i8*, !dbg !896\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* %113) #21, !dbg !896\l  %114 = bitcast i64* %11 to i8*, !dbg !896\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %114) #21, !dbg !896\l  %115 = bitcast i32* %10 to i8*, !dbg !896\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %115) #21, !dbg !896\l  %116 = load i64, i64* %5, align 8, !dbg !896\l  ret i64 %116, !dbg !896\l}"];
}
