digraph "CFG for 'adjust_column' function" {
	label="CFG for 'adjust_column' function";

	Node0x20c9e30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca i8, align 1\l  store i64 %0, i64* %3, align 8, !tbaa !764\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !762, metadata\l... !DIExpression()), !dbg !768\l  store i8 %1, i8* %4, align 1, !tbaa !769\l  call void @llvm.dbg.declare(metadata i8* %4, metadata !763, metadata\l... !DIExpression()), !dbg !770\l  %5 = load i8, i8* @count_bytes, align 1, !dbg !771, !tbaa !773, !range !775\l  %6 = trunc i8 %5 to i1, !dbg !771\l  br i1 %6, label %39, label %7, !dbg !776\l|{<s0>T|<s1>F}}"];
	Node0x20c9e30:s0 -> Node0x20b9720;
	Node0x20c9e30:s1 -> Node0x20b9360;
	Node0x20b9360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%7:\l7:                                                \l  %8 = load i8, i8* %4, align 1, !dbg !777, !tbaa !769\l  %9 = sext i8 %8 to i32, !dbg !777\l  %10 = icmp eq i32 %9, 8, !dbg !780\l  br i1 %10, label %11, label %18, !dbg !781\l|{<s0>T|<s1>F}}"];
	Node0x20b9360:s0 -> Node0x20b93b0;
	Node0x20b9360:s1 -> Node0x20b94a0;
	Node0x20b93b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%11:\l11:                                               \l  %12 = load i64, i64* %3, align 8, !dbg !782, !tbaa !764\l  %13 = icmp ugt i64 %12, 0, !dbg !785\l  br i1 %13, label %14, label %17, !dbg !786\l|{<s0>T|<s1>F}}"];
	Node0x20b93b0:s0 -> Node0x20b9400;
	Node0x20b93b0:s1 -> Node0x20b9450;
	Node0x20b9400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%14:\l14:                                               \l  %15 = load i64, i64* %3, align 8, !dbg !787, !tbaa !764\l  %16 = add i64 %15, -1, !dbg !787\l  store i64 %16, i64* %3, align 8, !dbg !787, !tbaa !764\l  br label %17, !dbg !788\l}"];
	Node0x20b9400 -> Node0x20b9450;
	Node0x20b9450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%17:\l17:                                               \l  br label %38, !dbg !789\l}"];
	Node0x20b9450 -> Node0x20b96d0;
	Node0x20b94a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%18:\l18:                                               \l  %19 = load i8, i8* %4, align 1, !dbg !790, !tbaa !769\l  %20 = sext i8 %19 to i32, !dbg !790\l  %21 = icmp eq i32 %20, 13, !dbg !792\l  br i1 %21, label %22, label %23, !dbg !793\l|{<s0>T|<s1>F}}"];
	Node0x20b94a0:s0 -> Node0x20b94f0;
	Node0x20b94a0:s1 -> Node0x20b9540;
	Node0x20b94f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%22:\l22:                                               \l  store i64 0, i64* %3, align 8, !dbg !794, !tbaa !764\l  br label %37, !dbg !795\l}"];
	Node0x20b94f0 -> Node0x20b9680;
	Node0x20b9540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%23:\l23:                                               \l  %24 = load i8, i8* %4, align 1, !dbg !796, !tbaa !769\l  %25 = sext i8 %24 to i32, !dbg !796\l  %26 = icmp eq i32 %25, 9, !dbg !798\l  br i1 %26, label %27, label %33, !dbg !799\l|{<s0>T|<s1>F}}"];
	Node0x20b9540:s0 -> Node0x20b9590;
	Node0x20b9540:s1 -> Node0x20b95e0;
	Node0x20b9590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%27:\l27:                                               \l  %28 = load i64, i64* %3, align 8, !dbg !800, !tbaa !764\l  %29 = urem i64 %28, 8, !dbg !801\l  %30 = sub i64 8, %29, !dbg !802\l  %31 = load i64, i64* %3, align 8, !dbg !803, !tbaa !764\l  %32 = add i64 %31, %30, !dbg !803\l  store i64 %32, i64* %3, align 8, !dbg !803, !tbaa !764\l  br label %36, !dbg !804\l}"];
	Node0x20b9590 -> Node0x20b9630;
	Node0x20b95e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%33:\l33:                                               \l  %34 = load i64, i64* %3, align 8, !dbg !805, !tbaa !764\l  %35 = add i64 %34, 1, !dbg !805\l  store i64 %35, i64* %3, align 8, !dbg !805, !tbaa !764\l  br label %36\l}"];
	Node0x20b95e0 -> Node0x20b9630;
	Node0x20b9630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%36:\l36:                                               \l  br label %37\l}"];
	Node0x20b9630 -> Node0x20b9680;
	Node0x20b9680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%37:\l37:                                               \l  br label %38\l}"];
	Node0x20b9680 -> Node0x20b96d0;
	Node0x20b96d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%38:\l38:                                               \l  br label %42, !dbg !806\l}"];
	Node0x20b96d0 -> Node0x20b9770;
	Node0x20b9720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%39:\l39:                                               \l  %40 = load i64, i64* %3, align 8, !dbg !807, !tbaa !764\l  %41 = add i64 %40, 1, !dbg !807\l  store i64 %41, i64* %3, align 8, !dbg !807, !tbaa !764\l  br label %42\l}"];
	Node0x20b9720 -> Node0x20b9770;
	Node0x20b9770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = load i64, i64* %3, align 8, !dbg !808, !tbaa !764\l  ret i64 %43, !dbg !809\l}"];
}
