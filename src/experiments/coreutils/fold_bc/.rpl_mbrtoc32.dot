digraph "CFG for 'rpl_mbrtoc32' function" {
	label="CFG for 'rpl_mbrtoc32' function";

	Node0x21fbdc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca i32*, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca %struct.__mbstate_t*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i32, align 4\l  store i32* %0, i32** %6, align 8, !tbaa !773\l  call void @llvm.dbg.declare(metadata i32** %6, metadata !768, metadata\l... !DIExpression()), !dbg !777\l  store i8* %1, i8** %7, align 8, !tbaa !773\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !769, metadata\l... !DIExpression()), !dbg !778\l  store i64 %2, i64* %8, align 8, !tbaa !779\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !770, metadata\l... !DIExpression()), !dbg !781\l  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %9, align 8, !tbaa !773\l  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %9, metadata\l... !771, metadata !DIExpression()), !dbg !782\l  %12 = load i8*, i8** %7, align 8, !dbg !783, !tbaa !773\l  %13 = icmp eq i8* %12, null, !dbg !785\l  br i1 %13, label %14, label %15, !dbg !786\l|{<s0>T|<s1>F}}"];
	Node0x21fbdc0:s0 -> Node0x21fd300;
	Node0x21fbdc0:s1 -> Node0x21fd350;
	Node0x21fd300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%14:\l14:                                               \l  store i32* null, i32** %6, align 8, !dbg !787, !tbaa !773\l  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.157, i64 0, i64\l... 0), i8** %7, align 8, !dbg !789, !tbaa !773\l  store i64 1, i64* %8, align 8, !dbg !790, !tbaa !779\l  br label %15, !dbg !791\l}"];
	Node0x21fd300 -> Node0x21fd350;
	Node0x21fd350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  %16 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8, !dbg\l... !792, !tbaa !773\l  %17 = icmp eq %struct.__mbstate_t* %16, null, !dbg !794\l  br i1 %17, label %18, label %19, !dbg !795\l|{<s0>T|<s1>F}}"];
	Node0x21fd350:s0 -> Node0x21fd3a0;
	Node0x21fd350:s1 -> Node0x21fd3f0;
	Node0x21fd3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%18:\l18:                                               \l  store %struct.__mbstate_t* @internal_state, %struct.__mbstate_t** %9, align\l... 8, !dbg !796, !tbaa !773\l  br label %19, !dbg !797\l}"];
	Node0x21fd3a0 -> Node0x21fd3f0;
	Node0x21fd3f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = bitcast i64* %10 to i8*, !dbg !798\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #22, !dbg !798\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !772, metadata\l... !DIExpression()), !dbg !799\l  %21 = load i32*, i32** %6, align 8, !dbg !800, !tbaa !773\l  %22 = load i8*, i8** %7, align 8, !dbg !801, !tbaa !773\l  %23 = load i64, i64* %8, align 8, !dbg !802, !tbaa !779\l  %24 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8, !dbg\l... !803, !tbaa !773\l  %25 = call i64 @mbrtoc32(i32* noundef %21, i8* noundef %22, i64 noundef %23,\l... %struct.__mbstate_t* noundef %24) #22, !dbg !804\l  store i64 %25, i64* %10, align 8, !dbg !799, !tbaa !779\l  %26 = load i64, i64* %10, align 8, !dbg !805, !tbaa !779\l  %27 = icmp ule i64 -2, %26, !dbg !807\l  br i1 %27, label %28, label %42, !dbg !808\l|{<s0>T|<s1>F}}"];
	Node0x21fd3f0:s0 -> Node0x21fd440;
	Node0x21fd3f0:s1 -> Node0x21fd5d0;
	Node0x21fd440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%28:\l28:                                               \l  %29 = load i64, i64* %8, align 8, !dbg !809, !tbaa !779\l  %30 = icmp ne i64 %29, 0, !dbg !810\l  br i1 %30, label %31, label %42, !dbg !811\l|{<s0>T|<s1>F}}"];
	Node0x21fd440:s0 -> Node0x21fd490;
	Node0x21fd440:s1 -> Node0x21fd5d0;
	Node0x21fd490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%31:\l31:                                               \l  %32 = call zeroext i1 @hard_locale(i32 noundef 0), !dbg !812\l  br i1 %32, label %42, label %33, !dbg !813\l|{<s0>T|<s1>F}}"];
	Node0x21fd490:s0 -> Node0x21fd5d0;
	Node0x21fd490:s1 -> Node0x21fd4e0;
	Node0x21fd4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%33:\l33:                                               \l  %34 = load i32*, i32** %6, align 8, !dbg !814, !tbaa !773\l  %35 = icmp ne i32* %34, null, !dbg !817\l  br i1 %35, label %36, label %41, !dbg !818\l|{<s0>T|<s1>F}}"];
	Node0x21fd4e0:s0 -> Node0x21fd530;
	Node0x21fd4e0:s1 -> Node0x21fd580;
	Node0x21fd530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%36:\l36:                                               \l  %37 = load i8*, i8** %7, align 8, !dbg !819, !tbaa !773\l  %38 = load i8, i8* %37, align 1, !dbg !820, !tbaa !821\l  %39 = zext i8 %38 to i32, !dbg !822\l  %40 = load i32*, i32** %6, align 8, !dbg !823, !tbaa !773\l  store i32 %39, i32* %40, align 4, !dbg !824, !tbaa !825\l  br label %41, !dbg !827\l}"];
	Node0x21fd530 -> Node0x21fd580;
	Node0x21fd580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%41:\l41:                                               \l  store i64 1, i64* %5, align 8, !dbg !828\l  store i32 1, i32* %11, align 4\l  br label %44, !dbg !828\l}"];
	Node0x21fd580 -> Node0x21fd620;
	Node0x21fd5d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%42:\l42:                                               \l  %43 = load i64, i64* %10, align 8, !dbg !829, !tbaa !779\l  store i64 %43, i64* %5, align 8, !dbg !830\l  store i32 1, i32* %11, align 4\l  br label %44, !dbg !830\l}"];
	Node0x21fd5d0 -> Node0x21fd620;
	Node0x21fd620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = bitcast i64* %10 to i8*, !dbg !831\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #22, !dbg !831\l  %46 = load i64, i64* %5, align 8, !dbg !831\l  ret i64 %46, !dbg !831\l}"];
}
