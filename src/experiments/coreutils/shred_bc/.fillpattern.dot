digraph "CFG for 'fillpattern' function" {
	label="CFG for 'fillpattern' function";

	Node0x23637a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i32, align 4\l  store i32 %0, i32* %4, align 4, !tbaa !860\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !855, metadata\l... !DIExpression()), !dbg !864\l  store i8* %1, i8** %5, align 8, !tbaa !865\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !856, metadata\l... !DIExpression()), !dbg !867\l  store i64 %2, i64* %6, align 8, !tbaa !868\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !857, metadata\l... !DIExpression()), !dbg !870\l  %9 = bitcast i64* %7 to i8*, !dbg !871\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #24, !dbg !871\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !858, metadata\l... !DIExpression()), !dbg !872\l  %10 = bitcast i32* %8 to i8*, !dbg !873\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #24, !dbg !873\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !859, metadata\l... !DIExpression()), !dbg !874\l  %11 = load i32, i32* %4, align 4, !dbg !875, !tbaa !860\l  %12 = and i32 %11, 4095, !dbg !876\l  store i32 %12, i32* %8, align 4, !dbg !874, !tbaa !860\l  %13 = load i32, i32* %8, align 4, !dbg !877, !tbaa !860\l  %14 = shl i32 %13, 12, !dbg !878\l  %15 = load i32, i32* %8, align 4, !dbg !879, !tbaa !860\l  %16 = or i32 %15, %14, !dbg !879\l  store i32 %16, i32* %8, align 4, !dbg !879, !tbaa !860\l  %17 = load i32, i32* %8, align 4, !dbg !880, !tbaa !860\l  %18 = lshr i32 %17, 4, !dbg !881\l  %19 = and i32 %18, 255, !dbg !882\l  %20 = trunc i32 %19 to i8, !dbg !883\l  %21 = load i8*, i8** %5, align 8, !dbg !884, !tbaa !865\l  %22 = getelementptr inbounds i8, i8* %21, i64 0, !dbg !884\l  store i8 %20, i8* %22, align 1, !dbg !885, !tbaa !886\l  %23 = load i32, i32* %8, align 4, !dbg !887, !tbaa !860\l  %24 = lshr i32 %23, 8, !dbg !888\l  %25 = and i32 %24, 255, !dbg !889\l  %26 = trunc i32 %25 to i8, !dbg !890\l  %27 = load i8*, i8** %5, align 8, !dbg !891, !tbaa !865\l  %28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !891\l  store i8 %26, i8* %28, align 1, !dbg !892, !tbaa !886\l  %29 = load i32, i32* %8, align 4, !dbg !893, !tbaa !860\l  %30 = and i32 %29, 255, !dbg !894\l  %31 = trunc i32 %30 to i8, !dbg !893\l  %32 = load i8*, i8** %5, align 8, !dbg !895, !tbaa !865\l  %33 = getelementptr inbounds i8, i8* %32, i64 2, !dbg !895\l  store i8 %31, i8* %33, align 1, !dbg !896, !tbaa !886\l  store i64 3, i64* %7, align 8, !dbg !897, !tbaa !868\l  br label %34, !dbg !899\l}"];
	Node0x23637a0 -> Node0x2363ea0;
	Node0x2363ea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = load i64, i64* %7, align 8, !dbg !900, !tbaa !868\l  %36 = load i64, i64* %6, align 8, !dbg !902, !tbaa !868\l  %37 = udiv i64 %36, 2, !dbg !903\l  %38 = icmp ule i64 %35, %37, !dbg !904\l  br i1 %38, label %39, label %48, !dbg !905\l|{<s0>T|<s1>F}}"];
	Node0x2363ea0:s0 -> Node0x2363ef0;
	Node0x2363ea0:s1 -> Node0x2363f90;
	Node0x2363ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%39:\l39:                                               \l  %40 = load i8*, i8** %5, align 8, !dbg !906, !tbaa !865\l  %41 = load i64, i64* %7, align 8, !dbg !907, !tbaa !868\l  %42 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !908\l  %43 = load i8*, i8** %5, align 8, !dbg !909, !tbaa !865\l  %44 = load i64, i64* %7, align 8, !dbg !910, !tbaa !868\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %43, i64\l... %44, i1 false), !dbg !911\l  br label %45, !dbg !911\l}"];
	Node0x2363ef0 -> Node0x2363f40;
	Node0x2363f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%45:\l45:                                               \l  %46 = load i64, i64* %7, align 8, !dbg !912, !tbaa !868\l  %47 = mul i64 %46, 2, !dbg !912\l  store i64 %47, i64* %7, align 8, !dbg !912, !tbaa !868\l  br label %34, !dbg !913, !llvm.loop !914\l}"];
	Node0x2363f40 -> Node0x2363ea0;
	Node0x2363f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%48:\l48:                                               \l  %49 = load i64, i64* %7, align 8, !dbg !918, !tbaa !868\l  %50 = load i64, i64* %6, align 8, !dbg !920, !tbaa !868\l  %51 = icmp ult i64 %49, %50, !dbg !921\l  br i1 %51, label %52, label %60, !dbg !922\l|{<s0>T|<s1>F}}"];
	Node0x2363f90:s0 -> Node0x2363fe0;
	Node0x2363f90:s1 -> Node0x2364030;
	Node0x2363fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%52:\l52:                                               \l  %53 = load i8*, i8** %5, align 8, !dbg !923, !tbaa !865\l  %54 = load i64, i64* %7, align 8, !dbg !924, !tbaa !868\l  %55 = getelementptr inbounds i8, i8* %53, i64 %54, !dbg !925\l  %56 = load i8*, i8** %5, align 8, !dbg !926, !tbaa !865\l  %57 = load i64, i64* %6, align 8, !dbg !927, !tbaa !868\l  %58 = load i64, i64* %7, align 8, !dbg !928, !tbaa !868\l  %59 = sub i64 %57, %58, !dbg !929\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 %56, i64\l... %59, i1 false), !dbg !930\l  br label %60, !dbg !930\l}"];
	Node0x2363fe0 -> Node0x2364030;
	Node0x2364030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%60:\l60:                                               \l  %61 = load i32, i32* %4, align 4, !dbg !931, !tbaa !860\l  %62 = and i32 %61, 4096, !dbg !933\l  %63 = icmp ne i32 %62, 0, !dbg !933\l  br i1 %63, label %64, label %81, !dbg !934\l|{<s0>T|<s1>F}}"];
	Node0x2364030:s0 -> Node0x2364080;
	Node0x2364030:s1 -> Node0x23acbc0;
	Node0x2364080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%64:\l64:                                               \l  store i64 0, i64* %7, align 8, !dbg !935, !tbaa !868\l  br label %65, !dbg !937\l}"];
	Node0x2364080 -> Node0x23640d0;
	Node0x23640d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%65:\l65:                                               \l  %66 = load i64, i64* %7, align 8, !dbg !938, !tbaa !868\l  %67 = load i64, i64* %6, align 8, !dbg !940, !tbaa !868\l  %68 = icmp ult i64 %66, %67, !dbg !941\l  br i1 %68, label %69, label %80, !dbg !942\l|{<s0>T|<s1>F}}"];
	Node0x23640d0:s0 -> Node0x2364120;
	Node0x23640d0:s1 -> Node0x23acb70;
	Node0x2364120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%69:\l69:                                               \l  %70 = load i8*, i8** %5, align 8, !dbg !943, !tbaa !865\l  %71 = load i64, i64* %7, align 8, !dbg !944, !tbaa !868\l  %72 = getelementptr inbounds i8, i8* %70, i64 %71, !dbg !943\l  %73 = load i8, i8* %72, align 1, !dbg !945, !tbaa !886\l  %74 = zext i8 %73 to i32, !dbg !945\l  %75 = xor i32 %74, 128, !dbg !945\l  %76 = trunc i32 %75 to i8, !dbg !945\l  store i8 %76, i8* %72, align 1, !dbg !945, !tbaa !886\l  br label %77, !dbg !943\l}"];
	Node0x2364120 -> Node0x23acb20;
	Node0x23acb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%77:\l77:                                               \l  %78 = load i64, i64* %7, align 8, !dbg !946, !tbaa !868\l  %79 = add i64 %78, 512, !dbg !946\l  store i64 %79, i64* %7, align 8, !dbg !946, !tbaa !868\l  br label %65, !dbg !947, !llvm.loop !948\l}"];
	Node0x23acb20 -> Node0x23640d0;
	Node0x23acb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%80:\l80:                                               \l  br label %81, !dbg !949\l}"];
	Node0x23acb70 -> Node0x23acbc0;
	Node0x23acbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%81:\l81:                                               \l  %82 = bitcast i32* %8 to i8*, !dbg !950\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %82) #24, !dbg !950\l  %83 = bitcast i64* %7 to i8*, !dbg !950\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #24, !dbg !950\l  ret void, !dbg !950\l}"];
}
