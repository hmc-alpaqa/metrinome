digraph "CFG for 'humblock' function" {
	label="CFG for 'humblock' function";

	Node0x23a2b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i8*, align 8\l  %6 = alloca i64*, align 8\l  %7 = alloca i32*, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = alloca i8*, align 8\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  store i8* %0, i8** %5, align 8, !tbaa !867\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !856, metadata\l... !DIExpression()), !dbg !871\l  store i64* %1, i64** %6, align 8, !tbaa !867\l  call void @llvm.dbg.declare(metadata i64** %6, metadata !857, metadata\l... !DIExpression()), !dbg !872\l  store i32* %2, i32** %7, align 8, !tbaa !867\l  call void @llvm.dbg.declare(metadata i32** %7, metadata !858, metadata\l... !DIExpression()), !dbg !873\l  %13 = bitcast i32* %8 to i8*, !dbg !874\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #24, !dbg !874\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !859, metadata\l... !DIExpression()), !dbg !875\l  %14 = bitcast i32* %9 to i8*, !dbg !876\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #24, !dbg !876\l  call void @llvm.dbg.declare(metadata i32* %9, metadata !860, metadata\l... !DIExpression()), !dbg !877\l  store i32 0, i32* %9, align 4, !dbg !877, !tbaa !878\l  %15 = load i8*, i8** %5, align 8, !dbg !880, !tbaa !867\l  %16 = icmp ne i8* %15, null, !dbg !880\l  br i1 %16, label %26, label %17, !dbg !881\l|{<s0>T|<s1>F}}"];
	Node0x23a2b50:s0 -> Node0x23a49a0;
	Node0x23a2b50:s1 -> Node0x23a48b0;
	Node0x23a48b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%17:\l17:                                               \l  %18 = call i8* @getenv(i8* noundef getelementptr inbounds ([11 x i8], [11 x\l... i8]* @.str.4.116, i64 0, i64 0)) #24, !dbg !882\l  store i8* %18, i8** %5, align 8, !dbg !883, !tbaa !867\l  %19 = icmp ne i8* %18, null, !dbg !883\l  br i1 %19, label %26, label %20, !dbg !884\l|{<s0>T|<s1>F}}"];
	Node0x23a48b0:s0 -> Node0x23a49a0;
	Node0x23a48b0:s1 -> Node0x23a4900;
	Node0x23a4900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%20:\l20:                                               \l  %21 = call i8* @getenv(i8* noundef getelementptr inbounds ([10 x i8], [10 x\l... i8]* @.str.5.117, i64 0, i64 0)) #24, !dbg !885\l  store i8* %21, i8** %5, align 8, !dbg !886, !tbaa !867\l  %22 = icmp ne i8* %21, null, !dbg !886\l  br i1 %22, label %26, label %23, !dbg !887\l|{<s0>T|<s1>F}}"];
	Node0x23a4900:s0 -> Node0x23a49a0;
	Node0x23a4900:s1 -> Node0x23a4950;
	Node0x23a4950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%23:\l23:                                               \l  %24 = call i64 @default_block_size(), !dbg !888\l  %25 = load i64*, i64** %6, align 8, !dbg !889, !tbaa !867\l  store i64 %24, i64* %25, align 8, !dbg !890, !tbaa !891\l  br label %116, !dbg !893\l}"];
	Node0x23a4950 -> Node0x23a50d0;
	Node0x23a49a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%26:\l26:                                               \l  %27 = load i8*, i8** %5, align 8, !dbg !894, !tbaa !867\l  %28 = load i8, i8* %27, align 1, !dbg !896, !tbaa !897\l  %29 = sext i8 %28 to i32, !dbg !896\l  %30 = icmp eq i32 %29, 39, !dbg !898\l  br i1 %30, label %31, label %36, !dbg !899\l|{<s0>T|<s1>F}}"];
	Node0x23a49a0:s0 -> Node0x23a49f0;
	Node0x23a49a0:s1 -> Node0x23a4a40;
	Node0x23a49f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%31:\l31:                                               \l  %32 = load i32, i32* %9, align 4, !dbg !900, !tbaa !878\l  %33 = or i32 %32, 4, !dbg !900\l  store i32 %33, i32* %9, align 4, !dbg !900, !tbaa !878\l  %34 = load i8*, i8** %5, align 8, !dbg !902, !tbaa !867\l  %35 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !902\l  store i8* %35, i8** %5, align 8, !dbg !902, !tbaa !867\l  br label %36, !dbg !903\l}"];
	Node0x23a49f0 -> Node0x23a4a40;
	Node0x23a4a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%36:\l36:                                               \l  %37 = load i8*, i8** %5, align 8, !dbg !904, !tbaa !867\l  %38 = call i64 @argmatch(i8* noundef %37, i8** noundef getelementptr\l... inbounds ([3 x i8*], [3 x i8*]* @block_size_args, i64 0, i64 0), i8* noundef\l... bitcast ([2 x i32]* @block_size_opts to i8*), i64 noundef 4) #25, !dbg !904\l  %39 = trunc i64 %38 to i32, !dbg !904\l  store i32 %39, i32* %8, align 4, !dbg !905, !tbaa !878\l  %40 = icmp sle i32 0, %39, !dbg !906\l  br i1 %40, label %41, label %49, !dbg !907\l|{<s0>T|<s1>F}}"];
	Node0x23a4a40:s0 -> Node0x23a4a90;
	Node0x23a4a40:s1 -> Node0x23a4ae0;
	Node0x23a4a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%41:\l41:                                               \l  %42 = load i32, i32* %8, align 4, !dbg !908, !tbaa !878\l  %43 = sext i32 %42 to i64, !dbg !910\l  %44 = getelementptr inbounds [2 x i32], [2 x i32]* @block_size_opts, i64 0,\l... i64 %43, !dbg !910\l  %45 = load i32, i32* %44, align 4, !dbg !910, !tbaa !878\l  %46 = load i32, i32* %9, align 4, !dbg !911, !tbaa !878\l  %47 = or i32 %46, %45, !dbg !911\l  store i32 %47, i32* %9, align 4, !dbg !911, !tbaa !878\l  %48 = load i64*, i64** %6, align 8, !dbg !912, !tbaa !867\l  store i64 1, i64* %48, align 8, !dbg !913, !tbaa !891\l  br label %115, !dbg !914\l}"];
	Node0x23a4a90 -> Node0x23a5080;
	Node0x23a4ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%49:\l49:                                               \l  %50 = bitcast i8** %10 to i8*, !dbg !915\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #24, !dbg !915\l  call void @llvm.dbg.declare(metadata i8** %10, metadata !861, metadata\l... !DIExpression()), !dbg !916\l  %51 = bitcast i32* %11 to i8*, !dbg !917\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #24, !dbg !917\l  call void @llvm.dbg.declare(metadata i32* %11, metadata !866, metadata\l... !DIExpression()), !dbg !918\l  %52 = load i8*, i8** %5, align 8, !dbg !919, !tbaa !867\l  %53 = load i64*, i64** %6, align 8, !dbg !920, !tbaa !867\l  %54 = call i32 @xstrtoumax(i8* noundef %52, i8** noundef %10, i32 noundef 0,\l... i64* noundef %53, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]*\l... @.str.6.118, i64 0, i64 0)), !dbg !921\l  store i32 %54, i32* %11, align 4, !dbg !918, !tbaa !897\l  %55 = load i32, i32* %11, align 4, !dbg !922, !tbaa !897\l  %56 = icmp ne i32 %55, 0, !dbg !924\l  br i1 %56, label %57, label %60, !dbg !925\l|{<s0>T|<s1>F}}"];
	Node0x23a4ae0:s0 -> Node0x23a4b30;
	Node0x23a4ae0:s1 -> Node0x23a4b80;
	Node0x23a4b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%57:\l57:                                               \l  %58 = load i32*, i32** %7, align 8, !dbg !926, !tbaa !867\l  store i32 0, i32* %58, align 4, !dbg !928, !tbaa !878\l  %59 = load i32, i32* %11, align 4, !dbg !929, !tbaa !897\l  store i32 %59, i32* %4, align 4, !dbg !930\l  store i32 1, i32* %12, align 4\l  br label %110, !dbg !930\l}"];
	Node0x23a4b30 -> Node0x23a4fe0;
	Node0x23a4b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%60:\l60:                                               \l  br label %61, !dbg !931\l}"];
	Node0x23a4b80 -> Node0x23a4bd0;
	Node0x23a4bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = load i8*, i8** %5, align 8, !dbg !932, !tbaa !867\l  %63 = load i8, i8* %62, align 1, !dbg !935, !tbaa !897\l  %64 = sext i8 %63 to i32, !dbg !935\l  %65 = icmp sle i32 48, %64, !dbg !936\l  br i1 %65, label %66, label %71, !dbg !937\l|{<s0>T|<s1>F}}"];
	Node0x23a4bd0:s0 -> Node0x23a4c20;
	Node0x23a4bd0:s1 -> Node0x23a4c70;
	Node0x23a4c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%66:\l66:                                               \l  %67 = load i8*, i8** %5, align 8, !dbg !938, !tbaa !867\l  %68 = load i8, i8* %67, align 1, !dbg !939, !tbaa !897\l  %69 = sext i8 %68 to i32, !dbg !939\l  %70 = icmp sle i32 %69, 57, !dbg !940\l  br label %71\l}"];
	Node0x23a4c20 -> Node0x23a4c70;
	Node0x23a4c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = phi i1 [ false, %61 ], [ %70, %66 ], !dbg !941\l  %73 = xor i1 %72, true, !dbg !942\l  br i1 %73, label %74, label %109, !dbg !943\l|{<s0>T|<s1>F}}"];
	Node0x23a4c70:s0 -> Node0x23a4cc0;
	Node0x23a4c70:s1 -> Node0x23a4f90;
	Node0x23a4cc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%74:\l74:                                               \l  %75 = load i8*, i8** %5, align 8, !dbg !944, !tbaa !867\l  %76 = load i8*, i8** %10, align 8, !dbg !946, !tbaa !867\l  %77 = icmp eq i8* %75, %76, !dbg !947\l  br i1 %77, label %78, label %105, !dbg !948\l|{<s0>T|<s1>F}}"];
	Node0x23a4cc0:s0 -> Node0x23a4d10;
	Node0x23a4cc0:s1 -> Node0x23a4ef0;
	Node0x23a4d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%78:\l78:                                               \l  %79 = load i32, i32* %9, align 4, !dbg !949, !tbaa !878\l  %80 = or i32 %79, 128, !dbg !949\l  store i32 %80, i32* %9, align 4, !dbg !949, !tbaa !878\l  %81 = load i8*, i8** %10, align 8, !dbg !951, !tbaa !867\l  %82 = getelementptr inbounds i8, i8* %81, i64 -1, !dbg !951\l  %83 = load i8, i8* %82, align 1, !dbg !951, !tbaa !897\l  %84 = sext i8 %83 to i32, !dbg !951\l  %85 = icmp eq i32 %84, 66, !dbg !953\l  br i1 %85, label %86, label %89, !dbg !954\l|{<s0>T|<s1>F}}"];
	Node0x23a4d10:s0 -> Node0x23a4d60;
	Node0x23a4d10:s1 -> Node0x23a4db0;
	Node0x23a4d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%86:\l86:                                               \l  %87 = load i32, i32* %9, align 4, !dbg !955, !tbaa !878\l  %88 = or i32 %87, 256, !dbg !955\l  store i32 %88, i32* %9, align 4, !dbg !955, !tbaa !878\l  br label %89, !dbg !956\l}"];
	Node0x23a4d60 -> Node0x23a4db0;
	Node0x23a4db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%89:\l89:                                               \l  %90 = load i8*, i8** %10, align 8, !dbg !957, !tbaa !867\l  %91 = getelementptr inbounds i8, i8* %90, i64 -1, !dbg !957\l  %92 = load i8, i8* %91, align 1, !dbg !957, !tbaa !897\l  %93 = sext i8 %92 to i32, !dbg !957\l  %94 = icmp ne i32 %93, 66, !dbg !959\l  br i1 %94, label %101, label %95, !dbg !960\l|{<s0>T|<s1>F}}"];
	Node0x23a4db0:s0 -> Node0x23a4e50;
	Node0x23a4db0:s1 -> Node0x23a4e00;
	Node0x23a4e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%95:\l95:                                               \l  %96 = load i8*, i8** %10, align 8, !dbg !961, !tbaa !867\l  %97 = getelementptr inbounds i8, i8* %96, i64 -2, !dbg !961\l  %98 = load i8, i8* %97, align 1, !dbg !961, !tbaa !897\l  %99 = sext i8 %98 to i32, !dbg !961\l  %100 = icmp eq i32 %99, 105, !dbg !962\l  br i1 %100, label %101, label %104, !dbg !963\l|{<s0>T|<s1>F}}"];
	Node0x23a4e00:s0 -> Node0x23a4e50;
	Node0x23a4e00:s1 -> Node0x23a4ea0;
	Node0x23a4e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%101:\l101:                                              \l  %102 = load i32, i32* %9, align 4, !dbg !964, !tbaa !878\l  %103 = or i32 %102, 32, !dbg !964\l  store i32 %103, i32* %9, align 4, !dbg !964, !tbaa !878\l  br label %104, !dbg !965\l}"];
	Node0x23a4e50 -> Node0x23a4ea0;
	Node0x23a4ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%104:\l104:                                              \l  br label %109, !dbg !966\l}"];
	Node0x23a4ea0 -> Node0x23a4f90;
	Node0x23a4ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%105:\l105:                                              \l  br label %106, !dbg !946\l}"];
	Node0x23a4ef0 -> Node0x23a4f40;
	Node0x23a4f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%106:\l106:                                              \l  %107 = load i8*, i8** %5, align 8, !dbg !967, !tbaa !867\l  %108 = getelementptr inbounds i8, i8* %107, i32 1, !dbg !967\l  store i8* %108, i8** %5, align 8, !dbg !967, !tbaa !867\l  br label %61, !dbg !968, !llvm.loop !969\l}"];
	Node0x23a4f40 -> Node0x23a4bd0;
	Node0x23a4f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%109:\l109:                                              \l  store i32 0, i32* %12, align 4, !dbg !973\l  br label %110, !dbg !973\l}"];
	Node0x23a4f90 -> Node0x23a4fe0;
	Node0x23a4fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%110:\l110:                                              \l  %111 = bitcast i32* %11 to i8*, !dbg !973\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %111) #24, !dbg !973\l  %112 = bitcast i8** %10 to i8*, !dbg !973\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %112) #24, !dbg !973\l  %113 = load i32, i32* %12, align 4\l  switch i32 %113, label %119 [\l    i32 0, label %114\l  ]\l|{<s0>def|<s1>0}}"];
	Node0x23a4fe0:s0 -> Node0x23a5120;
	Node0x23a4fe0:s1 -> Node0x23a5030;
	Node0x23a5030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%114:\l114:                                              \l  br label %115\l}"];
	Node0x23a5030 -> Node0x23a5080;
	Node0x23a5080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%115:\l115:                                              \l  br label %116\l}"];
	Node0x23a5080 -> Node0x23a50d0;
	Node0x23a50d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%116:\l116:                                              \l  %117 = load i32, i32* %9, align 4, !dbg !974, !tbaa !878\l  %118 = load i32*, i32** %7, align 8, !dbg !975, !tbaa !867\l  store i32 %117, i32* %118, align 4, !dbg !976, !tbaa !878\l  store i32 0, i32* %4, align 4, !dbg !977\l  store i32 1, i32* %12, align 4\l  br label %119, !dbg !977\l}"];
	Node0x23a50d0 -> Node0x23a5120;
	Node0x23a5120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%119:\l119:                                              \l  %120 = bitcast i32* %9 to i8*, !dbg !978\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %120) #24, !dbg !978\l  %121 = bitcast i32* %8 to i8*, !dbg !978\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %121) #24, !dbg !978\l  %122 = load i32, i32* %4, align 4, !dbg !978\l  ret i32 %122, !dbg !978\l}"];
}
