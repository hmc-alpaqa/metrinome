digraph "CFG for 'rotr64' function" {
	label="CFG for 'rotr64' function";

	Node0x26156a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca i32, align 4\l  store i64 %0, i64* %3, align 8, !tbaa !986\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !984, metadata\l... !DIExpression()), !dbg !990\l  store i32 %1, i32* %4, align 4, !tbaa !991\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !985, metadata\l... !DIExpression()), !dbg !993\l  %5 = load i64, i64* %3, align 8, !dbg !994, !tbaa !986\l  %6 = load i32, i32* %4, align 4, !dbg !995, !tbaa !991\l  %7 = zext i32 %6 to i64, !dbg !996\l  %8 = lshr i64 %5, %7, !dbg !996\l  %9 = load i64, i64* %3, align 8, !dbg !997, !tbaa !986\l  %10 = load i32, i32* %4, align 4, !dbg !998, !tbaa !991\l  %11 = sub nsw i32 64, %10, !dbg !999\l  %12 = zext i32 %11 to i64, !dbg !1000\l  %13 = shl i64 %9, %12, !dbg !1000\l  %14 = or i64 %8, %13, !dbg !1001\l  %15 = and i64 %14, -1, !dbg !1002\l  ret i64 %15, !dbg !1003\l}"];
}
