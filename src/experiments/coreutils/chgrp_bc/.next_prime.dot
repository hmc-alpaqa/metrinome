digraph "CFG for 'next_prime' function" {
	label="CFG for 'next_prime' function";

	Node0x24bee80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%1:\l  %2 = alloca i64, align 8\l  store i64 %0, i64* %2, align 8, !tbaa !981\l  call void @llvm.dbg.declare(metadata i64* %2, metadata !980, metadata\l... !DIExpression()), !dbg !985\l  %3 = load i64, i64* %2, align 8, !dbg !986, !tbaa !981\l  %4 = icmp ult i64 %3, 10, !dbg !988\l  br i1 %4, label %5, label %6, !dbg !989\l|{<s0>T|<s1>F}}"];
	Node0x24bee80:s0 -> Node0x24beed0;
	Node0x24bee80:s1 -> Node0x24bef20;
	Node0x24beed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%5:\l5:                                                \l  store i64 10, i64* %2, align 8, !dbg !990, !tbaa !981\l  br label %6, !dbg !991\l}"];
	Node0x24beed0 -> Node0x24bef20;
	Node0x24bef20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%6:\l6:                                                \l  %7 = load i64, i64* %2, align 8, !dbg !992, !tbaa !981\l  %8 = or i64 %7, 1, !dbg !992\l  store i64 %8, i64* %2, align 8, !dbg !992, !tbaa !981\l  br label %9, !dbg !993\l}"];
	Node0x24bef20 -> Node0x24bef70;
	Node0x24bef70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l9:                                                \l  %10 = load i64, i64* %2, align 8, !dbg !994, !tbaa !981\l  %11 = icmp ne i64 -1, %10, !dbg !995\l  br i1 %11, label %12, label %16, !dbg !996\l|{<s0>T|<s1>F}}"];
	Node0x24bef70:s0 -> Node0x24befc0;
	Node0x24bef70:s1 -> Node0x24bf010;
	Node0x24befc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%12:\l12:                                               \l  %13 = load i64, i64* %2, align 8, !dbg !997, !tbaa !981\l  %14 = call zeroext i1 @is_prime(i64 noundef %13) #22, !dbg !998\l  %15 = xor i1 %14, true, !dbg !999\l  br label %16\l}"];
	Node0x24befc0 -> Node0x24bf010;
	Node0x24bf010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  %17 = phi i1 [ false, %9 ], [ %15, %12 ], !dbg !1000\l  br i1 %17, label %18, label %21, !dbg !993\l|{<s0>T|<s1>F}}"];
	Node0x24bf010:s0 -> Node0x24bf060;
	Node0x24bf010:s1 -> Node0x24bf0b0;
	Node0x24bf060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%18:\l18:                                               \l  %19 = load i64, i64* %2, align 8, !dbg !1001, !tbaa !981\l  %20 = add i64 %19, 2, !dbg !1001\l  store i64 %20, i64* %2, align 8, !dbg !1001, !tbaa !981\l  br label %9, !dbg !993, !llvm.loop !1002\l}"];
	Node0x24bf060 -> Node0x24bef70;
	Node0x24bf0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%21:\l21:                                               \l  %22 = load i64, i64* %2, align 8, !dbg !1006, !tbaa !981\l  ret i64 %22, !dbg !1007\l}"];
}
