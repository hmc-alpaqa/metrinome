digraph "CFG for 'is_prime' function" {
	label="CFG for 'is_prime' function";

	Node0x14b4600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%1:\l  %2 = alloca i64, align 8\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  store i64 %0, i64* %2, align 8, !tbaa !1507\l  call void @llvm.dbg.declare(metadata i64* %2, metadata !1504, metadata\l... !DIExpression()), !dbg !1511\l  %5 = bitcast i64* %3 to i8*, !dbg !1512\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #26, !dbg !1512\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !1505, metadata\l... !DIExpression()), !dbg !1513\l  store i64 3, i64* %3, align 8, !dbg !1513, !tbaa !1507\l  %6 = bitcast i64* %4 to i8*, !dbg !1514\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #26, !dbg !1514\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !1506, metadata\l... !DIExpression()), !dbg !1515\l  %7 = load i64, i64* %3, align 8, !dbg !1516, !tbaa !1507\l  %8 = load i64, i64* %3, align 8, !dbg !1517, !tbaa !1507\l  %9 = mul i64 %7, %8, !dbg !1518\l  store i64 %9, i64* %4, align 8, !dbg !1515, !tbaa !1507\l  br label %10, !dbg !1519\l}"];
	Node0x14b4600 -> Node0x14b5de0;
	Node0x14b5de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l10:                                               \l  %11 = load i64, i64* %4, align 8, !dbg !1520, !tbaa !1507\l  %12 = load i64, i64* %2, align 8, !dbg !1521, !tbaa !1507\l  %13 = icmp ult i64 %11, %12, !dbg !1522\l  br i1 %13, label %14, label %19, !dbg !1523\l|{<s0>T|<s1>F}}"];
	Node0x14b5de0:s0 -> Node0x14b5e70;
	Node0x14b5de0:s1 -> Node0x14b5ec0;
	Node0x14b5e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%14:\l14:                                               \l  %15 = load i64, i64* %2, align 8, !dbg !1524, !tbaa !1507\l  %16 = load i64, i64* %3, align 8, !dbg !1525, !tbaa !1507\l  %17 = urem i64 %15, %16, !dbg !1526\l  %18 = icmp ne i64 %17, 0, !dbg !1523\l  br label %19\l}"];
	Node0x14b5e70 -> Node0x14b5ec0;
	Node0x14b5ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = phi i1 [ false, %10 ], [ %18, %14 ], !dbg !1527\l  br i1 %20, label %21, label %30, !dbg !1519\l|{<s0>T|<s1>F}}"];
	Node0x14b5ec0:s0 -> Node0x14b5f10;
	Node0x14b5ec0:s1 -> Node0x14b5f60;
	Node0x14b5f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%21:\l21:                                               \l  %22 = load i64, i64* %3, align 8, !dbg !1528, !tbaa !1507\l  %23 = add i64 %22, 1, !dbg !1528\l  store i64 %23, i64* %3, align 8, !dbg !1528, !tbaa !1507\l  %24 = load i64, i64* %3, align 8, !dbg !1530, !tbaa !1507\l  %25 = mul i64 4, %24, !dbg !1531\l  %26 = load i64, i64* %4, align 8, !dbg !1532, !tbaa !1507\l  %27 = add i64 %26, %25, !dbg !1532\l  store i64 %27, i64* %4, align 8, !dbg !1532, !tbaa !1507\l  %28 = load i64, i64* %3, align 8, !dbg !1533, !tbaa !1507\l  %29 = add i64 %28, 1, !dbg !1533\l  store i64 %29, i64* %3, align 8, !dbg !1533, !tbaa !1507\l  br label %10, !dbg !1519, !llvm.loop !1534\l}"];
	Node0x14b5f10 -> Node0x14b5de0;
	Node0x14b5f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%30:\l30:                                               \l  %31 = load i64, i64* %2, align 8, !dbg !1538, !tbaa !1507\l  %32 = load i64, i64* %3, align 8, !dbg !1539, !tbaa !1507\l  %33 = urem i64 %31, %32, !dbg !1540\l  %34 = icmp ne i64 %33, 0, !dbg !1538\l  %35 = zext i1 %34 to i64, !dbg !1538\l  %36 = select i1 %34, i32 1, i32 0, !dbg !1538\l  %37 = icmp ne i32 %36, 0, !dbg !1541\l  %38 = bitcast i64* %4 to i8*, !dbg !1542\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #26, !dbg !1542\l  %39 = bitcast i64* %3 to i8*, !dbg !1542\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #26, !dbg !1542\l  ret i1 %37, !dbg !1543\l}"];
}
