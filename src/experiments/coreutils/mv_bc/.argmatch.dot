digraph "CFG for 'argmatch' function" {
	label="CFG for 'argmatch' function";

	Node0x12d1af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i8**, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i8, align 1\l  %14 = alloca i32, align 4\l  store i8* %0, i8** %6, align 8, !tbaa !1513\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1505, metadata\l... !DIExpression()), !dbg !1517\l  store i8** %1, i8*** %7, align 8, !tbaa !1513\l  call void @llvm.dbg.declare(metadata i8*** %7, metadata !1506, metadata\l... !DIExpression()), !dbg !1518\l  store i8* %2, i8** %8, align 8, !tbaa !1513\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1507, metadata\l... !DIExpression()), !dbg !1519\l  store i64 %3, i64* %9, align 8, !tbaa !1520\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1508, metadata\l... !DIExpression()), !dbg !1522\l  %15 = bitcast i64* %10 to i8*, !dbg !1523\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #26, !dbg !1523\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1509, metadata\l... !DIExpression()), !dbg !1524\l  %16 = bitcast i64* %11 to i8*, !dbg !1525\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #26, !dbg !1525\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1510, metadata\l... !DIExpression()), !dbg !1526\l  %17 = bitcast i64* %12 to i8*, !dbg !1527\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #26, !dbg !1527\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1511, metadata\l... !DIExpression()), !dbg !1528\l  store i64 -1, i64* %12, align 8, !dbg !1528, !tbaa !1520\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #26, !dbg !1529\l  call void @llvm.dbg.declare(metadata i8* %13, metadata !1512, metadata\l... !DIExpression()), !dbg !1530\l  store i8 0, i8* %13, align 1, !dbg !1530, !tbaa !1531\l  %18 = load i8*, i8** %6, align 8, !dbg !1533, !tbaa !1513\l  %19 = call i64 @strlen(i8* noundef %18) #27, !dbg !1534\l  store i64 %19, i64* %11, align 8, !dbg !1535, !tbaa !1520\l  store i64 0, i64* %10, align 8, !dbg !1536, !tbaa !1520\l  br label %20, !dbg !1538\l}"];
	Node0x12d1af0 -> Node0x12d1be0;
	Node0x12d1be0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = load i8**, i8*** %7, align 8, !dbg !1539, !tbaa !1513\l  %22 = load i64, i64* %10, align 8, !dbg !1541, !tbaa !1520\l  %23 = getelementptr inbounds i8*, i8** %21, i64 %22, !dbg !1539\l  %24 = load i8*, i8** %23, align 8, !dbg !1539, !tbaa !1513\l  %25 = icmp ne i8* %24, null, !dbg !1542\l  br i1 %25, label %26, label %75, !dbg !1542\l|{<s0>T|<s1>F}}"];
	Node0x12d1be0:s0 -> Node0x12d1c30;
	Node0x12d1be0:s1 -> Node0x12d2040;
	Node0x12d1c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i8**, i8*** %7, align 8, !dbg !1543, !tbaa !1513\l  %28 = load i64, i64* %10, align 8, !dbg !1546, !tbaa !1520\l  %29 = getelementptr inbounds i8*, i8** %27, i64 %28, !dbg !1543\l  %30 = load i8*, i8** %29, align 8, !dbg !1543, !tbaa !1513\l  %31 = load i8*, i8** %6, align 8, !dbg !1547, !tbaa !1513\l  %32 = load i64, i64* %11, align 8, !dbg !1548, !tbaa !1520\l  %33 = call i32 @strncmp(i8* noundef %30, i8* noundef %31, i64 noundef %32)\l... #27, !dbg !1549\l  %34 = icmp ne i32 %33, 0, !dbg !1549\l  br i1 %34, label %71, label %35, !dbg !1550\l|{<s0>T|<s1>F}}"];
	Node0x12d1c30:s0 -> Node0x12d1fa0;
	Node0x12d1c30:s1 -> Node0x12d1c80;
	Node0x12d1c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%35:\l35:                                               \l  %36 = load i8**, i8*** %7, align 8, !dbg !1551, !tbaa !1513\l  %37 = load i64, i64* %10, align 8, !dbg !1554, !tbaa !1520\l  %38 = getelementptr inbounds i8*, i8** %36, i64 %37, !dbg !1551\l  %39 = load i8*, i8** %38, align 8, !dbg !1551, !tbaa !1513\l  %40 = call i64 @strlen(i8* noundef %39) #27, !dbg !1555\l  %41 = load i64, i64* %11, align 8, !dbg !1556, !tbaa !1520\l  %42 = icmp eq i64 %40, %41, !dbg !1557\l  br i1 %42, label %43, label %45, !dbg !1558\l|{<s0>T|<s1>F}}"];
	Node0x12d1c80:s0 -> Node0x12d1cd0;
	Node0x12d1c80:s1 -> Node0x12d1d20;
	Node0x12d1cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%43:\l43:                                               \l  %44 = load i64, i64* %10, align 8, !dbg !1559, !tbaa !1520\l  store i64 %44, i64* %5, align 8, !dbg !1560\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1560\l}"];
	Node0x12d1cd0 -> Node0x12d2130;
	Node0x12d1d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%45:\l45:                                               \l  %46 = load i64, i64* %12, align 8, !dbg !1561, !tbaa !1520\l  %47 = icmp eq i64 %46, -1, !dbg !1563\l  br i1 %47, label %48, label %50, !dbg !1564\l|{<s0>T|<s1>F}}"];
	Node0x12d1d20:s0 -> Node0x12d1d70;
	Node0x12d1d20:s1 -> Node0x12d1dc0;
	Node0x12d1d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%48:\l48:                                               \l  %49 = load i64, i64* %10, align 8, !dbg !1565, !tbaa !1520\l  store i64 %49, i64* %12, align 8, !dbg !1566, !tbaa !1520\l  br label %69, !dbg !1567\l}"];
	Node0x12d1d70 -> Node0x12d1f00;
	Node0x12d1dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%50:\l50:                                               \l  %51 = load i8*, i8** %8, align 8, !dbg !1568, !tbaa !1513\l  %52 = icmp eq i8* %51, null, !dbg !1571\l  br i1 %52, label %67, label %53, !dbg !1572\l|{<s0>T|<s1>F}}"];
	Node0x12d1dc0:s0 -> Node0x12d1e60;
	Node0x12d1dc0:s1 -> Node0x12d1e10;
	Node0x12d1e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%53:\l53:                                               \l  %54 = load i8*, i8** %8, align 8, !dbg !1573, !tbaa !1513\l  %55 = load i64, i64* %9, align 8, !dbg !1574, !tbaa !1520\l  %56 = load i64, i64* %12, align 8, !dbg !1575, !tbaa !1520\l  %57 = mul i64 %55, %56, !dbg !1576\l  %58 = getelementptr inbounds i8, i8* %54, i64 %57, !dbg !1577\l  %59 = load i8*, i8** %8, align 8, !dbg !1578, !tbaa !1513\l  %60 = load i64, i64* %9, align 8, !dbg !1579, !tbaa !1520\l  %61 = load i64, i64* %10, align 8, !dbg !1580, !tbaa !1520\l  %62 = mul i64 %60, %61, !dbg !1581\l  %63 = getelementptr inbounds i8, i8* %59, i64 %62, !dbg !1582\l  %64 = load i64, i64* %9, align 8, !dbg !1583, !tbaa !1520\l  %65 = call i32 @memcmp(i8* noundef %58, i8* noundef %63, i64 noundef %64)\l... #27, !dbg !1584\l  %66 = icmp ne i32 %65, 0, !dbg !1584\l  br i1 %66, label %67, label %68, !dbg !1585\l|{<s0>T|<s1>F}}"];
	Node0x12d1e10:s0 -> Node0x12d1e60;
	Node0x12d1e10:s1 -> Node0x12d1eb0;
	Node0x12d1e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%67:\l67:                                               \l  store i8 1, i8* %13, align 1, !dbg !1586, !tbaa !1531\l  br label %68, !dbg !1588\l}"];
	Node0x12d1e60 -> Node0x12d1eb0;
	Node0x12d1eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%68:\l68:                                               \l  br label %69\l}"];
	Node0x12d1eb0 -> Node0x12d1f00;
	Node0x12d1f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%69:\l69:                                               \l  br label %70\l}"];
	Node0x12d1f00 -> Node0x12d1f50;
	Node0x12d1f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%70:\l70:                                               \l  br label %71, !dbg !1589\l}"];
	Node0x12d1f50 -> Node0x12d1fa0;
	Node0x12d1fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%71:\l71:                                               \l  br label %72, !dbg !1590\l}"];
	Node0x12d1fa0 -> Node0x12d1ff0;
	Node0x12d1ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%72:\l72:                                               \l  %73 = load i64, i64* %10, align 8, !dbg !1591, !tbaa !1520\l  %74 = add i64 %73, 1, !dbg !1591\l  store i64 %74, i64* %10, align 8, !dbg !1591, !tbaa !1520\l  br label %20, !dbg !1592, !llvm.loop !1593\l}"];
	Node0x12d1ff0 -> Node0x12d1be0;
	Node0x12d2040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%75:\l75:                                               \l  %76 = load i8, i8* %13, align 1, !dbg !1597, !tbaa !1531, !range !1599\l  %77 = trunc i8 %76 to i1, !dbg !1597\l  br i1 %77, label %78, label %79, !dbg !1600\l|{<s0>T|<s1>F}}"];
	Node0x12d2040:s0 -> Node0x12d2090;
	Node0x12d2040:s1 -> Node0x12d20e0;
	Node0x12d2090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%78:\l78:                                               \l  store i64 -2, i64* %5, align 8, !dbg !1601\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1601\l}"];
	Node0x12d2090 -> Node0x12d2130;
	Node0x12d20e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%79:\l79:                                               \l  %80 = load i64, i64* %12, align 8, !dbg !1602, !tbaa !1520\l  store i64 %80, i64* %5, align 8, !dbg !1603\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1603\l}"];
	Node0x12d20e0 -> Node0x12d2130;
	Node0x12d2130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%81:\l81:                                               \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #26, !dbg !1604\l  %82 = bitcast i64* %12 to i8*, !dbg !1604\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #26, !dbg !1604\l  %83 = bitcast i64* %11 to i8*, !dbg !1604\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #26, !dbg !1604\l  %84 = bitcast i64* %10 to i8*, !dbg !1604\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #26, !dbg !1604\l  %85 = load i64, i64* %5, align 8, !dbg !1604\l  ret i64 %85, !dbg !1604\l}"];
}
