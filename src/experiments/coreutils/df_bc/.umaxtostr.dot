digraph "CFG for 'umaxtostr' function" {
	label="CFG for 'umaxtostr' function";

	Node0x128bc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i8*, align 8\l  store i64 %0, i64* %3, align 8, !tbaa !1250\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !1247, metadata\l... !DIExpression()), !dbg !1254\l  store i8* %1, i8** %4, align 8, !tbaa !1255\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !1248, metadata\l... !DIExpression()), !dbg !1257\l  %6 = bitcast i8** %5 to i8*, !dbg !1258\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #26, !dbg !1258\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !1249, metadata\l... !DIExpression()), !dbg !1259\l  %7 = load i8*, i8** %4, align 8, !dbg !1260, !tbaa !1255\l  %8 = getelementptr inbounds i8, i8* %7, i64 20, !dbg !1261\l  store i8* %8, i8** %5, align 8, !dbg !1259, !tbaa !1255\l  %9 = load i8*, i8** %5, align 8, !dbg !1262, !tbaa !1255\l  store i8 0, i8* %9, align 1, !dbg !1263, !tbaa !1264\l  %10 = load i64, i64* %3, align 8, !dbg !1265, !tbaa !1250\l  %11 = icmp ult i64 %10, 0, !dbg !1267\l  br i1 %11, label %12, label %27, !dbg !1268\l|{<s0>T|<s1>F}}"];
	Node0x128bc80:s0 -> Node0x128c230;
	Node0x128bc80:s1 -> Node0x128c370;
	Node0x128c230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%12:\l12:                                               \l  br label %13, !dbg !1269\l}"];
	Node0x128c230 -> Node0x128c280;
	Node0x128c280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%13:\l13:                                               \l  %14 = load i64, i64* %3, align 8, !dbg !1271, !tbaa !1250\l  %15 = urem i64 %14, 10, !dbg !1272\l  %16 = sub i64 48, %15, !dbg !1273\l  %17 = trunc i64 %16 to i8, !dbg !1274\l  %18 = load i8*, i8** %5, align 8, !dbg !1275, !tbaa !1255\l  %19 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !1275\l  store i8* %19, i8** %5, align 8, !dbg !1275, !tbaa !1255\l  store i8 %17, i8* %19, align 1, !dbg !1276, !tbaa !1264\l  br label %20, !dbg !1277\l}"];
	Node0x128c280 -> Node0x128c2d0;
	Node0x128c2d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = load i64, i64* %3, align 8, !dbg !1278, !tbaa !1250\l  %22 = udiv i64 %21, 10, !dbg !1278\l  store i64 %22, i64* %3, align 8, !dbg !1278, !tbaa !1250\l  %23 = icmp ne i64 %22, 0, !dbg !1279\l  br i1 %23, label %13, label %24, !dbg !1277, !llvm.loop !1280\l|{<s0>T|<s1>F}}"];
	Node0x128c2d0:s0 -> Node0x128c280;
	Node0x128c2d0:s1 -> Node0x128c320;
	Node0x128c320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%24:\l24:                                               \l  %25 = load i8*, i8** %5, align 8, !dbg !1284, !tbaa !1255\l  %26 = getelementptr inbounds i8, i8* %25, i32 -1, !dbg !1284\l  store i8* %26, i8** %5, align 8, !dbg !1284, !tbaa !1255\l  store i8 45, i8* %26, align 1, !dbg !1285, !tbaa !1264\l  br label %40, !dbg !1286\l}"];
	Node0x128c320 -> Node0x128c4b0;
	Node0x128c370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%27:\l27:                                               \l  br label %28, !dbg !1287\l}"];
	Node0x128c370 -> Node0x128c3c0;
	Node0x128c3c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = load i64, i64* %3, align 8, !dbg !1289, !tbaa !1250\l  %30 = urem i64 %29, 10, !dbg !1290\l  %31 = add i64 48, %30, !dbg !1291\l  %32 = trunc i64 %31 to i8, !dbg !1292\l  %33 = load i8*, i8** %5, align 8, !dbg !1293, !tbaa !1255\l  %34 = getelementptr inbounds i8, i8* %33, i32 -1, !dbg !1293\l  store i8* %34, i8** %5, align 8, !dbg !1293, !tbaa !1255\l  store i8 %32, i8* %34, align 1, !dbg !1294, !tbaa !1264\l  br label %35, !dbg !1295\l}"];
	Node0x128c3c0 -> Node0x128c410;
	Node0x128c410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = load i64, i64* %3, align 8, !dbg !1296, !tbaa !1250\l  %37 = udiv i64 %36, 10, !dbg !1296\l  store i64 %37, i64* %3, align 8, !dbg !1296, !tbaa !1250\l  %38 = icmp ne i64 %37, 0, !dbg !1297\l  br i1 %38, label %28, label %39, !dbg !1295, !llvm.loop !1298\l|{<s0>T|<s1>F}}"];
	Node0x128c410:s0 -> Node0x128c3c0;
	Node0x128c410:s1 -> Node0x128c460;
	Node0x128c460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%39:\l39:                                               \l  br label %40\l}"];
	Node0x128c460 -> Node0x128c4b0;
	Node0x128c4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%40:\l40:                                               \l  %41 = load i8*, i8** %5, align 8, !dbg !1300, !tbaa !1255\l  %42 = bitcast i8** %5 to i8*, !dbg !1301\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #26, !dbg !1301\l  ret i8* %41, !dbg !1302\l}"];
}
