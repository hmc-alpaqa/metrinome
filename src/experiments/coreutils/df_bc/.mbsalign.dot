digraph "CFG for 'mbsalign' function" {
	label="CFG for 'mbsalign' function";

	Node0x128c500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = alloca i64, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i8*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64*, align 8\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i8*, align 8\l  %17 = alloca i32*, align 8\l  %18 = alloca i8*, align 8\l  %19 = alloca i64, align 8\l  %20 = alloca i64, align 8\l  %21 = alloca i64, align 8\l  %22 = alloca i8, align 1\l  %23 = alloca i8, align 1\l  %24 = alloca i64, align 8\l  %25 = alloca i32, align 4\l  %26 = alloca i64, align 8\l  %27 = alloca i64, align 8\l  %28 = alloca i64, align 8\l  %29 = alloca i8*, align 8\l  store i8* %0, i8** %8, align 8, !tbaa !1275\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1246, metadata\l... !DIExpression()), !dbg !1279\l  store i8* %1, i8** %9, align 8, !tbaa !1275\l  call void @llvm.dbg.declare(metadata i8** %9, metadata !1247, metadata\l... !DIExpression()), !dbg !1280\l  store i64 %2, i64* %10, align 8, !tbaa !1281\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1248, metadata\l... !DIExpression()), !dbg !1283\l  store i64* %3, i64** %11, align 8, !tbaa !1275\l  call void @llvm.dbg.declare(metadata i64** %11, metadata !1249, metadata\l... !DIExpression()), !dbg !1284\l  store i32 %4, i32* %12, align 4, !tbaa !1285\l  call void @llvm.dbg.declare(metadata i32* %12, metadata !1250, metadata\l... !DIExpression()), !dbg !1286\l  store i32 %5, i32* %13, align 4, !tbaa !1287\l  call void @llvm.dbg.declare(metadata i32* %13, metadata !1251, metadata\l... !DIExpression()), !dbg !1289\l  %30 = bitcast i64* %14 to i8*, !dbg !1290\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #26, !dbg !1290\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !1252, metadata\l... !DIExpression()), !dbg !1291\l  store i64 -1, i64* %14, align 8, !dbg !1291, !tbaa !1281\l  %31 = bitcast i64* %15 to i8*, !dbg !1292\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #26, !dbg !1292\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !1253, metadata\l... !DIExpression()), !dbg !1293\l  %32 = load i8*, i8** %8, align 8, !dbg !1294, !tbaa !1275\l  %33 = call i64 @strlen(i8* noundef %32) #27, !dbg !1295\l  %34 = add i64 %33, 1, !dbg !1296\l  store i64 %34, i64* %15, align 8, !dbg !1293, !tbaa !1281\l  %35 = bitcast i8** %16 to i8*, !dbg !1297\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #26, !dbg !1297\l  call void @llvm.dbg.declare(metadata i8** %16, metadata !1254, metadata\l... !DIExpression()), !dbg !1298\l  store i8* null, i8** %16, align 8, !dbg !1298, !tbaa !1275\l  %36 = bitcast i32** %17 to i8*, !dbg !1299\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #26, !dbg !1299\l  call void @llvm.dbg.declare(metadata i32** %17, metadata !1255, metadata\l... !DIExpression()), !dbg !1300\l  store i32* null, i32** %17, align 8, !dbg !1300, !tbaa !1275\l  %37 = bitcast i8** %18 to i8*, !dbg !1301\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #26, !dbg !1301\l  call void @llvm.dbg.declare(metadata i8** %18, metadata !1257, metadata\l... !DIExpression()), !dbg !1302\l  %38 = load i8*, i8** %8, align 8, !dbg !1303, !tbaa !1275\l  store i8* %38, i8** %18, align 8, !dbg !1302, !tbaa !1275\l  %39 = bitcast i64* %19 to i8*, !dbg !1304\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #26, !dbg !1304\l  call void @llvm.dbg.declare(metadata i64* %19, metadata !1258, metadata\l... !DIExpression()), !dbg !1305\l  %40 = load i64, i64* %15, align 8, !dbg !1306, !tbaa !1281\l  %41 = sub i64 %40, 1, !dbg !1307\l  store i64 %41, i64* %19, align 8, !dbg !1305, !tbaa !1281\l  %42 = bitcast i64* %20 to i8*, !dbg !1308\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #26, !dbg !1308\l  call void @llvm.dbg.declare(metadata i64* %20, metadata !1259, metadata\l... !DIExpression()), !dbg !1309\l  %43 = load i64, i64* %19, align 8, !dbg !1310, !tbaa !1281\l  store i64 %43, i64* %20, align 8, !dbg !1309, !tbaa !1281\l  %44 = bitcast i64* %21 to i8*, !dbg !1311\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #26, !dbg !1311\l  call void @llvm.dbg.declare(metadata i64* %21, metadata !1260, metadata\l... !DIExpression()), !dbg !1312\l  store i64 0, i64* %21, align 8, !dbg !1312, !tbaa !1281\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #26, !dbg !1313\l  call void @llvm.dbg.declare(metadata i8* %22, metadata !1261, metadata\l... !DIExpression()), !dbg !1314\l  store i8 0, i8* %22, align 1, !dbg !1314, !tbaa !1315\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %23) #26, !dbg !1317\l  call void @llvm.dbg.declare(metadata i8* %23, metadata !1262, metadata\l... !DIExpression()), !dbg !1318\l  store i8 0, i8* %23, align 1, !dbg !1318, !tbaa !1315\l  %45 = load i32, i32* %13, align 4, !dbg !1319, !tbaa !1287\l  %46 = and i32 %45, 2, !dbg !1320\l  %47 = icmp ne i32 %46, 0, !dbg !1320\l  br i1 %47, label %101, label %48, !dbg !1321\l|{<s0>T|<s1>F}}"];
	Node0x128c500:s0 -> Node0x12932d0;
	Node0x128c500:s1 -> Node0x128f5b0;
	Node0x128f5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%48:\l48:                                               \l  %49 = call i64 @__ctype_get_mb_cur_max() #26, !dbg !1322\l  %50 = icmp ugt i64 %49, 1, !dbg !1323\l  br i1 %50, label %51, label %101, !dbg !1324\l|{<s0>T|<s1>F}}"];
	Node0x128f5b0:s0 -> Node0x1292ec0;
	Node0x128f5b0:s1 -> Node0x12932d0;
	Node0x1292ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%51:\l51:                                               \l  %52 = bitcast i64* %24 to i8*, !dbg !1325\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #26, !dbg !1325\l  call void @llvm.dbg.declare(metadata i64* %24, metadata !1263, metadata\l... !DIExpression()), !dbg !1326\l  %53 = load i8*, i8** %8, align 8, !dbg !1327, !tbaa !1275\l  %54 = call i64 @mbstowcs(i32* noundef null, i8* noundef %53, i64 noundef 0)\l... #26, !dbg !1328\l  store i64 %54, i64* %24, align 8, !dbg !1326, !tbaa !1281\l  %55 = load i64, i64* %24, align 8, !dbg !1329, !tbaa !1281\l  %56 = icmp eq i64 %55, -1, !dbg !1331\l  br i1 %56, label %57, label %63, !dbg !1332\l|{<s0>T|<s1>F}}"];
	Node0x1292ec0:s0 -> Node0x1292f10;
	Node0x1292ec0:s1 -> Node0x1293000;
	Node0x1292f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%57:\l57:                                               \l  %58 = load i32, i32* %13, align 4, !dbg !1333, !tbaa !1287\l  %59 = and i32 %58, 1, !dbg !1336\l  %60 = icmp ne i32 %59, 0, !dbg !1336\l  br i1 %60, label %61, label %62, !dbg !1337\l|{<s0>T|<s1>F}}"];
	Node0x1292f10:s0 -> Node0x1292f60;
	Node0x1292f10:s1 -> Node0x1292fb0;
	Node0x1292f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%61:\l61:                                               \l  store i32 2, i32* %25, align 4\l  br label %97, !dbg !1338\l}"];
	Node0x1292f60 -> Node0x1293230;
	Node0x1292fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%62:\l62:                                               \l  store i32 3, i32* %25, align 4\l  br label %97, !dbg !1339\l}"];
	Node0x1292fb0 -> Node0x1293230;
	Node0x1293000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%63:\l63:                                               \l  %64 = load i64, i64* %24, align 8, !dbg !1340, !tbaa !1281\l  %65 = add i64 %64, 1, !dbg !1340\l  store i64 %65, i64* %24, align 8, !dbg !1340, !tbaa !1281\l  %66 = load i64, i64* %24, align 8, !dbg !1341, !tbaa !1281\l  %67 = mul i64 %66, 4, !dbg !1342\l  %68 = call noalias i8* @malloc(i64 noundef %67) #26, !dbg !1343\l  %69 = bitcast i8* %68 to i32*, !dbg !1343\l  store i32* %69, i32** %17, align 8, !dbg !1344, !tbaa !1275\l  %70 = load i32*, i32** %17, align 8, !dbg !1345, !tbaa !1275\l  %71 = icmp eq i32* %70, null, !dbg !1347\l  br i1 %71, label %72, label %78, !dbg !1348\l|{<s0>T|<s1>F}}"];
	Node0x1293000:s0 -> Node0x1293050;
	Node0x1293000:s1 -> Node0x1293140;
	Node0x1293050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%72:\l72:                                               \l  %73 = load i32, i32* %13, align 4, !dbg !1349, !tbaa !1287\l  %74 = and i32 %73, 1, !dbg !1352\l  %75 = icmp ne i32 %74, 0, !dbg !1352\l  br i1 %75, label %76, label %77, !dbg !1353\l|{<s0>T|<s1>F}}"];
	Node0x1293050:s0 -> Node0x12930a0;
	Node0x1293050:s1 -> Node0x12930f0;
	Node0x12930a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%76:\l76:                                               \l  store i32 2, i32* %25, align 4\l  br label %97, !dbg !1354\l}"];
	Node0x12930a0 -> Node0x1293230;
	Node0x12930f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%77:\l77:                                               \l  store i32 3, i32* %25, align 4\l  br label %97, !dbg !1355\l}"];
	Node0x12930f0 -> Node0x1293230;
	Node0x1293140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%78:\l78:                                               \l  %79 = load i32*, i32** %17, align 8, !dbg !1356, !tbaa !1275\l  %80 = load i8*, i8** %8, align 8, !dbg !1358, !tbaa !1275\l  %81 = load i64, i64* %24, align 8, !dbg !1359, !tbaa !1281\l  %82 = call i64 @mbstowcs(i32* noundef %79, i8* noundef %80, i64 noundef %81)\l... #26, !dbg !1360\l  %83 = icmp ne i64 %82, 0, !dbg !1361\l  br i1 %83, label %84, label %96, !dbg !1362\l|{<s0>T|<s1>F}}"];
	Node0x1293140:s0 -> Node0x1293190;
	Node0x1293140:s1 -> Node0x12931e0;
	Node0x1293190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%84:\l84:                                               \l  %85 = load i32*, i32** %17, align 8, !dbg !1363, !tbaa !1275\l  %86 = load i64, i64* %24, align 8, !dbg !1365, !tbaa !1281\l  %87 = sub i64 %86, 1, !dbg !1366\l  %88 = getelementptr inbounds i32, i32* %85, i64 %87, !dbg !1363\l  store i32 0, i32* %88, align 4, !dbg !1367, !tbaa !1287\l  store i8 1, i8* %23, align 1, !dbg !1368, !tbaa !1315\l  %89 = load i32*, i32** %17, align 8, !dbg !1369, !tbaa !1275\l  %90 = call zeroext i1 @wc_ensure_printable(i32* noundef %89), !dbg !1370\l  %91 = zext i1 %90 to i8, !dbg !1371\l  store i8 %91, i8* %22, align 1, !dbg !1371, !tbaa !1315\l  %92 = load i32*, i32** %17, align 8, !dbg !1372, !tbaa !1275\l  %93 = load i64, i64* %24, align 8, !dbg !1373, !tbaa !1281\l  %94 = call i32 @wcswidth(i32* noundef %92, i64 noundef %93) #26, !dbg !1374\l  %95 = sext i32 %94 to i64, !dbg !1374\l  store i64 %95, i64* %19, align 8, !dbg !1375, !tbaa !1281\l  br label %96, !dbg !1376\l}"];
	Node0x1293190 -> Node0x12931e0;
	Node0x12931e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%96:\l96:                                               \l  store i32 0, i32* %25, align 4, !dbg !1377\l  br label %97, !dbg !1377\l}"];
	Node0x12931e0 -> Node0x1293230;
	Node0x1293230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%97:\l97:                                               \l  %98 = bitcast i64* %24 to i8*, !dbg !1377\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #26, !dbg !1377\l  %99 = load i32, i32* %25, align 4\l  switch i32 %99, label %240 [\l    i32 0, label %100\l    i32 2, label %141\l    i32 3, label %235\l  ]\l|{<s0>def|<s1>0|<s2>2|<s3>3}}"];
	Node0x1293230:s0 -> Node0x1293c80;
	Node0x1293230:s1 -> Node0x1293280;
	Node0x1293230:s2 -> Node0x1293640;
	Node0x1293230:s3 -> Node0x1293c30;
	Node0x1293280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%100:\l100:                                              \l  br label %101, !dbg !1378\l}"];
	Node0x1293280 -> Node0x12932d0;
	Node0x12932d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%101:\l101:                                              \l  %102 = load i8, i8* %23, align 1, !dbg !1379, !tbaa !1315, !range !1381\l  %103 = trunc i8 %102 to i1, !dbg !1379\l  br i1 %103, label %104, label %140, !dbg !1382\l|{<s0>T|<s1>F}}"];
	Node0x12932d0:s0 -> Node0x1293320;
	Node0x12932d0:s1 -> Node0x12935f0;
	Node0x1293320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%104:\l104:                                              \l  %105 = load i8, i8* %22, align 1, !dbg !1383, !tbaa !1315, !range !1381\l  %106 = trunc i8 %105 to i1, !dbg !1383\l  br i1 %106, label %112, label %107, !dbg !1384\l|{<s0>T|<s1>F}}"];
	Node0x1293320:s0 -> Node0x12933c0;
	Node0x1293320:s1 -> Node0x1293370;
	Node0x1293370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%107:\l107:                                              \l  %108 = load i64, i64* %19, align 8, !dbg !1385, !tbaa !1281\l  %109 = load i64*, i64** %11, align 8, !dbg !1386, !tbaa !1275\l  %110 = load i64, i64* %109, align 8, !dbg !1387, !tbaa !1281\l  %111 = icmp ugt i64 %108, %110, !dbg !1388\l  br i1 %111, label %112, label %140, !dbg !1389\l|{<s0>T|<s1>F}}"];
	Node0x1293370:s0 -> Node0x12933c0;
	Node0x1293370:s1 -> Node0x12935f0;
	Node0x12933c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%112:\l112:                                              \l  %113 = load i8, i8* %22, align 1, !dbg !1390, !tbaa !1315, !range !1381\l  %114 = trunc i8 %113 to i1, !dbg !1390\l  br i1 %114, label %115, label %119, !dbg !1393\l|{<s0>T|<s1>F}}"];
	Node0x12933c0:s0 -> Node0x1293410;
	Node0x12933c0:s1 -> Node0x1293460;
	Node0x1293410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%115:\l115:                                              \l  %116 = load i32*, i32** %17, align 8, !dbg !1394, !tbaa !1275\l  %117 = call i64 @wcstombs(i8* noundef null, i32* noundef %116, i64 noundef\l... 0) #26, !dbg !1396\l  %118 = add i64 %117, 1, !dbg !1397\l  store i64 %118, i64* %15, align 8, !dbg !1398, !tbaa !1281\l  br label %119, !dbg !1399\l}"];
	Node0x1293410 -> Node0x1293460;
	Node0x1293460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%119:\l119:                                              \l  %120 = load i64, i64* %15, align 8, !dbg !1400, !tbaa !1281\l  %121 = call noalias i8* @malloc(i64 noundef %120) #26, !dbg !1401\l  store i8* %121, i8** %16, align 8, !dbg !1402, !tbaa !1275\l  %122 = load i8*, i8** %16, align 8, !dbg !1403, !tbaa !1275\l  %123 = icmp eq i8* %122, null, !dbg !1405\l  br i1 %123, label %124, label %130, !dbg !1406\l|{<s0>T|<s1>F}}"];
	Node0x1293460:s0 -> Node0x12934b0;
	Node0x1293460:s1 -> Node0x12935a0;
	Node0x12934b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%124:\l124:                                              \l  %125 = load i32, i32* %13, align 4, !dbg !1407, !tbaa !1287\l  %126 = and i32 %125, 1, !dbg !1410\l  %127 = icmp ne i32 %126, 0, !dbg !1410\l  br i1 %127, label %128, label %129, !dbg !1411\l|{<s0>T|<s1>F}}"];
	Node0x12934b0:s0 -> Node0x1293500;
	Node0x12934b0:s1 -> Node0x1293550;
	Node0x1293500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%128:\l128:                                              \l  br label %141, !dbg !1412\l}"];
	Node0x1293500 -> Node0x1293640;
	Node0x1293550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%129:\l129:                                              \l  br label %235, !dbg !1413\l}"];
	Node0x1293550 -> Node0x1293c30;
	Node0x12935a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%130:\l130:                                              \l  %131 = load i8*, i8** %16, align 8, !dbg !1414, !tbaa !1275\l  store i8* %131, i8** %18, align 8, !dbg !1415, !tbaa !1275\l  %132 = load i32*, i32** %17, align 8, !dbg !1416, !tbaa !1275\l  %133 = load i64*, i64** %11, align 8, !dbg !1417, !tbaa !1275\l  %134 = load i64, i64* %133, align 8, !dbg !1418, !tbaa !1281\l  %135 = call i64 @wc_truncate(i32* noundef %132, i64 noundef %134), !dbg !1419\l  store i64 %135, i64* %19, align 8, !dbg !1420, !tbaa !1281\l  %136 = load i8*, i8** %16, align 8, !dbg !1421, !tbaa !1275\l  %137 = load i32*, i32** %17, align 8, !dbg !1422, !tbaa !1275\l  %138 = load i64, i64* %15, align 8, !dbg !1423, !tbaa !1281\l  %139 = call i64 @wcstombs(i8* noundef %136, i32* noundef %137, i64 noundef\l... %138) #26, !dbg !1424\l  store i64 %139, i64* %20, align 8, !dbg !1425, !tbaa !1281\l  br label %140, !dbg !1426\l}"];
	Node0x12935a0 -> Node0x12935f0;
	Node0x12935f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%140:\l140:                                              \l  br label %141, !dbg !1427\l}"];
	Node0x12935f0 -> Node0x1293640;
	Node0x1293640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%141:\l141:                                              \l  call void @llvm.dbg.label(metadata !1273), !dbg !1428\l  %142 = load i64, i64* %19, align 8, !dbg !1429, !tbaa !1281\l  %143 = load i64*, i64** %11, align 8, !dbg !1431, !tbaa !1275\l  %144 = load i64, i64* %143, align 8, !dbg !1432, !tbaa !1281\l  %145 = icmp ugt i64 %142, %144, !dbg !1433\l  br i1 %145, label %146, label %150, !dbg !1434\l|{<s0>T|<s1>F}}"];
	Node0x1293640:s0 -> Node0x1293690;
	Node0x1293640:s1 -> Node0x12936e0;
	Node0x1293690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%146:\l146:                                              \l  %147 = load i64*, i64** %11, align 8, !dbg !1435, !tbaa !1275\l  %148 = load i64, i64* %147, align 8, !dbg !1437, !tbaa !1281\l  store i64 %148, i64* %19, align 8, !dbg !1438, !tbaa !1281\l  %149 = load i64, i64* %19, align 8, !dbg !1439, !tbaa !1281\l  store i64 %149, i64* %20, align 8, !dbg !1440, !tbaa !1281\l  br label %150, !dbg !1441\l}"];
	Node0x1293690 -> Node0x12936e0;
	Node0x12936e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%150:\l150:                                              \l  %151 = load i64*, i64** %11, align 8, !dbg !1442, !tbaa !1275\l  %152 = load i64, i64* %151, align 8, !dbg !1444, !tbaa !1281\l  %153 = load i64, i64* %19, align 8, !dbg !1445, !tbaa !1281\l  %154 = icmp ugt i64 %152, %153, !dbg !1446\l  br i1 %154, label %155, label %160, !dbg !1447\l|{<s0>T|<s1>F}}"];
	Node0x12936e0:s0 -> Node0x1293730;
	Node0x12936e0:s1 -> Node0x1293780;
	Node0x1293730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%155:\l155:                                              \l  %156 = load i64*, i64** %11, align 8, !dbg !1448, !tbaa !1275\l  %157 = load i64, i64* %156, align 8, !dbg !1449, !tbaa !1281\l  %158 = load i64, i64* %19, align 8, !dbg !1450, !tbaa !1281\l  %159 = sub i64 %157, %158, !dbg !1451\l  store i64 %159, i64* %21, align 8, !dbg !1452, !tbaa !1281\l  br label %160, !dbg !1453\l}"];
	Node0x1293730 -> Node0x1293780;
	Node0x1293780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%160:\l160:                                              \l  %161 = load i64, i64* %19, align 8, !dbg !1454, !tbaa !1281\l  %162 = load i64*, i64** %11, align 8, !dbg !1455, !tbaa !1275\l  store i64 %161, i64* %162, align 8, !dbg !1456, !tbaa !1281\l  %163 = bitcast i64* %26 to i8*, !dbg !1457\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %163) #26, !dbg !1457\l  call void @llvm.dbg.declare(metadata i64* %26, metadata !1266, metadata\l... !DIExpression()), !dbg !1458\l  %164 = bitcast i64* %27 to i8*, !dbg !1457\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %164) #26, !dbg !1457\l  call void @llvm.dbg.declare(metadata i64* %27, metadata !1268, metadata\l... !DIExpression()), !dbg !1459\l  %165 = load i32, i32* %12, align 4, !dbg !1460, !tbaa !1285\l  switch i32 %165, label %171 [\l    i32 0, label %166\l    i32 1, label %168\l    i32 2, label %170\l  ], !dbg !1461\l|{<s0>def|<s1>0|<s2>1|<s3>2}}"];
	Node0x1293780:s0 -> Node0x12938c0;
	Node0x1293780:s1 -> Node0x12937d0;
	Node0x1293780:s2 -> Node0x1293820;
	Node0x1293780:s3 -> Node0x1293870;
	Node0x12937d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%166:\l166:                                              \l  store i64 0, i64* %26, align 8, !dbg !1462, !tbaa !1281\l  %167 = load i64, i64* %21, align 8, !dbg !1464, !tbaa !1281\l  store i64 %167, i64* %27, align 8, !dbg !1465, !tbaa !1281\l  br label %179, !dbg !1466\l}"];
	Node0x12937d0 -> Node0x1293910;
	Node0x1293820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%168:\l168:                                              \l  %169 = load i64, i64* %21, align 8, !dbg !1467, !tbaa !1281\l  store i64 %169, i64* %26, align 8, !dbg !1468, !tbaa !1281\l  store i64 0, i64* %27, align 8, !dbg !1469, !tbaa !1281\l  br label %179, !dbg !1470\l}"];
	Node0x1293820 -> Node0x1293910;
	Node0x1293870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%170:\l170:                                              \l  br label %171, !dbg !1471\l}"];
	Node0x1293870 -> Node0x12938c0;
	Node0x12938c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%171:\l171:                                              \l  %172 = load i64, i64* %21, align 8, !dbg !1472, !tbaa !1281\l  %173 = udiv i64 %172, 2, !dbg !1473\l  %174 = load i64, i64* %21, align 8, !dbg !1474, !tbaa !1281\l  %175 = urem i64 %174, 2, !dbg !1475\l  %176 = add i64 %173, %175, !dbg !1476\l  store i64 %176, i64* %26, align 8, !dbg !1477, !tbaa !1281\l  %177 = load i64, i64* %21, align 8, !dbg !1478, !tbaa !1281\l  %178 = udiv i64 %177, 2, !dbg !1479\l  store i64 %178, i64* %27, align 8, !dbg !1480, !tbaa !1281\l  br label %179, !dbg !1481\l}"];
	Node0x12938c0 -> Node0x1293910;
	Node0x1293910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%179:\l179:                                              \l  %180 = load i32, i32* %13, align 4, !dbg !1482, !tbaa !1287\l  %181 = and i32 %180, 4, !dbg !1484\l  %182 = icmp ne i32 %181, 0, !dbg !1484\l  br i1 %182, label %183, label %184, !dbg !1485\l|{<s0>T|<s1>F}}"];
	Node0x1293910:s0 -> Node0x1293960;
	Node0x1293910:s1 -> Node0x12939b0;
	Node0x1293960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%183:\l183:                                              \l  store i64 0, i64* %26, align 8, !dbg !1486, !tbaa !1281\l  br label %184, !dbg !1487\l}"];
	Node0x1293960 -> Node0x12939b0;
	Node0x12939b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%184:\l184:                                              \l  %185 = load i32, i32* %13, align 4, !dbg !1488, !tbaa !1287\l  %186 = and i32 %185, 8, !dbg !1490\l  %187 = icmp ne i32 %186, 0, !dbg !1490\l  br i1 %187, label %188, label %189, !dbg !1491\l|{<s0>T|<s1>F}}"];
	Node0x12939b0:s0 -> Node0x1293a00;
	Node0x12939b0:s1 -> Node0x1293a50;
	Node0x1293a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%188:\l188:                                              \l  store i64 0, i64* %27, align 8, !dbg !1492, !tbaa !1281\l  br label %189, !dbg !1493\l}"];
	Node0x1293a00 -> Node0x1293a50;
	Node0x1293a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%189:\l189:                                              \l  %190 = load i64, i64* %10, align 8, !dbg !1494, !tbaa !1281\l  %191 = icmp ne i64 %190, 0, !dbg !1495\l  br i1 %191, label %192, label %226, !dbg !1496\l|{<s0>T|<s1>F}}"];
	Node0x1293a50:s0 -> Node0x1293aa0;
	Node0x1293a50:s1 -> Node0x1293be0;
	Node0x1293aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%192:\l192:                                              \l  %193 = bitcast i64* %28 to i8*, !dbg !1497\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %193) #26, !dbg !1497\l  call void @llvm.dbg.declare(metadata i64* %28, metadata !1269, metadata\l... !DIExpression()), !dbg !1498\l  %194 = bitcast i8** %29 to i8*, !dbg !1499\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %194) #26, !dbg !1499\l  call void @llvm.dbg.declare(metadata i8** %29, metadata !1272, metadata\l... !DIExpression()), !dbg !1500\l  %195 = load i8*, i8** %9, align 8, !dbg !1501, !tbaa !1275\l  %196 = load i64, i64* %10, align 8, !dbg !1502, !tbaa !1281\l  %197 = getelementptr inbounds i8, i8* %195, i64 %196, !dbg !1503\l  %198 = getelementptr inbounds i8, i8* %197, i64 -1, !dbg !1504\l  store i8* %198, i8** %29, align 8, !dbg !1500, !tbaa !1275\l  %199 = load i8*, i8** %9, align 8, !dbg !1505, !tbaa !1275\l  %200 = load i8*, i8** %29, align 8, !dbg !1506, !tbaa !1275\l  %201 = load i64, i64* %26, align 8, !dbg !1507, !tbaa !1281\l  %202 = call i8* @mbs_align_pad(i8* noundef %199, i8* noundef %200, i64\l... noundef %201), !dbg !1508\l  store i8* %202, i8** %9, align 8, !dbg !1509, !tbaa !1275\l  %203 = load i8*, i8** %29, align 8, !dbg !1510, !tbaa !1275\l  %204 = load i8*, i8** %9, align 8, !dbg !1511, !tbaa !1275\l  %205 = ptrtoint i8* %203 to i64, !dbg !1512\l  %206 = ptrtoint i8* %204 to i64, !dbg !1512\l  %207 = sub i64 %205, %206, !dbg !1512\l  store i64 %207, i64* %28, align 8, !dbg !1513, !tbaa !1281\l  %208 = load i8*, i8** %9, align 8, !dbg !1514, !tbaa !1275\l  %209 = load i8*, i8** %18, align 8, !dbg !1515, !tbaa !1275\l  %210 = load i64, i64* %20, align 8, !dbg !1516, !tbaa !1281\l  %211 = load i64, i64* %28, align 8, !dbg !1516, !tbaa !1281\l  %212 = icmp ult i64 %210, %211, !dbg !1516\l  br i1 %212, label %213, label %215, !dbg !1516\l|{<s0>T|<s1>F}}"];
	Node0x1293aa0:s0 -> Node0x1293af0;
	Node0x1293aa0:s1 -> Node0x1293b40;
	Node0x1293af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%213:\l213:                                              \l  %214 = load i64, i64* %20, align 8, !dbg !1516, !tbaa !1281\l  br label %217, !dbg !1516\l}"];
	Node0x1293af0 -> Node0x1293b90;
	Node0x1293b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%215:\l215:                                              \l  %216 = load i64, i64* %28, align 8, !dbg !1516, !tbaa !1281\l  br label %217, !dbg !1516\l}"];
	Node0x1293b40 -> Node0x1293b90;
	Node0x1293b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%217:\l217:                                              \l  %218 = phi i64 [ %214, %213 ], [ %216, %215 ], !dbg !1516\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %208, i8* align 1 %209, i64\l... %218, i1 false), !dbg !1517\l  %219 = getelementptr inbounds i8, i8* %208, i64 %218, !dbg !1517\l  store i8* %219, i8** %9, align 8, !dbg !1518, !tbaa !1275\l  %220 = load i8*, i8** %9, align 8, !dbg !1519, !tbaa !1275\l  %221 = load i8*, i8** %29, align 8, !dbg !1520, !tbaa !1275\l  %222 = load i64, i64* %27, align 8, !dbg !1521, !tbaa !1281\l  %223 = call i8* @mbs_align_pad(i8* noundef %220, i8* noundef %221, i64\l... noundef %222), !dbg !1522\l  %224 = bitcast i8** %29 to i8*, !dbg !1523\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %224) #26, !dbg !1523\l  %225 = bitcast i64* %28 to i8*, !dbg !1523\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %225) #26, !dbg !1523\l  br label %226, !dbg !1524\l}"];
	Node0x1293b90 -> Node0x1293be0;
	Node0x1293be0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%226:\l226:                                              \l  %227 = load i64, i64* %20, align 8, !dbg !1525, !tbaa !1281\l  %228 = load i64, i64* %26, align 8, !dbg !1526, !tbaa !1281\l  %229 = load i64, i64* %27, align 8, !dbg !1527, !tbaa !1281\l  %230 = add i64 %228, %229, !dbg !1528\l  %231 = mul i64 %230, 1, !dbg !1529\l  %232 = add i64 %227, %231, !dbg !1530\l  store i64 %232, i64* %14, align 8, !dbg !1531, !tbaa !1281\l  %233 = bitcast i64* %27 to i8*, !dbg !1532\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %233) #26, !dbg !1532\l  %234 = bitcast i64* %26 to i8*, !dbg !1532\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %234) #26, !dbg !1532\l  br label %235, !dbg !1533\l}"];
	Node0x1293be0 -> Node0x1293c30;
	Node0x1293c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%235:\l235:                                              \l  call void @llvm.dbg.label(metadata !1274), !dbg !1534\l  %236 = load i32*, i32** %17, align 8, !dbg !1535, !tbaa !1275\l  %237 = bitcast i32* %236 to i8*, !dbg !1535\l  call void @free(i8* noundef %237) #26, !dbg !1536\l  %238 = load i8*, i8** %16, align 8, !dbg !1537, !tbaa !1275\l  call void @free(i8* noundef %238) #26, !dbg !1538\l  %239 = load i64, i64* %14, align 8, !dbg !1539, !tbaa !1281\l  store i64 %239, i64* %7, align 8, !dbg !1540\l  store i32 1, i32* %25, align 4\l  br label %240, !dbg !1540\l}"];
	Node0x1293c30 -> Node0x1293c80;
	Node0x1293c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%240:\l240:                                              \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %23) #26, !dbg !1541\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #26, !dbg !1541\l  %241 = bitcast i64* %21 to i8*, !dbg !1541\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %241) #26, !dbg !1541\l  %242 = bitcast i64* %20 to i8*, !dbg !1541\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %242) #26, !dbg !1541\l  %243 = bitcast i64* %19 to i8*, !dbg !1541\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %243) #26, !dbg !1541\l  %244 = bitcast i8** %18 to i8*, !dbg !1541\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %244) #26, !dbg !1541\l  %245 = bitcast i32** %17 to i8*, !dbg !1541\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %245) #26, !dbg !1541\l  %246 = bitcast i8** %16 to i8*, !dbg !1541\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %246) #26, !dbg !1541\l  %247 = bitcast i64* %15 to i8*, !dbg !1541\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %247) #26, !dbg !1541\l  %248 = bitcast i64* %14 to i8*, !dbg !1541\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %248) #26, !dbg !1541\l  %249 = load i64, i64* %7, align 8, !dbg !1541\l  ret i64 %249, !dbg !1541\l}"];
}
