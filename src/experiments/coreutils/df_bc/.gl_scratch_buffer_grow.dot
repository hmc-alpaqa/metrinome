digraph "CFG for 'gl_scratch_buffer_grow' function" {
	label="CFG for 'gl_scratch_buffer_grow' function";

	Node0x11ba540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = alloca i1, align 1\l  %3 = alloca %struct.scratch_buffer*, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i32, align 4\l  store %struct.scratch_buffer* %0, %struct.scratch_buffer** %3, align 8,\l... !tbaa !1269\l  call void @llvm.dbg.declare(metadata %struct.scratch_buffer** %3, metadata\l... !1266, metadata !DIExpression()), !dbg !1273\l  %7 = bitcast i8** %4 to i8*, !dbg !1274\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #26, !dbg !1274\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !1267, metadata\l... !DIExpression()), !dbg !1275\l  %8 = bitcast i64* %5 to i8*, !dbg !1276\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #26, !dbg !1276\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !1268, metadata\l... !DIExpression()), !dbg !1277\l  %9 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1278, !tbaa !1269\l  %10 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %9, i32 0, i32 1, !dbg !1279\l  %11 = load i64, i64* %10, align 8, !dbg !1279, !tbaa !1280\l  %12 = mul i64 %11, 2, !dbg !1283\l  store i64 %12, i64* %5, align 8, !dbg !1277, !tbaa !1284\l  %13 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1285, !tbaa !1269\l  call void @scratch_buffer_free.147(%struct.scratch_buffer* noundef %13),\l... !dbg !1286\l  %14 = load i64, i64* %5, align 8, !dbg !1287, !tbaa !1284\l  %15 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1287, !tbaa !1269\l  %16 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %15, i32 0, i32 1, !dbg !1287\l  %17 = load i64, i64* %16, align 8, !dbg !1287, !tbaa !1280\l  %18 = icmp uge i64 %14, %17, !dbg !1287\l  %19 = zext i1 %18 to i32, !dbg !1287\l  %20 = sext i32 %19 to i64, !dbg !1287\l  %21 = call i64 @llvm.expect.i64(i64 %20, i64 1), !dbg !1287\l  %22 = icmp ne i64 %21, 0, !dbg !1287\l  br i1 %22, label %23, label %26, !dbg !1289\l|{<s0>T|<s1>F}}"];
	Node0x11ba540:s0 -> Node0x11ba5d0;
	Node0x11ba540:s1 -> Node0x11ba620;
	Node0x11ba5d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%23:\l23:                                               \l  %24 = load i64, i64* %5, align 8, !dbg !1290, !tbaa !1284\l  %25 = call noalias i8* @malloc(i64 noundef %24) #26, !dbg !1291\l  store i8* %25, i8** %4, align 8, !dbg !1292, !tbaa !1269\l  br label %28, !dbg !1293\l}"];
	Node0x11ba5d0 -> Node0x11ba670;
	Node0x11ba620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%26:\l26:                                               \l  %27 = call i32* @__errno_location() #27, !dbg !1294\l  store i32 12, i32* %27, align 4, !dbg !1294, !tbaa !1296\l  store i8* null, i8** %4, align 8, !dbg !1298, !tbaa !1269\l  br label %28\l}"];
	Node0x11ba620 -> Node0x11ba670;
	Node0x11ba670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = load i8*, i8** %4, align 8, !dbg !1299, !tbaa !1269\l  %30 = icmp eq i8* %29, null, !dbg !1299\l  %31 = zext i1 %30 to i32, !dbg !1299\l  %32 = sext i32 %31 to i64, !dbg !1299\l  %33 = call i64 @llvm.expect.i64(i64 %32, i64 0), !dbg !1299\l  %34 = icmp ne i64 %33, 0, !dbg !1299\l  br i1 %34, label %35, label %37, !dbg !1301\l|{<s0>T|<s1>F}}"];
	Node0x11ba670:s0 -> Node0x11ba6c0;
	Node0x11ba670:s1 -> Node0x11ba710;
	Node0x11ba6c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%35:\l35:                                               \l  %36 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1302, !tbaa !1269\l  call void @scratch_buffer_init.148(%struct.scratch_buffer* noundef %36),\l... !dbg !1304\l  store i1 false, i1* %2, align 1, !dbg !1305\l  store i32 1, i32* %6, align 4\l  br label %44, !dbg !1305\l}"];
	Node0x11ba6c0 -> Node0x11ba760;
	Node0x11ba710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%37:\l37:                                               \l  %38 = load i8*, i8** %4, align 8, !dbg !1306, !tbaa !1269\l  %39 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1307, !tbaa !1269\l  %40 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %39, i32 0, i32 0, !dbg !1308\l  store i8* %38, i8** %40, align 16, !dbg !1309, !tbaa !1310\l  %41 = load i64, i64* %5, align 8, !dbg !1311, !tbaa !1284\l  %42 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1312, !tbaa !1269\l  %43 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %42, i32 0, i32 1, !dbg !1313\l  store i64 %41, i64* %43, align 8, !dbg !1314, !tbaa !1280\l  store i1 true, i1* %2, align 1, !dbg !1315\l  store i32 1, i32* %6, align 4\l  br label %44, !dbg !1315\l}"];
	Node0x11ba710 -> Node0x11ba760;
	Node0x11ba760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = bitcast i64* %5 to i8*, !dbg !1316\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #26, !dbg !1316\l  %46 = bitcast i8** %4 to i8*, !dbg !1316\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #26, !dbg !1316\l  %47 = load i1, i1* %2, align 1, !dbg !1316\l  ret i1 %47, !dbg !1316\l}"];
}
