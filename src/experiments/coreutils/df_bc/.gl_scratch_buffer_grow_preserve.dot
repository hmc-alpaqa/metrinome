digraph "CFG for 'gl_scratch_buffer_grow_preserve' function" {
	label="CFG for 'gl_scratch_buffer_grow_preserve' function";

	Node0x11bf490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = alloca i1, align 1\l  %3 = alloca %struct.scratch_buffer*, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i32, align 4\l  store %struct.scratch_buffer* %0, %struct.scratch_buffer** %3, align 8,\l... !tbaa !1269\l  call void @llvm.dbg.declare(metadata %struct.scratch_buffer** %3, metadata\l... !1266, metadata !DIExpression()), !dbg !1273\l  %7 = bitcast i64* %4 to i8*, !dbg !1274\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #26, !dbg !1274\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !1267, metadata\l... !DIExpression()), !dbg !1275\l  %8 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1276, !tbaa !1269\l  %9 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %8, i32 0, i32 1, !dbg !1277\l  %10 = load i64, i64* %9, align 8, !dbg !1277, !tbaa !1278\l  %11 = mul i64 2, %10, !dbg !1281\l  store i64 %11, i64* %4, align 8, !dbg !1275, !tbaa !1282\l  %12 = bitcast i8** %5 to i8*, !dbg !1283\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #26, !dbg !1283\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !1268, metadata\l... !DIExpression()), !dbg !1284\l  %13 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1285, !tbaa !1269\l  %14 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %13, i32 0, i32 0, !dbg !1287\l  %15 = load i8*, i8** %14, align 16, !dbg !1287, !tbaa !1288\l  %16 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1289, !tbaa !1269\l  %17 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %16, i32 0, i32 2, !dbg !1290\l  %18 = bitcast %union.anon.2* %17 to [1024 x i8]*, !dbg !1291\l  %19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %18, i64 0, i64 0,\l... !dbg !1289\l  %20 = icmp eq i8* %15, %19, !dbg !1292\l  br i1 %20, label %21, label %36, !dbg !1293\l|{<s0>T|<s1>F}}"];
	Node0x11bf490:s0 -> Node0x11bf550;
	Node0x11bf490:s1 -> Node0x11bf640;
	Node0x11bf550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%21:\l21:                                               \l  %22 = load i64, i64* %4, align 8, !dbg !1294, !tbaa !1282\l  %23 = call noalias i8* @malloc(i64 noundef %22) #26, !dbg !1296\l  store i8* %23, i8** %5, align 8, !dbg !1297, !tbaa !1269\l  %24 = load i8*, i8** %5, align 8, !dbg !1298, !tbaa !1269\l  %25 = icmp eq i8* %24, null, !dbg !1300\l  br i1 %25, label %26, label %27, !dbg !1301\l|{<s0>T|<s1>F}}"];
	Node0x11bf550:s0 -> Node0x11bf5a0;
	Node0x11bf550:s1 -> Node0x11bf5f0;
	Node0x11bf5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%26:\l26:                                               \l  store i1 false, i1* %2, align 1, !dbg !1302\l  store i32 1, i32* %6, align 4\l  br label %74, !dbg !1302\l}"];
	Node0x11bf5a0 -> Node0x11bf870;
	Node0x11bf5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%27:\l27:                                               \l  %28 = load i8*, i8** %5, align 8, !dbg !1303, !tbaa !1269\l  %29 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1304, !tbaa !1269\l  %30 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %29, i32 0, i32 2, !dbg !1305\l  %31 = bitcast %union.anon.2* %30 to [1024 x i8]*, !dbg !1306\l  %32 = getelementptr inbounds [1024 x i8], [1024 x i8]* %31, i64 0, i64 0,\l... !dbg !1307\l  %33 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1308, !tbaa !1269\l  %34 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %33, i32 0, i32 1, !dbg !1309\l  %35 = load i64, i64* %34, align 8, !dbg !1309, !tbaa !1278\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 16 %32, i64\l... %35, i1 false), !dbg !1307\l  br label %67, !dbg !1310\l}"];
	Node0x11bf5f0 -> Node0x11bf820;
	Node0x11bf640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%36:\l36:                                               \l  %37 = load i64, i64* %4, align 8, !dbg !1311, !tbaa !1282\l  %38 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1311, !tbaa !1269\l  %39 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %38, i32 0, i32 1, !dbg !1311\l  %40 = load i64, i64* %39, align 8, !dbg !1311, !tbaa !1278\l  %41 = icmp uge i64 %37, %40, !dbg !1311\l  %42 = zext i1 %41 to i32, !dbg !1311\l  %43 = sext i32 %42 to i64, !dbg !1311\l  %44 = call i64 @llvm.expect.i64(i64 %43, i64 1), !dbg !1311\l  %45 = icmp ne i64 %44, 0, !dbg !1311\l  br i1 %45, label %46, label %52, !dbg !1314\l|{<s0>T|<s1>F}}"];
	Node0x11bf640:s0 -> Node0x11bf690;
	Node0x11bf640:s1 -> Node0x11bf6e0;
	Node0x11bf690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%46:\l46:                                               \l  %47 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1315, !tbaa !1269\l  %48 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %47, i32 0, i32 0, !dbg !1316\l  %49 = load i8*, i8** %48, align 16, !dbg !1316, !tbaa !1288\l  %50 = load i64, i64* %4, align 8, !dbg !1317, !tbaa !1282\l  %51 = call i8* @realloc(i8* noundef %49, i64 noundef %50) #26, !dbg !1318\l  store i8* %51, i8** %5, align 8, !dbg !1319, !tbaa !1269\l  br label %54, !dbg !1320\l}"];
	Node0x11bf690 -> Node0x11bf730;
	Node0x11bf6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%52:\l52:                                               \l  %53 = call i32* @__errno_location() #27, !dbg !1321\l  store i32 12, i32* %53, align 4, !dbg !1321, !tbaa !1323\l  store i8* null, i8** %5, align 8, !dbg !1325, !tbaa !1269\l  br label %54\l}"];
	Node0x11bf6e0 -> Node0x11bf730;
	Node0x11bf730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%54:\l54:                                               \l  %55 = load i8*, i8** %5, align 8, !dbg !1326, !tbaa !1269\l  %56 = icmp eq i8* %55, null, !dbg !1326\l  %57 = zext i1 %56 to i32, !dbg !1326\l  %58 = sext i32 %57 to i64, !dbg !1326\l  %59 = call i64 @llvm.expect.i64(i64 %58, i64 0), !dbg !1326\l  %60 = icmp ne i64 %59, 0, !dbg !1326\l  br i1 %60, label %61, label %66, !dbg !1328\l|{<s0>T|<s1>F}}"];
	Node0x11bf730:s0 -> Node0x11bf780;
	Node0x11bf730:s1 -> Node0x11bf7d0;
	Node0x11bf780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%61:\l61:                                               \l  %62 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1329, !tbaa !1269\l  %63 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %62, i32 0, i32 0, !dbg !1331\l  %64 = load i8*, i8** %63, align 16, !dbg !1331, !tbaa !1288\l  call void @free(i8* noundef %64) #26, !dbg !1332\l  %65 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1333, !tbaa !1269\l  call void @scratch_buffer_init.151(%struct.scratch_buffer* noundef %65),\l... !dbg !1334\l  store i1 false, i1* %2, align 1, !dbg !1335\l  store i32 1, i32* %6, align 4\l  br label %74, !dbg !1335\l}"];
	Node0x11bf780 -> Node0x11bf870;
	Node0x11bf7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%66:\l66:                                               \l  br label %67\l}"];
	Node0x11bf7d0 -> Node0x11bf820;
	Node0x11bf820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%67:\l67:                                               \l  %68 = load i8*, i8** %5, align 8, !dbg !1336, !tbaa !1269\l  %69 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1337, !tbaa !1269\l  %70 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %69, i32 0, i32 0, !dbg !1338\l  store i8* %68, i8** %70, align 16, !dbg !1339, !tbaa !1288\l  %71 = load i64, i64* %4, align 8, !dbg !1340, !tbaa !1282\l  %72 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1341, !tbaa !1269\l  %73 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %72, i32 0, i32 1, !dbg !1342\l  store i64 %71, i64* %73, align 8, !dbg !1343, !tbaa !1278\l  store i1 true, i1* %2, align 1, !dbg !1344\l  store i32 1, i32* %6, align 4\l  br label %74, !dbg !1344\l}"];
	Node0x11bf820 -> Node0x11bf870;
	Node0x11bf870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = bitcast i8** %5 to i8*, !dbg !1345\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #26, !dbg !1345\l  %76 = bitcast i64* %4 to i8*, !dbg !1345\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #26, !dbg !1345\l  %77 = load i1, i1* %2, align 1, !dbg !1345\l  ret i1 %77, !dbg !1345\l}"];
}
