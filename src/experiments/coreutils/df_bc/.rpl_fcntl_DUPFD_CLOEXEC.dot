digraph "CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function" {
	label="CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function";

	Node0x16110c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4, !tbaa !1242\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !621, metadata\l... !DIExpression()), !dbg !1246\l  store i32 %1, i32* %4, align 4, !tbaa !1242\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !622, metadata\l... !DIExpression()), !dbg !1247\l  %8 = bitcast i32* %5 to i8*, !dbg !1248\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #26, !dbg !1248\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !623, metadata\l... !DIExpression()), !dbg !1249\l  %9 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1250, !tbaa !1242\l  %10 = icmp sle i32 0, %9, !dbg !1252\l  br i1 %10, label %11, label %31, !dbg !1253\l|{<s0>T|<s1>F}}"];
	Node0x16110c0:s0 -> Node0x1612300;
	Node0x16110c0:s1 -> Node0x1612530;
	Node0x1612300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%11:\l11:                                               \l  %12 = load i32, i32* %3, align 4, !dbg !1254, !tbaa !1242\l  %13 = load i32, i32* %4, align 4, !dbg !1256, !tbaa !1242\l  %14 = call i32 (i32, i32, ...) @fcntl(i32 noundef %12, i32 noundef 1030, i32\l... noundef %13), !dbg !1257\l  store i32 %14, i32* %5, align 4, !dbg !1258, !tbaa !1242\l  %15 = load i32, i32* %5, align 4, !dbg !1259, !tbaa !1242\l  %16 = icmp sle i32 0, %15, !dbg !1261\l  br i1 %16, label %21, label %17, !dbg !1262\l|{<s0>T|<s1>F}}"];
	Node0x1612300:s0 -> Node0x16123a0;
	Node0x1612300:s1 -> Node0x1612350;
	Node0x1612350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%17:\l17:                                               \l  %18 = call i32* @__errno_location() #27, !dbg !1263\l  %19 = load i32, i32* %18, align 4, !dbg !1263, !tbaa !1242\l  %20 = icmp ne i32 %19, 22, !dbg !1264\l  br i1 %20, label %21, label %22, !dbg !1265\l|{<s0>T|<s1>F}}"];
	Node0x1612350:s0 -> Node0x16123a0;
	Node0x1612350:s1 -> Node0x16123f0;
	Node0x16123a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%21:\l21:                                               \l  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg\l... !1266, !tbaa !1242\l  br label %30, !dbg !1268\l}"];
	Node0x16123a0 -> Node0x16124e0;
	Node0x16123f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%22:\l22:                                               \l  %23 = load i32, i32* %3, align 4, !dbg !1269, !tbaa !1242\l  %24 = load i32, i32* %4, align 4, !dbg !1271, !tbaa !1242\l  %25 = call i32 @rpl_fcntl_DUPFD(i32 noundef %23, i32 noundef %24), !dbg !1272\l  store i32 %25, i32* %5, align 4, !dbg !1273, !tbaa !1242\l  %26 = load i32, i32* %5, align 4, !dbg !1274, !tbaa !1242\l  %27 = icmp sge i32 %26, 0, !dbg !1276\l  br i1 %27, label %28, label %29, !dbg !1277\l|{<s0>T|<s1>F}}"];
	Node0x16123f0:s0 -> Node0x1612440;
	Node0x16123f0:s1 -> Node0x1612490;
	Node0x1612440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%28:\l28:                                               \l  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1278, !tbaa !1242\l  br label %29, !dbg !1279\l}"];
	Node0x1612440 -> Node0x1612490;
	Node0x1612490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%29:\l29:                                               \l  br label %30\l}"];
	Node0x1612490 -> Node0x16124e0;
	Node0x16124e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%30:\l30:                                               \l  br label %35, !dbg !1280\l}"];
	Node0x16124e0 -> Node0x1612580;
	Node0x1612530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%31:\l31:                                               \l  %32 = load i32, i32* %3, align 4, !dbg !1281, !tbaa !1242\l  %33 = load i32, i32* %4, align 4, !dbg !1282, !tbaa !1242\l  %34 = call i32 @rpl_fcntl_DUPFD(i32 noundef %32, i32 noundef %33), !dbg !1283\l  store i32 %34, i32* %5, align 4, !dbg !1284, !tbaa !1242\l  br label %35\l}"];
	Node0x1612530 -> Node0x1612580;
	Node0x1612580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = load i32, i32* %5, align 4, !dbg !1285, !tbaa !1242\l  %37 = icmp sle i32 0, %36, !dbg !1286\l  br i1 %37, label %38, label %64, !dbg !1287\l|{<s0>T|<s1>F}}"];
	Node0x1612580:s0 -> Node0x16125d0;
	Node0x1612580:s1 -> Node0x1612760;
	Node0x16125d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%38:\l38:                                               \l  %39 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1288, !tbaa !1242\l  %40 = icmp eq i32 %39, -1, !dbg !1289\l  br i1 %40, label %41, label %64, !dbg !1290\l|{<s0>T|<s1>F}}"];
	Node0x16125d0:s0 -> Node0x1612620;
	Node0x16125d0:s1 -> Node0x1612760;
	Node0x1612620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = bitcast i32* %6 to i8*, !dbg !1291\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #26, !dbg !1291\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !624, metadata\l... !DIExpression()), !dbg !1292\l  %43 = load i32, i32* %5, align 4, !dbg !1293, !tbaa !1242\l  %44 = call i32 (i32, i32, ...) @fcntl(i32 noundef %43, i32 noundef 1), !dbg\l... !1294\l  store i32 %44, i32* %6, align 4, !dbg !1292, !tbaa !1242\l  %45 = load i32, i32* %6, align 4, !dbg !1295, !tbaa !1242\l  %46 = icmp slt i32 %45, 0, !dbg !1296\l  br i1 %46, label %53, label %47, !dbg !1297\l|{<s0>T|<s1>F}}"];
	Node0x1612620:s0 -> Node0x16126c0;
	Node0x1612620:s1 -> Node0x1612670;
	Node0x1612670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%47:\l47:                                               \l  %48 = load i32, i32* %5, align 4, !dbg !1298, !tbaa !1242\l  %49 = load i32, i32* %6, align 4, !dbg !1299, !tbaa !1242\l  %50 = or i32 %49, 1, !dbg !1300\l  %51 = call i32 (i32, i32, ...) @fcntl(i32 noundef %48, i32 noundef 2, i32\l... noundef %50), !dbg !1301\l  %52 = icmp eq i32 %51, -1, !dbg !1302\l  br i1 %52, label %53, label %62, !dbg !1303\l|{<s0>T|<s1>F}}"];
	Node0x1612670:s0 -> Node0x16126c0;
	Node0x1612670:s1 -> Node0x1612710;
	Node0x16126c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%53:\l53:                                               \l  %54 = bitcast i32* %7 to i8*, !dbg !1304\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #26, !dbg !1304\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !627, metadata\l... !DIExpression()), !dbg !1305\l  %55 = call i32* @__errno_location() #27, !dbg !1306\l  %56 = load i32, i32* %55, align 4, !dbg !1306, !tbaa !1242\l  store i32 %56, i32* %7, align 4, !dbg !1305, !tbaa !1242\l  %57 = load i32, i32* %5, align 4, !dbg !1307, !tbaa !1242\l  %58 = call i32 @close(i32 noundef %57), !dbg !1308\l  %59 = load i32, i32* %7, align 4, !dbg !1309, !tbaa !1242\l  %60 = call i32* @__errno_location() #27, !dbg !1310\l  store i32 %59, i32* %60, align 4, !dbg !1311, !tbaa !1242\l  store i32 -1, i32* %5, align 4, !dbg !1312, !tbaa !1242\l  %61 = bitcast i32* %7 to i8*, !dbg !1313\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #26, !dbg !1313\l  br label %62, !dbg !1314\l}"];
	Node0x16126c0 -> Node0x1612710;
	Node0x1612710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%62:\l62:                                               \l  %63 = bitcast i32* %6 to i8*, !dbg !1315\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %63) #26, !dbg !1315\l  br label %64, !dbg !1316\l}"];
	Node0x1612710 -> Node0x1612760;
	Node0x1612760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = load i32, i32* %5, align 4, !dbg !1317, !tbaa !1242\l  %66 = bitcast i32* %5 to i8*, !dbg !1318\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #26, !dbg !1318\l  ret i32 %65, !dbg !1319\l}"];
}
