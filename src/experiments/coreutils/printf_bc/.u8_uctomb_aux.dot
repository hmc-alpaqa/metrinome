digraph "CFG for 'u8_uctomb_aux' function" {
	label="CFG for 'u8_uctomb_aux' function";

	Node0x1ae29f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i8*, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i64, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  store i8* %0, i8** %5, align 8, !tbaa !1053\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !1049, metadata\l... !DIExpression()), !dbg !1057\l  store i32 %1, i32* %6, align 4, !tbaa !1058\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !1050, metadata\l... !DIExpression()), !dbg !1060\l  store i64 %2, i64* %7, align 8, !tbaa !1061\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1051, metadata\l... !DIExpression()), !dbg !1063\l  %10 = bitcast i32* %8 to i8*, !dbg !1064\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #22, !dbg !1064\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !1052, metadata\l... !DIExpression()), !dbg !1065\l  %11 = load i32, i32* %6, align 4, !dbg !1066, !tbaa !1058\l  %12 = icmp ult i32 %11, 128, !dbg !1068\l  br i1 %12, label %13, label %14, !dbg !1069\l|{<s0>T|<s1>F}}"];
	Node0x1ae29f0:s0 -> Node0x1ae4670;
	Node0x1ae29f0:s1 -> Node0x1ae46c0;
	Node0x1ae4670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%13:\l13:                                               \l  store i32 -2, i32* %4, align 4, !dbg !1070\l  store i32 1, i32* %9, align 4\l  br label %85, !dbg !1070\l}"];
	Node0x1ae4670 -> Node0x1ae4d50;
	Node0x1ae46c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%14:\l14:                                               \l  %15 = load i32, i32* %6, align 4, !dbg !1071, !tbaa !1058\l  %16 = icmp ult i32 %15, 2048, !dbg !1073\l  br i1 %16, label %17, label %18, !dbg !1074\l|{<s0>T|<s1>F}}"];
	Node0x1ae46c0:s0 -> Node0x1ae4710;
	Node0x1ae46c0:s1 -> Node0x1ae4760;
	Node0x1ae4710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%17:\l17:                                               \l  store i32 2, i32* %8, align 4, !dbg !1075, !tbaa !1058\l  br label %37, !dbg !1076\l}"];
	Node0x1ae4710 -> Node0x1ae4ad0;
	Node0x1ae4760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = load i32, i32* %6, align 4, !dbg !1077, !tbaa !1058\l  %20 = icmp ult i32 %19, 65536, !dbg !1079\l  br i1 %20, label %21, label %30, !dbg !1080\l|{<s0>T|<s1>F}}"];
	Node0x1ae4760:s0 -> Node0x1ae47b0;
	Node0x1ae4760:s1 -> Node0x1ae4940;
	Node0x1ae47b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%21:\l21:                                               \l  %22 = load i32, i32* %6, align 4, !dbg !1081, !tbaa !1058\l  %23 = icmp ult i32 %22, 55296, !dbg !1084\l  br i1 %23, label %27, label %24, !dbg !1085\l|{<s0>T|<s1>F}}"];
	Node0x1ae47b0:s0 -> Node0x1ae4850;
	Node0x1ae47b0:s1 -> Node0x1ae4800;
	Node0x1ae4800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%24:\l24:                                               \l  %25 = load i32, i32* %6, align 4, !dbg !1086, !tbaa !1058\l  %26 = icmp uge i32 %25, 57344, !dbg !1087\l  br i1 %26, label %27, label %28, !dbg !1088\l|{<s0>T|<s1>F}}"];
	Node0x1ae4800:s0 -> Node0x1ae4850;
	Node0x1ae4800:s1 -> Node0x1ae48a0;
	Node0x1ae4850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%27:\l27:                                               \l  store i32 3, i32* %8, align 4, !dbg !1089, !tbaa !1058\l  br label %29, !dbg !1090\l}"];
	Node0x1ae4850 -> Node0x1ae48f0;
	Node0x1ae48a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%28:\l28:                                               \l  store i32 -1, i32* %4, align 4, !dbg !1091\l  store i32 1, i32* %9, align 4\l  br label %85, !dbg !1091\l}"];
	Node0x1ae48a0 -> Node0x1ae4d50;
	Node0x1ae48f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%29:\l29:                                               \l  br label %36, !dbg !1092\l}"];
	Node0x1ae48f0 -> Node0x1ae4a80;
	Node0x1ae4940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%30:\l30:                                               \l  %31 = load i32, i32* %6, align 4, !dbg !1093, !tbaa !1058\l  %32 = icmp ult i32 %31, 1114112, !dbg !1095\l  br i1 %32, label %33, label %34, !dbg !1096\l|{<s0>T|<s1>F}}"];
	Node0x1ae4940:s0 -> Node0x1ae4990;
	Node0x1ae4940:s1 -> Node0x1ae49e0;
	Node0x1ae4990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%33:\l33:                                               \l  store i32 4, i32* %8, align 4, !dbg !1097, !tbaa !1058\l  br label %35, !dbg !1098\l}"];
	Node0x1ae4990 -> Node0x1ae4a30;
	Node0x1ae49e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%34:\l34:                                               \l  store i32 -1, i32* %4, align 4, !dbg !1099\l  store i32 1, i32* %9, align 4\l  br label %85, !dbg !1099\l}"];
	Node0x1ae49e0 -> Node0x1ae4d50;
	Node0x1ae4a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%35:\l35:                                               \l  br label %36\l}"];
	Node0x1ae4a30 -> Node0x1ae4a80;
	Node0x1ae4a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%36:\l36:                                               \l  br label %37\l}"];
	Node0x1ae4a80 -> Node0x1ae4ad0;
	Node0x1ae4ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%37:\l37:                                               \l  br label %38\l}"];
	Node0x1ae4ad0 -> Node0x1ae4b20;
	Node0x1ae4b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%38:\l38:                                               \l  %39 = load i64, i64* %7, align 8, !dbg !1100, !tbaa !1061\l  %40 = load i32, i32* %8, align 4, !dbg !1102, !tbaa !1058\l  %41 = sext i32 %40 to i64, !dbg !1102\l  %42 = icmp slt i64 %39, %41, !dbg !1103\l  br i1 %42, label %43, label %44, !dbg !1104\l|{<s0>T|<s1>F}}"];
	Node0x1ae4b20:s0 -> Node0x1ae4b70;
	Node0x1ae4b20:s1 -> Node0x1ae4bc0;
	Node0x1ae4b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%43:\l43:                                               \l  store i32 -2, i32* %4, align 4, !dbg !1105\l  store i32 1, i32* %9, align 4\l  br label %85, !dbg !1105\l}"];
	Node0x1ae4b70 -> Node0x1ae4d50;
	Node0x1ae4bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%44:\l44:                                               \l  %45 = load i32, i32* %8, align 4, !dbg !1106, !tbaa !1058\l  switch i32 %45, label %83 [\l    i32 4, label %46\l    i32 3, label %57\l    i32 2, label %68\l  ], !dbg !1107\l|{<s0>def|<s1>4|<s2>3|<s3>2}}"];
	Node0x1ae4bc0:s0 -> Node0x1ae4d00;
	Node0x1ae4bc0:s1 -> Node0x1ae4c10;
	Node0x1ae4bc0:s2 -> Node0x1ae4c60;
	Node0x1ae4bc0:s3 -> Node0x1ae4cb0;
	Node0x1ae4c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%46:\l46:                                               \l  %47 = load i32, i32* %6, align 4, !dbg !1108, !tbaa !1058\l  %48 = and i32 %47, 63, !dbg !1110\l  %49 = or i32 128, %48, !dbg !1111\l  %50 = trunc i32 %49 to i8, !dbg !1112\l  %51 = load i8*, i8** %5, align 8, !dbg !1113, !tbaa !1053\l  %52 = getelementptr inbounds i8, i8* %51, i64 3, !dbg !1113\l  store i8 %50, i8* %52, align 1, !dbg !1114, !tbaa !1115\l  %53 = load i32, i32* %6, align 4, !dbg !1116, !tbaa !1058\l  %54 = lshr i32 %53, 6, !dbg !1117\l  store i32 %54, i32* %6, align 4, !dbg !1118, !tbaa !1058\l  %55 = load i32, i32* %6, align 4, !dbg !1119, !tbaa !1058\l  %56 = or i32 %55, 65536, !dbg !1119\l  store i32 %56, i32* %6, align 4, !dbg !1119, !tbaa !1058\l  br label %57, !dbg !1120\l}"];
	Node0x1ae4c10 -> Node0x1ae4c60;
	Node0x1ae4c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%57:\l57:                                               \l  %58 = load i32, i32* %6, align 4, !dbg !1121, !tbaa !1058\l  %59 = and i32 %58, 63, !dbg !1122\l  %60 = or i32 128, %59, !dbg !1123\l  %61 = trunc i32 %60 to i8, !dbg !1124\l  %62 = load i8*, i8** %5, align 8, !dbg !1125, !tbaa !1053\l  %63 = getelementptr inbounds i8, i8* %62, i64 2, !dbg !1125\l  store i8 %61, i8* %63, align 1, !dbg !1126, !tbaa !1115\l  %64 = load i32, i32* %6, align 4, !dbg !1127, !tbaa !1058\l  %65 = lshr i32 %64, 6, !dbg !1128\l  store i32 %65, i32* %6, align 4, !dbg !1129, !tbaa !1058\l  %66 = load i32, i32* %6, align 4, !dbg !1130, !tbaa !1058\l  %67 = or i32 %66, 2048, !dbg !1130\l  store i32 %67, i32* %6, align 4, !dbg !1130, !tbaa !1058\l  br label %68, !dbg !1131\l}"];
	Node0x1ae4c60 -> Node0x1ae4cb0;
	Node0x1ae4cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%68:\l68:                                               \l  %69 = load i32, i32* %6, align 4, !dbg !1132, !tbaa !1058\l  %70 = and i32 %69, 63, !dbg !1133\l  %71 = or i32 128, %70, !dbg !1134\l  %72 = trunc i32 %71 to i8, !dbg !1135\l  %73 = load i8*, i8** %5, align 8, !dbg !1136, !tbaa !1053\l  %74 = getelementptr inbounds i8, i8* %73, i64 1, !dbg !1136\l  store i8 %72, i8* %74, align 1, !dbg !1137, !tbaa !1115\l  %75 = load i32, i32* %6, align 4, !dbg !1138, !tbaa !1058\l  %76 = lshr i32 %75, 6, !dbg !1139\l  store i32 %76, i32* %6, align 4, !dbg !1140, !tbaa !1058\l  %77 = load i32, i32* %6, align 4, !dbg !1141, !tbaa !1058\l  %78 = or i32 %77, 192, !dbg !1141\l  store i32 %78, i32* %6, align 4, !dbg !1141, !tbaa !1058\l  %79 = load i32, i32* %6, align 4, !dbg !1142, !tbaa !1058\l  %80 = trunc i32 %79 to i8, !dbg !1142\l  %81 = load i8*, i8** %5, align 8, !dbg !1143, !tbaa !1053\l  %82 = getelementptr inbounds i8, i8* %81, i64 0, !dbg !1143\l  store i8 %80, i8* %82, align 1, !dbg !1144, !tbaa !1115\l  br label %83, !dbg !1145\l}"];
	Node0x1ae4cb0 -> Node0x1ae4d00;
	Node0x1ae4d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%83:\l83:                                               \l  %84 = load i32, i32* %8, align 4, !dbg !1146, !tbaa !1058\l  store i32 %84, i32* %4, align 4, !dbg !1147\l  store i32 1, i32* %9, align 4\l  br label %85, !dbg !1147\l}"];
	Node0x1ae4d00 -> Node0x1ae4d50;
	Node0x1ae4d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  %86 = bitcast i32* %8 to i8*, !dbg !1148\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %86) #22, !dbg !1148\l  %87 = load i32, i32* %4, align 4, !dbg !1148\l  ret i32 %87, !dbg !1148\l}"];
}
