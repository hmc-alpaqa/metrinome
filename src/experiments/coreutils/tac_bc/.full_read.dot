digraph "CFG for 'full_read' function" {
	label="CFG for 'full_read' function";

	Node0x2311a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i32, align 4\l  store i32 %0, i32* %4, align 4, !tbaa !857\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !850, metadata\l... !DIExpression()), !dbg !861\l  store i8* %1, i8** %5, align 8, !tbaa !862\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !851, metadata\l... !DIExpression()), !dbg !864\l  store i64 %2, i64* %6, align 8, !tbaa !865\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !852, metadata\l... !DIExpression()), !dbg !867\l  %11 = bitcast i64* %7 to i8*, !dbg !868\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #21, !dbg !868\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !853, metadata\l... !DIExpression()), !dbg !869\l  store i64 0, i64* %7, align 8, !dbg !869, !tbaa !865\l  %12 = bitcast i8** %8 to i8*, !dbg !870\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #21, !dbg !870\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !854, metadata\l... !DIExpression()), !dbg !871\l  %13 = load i8*, i8** %5, align 8, !dbg !872, !tbaa !862\l  store i8* %13, i8** %8, align 8, !dbg !871, !tbaa !862\l  br label %14, !dbg !873\l}"];
	Node0x2311a60 -> Node0x2311dc0;
	Node0x2311dc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l14:                                               \l  %15 = load i64, i64* %6, align 8, !dbg !874, !tbaa !865\l  %16 = icmp ugt i64 %15, 0, !dbg !875\l  br i1 %16, label %17, label %45, !dbg !873\l|{<s0>T|<s1>F}}"];
	Node0x2311dc0:s0 -> Node0x2316c10;
	Node0x2311dc0:s1 -> Node0x2316e40;
	Node0x2316c10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = bitcast i64* %9 to i8*, !dbg !876\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #21, !dbg !876\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !855, metadata\l... !DIExpression()), !dbg !877\l  %19 = load i32, i32* %4, align 4, !dbg !878, !tbaa !857\l  %20 = load i8*, i8** %8, align 8, !dbg !879, !tbaa !862\l  %21 = load i64, i64* %6, align 8, !dbg !880, !tbaa !865\l  %22 = call i64 @safe_read(i32 noundef %19, i8* noundef %20, i64 noundef\l... %21), !dbg !881\l  store i64 %22, i64* %9, align 8, !dbg !877, !tbaa !865\l  %23 = load i64, i64* %9, align 8, !dbg !882, !tbaa !865\l  %24 = icmp eq i64 %23, -1, !dbg !884\l  br i1 %24, label %25, label %26, !dbg !885\l|{<s0>T|<s1>F}}"];
	Node0x2316c10:s0 -> Node0x2316c60;
	Node0x2316c10:s1 -> Node0x2316cb0;
	Node0x2316c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%25:\l25:                                               \l  store i32 3, i32* %10, align 4\l  br label %41, !dbg !886\l}"];
	Node0x2316c60 -> Node0x2316da0;
	Node0x2316cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%26:\l26:                                               \l  %27 = load i64, i64* %9, align 8, !dbg !887, !tbaa !865\l  %28 = icmp eq i64 %27, 0, !dbg !889\l  br i1 %28, label %29, label %31, !dbg !890\l|{<s0>T|<s1>F}}"];
	Node0x2316cb0:s0 -> Node0x2316d00;
	Node0x2316cb0:s1 -> Node0x2316d50;
	Node0x2316d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%29:\l29:                                               \l  %30 = call i32* @__errno_location() #22, !dbg !891\l  store i32 0, i32* %30, align 4, !dbg !893, !tbaa !857\l  store i32 3, i32* %10, align 4\l  br label %41, !dbg !894\l}"];
	Node0x2316d00 -> Node0x2316da0;
	Node0x2316d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%31:\l31:                                               \l  %32 = load i64, i64* %9, align 8, !dbg !895, !tbaa !865\l  %33 = load i64, i64* %7, align 8, !dbg !896, !tbaa !865\l  %34 = add i64 %33, %32, !dbg !896\l  store i64 %34, i64* %7, align 8, !dbg !896, !tbaa !865\l  %35 = load i64, i64* %9, align 8, !dbg !897, !tbaa !865\l  %36 = load i8*, i8** %8, align 8, !dbg !898, !tbaa !862\l  %37 = getelementptr inbounds i8, i8* %36, i64 %35, !dbg !898\l  store i8* %37, i8** %8, align 8, !dbg !898, !tbaa !862\l  %38 = load i64, i64* %9, align 8, !dbg !899, !tbaa !865\l  %39 = load i64, i64* %6, align 8, !dbg !900, !tbaa !865\l  %40 = sub i64 %39, %38, !dbg !900\l  store i64 %40, i64* %6, align 8, !dbg !900, !tbaa !865\l  store i32 0, i32* %10, align 4, !dbg !901\l  br label %41, !dbg !901\l}"];
	Node0x2316d50 -> Node0x2316da0;
	Node0x2316da0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = bitcast i64* %9 to i8*, !dbg !901\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #21, !dbg !901\l  %43 = load i32, i32* %10, align 4\l  switch i32 %43, label %49 [\l    i32 0, label %44\l    i32 3, label %45\l  ]\l|{<s0>def|<s1>0|<s2>3}}"];
	Node0x2316da0:s0 -> Node0x2316e90;
	Node0x2316da0:s1 -> Node0x2316df0;
	Node0x2316da0:s2 -> Node0x2316e40;
	Node0x2316df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  br label %14, !dbg !873, !llvm.loop !902\l}"];
	Node0x2316df0 -> Node0x2311dc0;
	Node0x2316e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%45:\l45:                                               \l  %46 = load i64, i64* %7, align 8, !dbg !905, !tbaa !865\l  store i32 1, i32* %10, align 4\l  %47 = bitcast i8** %8 to i8*, !dbg !906\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %47) #21, !dbg !906\l  %48 = bitcast i64* %7 to i8*, !dbg !906\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48) #21, !dbg !906\l  ret i64 %46, !dbg !907\l}"];
	Node0x2316e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%49:\l49:                                               \l  unreachable\l}"];
}
