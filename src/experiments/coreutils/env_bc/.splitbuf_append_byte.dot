digraph "CFG for 'splitbuf_append_byte' function" {
	label="CFG for 'splitbuf_append_byte' function";

	Node0x9361e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca %struct.splitbuf*, align 8\l  %4 = alloca i8, align 1\l  %5 = alloca i64, align 8\l  store %struct.splitbuf* %0, %struct.splitbuf** %3, align 8, !tbaa !757\l  call void @llvm.dbg.declare(metadata %struct.splitbuf** %3, metadata !754,\l... metadata !DIExpression()), !dbg !761\l  store i8 %1, i8* %4, align 1, !tbaa !762\l  call void @llvm.dbg.declare(metadata i8* %4, metadata !755, metadata\l... !DIExpression()), !dbg !763\l  %6 = bitcast i64* %5 to i8*, !dbg !764\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #21, !dbg !764\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !756, metadata\l... !DIExpression()), !dbg !765\l  %7 = load %struct.splitbuf*, %struct.splitbuf** %3, align 8, !dbg !766,\l... !tbaa !757\l  %8 = getelementptr inbounds %struct.splitbuf, %struct.splitbuf* %7, i32 0,\l... i32 0, !dbg !767\l  %9 = load i8**, i8*** %8, align 8, !dbg !767, !tbaa !768\l  %10 = load %struct.splitbuf*, %struct.splitbuf** %3, align 8, !dbg !773,\l... !tbaa !757\l  %11 = getelementptr inbounds %struct.splitbuf, %struct.splitbuf* %10, i32 0,\l... i32 1, !dbg !774\l  %12 = load i32, i32* %11, align 8, !dbg !774, !tbaa !775\l  %13 = sext i32 %12 to i64, !dbg !766\l  %14 = getelementptr inbounds i8*, i8** %9, i64 %13, !dbg !766\l  %15 = load i8*, i8** %14, align 8, !dbg !766, !tbaa !757\l  %16 = ptrtoint i8* %15 to i64, !dbg !776\l  store i64 %16, i64* %5, align 8, !dbg !765, !tbaa !777\l  %17 = load %struct.splitbuf*, %struct.splitbuf** %3, align 8, !dbg !778,\l... !tbaa !757\l  %18 = getelementptr inbounds %struct.splitbuf, %struct.splitbuf* %17, i32 0,\l... i32 2, !dbg !780\l  %19 = load i64, i64* %18, align 8, !dbg !780, !tbaa !781\l  %20 = mul i64 %19, 8, !dbg !782\l  %21 = load i64, i64* %5, align 8, !dbg !783, !tbaa !777\l  %22 = icmp ule i64 %20, %21, !dbg !784\l  br i1 %22, label %23, label %25, !dbg !785\l|{<s0>T|<s1>F}}"];
	Node0x9361e0:s0 -> Node0x938f90;
	Node0x9361e0:s1 -> Node0x938fe0;
	Node0x938f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%23:\l23:                                               \l  %24 = load %struct.splitbuf*, %struct.splitbuf** %3, align 8, !dbg !786,\l... !tbaa !757\l  call void @splitbuf_grow(%struct.splitbuf* noundef %24), !dbg !787\l  br label %25, !dbg !787\l}"];
	Node0x938f90 -> Node0x938fe0;
	Node0x938fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = load i8, i8* %4, align 1, !dbg !788, !tbaa !762\l  %27 = load %struct.splitbuf*, %struct.splitbuf** %3, align 8, !dbg !789,\l... !tbaa !757\l  %28 = getelementptr inbounds %struct.splitbuf, %struct.splitbuf* %27, i32 0,\l... i32 0, !dbg !790\l  %29 = load i8**, i8*** %28, align 8, !dbg !790, !tbaa !768\l  %30 = load %struct.splitbuf*, %struct.splitbuf** %3, align 8, !dbg !791,\l... !tbaa !757\l  %31 = getelementptr inbounds %struct.splitbuf, %struct.splitbuf* %30, i32 0,\l... i32 2, !dbg !792\l  %32 = load i64, i64* %31, align 8, !dbg !792, !tbaa !781\l  %33 = getelementptr inbounds i8*, i8** %29, i64 %32, !dbg !793\l  %34 = bitcast i8** %33 to i8*, !dbg !794\l  %35 = load i64, i64* %5, align 8, !dbg !795, !tbaa !777\l  %36 = getelementptr inbounds i8, i8* %34, i64 %35, !dbg !794\l  store i8 %26, i8* %36, align 1, !dbg !796, !tbaa !762\l  %37 = load i64, i64* %5, align 8, !dbg !797, !tbaa !777\l  %38 = add nsw i64 %37, 1, !dbg !798\l  %39 = inttoptr i64 %38 to i8*, !dbg !799\l  %40 = load %struct.splitbuf*, %struct.splitbuf** %3, align 8, !dbg !800,\l... !tbaa !757\l  %41 = getelementptr inbounds %struct.splitbuf, %struct.splitbuf* %40, i32 0,\l... i32 0, !dbg !801\l  %42 = load i8**, i8*** %41, align 8, !dbg !801, !tbaa !768\l  %43 = load %struct.splitbuf*, %struct.splitbuf** %3, align 8, !dbg !802,\l... !tbaa !757\l  %44 = getelementptr inbounds %struct.splitbuf, %struct.splitbuf* %43, i32 0,\l... i32 1, !dbg !803\l  %45 = load i32, i32* %44, align 8, !dbg !803, !tbaa !775\l  %46 = sext i32 %45 to i64, !dbg !800\l  %47 = getelementptr inbounds i8*, i8** %42, i64 %46, !dbg !800\l  store i8* %39, i8** %47, align 8, !dbg !804, !tbaa !757\l  %48 = bitcast i64* %5 to i8*, !dbg !805\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48) #21, !dbg !805\l  ret void, !dbg !805\l}"];
}
