digraph "CFG for 'read_and_delete' function" {
	label="CFG for 'read_and_delete' function";

	Node0x11032f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i64, align 8\l  store i8* %0, i8** %4, align 8, !tbaa !743\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !737, metadata\l... !DIExpression()), !dbg !747\l  store i64 %1, i64* %5, align 8, !tbaa !748\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !738, metadata\l... !DIExpression()), !dbg !750\l  %10 = bitcast i64* %6 to i8*, !dbg !751\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #21, !dbg !751\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !739, metadata\l... !DIExpression()), !dbg !752\l  br label %11, !dbg !753\l}"];
	Node0x11032f0 -> Node0x10e91d0;
	Node0x10e91d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%11:\l11:                                               \l  %12 = bitcast i64* %7 to i8*, !dbg !754\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #21, !dbg !754\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !740, metadata\l... !DIExpression()), !dbg !755\l  %13 = load i8*, i8** %4, align 8, !dbg !756, !tbaa !743\l  %14 = load i64, i64* %5, align 8, !dbg !757, !tbaa !748\l  %15 = call i64 @plain_read(i8* noundef %13, i64 noundef %14), !dbg !758\l  store i64 %15, i64* %7, align 8, !dbg !755, !tbaa !748\l  %16 = load i64, i64* %7, align 8, !dbg !759, !tbaa !748\l  %17 = icmp eq i64 %16, 0, !dbg !761\l  br i1 %17, label %18, label %19, !dbg !762\l|{<s0>T|<s1>F}}"];
	Node0x10e91d0:s0 -> Node0x10e9220;
	Node0x10e91d0:s1 -> Node0x10e9270;
	Node0x10e9220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%18:\l18:                                               \l  store i64 0, i64* %3, align 8, !dbg !763\l  store i32 1, i32* %8, align 4\l  br label %75, !dbg !763\l}"];
	Node0x10e9220 -> Node0x10e9680;
	Node0x10e9270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%19:\l19:                                               \l  %20 = bitcast i64* %9 to i8*, !dbg !764\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #21, !dbg !764\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !742, metadata\l... !DIExpression()), !dbg !765\l  store i64 0, i64* %9, align 8, !dbg !766, !tbaa !748\l  br label %21, !dbg !768\l}"];
	Node0x10e9270 -> Node0x10e92c0;
	Node0x10e92c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = load i64, i64* %9, align 8, !dbg !769, !tbaa !748\l  %23 = load i64, i64* %7, align 8, !dbg !771, !tbaa !748\l  %24 = icmp ult i64 %22, %23, !dbg !772\l  br i1 %24, label %25, label %36, !dbg !773\l|{<s0>T|<s1>F}}"];
	Node0x10e92c0:s0 -> Node0x10e9310;
	Node0x10e92c0:s1 -> Node0x10e9360;
	Node0x10e9310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%25:\l25:                                               \l  %26 = load i8*, i8** %4, align 8, !dbg !774, !tbaa !743\l  %27 = load i64, i64* %9, align 8, !dbg !775, !tbaa !748\l  %28 = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !774\l  %29 = load i8, i8* %28, align 1, !dbg !774, !tbaa !776\l  %30 = call zeroext i8 @to_uchar(i8 noundef signext %29), !dbg !777\l  %31 = zext i8 %30 to i64, !dbg !778\l  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @in_delete_set, i64 0,\l... i64 %31, !dbg !778\l  %33 = load i8, i8* %32, align 1, !dbg !778, !tbaa !779, !range !781\l  %34 = trunc i8 %33 to i1, !dbg !778\l  %35 = xor i1 %34, true, !dbg !782\l  br label %36\l}"];
	Node0x10e9310 -> Node0x10e9360;
	Node0x10e9360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = phi i1 [ false, %21 ], [ %35, %25 ], !dbg !783\l  br i1 %37, label %38, label %42, !dbg !784\l|{<s0>T|<s1>F}}"];
	Node0x10e9360:s0 -> Node0x10e93b0;
	Node0x10e9360:s1 -> Node0x10e9450;
	Node0x10e93b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  br label %39, !dbg !785\l}"];
	Node0x10e93b0 -> Node0x10e9400;
	Node0x10e9400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = load i64, i64* %9, align 8, !dbg !786, !tbaa !748\l  %41 = add i64 %40, 1, !dbg !786\l  store i64 %41, i64* %9, align 8, !dbg !786, !tbaa !748\l  br label %21, !dbg !787, !llvm.loop !788\l}"];
	Node0x10e9400 -> Node0x10e92c0;
	Node0x10e9450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%42:\l42:                                               \l  %43 = load i64, i64* %9, align 8, !dbg !792, !tbaa !748\l  store i64 %43, i64* %6, align 8, !dbg !793, !tbaa !748\l  %44 = load i64, i64* %9, align 8, !dbg !794, !tbaa !748\l  %45 = add i64 %44, 1, !dbg !794\l  store i64 %45, i64* %9, align 8, !dbg !794, !tbaa !748\l  br label %46, !dbg !794\l}"];
	Node0x10e9450 -> Node0x10e94a0;
	Node0x10e94a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = load i64, i64* %9, align 8, !dbg !796, !tbaa !748\l  %48 = load i64, i64* %7, align 8, !dbg !798, !tbaa !748\l  %49 = icmp ult i64 %47, %48, !dbg !799\l  br i1 %49, label %50, label %73, !dbg !800\l|{<s0>T|<s1>F}}"];
	Node0x10e94a0:s0 -> Node0x10e94f0;
	Node0x10e94a0:s1 -> Node0x10e9630;
	Node0x10e94f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = load i8*, i8** %4, align 8, !dbg !801, !tbaa !743\l  %52 = load i64, i64* %9, align 8, !dbg !803, !tbaa !748\l  %53 = getelementptr inbounds i8, i8* %51, i64 %52, !dbg !801\l  %54 = load i8, i8* %53, align 1, !dbg !801, !tbaa !776\l  %55 = call zeroext i8 @to_uchar(i8 noundef signext %54), !dbg !804\l  %56 = zext i8 %55 to i64, !dbg !805\l  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @in_delete_set, i64 0,\l... i64 %56, !dbg !805\l  %58 = load i8, i8* %57, align 1, !dbg !805, !tbaa !779, !range !781\l  %59 = trunc i8 %58 to i1, !dbg !805\l  br i1 %59, label %69, label %60, !dbg !806\l|{<s0>T|<s1>F}}"];
	Node0x10e94f0:s0 -> Node0x10e9590;
	Node0x10e94f0:s1 -> Node0x10e9540;
	Node0x10e9540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%60:\l60:                                               \l  %61 = load i8*, i8** %4, align 8, !dbg !807, !tbaa !743\l  %62 = load i64, i64* %9, align 8, !dbg !808, !tbaa !748\l  %63 = getelementptr inbounds i8, i8* %61, i64 %62, !dbg !807\l  %64 = load i8, i8* %63, align 1, !dbg !807, !tbaa !776\l  %65 = load i8*, i8** %4, align 8, !dbg !809, !tbaa !743\l  %66 = load i64, i64* %6, align 8, !dbg !810, !tbaa !748\l  %67 = add i64 %66, 1, !dbg !810\l  store i64 %67, i64* %6, align 8, !dbg !810, !tbaa !748\l  %68 = getelementptr inbounds i8, i8* %65, i64 %66, !dbg !809\l  store i8 %64, i8* %68, align 1, !dbg !811, !tbaa !776\l  br label %69, !dbg !809\l}"];
	Node0x10e9540 -> Node0x10e9590;
	Node0x10e9590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  br label %70, !dbg !812\l}"];
	Node0x10e9590 -> Node0x10e95e0;
	Node0x10e95e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = load i64, i64* %9, align 8, !dbg !813, !tbaa !748\l  %72 = add i64 %71, 1, !dbg !813\l  store i64 %72, i64* %9, align 8, !dbg !813, !tbaa !748\l  br label %46, !dbg !814, !llvm.loop !815\l}"];
	Node0x10e95e0 -> Node0x10e94a0;
	Node0x10e9630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%73:\l73:                                               \l  %74 = bitcast i64* %9 to i8*, !dbg !817\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #21, !dbg !817\l  store i32 0, i32* %8, align 4, !dbg !817\l  br label %75, !dbg !817\l}"];
	Node0x10e9630 -> Node0x10e9680;
	Node0x10e9680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%75:\l75:                                               \l  %76 = bitcast i64* %7 to i8*, !dbg !817\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #21, !dbg !817\l  %77 = load i32, i32* %8, align 4\l  switch i32 %77, label %84 [\l    i32 0, label %78\l  ]\l|{<s0>def|<s1>0}}"];
	Node0x10e9680:s0 -> Node0x10e97c0;
	Node0x10e9680:s1 -> Node0x10e96d0;
	Node0x10e96d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%78:\l78:                                               \l  br label %79, !dbg !818\l}"];
	Node0x10e96d0 -> Node0x10e9720;
	Node0x10e9720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%79:\l79:                                               \l  %80 = load i64, i64* %6, align 8, !dbg !819, !tbaa !748\l  %81 = icmp eq i64 %80, 0, !dbg !820\l  br i1 %81, label %11, label %82, !dbg !818, !llvm.loop !821\l|{<s0>T|<s1>F}}"];
	Node0x10e9720:s0 -> Node0x10e91d0;
	Node0x10e9720:s1 -> Node0x10e9770;
	Node0x10e9770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%82:\l82:                                               \l  %83 = load i64, i64* %6, align 8, !dbg !823, !tbaa !748\l  store i64 %83, i64* %3, align 8, !dbg !824\l  store i32 1, i32* %8, align 4\l  br label %84, !dbg !824\l}"];
	Node0x10e9770 -> Node0x10e97c0;
	Node0x10e97c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%84:\l84:                                               \l  %85 = bitcast i64* %6 to i8*, !dbg !825\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #21, !dbg !825\l  %86 = load i64, i64* %3, align 8, !dbg !825\l  ret i64 %86, !dbg !825\l}"];
}
