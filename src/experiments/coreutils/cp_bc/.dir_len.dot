digraph "CFG for 'dir_len' function" {
	label="CFG for 'dir_len' function";

	Node0xfa1430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%1:\l  %2 = alloca i8*, align 8\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  store i8* %0, i8** %2, align 8, !tbaa !1473\l  call void @llvm.dbg.declare(metadata i8** %2, metadata !1470, metadata\l... !DIExpression()), !dbg !1477\l  %5 = bitcast i64* %3 to i8*, !dbg !1478\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #26, !dbg !1478\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !1471, metadata\l... !DIExpression()), !dbg !1479\l  %6 = load i8*, i8** %2, align 8, !dbg !1480, !tbaa !1473\l  store i64 0, i64* %3, align 8, !dbg !1479, !tbaa !1481\l  %7 = bitcast i64* %4 to i8*, !dbg !1483\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #26, !dbg !1483\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !1472, metadata\l... !DIExpression()), !dbg !1484\l  %8 = load i64, i64* %3, align 8, !dbg !1485, !tbaa !1481\l  %9 = icmp ne i64 %8, 0, !dbg !1486\l  br i1 %9, label %10, label %11, !dbg !1485\l|{<s0>T|<s1>F}}"];
	Node0xfa1430:s0 -> Node0xfa14e0;
	Node0xfa1430:s1 -> Node0xfa1530;
	Node0xfa14e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%10:\l10:                                               \l  br label %19, !dbg !1485\l}"];
	Node0xfa14e0 -> Node0xfa1580;
	Node0xfa1530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%11:\l11:                                               \l  %12 = load i8*, i8** %2, align 8, !dbg !1487, !tbaa !1473\l  %13 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !1487\l  %14 = load i8, i8* %13, align 1, !dbg !1487, !tbaa !1488\l  %15 = sext i8 %14 to i32, !dbg !1487\l  %16 = icmp eq i32 %15, 47, !dbg !1487\l  %17 = zext i1 %16 to i64, !dbg !1487\l  %18 = select i1 %16, i32 1, i32 0, !dbg !1487\l  br label %19, !dbg !1485\l}"];
	Node0xfa1530 -> Node0xfa1580;
	Node0xfa1580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%19:\l19:                                               \l  %20 = phi i32 [ 0, %10 ], [ %18, %11 ], !dbg !1485\l  %21 = sext i32 %20 to i64, !dbg !1489\l  %22 = load i64, i64* %3, align 8, !dbg !1490, !tbaa !1481\l  %23 = add i64 %22, %21, !dbg !1490\l  store i64 %23, i64* %3, align 8, !dbg !1490, !tbaa !1481\l  %24 = load i8*, i8** %2, align 8, !dbg !1491, !tbaa !1473\l  %25 = call i8* @last_component(i8* noundef %24) #27, !dbg !1493\l  %26 = load i8*, i8** %2, align 8, !dbg !1494, !tbaa !1473\l  %27 = ptrtoint i8* %25 to i64, !dbg !1495\l  %28 = ptrtoint i8* %26 to i64, !dbg !1495\l  %29 = sub i64 %27, %28, !dbg !1495\l  store i64 %29, i64* %4, align 8, !dbg !1496, !tbaa !1481\l  br label %30, !dbg !1497\l}"];
	Node0xfa1580 -> Node0xfa15d0;
	Node0xfa15d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = load i64, i64* %3, align 8, !dbg !1498, !tbaa !1481\l  %32 = load i64, i64* %4, align 8, !dbg !1500, !tbaa !1481\l  %33 = icmp ult i64 %31, %32, !dbg !1501\l  br i1 %33, label %34, label %47, !dbg !1502\l|{<s0>T|<s1>F}}"];
	Node0xfa15d0:s0 -> Node0xfa1620;
	Node0xfa15d0:s1 -> Node0xfa1760;
	Node0xfa1620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%34:\l34:                                               \l  %35 = load i8*, i8** %2, align 8, !dbg !1503, !tbaa !1473\l  %36 = load i64, i64* %4, align 8, !dbg !1503, !tbaa !1481\l  %37 = sub i64 %36, 1, !dbg !1503\l  %38 = getelementptr inbounds i8, i8* %35, i64 %37, !dbg !1503\l  %39 = load i8, i8* %38, align 1, !dbg !1503, !tbaa !1488\l  %40 = sext i8 %39 to i32, !dbg !1503\l  %41 = icmp eq i32 %40, 47, !dbg !1503\l  br i1 %41, label %43, label %42, !dbg !1505\l|{<s0>T|<s1>F}}"];
	Node0xfa1620:s0 -> Node0xfa16c0;
	Node0xfa1620:s1 -> Node0xfa1670;
	Node0xfa1670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%42:\l42:                                               \l  br label %47, !dbg !1506\l}"];
	Node0xfa1670 -> Node0xfa1760;
	Node0xfa16c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%43:\l43:                                               \l  br label %44, !dbg !1503\l}"];
	Node0xfa16c0 -> Node0xfa1710;
	Node0xfa1710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%44:\l44:                                               \l  %45 = load i64, i64* %4, align 8, !dbg !1507, !tbaa !1481\l  %46 = add i64 %45, -1, !dbg !1507\l  store i64 %46, i64* %4, align 8, !dbg !1507, !tbaa !1481\l  br label %30, !dbg !1508, !llvm.loop !1509\l}"];
	Node0xfa1710 -> Node0xfa15d0;
	Node0xfa1760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%47:\l47:                                               \l  %48 = load i64, i64* %4, align 8, !dbg !1513, !tbaa !1481\l  %49 = bitcast i64* %4 to i8*, !dbg !1514\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #26, !dbg !1514\l  %50 = bitcast i64* %3 to i8*, !dbg !1514\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #26, !dbg !1514\l  ret i64 %48, !dbg !1515\l}"];
}
