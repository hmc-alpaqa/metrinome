digraph "CFG for 'argmatch' function" {
	label="CFG for 'argmatch' function";

	Node0xf2b060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i8**, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i8, align 1\l  %14 = alloca i32, align 4\l  store i8* %0, i8** %6, align 8, !tbaa !1479\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1471, metadata\l... !DIExpression()), !dbg !1483\l  store i8** %1, i8*** %7, align 8, !tbaa !1479\l  call void @llvm.dbg.declare(metadata i8*** %7, metadata !1472, metadata\l... !DIExpression()), !dbg !1484\l  store i8* %2, i8** %8, align 8, !tbaa !1479\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1473, metadata\l... !DIExpression()), !dbg !1485\l  store i64 %3, i64* %9, align 8, !tbaa !1486\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1474, metadata\l... !DIExpression()), !dbg !1488\l  %15 = bitcast i64* %10 to i8*, !dbg !1489\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #26, !dbg !1489\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1475, metadata\l... !DIExpression()), !dbg !1490\l  %16 = bitcast i64* %11 to i8*, !dbg !1491\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #26, !dbg !1491\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1476, metadata\l... !DIExpression()), !dbg !1492\l  %17 = bitcast i64* %12 to i8*, !dbg !1493\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #26, !dbg !1493\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1477, metadata\l... !DIExpression()), !dbg !1494\l  store i64 -1, i64* %12, align 8, !dbg !1494, !tbaa !1486\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #26, !dbg !1495\l  call void @llvm.dbg.declare(metadata i8* %13, metadata !1478, metadata\l... !DIExpression()), !dbg !1496\l  store i8 0, i8* %13, align 1, !dbg !1496, !tbaa !1497\l  %18 = load i8*, i8** %6, align 8, !dbg !1499, !tbaa !1479\l  %19 = call i64 @strlen(i8* noundef %18) #27, !dbg !1500\l  store i64 %19, i64* %11, align 8, !dbg !1501, !tbaa !1486\l  store i64 0, i64* %10, align 8, !dbg !1502, !tbaa !1486\l  br label %20, !dbg !1504\l}"];
	Node0xf2b060 -> Node0xf2b150;
	Node0xf2b150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = load i8**, i8*** %7, align 8, !dbg !1505, !tbaa !1479\l  %22 = load i64, i64* %10, align 8, !dbg !1507, !tbaa !1486\l  %23 = getelementptr inbounds i8*, i8** %21, i64 %22, !dbg !1505\l  %24 = load i8*, i8** %23, align 8, !dbg !1505, !tbaa !1479\l  %25 = icmp ne i8* %24, null, !dbg !1508\l  br i1 %25, label %26, label %75, !dbg !1508\l|{<s0>T|<s1>F}}"];
	Node0xf2b150:s0 -> Node0xf2b1a0;
	Node0xf2b150:s1 -> Node0xf2b5b0;
	Node0xf2b1a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i8**, i8*** %7, align 8, !dbg !1509, !tbaa !1479\l  %28 = load i64, i64* %10, align 8, !dbg !1512, !tbaa !1486\l  %29 = getelementptr inbounds i8*, i8** %27, i64 %28, !dbg !1509\l  %30 = load i8*, i8** %29, align 8, !dbg !1509, !tbaa !1479\l  %31 = load i8*, i8** %6, align 8, !dbg !1513, !tbaa !1479\l  %32 = load i64, i64* %11, align 8, !dbg !1514, !tbaa !1486\l  %33 = call i32 @strncmp(i8* noundef %30, i8* noundef %31, i64 noundef %32)\l... #27, !dbg !1515\l  %34 = icmp ne i32 %33, 0, !dbg !1515\l  br i1 %34, label %71, label %35, !dbg !1516\l|{<s0>T|<s1>F}}"];
	Node0xf2b1a0:s0 -> Node0xf2b510;
	Node0xf2b1a0:s1 -> Node0xf2b1f0;
	Node0xf2b1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%35:\l35:                                               \l  %36 = load i8**, i8*** %7, align 8, !dbg !1517, !tbaa !1479\l  %37 = load i64, i64* %10, align 8, !dbg !1520, !tbaa !1486\l  %38 = getelementptr inbounds i8*, i8** %36, i64 %37, !dbg !1517\l  %39 = load i8*, i8** %38, align 8, !dbg !1517, !tbaa !1479\l  %40 = call i64 @strlen(i8* noundef %39) #27, !dbg !1521\l  %41 = load i64, i64* %11, align 8, !dbg !1522, !tbaa !1486\l  %42 = icmp eq i64 %40, %41, !dbg !1523\l  br i1 %42, label %43, label %45, !dbg !1524\l|{<s0>T|<s1>F}}"];
	Node0xf2b1f0:s0 -> Node0xf2b240;
	Node0xf2b1f0:s1 -> Node0xf2b290;
	Node0xf2b240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%43:\l43:                                               \l  %44 = load i64, i64* %10, align 8, !dbg !1525, !tbaa !1486\l  store i64 %44, i64* %5, align 8, !dbg !1526\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1526\l}"];
	Node0xf2b240 -> Node0xf2b6a0;
	Node0xf2b290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%45:\l45:                                               \l  %46 = load i64, i64* %12, align 8, !dbg !1527, !tbaa !1486\l  %47 = icmp eq i64 %46, -1, !dbg !1529\l  br i1 %47, label %48, label %50, !dbg !1530\l|{<s0>T|<s1>F}}"];
	Node0xf2b290:s0 -> Node0xf2b2e0;
	Node0xf2b290:s1 -> Node0xf2b330;
	Node0xf2b2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%48:\l48:                                               \l  %49 = load i64, i64* %10, align 8, !dbg !1531, !tbaa !1486\l  store i64 %49, i64* %12, align 8, !dbg !1532, !tbaa !1486\l  br label %69, !dbg !1533\l}"];
	Node0xf2b2e0 -> Node0xf2b470;
	Node0xf2b330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%50:\l50:                                               \l  %51 = load i8*, i8** %8, align 8, !dbg !1534, !tbaa !1479\l  %52 = icmp eq i8* %51, null, !dbg !1537\l  br i1 %52, label %67, label %53, !dbg !1538\l|{<s0>T|<s1>F}}"];
	Node0xf2b330:s0 -> Node0xf2b3d0;
	Node0xf2b330:s1 -> Node0xf2b380;
	Node0xf2b380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%53:\l53:                                               \l  %54 = load i8*, i8** %8, align 8, !dbg !1539, !tbaa !1479\l  %55 = load i64, i64* %9, align 8, !dbg !1540, !tbaa !1486\l  %56 = load i64, i64* %12, align 8, !dbg !1541, !tbaa !1486\l  %57 = mul i64 %55, %56, !dbg !1542\l  %58 = getelementptr inbounds i8, i8* %54, i64 %57, !dbg !1543\l  %59 = load i8*, i8** %8, align 8, !dbg !1544, !tbaa !1479\l  %60 = load i64, i64* %9, align 8, !dbg !1545, !tbaa !1486\l  %61 = load i64, i64* %10, align 8, !dbg !1546, !tbaa !1486\l  %62 = mul i64 %60, %61, !dbg !1547\l  %63 = getelementptr inbounds i8, i8* %59, i64 %62, !dbg !1548\l  %64 = load i64, i64* %9, align 8, !dbg !1549, !tbaa !1486\l  %65 = call i32 @memcmp(i8* noundef %58, i8* noundef %63, i64 noundef %64)\l... #27, !dbg !1550\l  %66 = icmp ne i32 %65, 0, !dbg !1550\l  br i1 %66, label %67, label %68, !dbg !1551\l|{<s0>T|<s1>F}}"];
	Node0xf2b380:s0 -> Node0xf2b3d0;
	Node0xf2b380:s1 -> Node0xf2b420;
	Node0xf2b3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%67:\l67:                                               \l  store i8 1, i8* %13, align 1, !dbg !1552, !tbaa !1497\l  br label %68, !dbg !1554\l}"];
	Node0xf2b3d0 -> Node0xf2b420;
	Node0xf2b420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%68:\l68:                                               \l  br label %69\l}"];
	Node0xf2b420 -> Node0xf2b470;
	Node0xf2b470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%69:\l69:                                               \l  br label %70\l}"];
	Node0xf2b470 -> Node0xf2b4c0;
	Node0xf2b4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%70:\l70:                                               \l  br label %71, !dbg !1555\l}"];
	Node0xf2b4c0 -> Node0xf2b510;
	Node0xf2b510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%71:\l71:                                               \l  br label %72, !dbg !1556\l}"];
	Node0xf2b510 -> Node0xf2b560;
	Node0xf2b560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%72:\l72:                                               \l  %73 = load i64, i64* %10, align 8, !dbg !1557, !tbaa !1486\l  %74 = add i64 %73, 1, !dbg !1557\l  store i64 %74, i64* %10, align 8, !dbg !1557, !tbaa !1486\l  br label %20, !dbg !1558, !llvm.loop !1559\l}"];
	Node0xf2b560 -> Node0xf2b150;
	Node0xf2b5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%75:\l75:                                               \l  %76 = load i8, i8* %13, align 1, !dbg !1563, !tbaa !1497, !range !1565\l  %77 = trunc i8 %76 to i1, !dbg !1563\l  br i1 %77, label %78, label %79, !dbg !1566\l|{<s0>T|<s1>F}}"];
	Node0xf2b5b0:s0 -> Node0xf2b600;
	Node0xf2b5b0:s1 -> Node0xf2b650;
	Node0xf2b600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%78:\l78:                                               \l  store i64 -2, i64* %5, align 8, !dbg !1567\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1567\l}"];
	Node0xf2b600 -> Node0xf2b6a0;
	Node0xf2b650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%79:\l79:                                               \l  %80 = load i64, i64* %12, align 8, !dbg !1568, !tbaa !1486\l  store i64 %80, i64* %5, align 8, !dbg !1569\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1569\l}"];
	Node0xf2b650 -> Node0xf2b6a0;
	Node0xf2b6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%81:\l81:                                               \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #26, !dbg !1570\l  %82 = bitcast i64* %12 to i8*, !dbg !1570\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #26, !dbg !1570\l  %83 = bitcast i64* %11 to i8*, !dbg !1570\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #26, !dbg !1570\l  %84 = bitcast i64* %10 to i8*, !dbg !1570\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #26, !dbg !1570\l  %85 = load i64, i64* %5, align 8, !dbg !1570\l  ret i64 %85, !dbg !1570\l}"];
}
