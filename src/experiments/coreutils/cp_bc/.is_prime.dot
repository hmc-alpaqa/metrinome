digraph "CFG for 'is_prime' function" {
	label="CFG for 'is_prime' function";

	Node0x1021af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%1:\l  %2 = alloca i64, align 8\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  store i64 %0, i64* %2, align 8, !tbaa !1473\l  call void @llvm.dbg.declare(metadata i64* %2, metadata !1470, metadata\l... !DIExpression()), !dbg !1477\l  %5 = bitcast i64* %3 to i8*, !dbg !1478\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #26, !dbg !1478\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !1471, metadata\l... !DIExpression()), !dbg !1479\l  store i64 3, i64* %3, align 8, !dbg !1479, !tbaa !1473\l  %6 = bitcast i64* %4 to i8*, !dbg !1480\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #26, !dbg !1480\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !1472, metadata\l... !DIExpression()), !dbg !1481\l  %7 = load i64, i64* %3, align 8, !dbg !1482, !tbaa !1473\l  %8 = load i64, i64* %3, align 8, !dbg !1483, !tbaa !1473\l  %9 = mul i64 %7, %8, !dbg !1484\l  store i64 %9, i64* %4, align 8, !dbg !1481, !tbaa !1473\l  br label %10, !dbg !1485\l}"];
	Node0x1021af0 -> Node0x10232d0;
	Node0x10232d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l10:                                               \l  %11 = load i64, i64* %4, align 8, !dbg !1486, !tbaa !1473\l  %12 = load i64, i64* %2, align 8, !dbg !1487, !tbaa !1473\l  %13 = icmp ult i64 %11, %12, !dbg !1488\l  br i1 %13, label %14, label %19, !dbg !1489\l|{<s0>T|<s1>F}}"];
	Node0x10232d0:s0 -> Node0x1023360;
	Node0x10232d0:s1 -> Node0x10233b0;
	Node0x1023360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%14:\l14:                                               \l  %15 = load i64, i64* %2, align 8, !dbg !1490, !tbaa !1473\l  %16 = load i64, i64* %3, align 8, !dbg !1491, !tbaa !1473\l  %17 = urem i64 %15, %16, !dbg !1492\l  %18 = icmp ne i64 %17, 0, !dbg !1489\l  br label %19\l}"];
	Node0x1023360 -> Node0x10233b0;
	Node0x10233b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = phi i1 [ false, %10 ], [ %18, %14 ], !dbg !1493\l  br i1 %20, label %21, label %30, !dbg !1485\l|{<s0>T|<s1>F}}"];
	Node0x10233b0:s0 -> Node0x1023400;
	Node0x10233b0:s1 -> Node0x1023450;
	Node0x1023400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%21:\l21:                                               \l  %22 = load i64, i64* %3, align 8, !dbg !1494, !tbaa !1473\l  %23 = add i64 %22, 1, !dbg !1494\l  store i64 %23, i64* %3, align 8, !dbg !1494, !tbaa !1473\l  %24 = load i64, i64* %3, align 8, !dbg !1496, !tbaa !1473\l  %25 = mul i64 4, %24, !dbg !1497\l  %26 = load i64, i64* %4, align 8, !dbg !1498, !tbaa !1473\l  %27 = add i64 %26, %25, !dbg !1498\l  store i64 %27, i64* %4, align 8, !dbg !1498, !tbaa !1473\l  %28 = load i64, i64* %3, align 8, !dbg !1499, !tbaa !1473\l  %29 = add i64 %28, 1, !dbg !1499\l  store i64 %29, i64* %3, align 8, !dbg !1499, !tbaa !1473\l  br label %10, !dbg !1485, !llvm.loop !1500\l}"];
	Node0x1023400 -> Node0x10232d0;
	Node0x1023450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%30:\l30:                                               \l  %31 = load i64, i64* %2, align 8, !dbg !1504, !tbaa !1473\l  %32 = load i64, i64* %3, align 8, !dbg !1505, !tbaa !1473\l  %33 = urem i64 %31, %32, !dbg !1506\l  %34 = icmp ne i64 %33, 0, !dbg !1504\l  %35 = zext i1 %34 to i64, !dbg !1504\l  %36 = select i1 %34, i32 1, i32 0, !dbg !1504\l  %37 = icmp ne i32 %36, 0, !dbg !1507\l  %38 = bitcast i64* %4 to i8*, !dbg !1508\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #26, !dbg !1508\l  %39 = bitcast i64* %3 to i8*, !dbg !1508\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #26, !dbg !1508\l  ret i1 %37, !dbg !1509\l}"];
}
