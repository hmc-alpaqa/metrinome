digraph "CFG for 'check_extension' function" {
	label="CFG for 'check_extension' function";

	Node0xf73820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = alloca i1, align 1\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i8, align 1\l  %10 = alloca i32, align 4\l  %11 = alloca i64*, align 8\l  %12 = alloca i8*, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca [2 x i8], align 1\l  %17 = alloca i32, align 4\l  store i8* %0, i8** %7, align 8, !tbaa !1487\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !1470, metadata\l... !DIExpression()), !dbg !1491\l  store i64 %1, i64* %8, align 8, !tbaa !1492\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1471, metadata\l... !DIExpression()), !dbg !1494\l  store i8 %2, i8* %9, align 1, !tbaa !1495\l  call void @llvm.dbg.declare(metadata i8* %9, metadata !1472, metadata\l... !DIExpression()), !dbg !1496\l  store i32 %3, i32* %10, align 4, !tbaa !1497\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !1473, metadata\l... !DIExpression()), !dbg !1499\l  store i64* %4, i64** %11, align 8, !tbaa !1487\l  call void @llvm.dbg.declare(metadata i64** %11, metadata !1474, metadata\l... !DIExpression()), !dbg !1500\l  %18 = bitcast i8** %12 to i8*, !dbg !1501\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #26, !dbg !1501\l  call void @llvm.dbg.declare(metadata i8** %12, metadata !1475, metadata\l... !DIExpression()), !dbg !1502\l  %19 = load i8*, i8** %7, align 8, !dbg !1503, !tbaa !1487\l  %20 = call i8* @last_component(i8* noundef %19) #27, !dbg !1504\l  store i8* %20, i8** %12, align 8, !dbg !1502, !tbaa !1487\l  %21 = bitcast i64* %13 to i8*, !dbg !1505\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #26, !dbg !1505\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !1476, metadata\l... !DIExpression()), !dbg !1506\l  %22 = load i8*, i8** %12, align 8, !dbg !1507, !tbaa !1487\l  %23 = call i64 @base_len(i8* noundef %22) #27, !dbg !1508\l  store i64 %23, i64* %13, align 8, !dbg !1506, !tbaa !1492\l  %24 = bitcast i64* %14 to i8*, !dbg !1509\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #26, !dbg !1509\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !1477, metadata\l... !DIExpression()), !dbg !1510\l  store i64 255, i64* %14, align 8, !dbg !1510, !tbaa !1492\l  %25 = load i64, i64* %13, align 8, !dbg !1511, !tbaa !1492\l  %26 = icmp slt i64 14, %25, !dbg !1512\l  br i1 %26, label %27, label %87, !dbg !1513\l|{<s0>T|<s1>F}}"];
	Node0xf73820:s0 -> Node0xf73a00;
	Node0xf73820:s1 -> Node0xf73d20;
	Node0xf73a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%27:\l27:                                               \l  %28 = load i64*, i64** %11, align 8, !dbg !1514, !tbaa !1487\l  %29 = load i64, i64* %28, align 8, !dbg !1515, !tbaa !1492\l  %30 = icmp eq i64 %29, 0, !dbg !1516\l  br i1 %30, label %31, label %84, !dbg !1517\l|{<s0>T|<s1>F}}"];
	Node0xf73a00:s0 -> Node0xf73a50;
	Node0xf73a00:s1 -> Node0xf73cd0;
	Node0xf73a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%31:\l31:                                               \l  %32 = bitcast i64* %15 to i8*, !dbg !1518\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #26, !dbg !1518\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !1478, metadata\l... !DIExpression()), !dbg !1519\l  %33 = load i32, i32* %10, align 4, !dbg !1520, !tbaa !1497\l  %34 = icmp slt i32 %33, 0, !dbg !1521\l  br i1 %34, label %35, label %55, !dbg !1522\l|{<s0>T|<s1>F}}"];
	Node0xf73a50:s0 -> Node0xf73aa0;
	Node0xf73a50:s1 -> Node0xf73af0;
	Node0xf73aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%35:\l35:                                               \l  %36 = bitcast [2 x i8]* %16 to i8*, !dbg !1523\l  call void @llvm.lifetime.start.p0i8(i64 2, i8* %36) #26, !dbg !1523\l  call void @llvm.dbg.declare(metadata [2 x i8]* %16, metadata !1483, metadata\l... !DIExpression()), !dbg !1524\l  %37 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 0, !dbg\l... !1525\l  %38 = load i8*, i8** %12, align 8, !dbg !1526, !tbaa !1487\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %38, i64\l... 2, i1 false), !dbg !1525\l  %39 = load i8*, i8** %12, align 8, !dbg !1527, !tbaa !1487\l  %40 = call i8* @strcpy(i8* noundef %39, i8* noundef getelementptr inbounds\l... ([2 x i8], [2 x i8]* @.str.2.281, i64 0, i64 0)) #26, !dbg !1528\l  %41 = call i32* @__errno_location() #28, !dbg !1529\l  store i32 0, i32* %41, align 4, !dbg !1530, !tbaa !1497\l  %42 = load i8*, i8** %7, align 8, !dbg !1531, !tbaa !1487\l  %43 = call i64 @pathconf(i8* noundef %42, i32 noundef 3) #26, !dbg !1532\l  store i64 %43, i64* %15, align 8, !dbg !1533, !tbaa !1492\l  %44 = call i32* @__errno_location() #28, !dbg !1534\l  %45 = load i32, i32* %44, align 4, !dbg !1534, !tbaa !1497\l  %46 = icmp ne i32 %45, 0, !dbg !1535\l  %47 = xor i1 %46, true, !dbg !1535\l  %48 = zext i1 %47 to i32, !dbg !1535\l  %49 = sext i32 %48 to i64, !dbg !1535\l  %50 = load i64, i64* %15, align 8, !dbg !1536, !tbaa !1492\l  %51 = sub nsw i64 %50, %49, !dbg !1536\l  store i64 %51, i64* %15, align 8, !dbg !1536, !tbaa !1492\l  %52 = load i8*, i8** %12, align 8, !dbg !1537, !tbaa !1487\l  %53 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 0, !dbg\l... !1538\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %53, i64\l... 2, i1 false), !dbg !1538\l  %54 = bitcast [2 x i8]* %16 to i8*, !dbg !1539\l  call void @llvm.lifetime.end.p0i8(i64 2, i8* %54) #26, !dbg !1539\l  br label %67, !dbg !1540\l}"];
	Node0xf73aa0 -> Node0xf73b40;
	Node0xf73af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%55:\l55:                                               \l  %56 = call i32* @__errno_location() #28, !dbg !1541\l  store i32 0, i32* %56, align 4, !dbg !1543, !tbaa !1497\l  %57 = load i32, i32* %10, align 4, !dbg !1544, !tbaa !1497\l  %58 = call i64 @fpathconf(i32 noundef %57, i32 noundef 3) #26, !dbg !1545\l  store i64 %58, i64* %15, align 8, !dbg !1546, !tbaa !1492\l  %59 = call i32* @__errno_location() #28, !dbg !1547\l  %60 = load i32, i32* %59, align 4, !dbg !1547, !tbaa !1497\l  %61 = icmp ne i32 %60, 0, !dbg !1548\l  %62 = xor i1 %61, true, !dbg !1548\l  %63 = zext i1 %62 to i32, !dbg !1548\l  %64 = sext i32 %63 to i64, !dbg !1548\l  %65 = load i64, i64* %15, align 8, !dbg !1549, !tbaa !1492\l  %66 = sub nsw i64 %65, %64, !dbg !1549\l  store i64 %66, i64* %15, align 8, !dbg !1549, !tbaa !1492\l  br label %67\l}"];
	Node0xf73af0 -> Node0xf73b40;
	Node0xf73b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%67:\l67:                                               \l  %68 = load i64, i64* %15, align 8, !dbg !1550, !tbaa !1492\l  %69 = icmp sle i64 0, %68, !dbg !1551\l  br i1 %69, label %70, label %75, !dbg !1552\l|{<s0>T|<s1>F}}"];
	Node0xf73b40:s0 -> Node0xf73b90;
	Node0xf73b40:s1 -> Node0xf73c30;
	Node0xf73b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%70:\l70:                                               \l  %71 = load i64, i64* %15, align 8, !dbg !1553, !tbaa !1492\l  %72 = icmp ule i64 %71, -1, !dbg !1554\l  br i1 %72, label %73, label %75, !dbg !1555\l|{<s0>T|<s1>F}}"];
	Node0xf73b90:s0 -> Node0xf73be0;
	Node0xf73b90:s1 -> Node0xf73c30;
	Node0xf73be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%73:\l73:                                               \l  %74 = load i64, i64* %15, align 8, !dbg !1556, !tbaa !1492\l  br label %80, !dbg !1555\l}"];
	Node0xf73be0 -> Node0xf73c80;
	Node0xf73c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%75:\l75:                                               \l  %76 = load i64, i64* %15, align 8, !dbg !1557, !tbaa !1492\l  %77 = icmp slt i64 %76, -1, !dbg !1558\l  %78 = zext i1 %77 to i64, !dbg !1557\l  %79 = select i1 %77, i64 14, i64 -1, !dbg !1557\l  br label %80, !dbg !1555\l}"];
	Node0xf73c30 -> Node0xf73c80;
	Node0xf73c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%80:\l80:                                               \l  %81 = phi i64 [ %74, %73 ], [ %79, %75 ], !dbg !1555\l  %82 = load i64*, i64** %11, align 8, !dbg !1559, !tbaa !1487\l  store i64 %81, i64* %82, align 8, !dbg !1560, !tbaa !1492\l  %83 = bitcast i64* %15 to i8*, !dbg !1561\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #26, !dbg !1561\l  br label %84, !dbg !1562\l}"];
	Node0xf73c80 -> Node0xf73cd0;
	Node0xf73cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%84:\l84:                                               \l  %85 = load i64*, i64** %11, align 8, !dbg !1563, !tbaa !1487\l  %86 = load i64, i64* %85, align 8, !dbg !1564, !tbaa !1492\l  store i64 %86, i64* %14, align 8, !dbg !1565, !tbaa !1492\l  br label %87, !dbg !1566\l}"];
	Node0xf73cd0 -> Node0xf73d20;
	Node0xf73d20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  %88 = load i64, i64* %13, align 8, !dbg !1567, !tbaa !1492\l  %89 = load i64, i64* %14, align 8, !dbg !1569, !tbaa !1492\l  %90 = icmp sle i64 %88, %89, !dbg !1570\l  br i1 %90, label %91, label %92, !dbg !1571\l|{<s0>T|<s1>F}}"];
	Node0xf73d20:s0 -> Node0xf73d70;
	Node0xf73d20:s1 -> Node0xf73dc0;
	Node0xf73d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%91:\l91:                                               \l  store i1 true, i1* %6, align 1, !dbg !1572\l  store i32 1, i32* %17, align 4\l  br label %115, !dbg !1572\l}"];
	Node0xf73d70 -> Node0xf73eb0;
	Node0xf73dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%92:\l92:                                               \l  %93 = load i8*, i8** %7, align 8, !dbg !1573, !tbaa !1487\l  %94 = load i64, i64* %8, align 8, !dbg !1575, !tbaa !1492\l  %95 = getelementptr inbounds i8, i8* %93, i64 %94, !dbg !1576\l  %96 = load i8*, i8** %12, align 8, !dbg !1577, !tbaa !1487\l  %97 = ptrtoint i8* %95 to i64, !dbg !1578\l  %98 = ptrtoint i8* %96 to i64, !dbg !1578\l  %99 = sub i64 %97, %98, !dbg !1578\l  store i64 %99, i64* %13, align 8, !dbg !1579, !tbaa !1492\l  %100 = load i64, i64* %14, align 8, !dbg !1580, !tbaa !1492\l  %101 = load i64, i64* %13, align 8, !dbg !1582, !tbaa !1492\l  %102 = icmp sle i64 %100, %101, !dbg !1583\l  br i1 %102, label %103, label %106, !dbg !1584\l|{<s0>T|<s1>F}}"];
	Node0xf73dc0:s0 -> Node0xf73e10;
	Node0xf73dc0:s1 -> Node0xf73e60;
	Node0xf73e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%103:\l103:                                              \l  %104 = load i64, i64* %14, align 8, !dbg !1585, !tbaa !1492\l  %105 = sub nsw i64 %104, 1, !dbg !1586\l  store i64 %105, i64* %13, align 8, !dbg !1587, !tbaa !1492\l  br label %106, !dbg !1588\l}"];
	Node0xf73e10 -> Node0xf73e60;
	Node0xf73e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%106:\l106:                                              \l  %107 = load i8, i8* %9, align 1, !dbg !1589, !tbaa !1495\l  %108 = load i8*, i8** %12, align 8, !dbg !1590, !tbaa !1487\l  %109 = load i64, i64* %13, align 8, !dbg !1591, !tbaa !1492\l  %110 = getelementptr inbounds i8, i8* %108, i64 %109, !dbg !1590\l  store i8 %107, i8* %110, align 1, !dbg !1592, !tbaa !1495\l  %111 = load i8*, i8** %12, align 8, !dbg !1593, !tbaa !1487\l  %112 = load i64, i64* %13, align 8, !dbg !1594, !tbaa !1492\l  %113 = add nsw i64 %112, 1, !dbg !1595\l  %114 = getelementptr inbounds i8, i8* %111, i64 %113, !dbg !1593\l  store i8 0, i8* %114, align 1, !dbg !1596, !tbaa !1495\l  store i1 false, i1* %6, align 1, !dbg !1597\l  store i32 1, i32* %17, align 4\l  br label %115, !dbg !1597\l}"];
	Node0xf73e60 -> Node0xf73eb0;
	Node0xf73eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%115:\l115:                                              \l  %116 = bitcast i64* %14 to i8*, !dbg !1598\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116) #26, !dbg !1598\l  %117 = bitcast i64* %13 to i8*, !dbg !1598\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117) #26, !dbg !1598\l  %118 = bitcast i8** %12 to i8*, !dbg !1598\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %118) #26, !dbg !1598\l  %119 = load i1, i1* %6, align 1, !dbg !1598\l  ret i1 %119, !dbg !1598\l}"];
}
