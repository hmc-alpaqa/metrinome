digraph "CFG for 'sort_files' function" {
	label="CFG for 'sort_files' function";

	Node0x7ffce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%0:\l  %1 = alloca i8, align 1\l  %2 = alloca i32, align 4\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #27, !dbg !1871\l  call void @llvm.dbg.declare(metadata i8* %1, metadata !1870, metadata\l... !DIExpression()), !dbg !1872\l  %3 = load i64, i64* @sorted_file_alloc, align 8, !dbg !1873, !tbaa !1875\l  %4 = load i64, i64* @cwd_n_used, align 8, !dbg !1879, !tbaa !1875\l  %5 = load i64, i64* @cwd_n_used, align 8, !dbg !1880, !tbaa !1875\l  %6 = udiv i64 %5, 2, !dbg !1881\l  %7 = add i64 %4, %6, !dbg !1882\l  %8 = icmp ult i64 %3, %7, !dbg !1883\l  br i1 %8, label %9, label %17, !dbg !1884\l|{<s0>T|<s1>F}}"];
	Node0x7ffce0:s0 -> Node0x7ffe00;
	Node0x7ffce0:s1 -> Node0x7ffe50;
	Node0x7ffe00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%9:\l9:                                                \l  %10 = load i8**, i8*** @sorted_file, align 8, !dbg !1885, !tbaa !1887\l  %11 = bitcast i8** %10 to i8*, !dbg !1885\l  call void @free(i8* noundef %11) #27, !dbg !1889\l  %12 = load i64, i64* @cwd_n_used, align 8, !dbg !1890, !tbaa !1875\l  %13 = call noalias nonnull i8* @xnmalloc(i64 noundef %12, i64 noundef 24)\l... #28, !dbg !1891\l  %14 = bitcast i8* %13 to i8**, !dbg !1891\l  store i8** %14, i8*** @sorted_file, align 8, !dbg !1892, !tbaa !1887\l  %15 = load i64, i64* @cwd_n_used, align 8, !dbg !1893, !tbaa !1875\l  %16 = mul i64 3, %15, !dbg !1894\l  store i64 %16, i64* @sorted_file_alloc, align 8, !dbg !1895, !tbaa !1875\l  br label %17, !dbg !1896\l}"];
	Node0x7ffe00 -> Node0x7ffe50;
	Node0x7ffe50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  call void @initialize_ordering_vector(), !dbg !1897\l  call void @update_current_files_info(), !dbg !1898\l  %18 = load i32, i32* @sort_type, align 4, !dbg !1899, !tbaa !1901\l  %19 = icmp eq i32 %18, 6, !dbg !1902\l  br i1 %19, label %20, label %21, !dbg !1903\l|{<s0>T|<s1>F}}"];
	Node0x7ffe50:s0 -> Node0x7ffea0;
	Node0x7ffe50:s1 -> Node0x7ffef0;
	Node0x7ffea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%20:\l20:                                               \l  store i32 1, i32* %2, align 4\l  br label %58, !dbg !1904\l}"];
	Node0x7ffea0 -> Node0x800210;
	Node0x7ffef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%21:\l21:                                               \l  %22 = call i32 @_setjmp(%struct.__jmp_buf_tag* noundef getelementptr\l... inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]*\l... @failed_strcoll, i64 0, i64 0)) #29, !dbg !1905\l  %23 = icmp ne i32 %22, 0, !dbg !1905\l  br i1 %23, label %25, label %24, !dbg !1907\l|{<s0>T|<s1>F}}"];
	Node0x7ffef0:s0 -> Node0x7fff90;
	Node0x7ffef0:s1 -> Node0x7fff40;
	Node0x7fff40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%24:\l24:                                               \l  store i8 0, i8* %1, align 1, !dbg !1908, !tbaa !1909\l  br label %31, !dbg !1911\l}"];
	Node0x7fff40 -> Node0x8000d0;
	Node0x7fff90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%25:\l25:                                               \l  store i8 1, i8* %1, align 1, !dbg !1912, !tbaa !1909\l  %26 = load i32, i32* @sort_type, align 4, !dbg !1914, !tbaa !1901\l  %27 = icmp ne i32 %26, 4, !dbg !1914\l  br i1 %27, label %28, label %29, !dbg !1917\l|{<s0>T|<s1>F}}"];
	Node0x7fff90:s0 -> Node0x7fffe0;
	Node0x7fff90:s1 -> Node0x800030;
	Node0x7fffe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%28:\l28:                                               \l  br label %30, !dbg !1917\l}"];
	Node0x7fffe0 -> Node0x800080;
	Node0x800030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%29:\l29:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([26 x i8], [26\l... x i8]* @.str.242, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x\l... i8], [12 x i8]* @.str.4, i64 0, i64 0), i32 noundef 4114, i8* noundef\l... getelementptr inbounds ([22 x i8], [22 x i8]*\l... @__PRETTY_FUNCTION__.sort_files, i64 0, i64 0)) #30, !dbg !1914\l  unreachable, !dbg !1914\l}"];
	Node0x800080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%30:\l30:                                               \l  call void @initialize_ordering_vector(), !dbg !1918\l  br label %31\l}"];
	Node0x800080 -> Node0x8000d0;
	Node0x8000d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%31:\l31:                                               \l  %32 = load i8**, i8*** @sorted_file, align 8, !dbg !1919, !tbaa !1887\l  %33 = load i64, i64* @cwd_n_used, align 8, !dbg !1920, !tbaa !1875\l  %34 = load i32, i32* @sort_type, align 4, !dbg !1921, !tbaa !1901\l  %35 = load i32, i32* @sort_type, align 4, !dbg !1922, !tbaa !1901\l  %36 = icmp eq i32 %35, 5, !dbg !1923\l  br i1 %36, label %37, label %39, !dbg !1922\l|{<s0>T|<s1>F}}"];
	Node0x8000d0:s0 -> Node0x800120;
	Node0x8000d0:s1 -> Node0x800170;
	Node0x800120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%37:\l37:                                               \l  %38 = load i32, i32* @time_type, align 4, !dbg !1924, !tbaa !1901\l  br label %40, !dbg !1922\l}"];
	Node0x800120 -> Node0x8001c0;
	Node0x800170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%39:\l39:                                               \l  br label %40, !dbg !1922\l}"];
	Node0x800170 -> Node0x8001c0;
	Node0x8001c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%40:\l40:                                               \l  %41 = phi i32 [ %38, %37 ], [ 0, %39 ], !dbg !1922\l  %42 = add i32 %34, %41, !dbg !1925\l  %43 = zext i32 %42 to i64, !dbg !1926\l  %44 = getelementptr inbounds [9 x [2 x [2 x [2 x i32 (i8*, i8*)*]]]], [9 x\l... [2 x [2 x [2 x i32 (i8*, i8*)*]]]]* @sort_functions, i64 0, i64 %43, !dbg\l... !1926\l  %45 = load i8, i8* %1, align 1, !dbg !1927, !tbaa !1909, !range !1928\l  %46 = trunc i8 %45 to i1, !dbg !1927\l  %47 = zext i1 %46 to i64, !dbg !1926\l  %48 = getelementptr inbounds [2 x [2 x [2 x i32 (i8*, i8*)*]]], [2 x [2 x [2\l... x i32 (i8*, i8*)*]]]* %44, i64 0, i64 %47, !dbg !1926\l  %49 = load i8, i8* @sort_reverse, align 1, !dbg !1929, !tbaa !1909, !range\l... !1928\l  %50 = trunc i8 %49 to i1, !dbg !1929\l  %51 = zext i1 %50 to i64, !dbg !1926\l  %52 = getelementptr inbounds [2 x [2 x i32 (i8*, i8*)*]], [2 x [2 x i32\l... (i8*, i8*)*]]* %48, i64 0, i64 %51, !dbg !1926\l  %53 = load i8, i8* @directories_first, align 1, !dbg !1930, !tbaa !1909,\l... !range !1928\l  %54 = trunc i8 %53 to i1, !dbg !1930\l  %55 = zext i1 %54 to i64, !dbg !1926\l  %56 = getelementptr inbounds [2 x i32 (i8*, i8*)*], [2 x i32 (i8*, i8*)*]*\l... %52, i64 0, i64 %55, !dbg !1926\l  %57 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %56, align 8, !dbg !1926, !tbaa\l... !1887\l  call void @mpsort(i8** noundef %32, i64 noundef %33, i32 (i8*, i8*)* noundef\l... %57), !dbg !1931\l  store i32 0, i32* %2, align 4, !dbg !1932\l  br label %58, !dbg !1932\l}"];
	Node0x8001c0 -> Node0x800210;
	Node0x800210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %1) #27, !dbg !1932\l  %59 = load i32, i32* %2, align 4\l  switch i32 %59, label %61 [\l    i32 0, label %60\l    i32 1, label %60\l  ]\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0x800210:s0 -> Node0x8002b0;
	Node0x800210:s1 -> Node0x800260;
	Node0x800210:s2 -> Node0x800260;
	Node0x800260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  ret void, !dbg !1932\l}"];
	Node0x8002b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%61:\l61:                                               \l  unreachable\l}"];
}
