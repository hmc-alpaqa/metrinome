digraph "CFG for 'set_control_char' function" {
	label="CFG for 'set_control_char' function";

	Node0x167a990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca %struct.control_info*, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca %struct.termios*, align 8\l  %7 = alloca i64, align 8\l  store %struct.control_info* %0, %struct.control_info** %4, align 8, !tbaa\l... !1085\l  call void @llvm.dbg.declare(metadata %struct.control_info** %4, metadata\l... !1081, metadata !DIExpression()), !dbg !1089\l  store i8* %1, i8** %5, align 8, !tbaa !1085\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !1082, metadata\l... !DIExpression()), !dbg !1090\l  store %struct.termios* %2, %struct.termios** %6, align 8, !tbaa !1085\l  call void @llvm.dbg.declare(metadata %struct.termios** %6, metadata !1083,\l... metadata !DIExpression()), !dbg !1091\l  %8 = bitcast i64* %7 to i8*, !dbg !1092\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #23, !dbg !1092\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1084, metadata\l... !DIExpression()), !dbg !1093\l  %9 = load %struct.control_info*, %struct.control_info** %4, align 8, !dbg\l... !1094, !tbaa !1085\l  %10 = getelementptr inbounds %struct.control_info, %struct.control_info* %9,\l... i32 0, i32 0, !dbg !1094\l  %11 = load i8*, i8** %10, align 8, !dbg !1094, !tbaa !1096\l  %12 = call i32 @strcmp(i8* noundef %11, i8* noundef getelementptr inbounds\l... ([4 x i8], [4 x i8]* @.str.254, i64 0, i64 0)) #24, !dbg !1094\l  %13 = icmp eq i32 %12, 0, !dbg !1094\l  br i1 %13, label %20, label %14, !dbg !1099\l|{<s0>T|<s1>F}}"];
	Node0x167a990:s0 -> Node0x168a530;
	Node0x167a990:s1 -> Node0x168a4e0;
	Node0x168a4e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%14:\l14:                                               \l  %15 = load %struct.control_info*, %struct.control_info** %4, align 8, !dbg\l... !1100, !tbaa !1085\l  %16 = getelementptr inbounds %struct.control_info, %struct.control_info*\l... %15, i32 0, i32 0, !dbg !1100\l  %17 = load i8*, i8** %16, align 8, !dbg !1100, !tbaa !1096\l  %18 = call i32 @strcmp(i8* noundef %17, i8* noundef getelementptr inbounds\l... ([5 x i8], [5 x i8]* @.str.255, i64 0, i64 0)) #24, !dbg !1100\l  %19 = icmp eq i32 %18, 0, !dbg !1100\l  br i1 %19, label %20, label %23, !dbg !1101\l|{<s0>T|<s1>F}}"];
	Node0x168a4e0:s0 -> Node0x168a530;
	Node0x168a4e0:s1 -> Node0x168a580;
	Node0x168a530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%20:\l20:                                               \l  %21 = load i8*, i8** %5, align 8, !dbg !1102, !tbaa !1085\l  %22 = call i64 @integer_arg(i8* noundef %21, i64 noundef 255), !dbg !1103\l  store i64 %22, i64* %7, align 8, !dbg !1104, !tbaa !1105\l  br label %84, !dbg !1106\l}"];
	Node0x168a530 -> Node0x168aa80;
	Node0x168a580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%23:\l23:                                               \l  %24 = load i8*, i8** %5, align 8, !dbg !1107, !tbaa !1085\l  %25 = getelementptr inbounds i8, i8* %24, i64 0, !dbg !1107\l  %26 = load i8, i8* %25, align 1, !dbg !1107, !tbaa !1109\l  %27 = sext i8 %26 to i32, !dbg !1107\l  %28 = icmp eq i32 %27, 0, !dbg !1110\l  br i1 %28, label %35, label %29, !dbg !1111\l|{<s0>T|<s1>F}}"];
	Node0x168a580:s0 -> Node0x168a620;
	Node0x168a580:s1 -> Node0x168a5d0;
	Node0x168a5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%29:\l29:                                               \l  %30 = load i8*, i8** %5, align 8, !dbg !1112, !tbaa !1085\l  %31 = getelementptr inbounds i8, i8* %30, i64 1, !dbg !1112\l  %32 = load i8, i8* %31, align 1, !dbg !1112, !tbaa !1109\l  %33 = sext i8 %32 to i32, !dbg !1112\l  %34 = icmp eq i32 %33, 0, !dbg !1113\l  br i1 %34, label %35, label %41, !dbg !1114\l|{<s0>T|<s1>F}}"];
	Node0x168a5d0:s0 -> Node0x168a620;
	Node0x168a5d0:s1 -> Node0x168a670;
	Node0x168a620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%35:\l35:                                               \l  %36 = load i8*, i8** %5, align 8, !dbg !1115, !tbaa !1085\l  %37 = getelementptr inbounds i8, i8* %36, i64 0, !dbg !1115\l  %38 = load i8, i8* %37, align 1, !dbg !1115, !tbaa !1109\l  %39 = call zeroext i8 @to_uchar(i8 noundef signext %38), !dbg !1116\l  %40 = zext i8 %39 to i64, !dbg !1116\l  store i64 %40, i64* %7, align 8, !dbg !1117, !tbaa !1105\l  br label %83, !dbg !1118\l}"];
	Node0x168a620 -> Node0x168aa30;
	Node0x168a670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%41:\l41:                                               \l  %42 = load i8*, i8** %5, align 8, !dbg !1119, !tbaa !1085\l  %43 = call i32 @strcmp(i8* noundef %42, i8* noundef getelementptr inbounds\l... ([3 x i8], [3 x i8]* @.str.256, i64 0, i64 0)) #24, !dbg !1119\l  %44 = icmp eq i32 %43, 0, !dbg !1119\l  br i1 %44, label %49, label %45, !dbg !1121\l|{<s0>T|<s1>F}}"];
	Node0x168a670:s0 -> Node0x168a710;
	Node0x168a670:s1 -> Node0x168a6c0;
	Node0x168a6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%45:\l45:                                               \l  %46 = load i8*, i8** %5, align 8, !dbg !1122, !tbaa !1085\l  %47 = call i32 @strcmp(i8* noundef %46, i8* noundef getelementptr inbounds\l... ([6 x i8], [6 x i8]* @.str.257, i64 0, i64 0)) #24, !dbg !1122\l  %48 = icmp eq i32 %47, 0, !dbg !1122\l  br i1 %48, label %49, label %50, !dbg !1123\l|{<s0>T|<s1>F}}"];
	Node0x168a6c0:s0 -> Node0x168a710;
	Node0x168a6c0:s1 -> Node0x168a760;
	Node0x168a710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%49:\l49:                                               \l  store i64 0, i64* %7, align 8, !dbg !1124, !tbaa !1105\l  br label %82, !dbg !1125\l}"];
	Node0x168a710 -> Node0x168a9e0;
	Node0x168a760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%50:\l50:                                               \l  %51 = load i8*, i8** %5, align 8, !dbg !1126, !tbaa !1085\l  %52 = getelementptr inbounds i8, i8* %51, i64 0, !dbg !1126\l  %53 = load i8, i8* %52, align 1, !dbg !1126, !tbaa !1109\l  %54 = sext i8 %53 to i32, !dbg !1126\l  %55 = icmp eq i32 %54, 94, !dbg !1128\l  br i1 %55, label %56, label %78, !dbg !1129\l|{<s0>T|<s1>F}}"];
	Node0x168a760:s0 -> Node0x168a7b0;
	Node0x168a760:s1 -> Node0x168a940;
	Node0x168a7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%56:\l56:                                               \l  %57 = load i8*, i8** %5, align 8, !dbg !1130, !tbaa !1085\l  %58 = getelementptr inbounds i8, i8* %57, i64 1, !dbg !1130\l  %59 = load i8, i8* %58, align 1, !dbg !1130, !tbaa !1109\l  %60 = sext i8 %59 to i32, !dbg !1130\l  %61 = icmp ne i32 %60, 0, !dbg !1131\l  br i1 %61, label %62, label %78, !dbg !1132\l|{<s0>T|<s1>F}}"];
	Node0x168a7b0:s0 -> Node0x168a800;
	Node0x168a7b0:s1 -> Node0x168a940;
	Node0x168a800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%62:\l62:                                               \l  %63 = load i8*, i8** %5, align 8, !dbg !1133, !tbaa !1085\l  %64 = getelementptr inbounds i8, i8* %63, i64 1, !dbg !1133\l  %65 = load i8, i8* %64, align 1, !dbg !1133, !tbaa !1109\l  %66 = sext i8 %65 to i32, !dbg !1133\l  %67 = icmp eq i32 %66, 63, !dbg !1136\l  br i1 %67, label %68, label %69, !dbg !1137\l|{<s0>T|<s1>F}}"];
	Node0x168a800:s0 -> Node0x168a850;
	Node0x168a800:s1 -> Node0x168a8a0;
	Node0x168a850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%68:\l68:                                               \l  store i64 127, i64* %7, align 8, !dbg !1138, !tbaa !1105\l  br label %77, !dbg !1139\l}"];
	Node0x168a850 -> Node0x168a8f0;
	Node0x168a8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%69:\l69:                                               \l  %70 = load i8*, i8** %5, align 8, !dbg !1140, !tbaa !1085\l  %71 = getelementptr inbounds i8, i8* %70, i64 1, !dbg !1140\l  %72 = load i8, i8* %71, align 1, !dbg !1140, !tbaa !1109\l  %73 = call zeroext i8 @to_uchar(i8 noundef signext %72), !dbg !1141\l  %74 = zext i8 %73 to i32, !dbg !1141\l  %75 = and i32 %74, -97, !dbg !1142\l  %76 = sext i32 %75 to i64, !dbg !1141\l  store i64 %76, i64* %7, align 8, !dbg !1143, !tbaa !1105\l  br label %77\l}"];
	Node0x168a8a0 -> Node0x168a8f0;
	Node0x168a8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%77:\l77:                                               \l  br label %81, !dbg !1144\l}"];
	Node0x168a8f0 -> Node0x168a990;
	Node0x168a940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%78:\l78:                                               \l  %79 = load i8*, i8** %5, align 8, !dbg !1145, !tbaa !1085\l  %80 = call i64 @integer_arg(i8* noundef %79, i64 noundef 255), !dbg !1146\l  store i64 %80, i64* %7, align 8, !dbg !1147, !tbaa !1105\l  br label %81\l}"];
	Node0x168a940 -> Node0x168a990;
	Node0x168a990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%81:\l81:                                               \l  br label %82\l}"];
	Node0x168a990 -> Node0x168a9e0;
	Node0x168a9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%82:\l82:                                               \l  br label %83\l}"];
	Node0x168a9e0 -> Node0x168aa30;
	Node0x168aa30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%83:\l83:                                               \l  br label %84\l}"];
	Node0x168aa30 -> Node0x168aa80;
	Node0x168aa80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  %85 = load i64, i64* %7, align 8, !dbg !1148, !tbaa !1105\l  %86 = trunc i64 %85 to i8, !dbg !1148\l  %87 = load %struct.termios*, %struct.termios** %6, align 8, !dbg !1149,\l... !tbaa !1085\l  %88 = getelementptr inbounds %struct.termios, %struct.termios* %87, i32 0,\l... i32 5, !dbg !1150\l  %89 = load %struct.control_info*, %struct.control_info** %4, align 8, !dbg\l... !1151, !tbaa !1085\l  %90 = getelementptr inbounds %struct.control_info, %struct.control_info*\l... %89, i32 0, i32 2, !dbg !1152\l  %91 = load i64, i64* %90, align 8, !dbg !1152, !tbaa !1153\l  %92 = getelementptr inbounds [32 x i8], [32 x i8]* %88, i64 0, i64 %91, !dbg\l... !1149\l  store i8 %86, i8* %92, align 1, !dbg !1154, !tbaa !1109\l  %93 = bitcast i64* %7 to i8*, !dbg !1155\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %93) #23, !dbg !1155\l  ret void, !dbg !1155\l}"];
}
