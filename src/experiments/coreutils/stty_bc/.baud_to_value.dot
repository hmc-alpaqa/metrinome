digraph "CFG for 'baud_to_value' function" {
	label="CFG for 'baud_to_value' function";

	Node0x1674800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%1:\l  %2 = alloca i64, align 8\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4, !tbaa !1082\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !1079, metadata\l... !DIExpression()), !dbg !1086\l  %6 = bitcast i32* %4 to i8*, !dbg !1087\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %6) #23, !dbg !1087\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !1080, metadata\l... !DIExpression()), !dbg !1088\l  store i32 0, i32* %4, align 4, !dbg !1088, !tbaa !1082\l  br label %7, !dbg !1087\l}"];
	Node0x1674800 -> Node0x16763e0;
	Node0x16763e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l7:                                                \l  %8 = load i32, i32* %4, align 4, !dbg !1089, !tbaa !1082\l  %9 = sext i32 %8 to i64, !dbg !1091\l  %10 = getelementptr inbounds [35 x %struct.speed_map], [35 x\l... %struct.speed_map]* @speeds, i64 0, i64 %9, !dbg !1091\l  %11 = getelementptr inbounds %struct.speed_map, %struct.speed_map* %10, i32\l... 0, i32 0, !dbg !1092\l  %12 = load i8*, i8** %11, align 8, !dbg !1092, !tbaa !1093\l  %13 = icmp ne i8* %12, null, !dbg !1097\l  br i1 %13, label %15, label %14, !dbg !1098\l|{<s0>T|<s1>F}}"];
	Node0x16763e0:s0 -> Node0x1676480;
	Node0x16763e0:s1 -> Node0x1676430;
	Node0x1676430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%14:\l14:                                               \l  store i32 2, i32* %5, align 4\l  br label %33, !dbg !1098\l}"];
	Node0x1676430 -> Node0x16765c0;
	Node0x1676480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  %16 = load i32, i32* %3, align 4, !dbg !1099, !tbaa !1082\l  %17 = load i32, i32* %4, align 4, !dbg !1101, !tbaa !1082\l  %18 = sext i32 %17 to i64, !dbg !1102\l  %19 = getelementptr inbounds [35 x %struct.speed_map], [35 x\l... %struct.speed_map]* @speeds, i64 0, i64 %18, !dbg !1102\l  %20 = getelementptr inbounds %struct.speed_map, %struct.speed_map* %19, i32\l... 0, i32 1, !dbg !1103\l  %21 = load i32, i32* %20, align 8, !dbg !1103, !tbaa !1104\l  %22 = icmp eq i32 %16, %21, !dbg !1105\l  br i1 %22, label %23, label %29, !dbg !1106\l|{<s0>T|<s1>F}}"];
	Node0x1676480:s0 -> Node0x16764d0;
	Node0x1676480:s1 -> Node0x1676520;
	Node0x16764d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%23:\l23:                                               \l  %24 = load i32, i32* %4, align 4, !dbg !1107, !tbaa !1082\l  %25 = sext i32 %24 to i64, !dbg !1108\l  %26 = getelementptr inbounds [35 x %struct.speed_map], [35 x\l... %struct.speed_map]* @speeds, i64 0, i64 %25, !dbg !1108\l  %27 = getelementptr inbounds %struct.speed_map, %struct.speed_map* %26, i32\l... 0, i32 2, !dbg !1109\l  %28 = load i64, i64* %27, align 8, !dbg !1109, !tbaa !1110\l  store i64 %28, i64* %2, align 8, !dbg !1111\l  store i32 1, i32* %5, align 4\l  br label %33, !dbg !1111\l}"];
	Node0x16764d0 -> Node0x16765c0;
	Node0x1676520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  br label %30, !dbg !1103\l}"];
	Node0x1676520 -> Node0x1676570;
	Node0x1676570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = load i32, i32* %4, align 4, !dbg !1112, !tbaa !1082\l  %32 = add nsw i32 %31, 1, !dbg !1112\l  store i32 %32, i32* %4, align 4, !dbg !1112, !tbaa !1082\l  br label %7, !dbg !1113, !llvm.loop !1114\l}"];
	Node0x1676570 -> Node0x16763e0;
	Node0x16765c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%33:\l33:                                               \l  %34 = bitcast i32* %4 to i8*, !dbg !1113\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %34) #23, !dbg !1113\l  %35 = load i32, i32* %5, align 4\l  switch i32 %35, label %39 [\l    i32 2, label %36\l    i32 1, label %37\l  ]\l|{<s0>def|<s1>2|<s2>1}}"];
	Node0x16765c0:s0 -> Node0x16766b0;
	Node0x16765c0:s1 -> Node0x1676610;
	Node0x16765c0:s2 -> Node0x1676660;
	Node0x1676610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%36:\l36:                                               \l  store i64 0, i64* %2, align 8, !dbg !1118\l  br label %37, !dbg !1118\l}"];
	Node0x1676610 -> Node0x1676660;
	Node0x1676660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%37:\l37:                                               \l  %38 = load i64, i64* %2, align 8, !dbg !1119\l  ret i64 %38, !dbg !1119\l}"];
	Node0x16766b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%39:\l39:                                               \l  unreachable\l}"];
}
