digraph "CFG for 'finish_utmp' function" {
	label="CFG for 'finish_utmp' function";

	Node0x26c8dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca i64, align 8\l  call void @llvm.dbg.declare(metadata %struct.utmp_alloc* %1, metadata !830,\l... metadata !DIExpression()), !dbg !834\l  %5 = bitcast i8** %3 to i8*, !dbg !835\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #22, !dbg !835\l  call void @llvm.dbg.declare(metadata i8** %3, metadata !831, metadata\l... !DIExpression()), !dbg !836\l  %6 = getelementptr inbounds %struct.utmp_alloc, %struct.utmp_alloc* %1, i32\l... 0, i32 0, !dbg !837\l  %7 = load %struct.gl_utmp*, %struct.gl_utmp** %6, align 8, !dbg !837, !tbaa\l... !838\l  %8 = bitcast %struct.gl_utmp* %7 to i8*, !dbg !844\l  %9 = getelementptr inbounds %struct.utmp_alloc, %struct.utmp_alloc* %1, i32\l... 0, i32 3, !dbg !845\l  %10 = load i64, i64* %9, align 8, !dbg !845, !tbaa !846\l  %11 = getelementptr inbounds i8, i8* %8, i64 %10, !dbg !847\l  store i8* %11, i8** %3, align 8, !dbg !836, !tbaa !848\l  %12 = bitcast i64* %4 to i8*, !dbg !849\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #22, !dbg !849\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !832, metadata\l... !DIExpression()), !dbg !850\l  store i64 0, i64* %4, align 8, !dbg !850, !tbaa !851\l  br label %13, !dbg !849\l}"];
	Node0x26c8dd0 -> Node0x26c90f0;
	Node0x26c90f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%13:\l13:                                               \l  %14 = load i64, i64* %4, align 8, !dbg !852, !tbaa !851\l  %15 = getelementptr inbounds %struct.utmp_alloc, %struct.utmp_alloc* %1, i32\l... 0, i32 1, !dbg !854\l  %16 = load i64, i64* %15, align 8, !dbg !854, !tbaa !855\l  %17 = icmp slt i64 %14, %16, !dbg !856\l  br i1 %17, label %20, label %18, !dbg !857\l|{<s0>T|<s1>F}}"];
	Node0x26c90f0:s0 -> Node0x26cc380;
	Node0x26c90f0:s1 -> Node0x26cc330;
	Node0x26cc330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  %19 = bitcast i64* %4 to i8*, !dbg !858\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %19) #22, !dbg !858\l  br label %80\l}"];
	Node0x26cc330 -> Node0x26cc420;
	Node0x26cc380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%20:\l20:                                               \l  %21 = getelementptr inbounds %struct.utmp_alloc, %struct.utmp_alloc* %1, i32\l... 0, i32 0, !dbg !859\l  %22 = load %struct.gl_utmp*, %struct.gl_utmp** %21, align 8, !dbg !859,\l... !tbaa !838\l  %23 = load i64, i64* %4, align 8, !dbg !861, !tbaa !851\l  %24 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %22, i64 %23,\l... !dbg !862\l  %25 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %24, i32 0,\l... i32 0, !dbg !863\l  %26 = load i8*, i8** %25, align 8, !dbg !863, !tbaa !864\l  %27 = ptrtoint i8* %26 to i64, !dbg !870\l  %28 = load i8*, i8** %3, align 8, !dbg !871, !tbaa !848\l  %29 = getelementptr inbounds i8, i8* %28, i64 %27, !dbg !872\l  %30 = getelementptr inbounds %struct.utmp_alloc, %struct.utmp_alloc* %1, i32\l... 0, i32 0, !dbg !873\l  %31 = load %struct.gl_utmp*, %struct.gl_utmp** %30, align 8, !dbg !873,\l... !tbaa !838\l  %32 = load i64, i64* %4, align 8, !dbg !874, !tbaa !851\l  %33 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %31, i64 %32,\l... !dbg !875\l  %34 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %33, i32 0,\l... i32 0, !dbg !876\l  store i8* %29, i8** %34, align 8, !dbg !877, !tbaa !864\l  %35 = getelementptr inbounds %struct.utmp_alloc, %struct.utmp_alloc* %1, i32\l... 0, i32 0, !dbg !878\l  %36 = load %struct.gl_utmp*, %struct.gl_utmp** %35, align 8, !dbg !878,\l... !tbaa !838\l  %37 = load i64, i64* %4, align 8, !dbg !879, !tbaa !851\l  %38 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %36, i64 %37,\l... !dbg !880\l  %39 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %38, i32 0,\l... i32 1, !dbg !881\l  %40 = load i8*, i8** %39, align 8, !dbg !881, !tbaa !882\l  %41 = ptrtoint i8* %40 to i64, !dbg !883\l  %42 = load i8*, i8** %3, align 8, !dbg !884, !tbaa !848\l  %43 = getelementptr inbounds i8, i8* %42, i64 %41, !dbg !885\l  %44 = getelementptr inbounds %struct.utmp_alloc, %struct.utmp_alloc* %1, i32\l... 0, i32 0, !dbg !886\l  %45 = load %struct.gl_utmp*, %struct.gl_utmp** %44, align 8, !dbg !886,\l... !tbaa !838\l  %46 = load i64, i64* %4, align 8, !dbg !887, !tbaa !851\l  %47 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %45, i64 %46,\l... !dbg !888\l  %48 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %47, i32 0,\l... i32 1, !dbg !889\l  store i8* %43, i8** %48, align 8, !dbg !890, !tbaa !882\l  %49 = getelementptr inbounds %struct.utmp_alloc, %struct.utmp_alloc* %1, i32\l... 0, i32 0, !dbg !891\l  %50 = load %struct.gl_utmp*, %struct.gl_utmp** %49, align 8, !dbg !891,\l... !tbaa !838\l  %51 = load i64, i64* %4, align 8, !dbg !892, !tbaa !851\l  %52 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %50, i64 %51,\l... !dbg !893\l  %53 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %52, i32 0,\l... i32 2, !dbg !894\l  %54 = load i8*, i8** %53, align 8, !dbg !894, !tbaa !895\l  %55 = ptrtoint i8* %54 to i64, !dbg !896\l  %56 = load i8*, i8** %3, align 8, !dbg !897, !tbaa !848\l  %57 = getelementptr inbounds i8, i8* %56, i64 %55, !dbg !898\l  %58 = getelementptr inbounds %struct.utmp_alloc, %struct.utmp_alloc* %1, i32\l... 0, i32 0, !dbg !899\l  %59 = load %struct.gl_utmp*, %struct.gl_utmp** %58, align 8, !dbg !899,\l... !tbaa !838\l  %60 = load i64, i64* %4, align 8, !dbg !900, !tbaa !851\l  %61 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %59, i64 %60,\l... !dbg !901\l  %62 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %61, i32 0,\l... i32 2, !dbg !902\l  store i8* %57, i8** %62, align 8, !dbg !903, !tbaa !895\l  %63 = getelementptr inbounds %struct.utmp_alloc, %struct.utmp_alloc* %1, i32\l... 0, i32 0, !dbg !904\l  %64 = load %struct.gl_utmp*, %struct.gl_utmp** %63, align 8, !dbg !904,\l... !tbaa !838\l  %65 = load i64, i64* %4, align 8, !dbg !905, !tbaa !851\l  %66 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %64, i64 %65,\l... !dbg !906\l  %67 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %66, i32 0,\l... i32 3, !dbg !907\l  %68 = load i8*, i8** %67, align 8, !dbg !907, !tbaa !908\l  %69 = ptrtoint i8* %68 to i64, !dbg !909\l  %70 = load i8*, i8** %3, align 8, !dbg !910, !tbaa !848\l  %71 = getelementptr inbounds i8, i8* %70, i64 %69, !dbg !911\l  %72 = getelementptr inbounds %struct.utmp_alloc, %struct.utmp_alloc* %1, i32\l... 0, i32 0, !dbg !912\l  %73 = load %struct.gl_utmp*, %struct.gl_utmp** %72, align 8, !dbg !912,\l... !tbaa !838\l  %74 = load i64, i64* %4, align 8, !dbg !913, !tbaa !851\l  %75 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %73, i64 %74,\l... !dbg !914\l  %76 = getelementptr inbounds %struct.gl_utmp, %struct.gl_utmp* %75, i32 0,\l... i32 3, !dbg !915\l  store i8* %71, i8** %76, align 8, !dbg !916, !tbaa !908\l  br label %77, !dbg !917\l}"];
	Node0x26cc380 -> Node0x26cc3d0;
	Node0x26cc3d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%77:\l77:                                               \l  %78 = load i64, i64* %4, align 8, !dbg !918, !tbaa !851\l  %79 = add nsw i64 %78, 1, !dbg !918\l  store i64 %79, i64* %4, align 8, !dbg !918, !tbaa !851\l  br label %13, !dbg !858, !llvm.loop !919\l}"];
	Node0x26cc3d0 -> Node0x26c90f0;
	Node0x26cc420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%80:\l80:                                               \l  %81 = bitcast %struct.utmp_alloc* %0 to i8*, !dbg !923\l  %82 = bitcast %struct.utmp_alloc* %1 to i8*, !dbg !923\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64\l... 32, i1 false), !dbg !923, !tbaa.struct !924\l  %83 = bitcast i8** %3 to i8*, !dbg !925\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #22, !dbg !925\l  ret void, !dbg !925\l}"];
}
