digraph "CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function" {
	label="CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function";

	Node0x1325250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4, !tbaa !1023\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !392, metadata\l... !DIExpression()), !dbg !1027\l  store i32 %1, i32* %4, align 4, !tbaa !1023\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !393, metadata\l... !DIExpression()), !dbg !1028\l  %8 = bitcast i32* %5 to i8*, !dbg !1029\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #22, !dbg !1029\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !394, metadata\l... !DIExpression()), !dbg !1030\l  %9 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1031, !tbaa !1023\l  %10 = icmp sle i32 0, %9, !dbg !1033\l  br i1 %10, label %11, label %31, !dbg !1034\l|{<s0>T|<s1>F}}"];
	Node0x1325250:s0 -> Node0x1326490;
	Node0x1325250:s1 -> Node0x13266c0;
	Node0x1326490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%11:\l11:                                               \l  %12 = load i32, i32* %3, align 4, !dbg !1035, !tbaa !1023\l  %13 = load i32, i32* %4, align 4, !dbg !1037, !tbaa !1023\l  %14 = call i32 (i32, i32, ...) @fcntl(i32 noundef %12, i32 noundef 1030, i32\l... noundef %13), !dbg !1038\l  store i32 %14, i32* %5, align 4, !dbg !1039, !tbaa !1023\l  %15 = load i32, i32* %5, align 4, !dbg !1040, !tbaa !1023\l  %16 = icmp sle i32 0, %15, !dbg !1042\l  br i1 %16, label %21, label %17, !dbg !1043\l|{<s0>T|<s1>F}}"];
	Node0x1326490:s0 -> Node0x1326530;
	Node0x1326490:s1 -> Node0x13264e0;
	Node0x13264e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%17:\l17:                                               \l  %18 = call i32* @__errno_location() #23, !dbg !1044\l  %19 = load i32, i32* %18, align 4, !dbg !1044, !tbaa !1023\l  %20 = icmp ne i32 %19, 22, !dbg !1045\l  br i1 %20, label %21, label %22, !dbg !1046\l|{<s0>T|<s1>F}}"];
	Node0x13264e0:s0 -> Node0x1326530;
	Node0x13264e0:s1 -> Node0x1326580;
	Node0x1326530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%21:\l21:                                               \l  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg\l... !1047, !tbaa !1023\l  br label %30, !dbg !1049\l}"];
	Node0x1326530 -> Node0x1326670;
	Node0x1326580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%22:\l22:                                               \l  %23 = load i32, i32* %3, align 4, !dbg !1050, !tbaa !1023\l  %24 = load i32, i32* %4, align 4, !dbg !1052, !tbaa !1023\l  %25 = call i32 @rpl_fcntl_DUPFD(i32 noundef %23, i32 noundef %24), !dbg !1053\l  store i32 %25, i32* %5, align 4, !dbg !1054, !tbaa !1023\l  %26 = load i32, i32* %5, align 4, !dbg !1055, !tbaa !1023\l  %27 = icmp sge i32 %26, 0, !dbg !1057\l  br i1 %27, label %28, label %29, !dbg !1058\l|{<s0>T|<s1>F}}"];
	Node0x1326580:s0 -> Node0x13265d0;
	Node0x1326580:s1 -> Node0x1326620;
	Node0x13265d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%28:\l28:                                               \l  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1059, !tbaa !1023\l  br label %29, !dbg !1060\l}"];
	Node0x13265d0 -> Node0x1326620;
	Node0x1326620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%29:\l29:                                               \l  br label %30\l}"];
	Node0x1326620 -> Node0x1326670;
	Node0x1326670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%30:\l30:                                               \l  br label %35, !dbg !1061\l}"];
	Node0x1326670 -> Node0x1326710;
	Node0x13266c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%31:\l31:                                               \l  %32 = load i32, i32* %3, align 4, !dbg !1062, !tbaa !1023\l  %33 = load i32, i32* %4, align 4, !dbg !1063, !tbaa !1023\l  %34 = call i32 @rpl_fcntl_DUPFD(i32 noundef %32, i32 noundef %33), !dbg !1064\l  store i32 %34, i32* %5, align 4, !dbg !1065, !tbaa !1023\l  br label %35\l}"];
	Node0x13266c0 -> Node0x1326710;
	Node0x1326710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = load i32, i32* %5, align 4, !dbg !1066, !tbaa !1023\l  %37 = icmp sle i32 0, %36, !dbg !1067\l  br i1 %37, label %38, label %64, !dbg !1068\l|{<s0>T|<s1>F}}"];
	Node0x1326710:s0 -> Node0x1326760;
	Node0x1326710:s1 -> Node0x13268f0;
	Node0x1326760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%38:\l38:                                               \l  %39 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1069, !tbaa !1023\l  %40 = icmp eq i32 %39, -1, !dbg !1070\l  br i1 %40, label %41, label %64, !dbg !1071\l|{<s0>T|<s1>F}}"];
	Node0x1326760:s0 -> Node0x13267b0;
	Node0x1326760:s1 -> Node0x13268f0;
	Node0x13267b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = bitcast i32* %6 to i8*, !dbg !1072\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #22, !dbg !1072\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !395, metadata\l... !DIExpression()), !dbg !1073\l  %43 = load i32, i32* %5, align 4, !dbg !1074, !tbaa !1023\l  %44 = call i32 (i32, i32, ...) @fcntl(i32 noundef %43, i32 noundef 1), !dbg\l... !1075\l  store i32 %44, i32* %6, align 4, !dbg !1073, !tbaa !1023\l  %45 = load i32, i32* %6, align 4, !dbg !1076, !tbaa !1023\l  %46 = icmp slt i32 %45, 0, !dbg !1077\l  br i1 %46, label %53, label %47, !dbg !1078\l|{<s0>T|<s1>F}}"];
	Node0x13267b0:s0 -> Node0x1326850;
	Node0x13267b0:s1 -> Node0x1326800;
	Node0x1326800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%47:\l47:                                               \l  %48 = load i32, i32* %5, align 4, !dbg !1079, !tbaa !1023\l  %49 = load i32, i32* %6, align 4, !dbg !1080, !tbaa !1023\l  %50 = or i32 %49, 1, !dbg !1081\l  %51 = call i32 (i32, i32, ...) @fcntl(i32 noundef %48, i32 noundef 2, i32\l... noundef %50), !dbg !1082\l  %52 = icmp eq i32 %51, -1, !dbg !1083\l  br i1 %52, label %53, label %62, !dbg !1084\l|{<s0>T|<s1>F}}"];
	Node0x1326800:s0 -> Node0x1326850;
	Node0x1326800:s1 -> Node0x13268a0;
	Node0x1326850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%53:\l53:                                               \l  %54 = bitcast i32* %7 to i8*, !dbg !1085\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #22, !dbg !1085\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !398, metadata\l... !DIExpression()), !dbg !1086\l  %55 = call i32* @__errno_location() #23, !dbg !1087\l  %56 = load i32, i32* %55, align 4, !dbg !1087, !tbaa !1023\l  store i32 %56, i32* %7, align 4, !dbg !1086, !tbaa !1023\l  %57 = load i32, i32* %5, align 4, !dbg !1088, !tbaa !1023\l  %58 = call i32 @close(i32 noundef %57), !dbg !1089\l  %59 = load i32, i32* %7, align 4, !dbg !1090, !tbaa !1023\l  %60 = call i32* @__errno_location() #23, !dbg !1091\l  store i32 %59, i32* %60, align 4, !dbg !1092, !tbaa !1023\l  store i32 -1, i32* %5, align 4, !dbg !1093, !tbaa !1023\l  %61 = bitcast i32* %7 to i8*, !dbg !1094\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #22, !dbg !1094\l  br label %62, !dbg !1095\l}"];
	Node0x1326850 -> Node0x13268a0;
	Node0x13268a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%62:\l62:                                               \l  %63 = bitcast i32* %6 to i8*, !dbg !1096\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %63) #22, !dbg !1096\l  br label %64, !dbg !1097\l}"];
	Node0x13268a0 -> Node0x13268f0;
	Node0x13268f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = load i32, i32* %5, align 4, !dbg !1098, !tbaa !1023\l  %66 = bitcast i32* %5 to i8*, !dbg !1099\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #22, !dbg !1099\l  ret i32 %65, !dbg !1100\l}"];
}
