digraph "CFG for 'argmatch' function" {
	label="CFG for 'argmatch' function";

	Node0x16c4a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i8**, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i8, align 1\l  %14 = alloca i32, align 4\l  store i8* %0, i8** %6, align 8, !tbaa !1393\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1385, metadata\l... !DIExpression()), !dbg !1397\l  store i8** %1, i8*** %7, align 8, !tbaa !1393\l  call void @llvm.dbg.declare(metadata i8*** %7, metadata !1386, metadata\l... !DIExpression()), !dbg !1398\l  store i8* %2, i8** %8, align 8, !tbaa !1393\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1387, metadata\l... !DIExpression()), !dbg !1399\l  store i64 %3, i64* %9, align 8, !tbaa !1400\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1388, metadata\l... !DIExpression()), !dbg !1402\l  %15 = bitcast i64* %10 to i8*, !dbg !1403\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #22, !dbg !1403\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1389, metadata\l... !DIExpression()), !dbg !1404\l  %16 = bitcast i64* %11 to i8*, !dbg !1405\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #22, !dbg !1405\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1390, metadata\l... !DIExpression()), !dbg !1406\l  %17 = bitcast i64* %12 to i8*, !dbg !1407\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #22, !dbg !1407\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1391, metadata\l... !DIExpression()), !dbg !1408\l  store i64 -1, i64* %12, align 8, !dbg !1408, !tbaa !1400\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #22, !dbg !1409\l  call void @llvm.dbg.declare(metadata i8* %13, metadata !1392, metadata\l... !DIExpression()), !dbg !1410\l  store i8 0, i8* %13, align 1, !dbg !1410, !tbaa !1411\l  %18 = load i8*, i8** %6, align 8, !dbg !1413, !tbaa !1393\l  %19 = call i64 @strlen(i8* noundef %18) #23, !dbg !1414\l  store i64 %19, i64* %11, align 8, !dbg !1415, !tbaa !1400\l  store i64 0, i64* %10, align 8, !dbg !1416, !tbaa !1400\l  br label %20, !dbg !1418\l}"];
	Node0x16c4a80 -> Node0x16c4b70;
	Node0x16c4b70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = load i8**, i8*** %7, align 8, !dbg !1419, !tbaa !1393\l  %22 = load i64, i64* %10, align 8, !dbg !1421, !tbaa !1400\l  %23 = getelementptr inbounds i8*, i8** %21, i64 %22, !dbg !1419\l  %24 = load i8*, i8** %23, align 8, !dbg !1419, !tbaa !1393\l  %25 = icmp ne i8* %24, null, !dbg !1422\l  br i1 %25, label %26, label %75, !dbg !1422\l|{<s0>T|<s1>F}}"];
	Node0x16c4b70:s0 -> Node0x16c4bc0;
	Node0x16c4b70:s1 -> Node0x16c4fd0;
	Node0x16c4bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i8**, i8*** %7, align 8, !dbg !1423, !tbaa !1393\l  %28 = load i64, i64* %10, align 8, !dbg !1426, !tbaa !1400\l  %29 = getelementptr inbounds i8*, i8** %27, i64 %28, !dbg !1423\l  %30 = load i8*, i8** %29, align 8, !dbg !1423, !tbaa !1393\l  %31 = load i8*, i8** %6, align 8, !dbg !1427, !tbaa !1393\l  %32 = load i64, i64* %11, align 8, !dbg !1428, !tbaa !1400\l  %33 = call i32 @strncmp(i8* noundef %30, i8* noundef %31, i64 noundef %32)\l... #23, !dbg !1429\l  %34 = icmp ne i32 %33, 0, !dbg !1429\l  br i1 %34, label %71, label %35, !dbg !1430\l|{<s0>T|<s1>F}}"];
	Node0x16c4bc0:s0 -> Node0x16c4f30;
	Node0x16c4bc0:s1 -> Node0x16c4c10;
	Node0x16c4c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%35:\l35:                                               \l  %36 = load i8**, i8*** %7, align 8, !dbg !1431, !tbaa !1393\l  %37 = load i64, i64* %10, align 8, !dbg !1434, !tbaa !1400\l  %38 = getelementptr inbounds i8*, i8** %36, i64 %37, !dbg !1431\l  %39 = load i8*, i8** %38, align 8, !dbg !1431, !tbaa !1393\l  %40 = call i64 @strlen(i8* noundef %39) #23, !dbg !1435\l  %41 = load i64, i64* %11, align 8, !dbg !1436, !tbaa !1400\l  %42 = icmp eq i64 %40, %41, !dbg !1437\l  br i1 %42, label %43, label %45, !dbg !1438\l|{<s0>T|<s1>F}}"];
	Node0x16c4c10:s0 -> Node0x16c4c60;
	Node0x16c4c10:s1 -> Node0x16c4cb0;
	Node0x16c4c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%43:\l43:                                               \l  %44 = load i64, i64* %10, align 8, !dbg !1439, !tbaa !1400\l  store i64 %44, i64* %5, align 8, !dbg !1440\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1440\l}"];
	Node0x16c4c60 -> Node0x16c50c0;
	Node0x16c4cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%45:\l45:                                               \l  %46 = load i64, i64* %12, align 8, !dbg !1441, !tbaa !1400\l  %47 = icmp eq i64 %46, -1, !dbg !1443\l  br i1 %47, label %48, label %50, !dbg !1444\l|{<s0>T|<s1>F}}"];
	Node0x16c4cb0:s0 -> Node0x16c4d00;
	Node0x16c4cb0:s1 -> Node0x16c4d50;
	Node0x16c4d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%48:\l48:                                               \l  %49 = load i64, i64* %10, align 8, !dbg !1445, !tbaa !1400\l  store i64 %49, i64* %12, align 8, !dbg !1446, !tbaa !1400\l  br label %69, !dbg !1447\l}"];
	Node0x16c4d00 -> Node0x16c4e90;
	Node0x16c4d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%50:\l50:                                               \l  %51 = load i8*, i8** %8, align 8, !dbg !1448, !tbaa !1393\l  %52 = icmp eq i8* %51, null, !dbg !1451\l  br i1 %52, label %67, label %53, !dbg !1452\l|{<s0>T|<s1>F}}"];
	Node0x16c4d50:s0 -> Node0x16c4df0;
	Node0x16c4d50:s1 -> Node0x16c4da0;
	Node0x16c4da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%53:\l53:                                               \l  %54 = load i8*, i8** %8, align 8, !dbg !1453, !tbaa !1393\l  %55 = load i64, i64* %9, align 8, !dbg !1454, !tbaa !1400\l  %56 = load i64, i64* %12, align 8, !dbg !1455, !tbaa !1400\l  %57 = mul i64 %55, %56, !dbg !1456\l  %58 = getelementptr inbounds i8, i8* %54, i64 %57, !dbg !1457\l  %59 = load i8*, i8** %8, align 8, !dbg !1458, !tbaa !1393\l  %60 = load i64, i64* %9, align 8, !dbg !1459, !tbaa !1400\l  %61 = load i64, i64* %10, align 8, !dbg !1460, !tbaa !1400\l  %62 = mul i64 %60, %61, !dbg !1461\l  %63 = getelementptr inbounds i8, i8* %59, i64 %62, !dbg !1462\l  %64 = load i64, i64* %9, align 8, !dbg !1463, !tbaa !1400\l  %65 = call i32 @memcmp(i8* noundef %58, i8* noundef %63, i64 noundef %64)\l... #23, !dbg !1464\l  %66 = icmp ne i32 %65, 0, !dbg !1464\l  br i1 %66, label %67, label %68, !dbg !1465\l|{<s0>T|<s1>F}}"];
	Node0x16c4da0:s0 -> Node0x16c4df0;
	Node0x16c4da0:s1 -> Node0x16c4e40;
	Node0x16c4df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%67:\l67:                                               \l  store i8 1, i8* %13, align 1, !dbg !1466, !tbaa !1411\l  br label %68, !dbg !1468\l}"];
	Node0x16c4df0 -> Node0x16c4e40;
	Node0x16c4e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%68:\l68:                                               \l  br label %69\l}"];
	Node0x16c4e40 -> Node0x16c4e90;
	Node0x16c4e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%69:\l69:                                               \l  br label %70\l}"];
	Node0x16c4e90 -> Node0x16c4ee0;
	Node0x16c4ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%70:\l70:                                               \l  br label %71, !dbg !1469\l}"];
	Node0x16c4ee0 -> Node0x16c4f30;
	Node0x16c4f30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%71:\l71:                                               \l  br label %72, !dbg !1470\l}"];
	Node0x16c4f30 -> Node0x16c4f80;
	Node0x16c4f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%72:\l72:                                               \l  %73 = load i64, i64* %10, align 8, !dbg !1471, !tbaa !1400\l  %74 = add i64 %73, 1, !dbg !1471\l  store i64 %74, i64* %10, align 8, !dbg !1471, !tbaa !1400\l  br label %20, !dbg !1472, !llvm.loop !1473\l}"];
	Node0x16c4f80 -> Node0x16c4b70;
	Node0x16c4fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%75:\l75:                                               \l  %76 = load i8, i8* %13, align 1, !dbg !1477, !tbaa !1411, !range !1479\l  %77 = trunc i8 %76 to i1, !dbg !1477\l  br i1 %77, label %78, label %79, !dbg !1480\l|{<s0>T|<s1>F}}"];
	Node0x16c4fd0:s0 -> Node0x16c5020;
	Node0x16c4fd0:s1 -> Node0x16c5070;
	Node0x16c5020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%78:\l78:                                               \l  store i64 -2, i64* %5, align 8, !dbg !1481\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1481\l}"];
	Node0x16c5020 -> Node0x16c50c0;
	Node0x16c5070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%79:\l79:                                               \l  %80 = load i64, i64* %12, align 8, !dbg !1482, !tbaa !1400\l  store i64 %80, i64* %5, align 8, !dbg !1483\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1483\l}"];
	Node0x16c5070 -> Node0x16c50c0;
	Node0x16c50c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%81:\l81:                                               \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #22, !dbg !1484\l  %82 = bitcast i64* %12 to i8*, !dbg !1484\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #22, !dbg !1484\l  %83 = bitcast i64* %11 to i8*, !dbg !1484\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #22, !dbg !1484\l  %84 = bitcast i64* %10 to i8*, !dbg !1484\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #22, !dbg !1484\l  %85 = load i64, i64* %5, align 8, !dbg !1484\l  ret i64 %85, !dbg !1484\l}"];
}
