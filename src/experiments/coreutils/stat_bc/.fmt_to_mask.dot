digraph "CFG for 'fmt_to_mask' function" {
	label="CFG for 'fmt_to_mask' function";

	Node0x16251f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = alloca i32, align 4\l  %3 = alloca i8, align 1\l  store i8 %0, i8* %3, align 1, !tbaa !1385\l  call void @llvm.dbg.declare(metadata i8* %3, metadata !1384, metadata\l... !DIExpression()), !dbg !1388\l  %4 = load i8, i8* %3, align 1, !dbg !1389, !tbaa !1385\l  %5 = sext i8 %4 to i32, !dbg !1389\l  switch i32 %5, label %23 [\l    i32 78, label %6\l    i32 100, label %7\l    i32 68, label %7\l    i32 105, label %8\l    i32 97, label %9\l    i32 65, label %9\l    i32 102, label %10\l    i32 70, label %11\l    i32 104, label %12\l    i32 117, label %13\l    i32 85, label %13\l    i32 103, label %14\l    i32 71, label %14\l    i32 109, label %15\l    i32 115, label %16\l    i32 116, label %17\l    i32 84, label %17\l    i32 98, label %18\l    i32 119, label %19\l    i32 87, label %19\l    i32 120, label %20\l    i32 88, label %20\l    i32 121, label %21\l    i32 89, label %21\l    i32 122, label %22\l    i32 90, label %22\l  ], !dbg !1390\l|{<s0>def|<s1>78|<s2>100|<s3>68|<s4>105|<s5>97|<s6>65|<s7>102|<s8>70|<s9>104|<s10>117|<s11>85|<s12>103|<s13>71|<s14>109|<s15>115|<s16>116|<s17>84|<s18>98|<s19>119|<s20>87|<s21>120|<s22>88|<s23>121|<s24>89|<s25>122|<s26>90}}"];
	Node0x16251f0:s0 -> Node0x1625880;
	Node0x16251f0:s1 -> Node0x1625330;
	Node0x16251f0:s2 -> Node0x1625380;
	Node0x16251f0:s3 -> Node0x1625380;
	Node0x16251f0:s4 -> Node0x16253d0;
	Node0x16251f0:s5 -> Node0x1625420;
	Node0x16251f0:s6 -> Node0x1625420;
	Node0x16251f0:s7 -> Node0x1625470;
	Node0x16251f0:s8 -> Node0x16254c0;
	Node0x16251f0:s9 -> Node0x1625510;
	Node0x16251f0:s10 -> Node0x1625560;
	Node0x16251f0:s11 -> Node0x1625560;
	Node0x16251f0:s12 -> Node0x16255b0;
	Node0x16251f0:s13 -> Node0x16255b0;
	Node0x16251f0:s14 -> Node0x1625600;
	Node0x16251f0:s15 -> Node0x1625650;
	Node0x16251f0:s16 -> Node0x16256a0;
	Node0x16251f0:s17 -> Node0x16256a0;
	Node0x16251f0:s18 -> Node0x16256f0;
	Node0x16251f0:s19 -> Node0x1625740;
	Node0x16251f0:s20 -> Node0x1625740;
	Node0x16251f0:s21 -> Node0x1625790;
	Node0x16251f0:s22 -> Node0x1625790;
	Node0x16251f0:s23 -> Node0x16257e0;
	Node0x16251f0:s24 -> Node0x16257e0;
	Node0x16251f0:s25 -> Node0x1625830;
	Node0x16251f0:s26 -> Node0x1625830;
	Node0x1625330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%6:\l6:                                                \l  store i32 2, i32* %2, align 4, !dbg !1391\l  br label %24, !dbg !1391\l}"];
	Node0x1625330 -> Node0x16258d0;
	Node0x1625380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%7:\l7:                                                \l  store i32 2, i32* %2, align 4, !dbg !1393\l  br label %24, !dbg !1393\l}"];
	Node0x1625380 -> Node0x16258d0;
	Node0x16253d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%8:\l8:                                                \l  store i32 256, i32* %2, align 4, !dbg !1394\l  br label %24, !dbg !1394\l}"];
	Node0x16253d0 -> Node0x16258d0;
	Node0x1625420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%9:\l9:                                                \l  store i32 2, i32* %2, align 4, !dbg !1395\l  br label %24, !dbg !1395\l}"];
	Node0x1625420 -> Node0x16258d0;
	Node0x1625470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%10:\l10:                                               \l  store i32 3, i32* %2, align 4, !dbg !1396\l  br label %24, !dbg !1396\l}"];
	Node0x1625470 -> Node0x16258d0;
	Node0x16254c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%11:\l11:                                               \l  store i32 1, i32* %2, align 4, !dbg !1397\l  br label %24, !dbg !1397\l}"];
	Node0x16254c0 -> Node0x16258d0;
	Node0x1625510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%12:\l12:                                               \l  store i32 4, i32* %2, align 4, !dbg !1398\l  br label %24, !dbg !1398\l}"];
	Node0x1625510 -> Node0x16258d0;
	Node0x1625560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%13:\l13:                                               \l  store i32 8, i32* %2, align 4, !dbg !1399\l  br label %24, !dbg !1399\l}"];
	Node0x1625560 -> Node0x16258d0;
	Node0x16255b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%14:\l14:                                               \l  store i32 16, i32* %2, align 4, !dbg !1400\l  br label %24, !dbg !1400\l}"];
	Node0x16255b0 -> Node0x16258d0;
	Node0x1625600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%15:\l15:                                               \l  store i32 258, i32* %2, align 4, !dbg !1401\l  br label %24, !dbg !1401\l}"];
	Node0x1625600 -> Node0x16258d0;
	Node0x1625650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%16:\l16:                                               \l  store i32 512, i32* %2, align 4, !dbg !1402\l  br label %24, !dbg !1402\l}"];
	Node0x1625650 -> Node0x16258d0;
	Node0x16256a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%17:\l17:                                               \l  store i32 2, i32* %2, align 4, !dbg !1403\l  br label %24, !dbg !1403\l}"];
	Node0x16256a0 -> Node0x16258d0;
	Node0x16256f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%18:\l18:                                               \l  store i32 1024, i32* %2, align 4, !dbg !1404\l  br label %24, !dbg !1404\l}"];
	Node0x16256f0 -> Node0x16258d0;
	Node0x1625740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%19:\l19:                                               \l  store i32 2048, i32* %2, align 4, !dbg !1405\l  br label %24, !dbg !1405\l}"];
	Node0x1625740 -> Node0x16258d0;
	Node0x1625790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%20:\l20:                                               \l  store i32 32, i32* %2, align 4, !dbg !1406\l  br label %24, !dbg !1406\l}"];
	Node0x1625790 -> Node0x16258d0;
	Node0x16257e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%21:\l21:                                               \l  store i32 64, i32* %2, align 4, !dbg !1407\l  br label %24, !dbg !1407\l}"];
	Node0x16257e0 -> Node0x16258d0;
	Node0x1625830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%22:\l22:                                               \l  store i32 128, i32* %2, align 4, !dbg !1408\l  br label %24, !dbg !1408\l}"];
	Node0x1625830 -> Node0x16258d0;
	Node0x1625880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%23:\l23:                                               \l  store i32 0, i32* %2, align 4, !dbg !1409\l  br label %24, !dbg !1409\l}"];
	Node0x1625880 -> Node0x16258d0;
	Node0x16258d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = load i32, i32* %2, align 4, !dbg !1410\l  ret i32 %25, !dbg !1410\l}"];
}
