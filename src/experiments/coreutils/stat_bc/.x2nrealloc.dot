digraph "CFG for 'x2nrealloc' function" {
	label="CFG for 'x2nrealloc' function";

	Node0x18b6060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i64*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  store i8* %0, i8** %4, align 8, !tbaa !1380\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !831, metadata\l... !DIExpression()), !dbg !1384\l  store i64* %1, i64** %5, align 8, !tbaa !1380\l  call void @llvm.dbg.declare(metadata i64** %5, metadata !832, metadata\l... !DIExpression()), !dbg !1385\l  store i64 %2, i64* %6, align 8, !tbaa !1386\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !833, metadata\l... !DIExpression()), !dbg !1388\l  %8 = bitcast i64* %7 to i8*, !dbg !1389\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #22, !dbg !1389\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !834, metadata\l... !DIExpression()), !dbg !1390\l  %9 = load i64*, i64** %5, align 8, !dbg !1391, !tbaa !1380\l  %10 = load i64, i64* %9, align 8, !dbg !1392, !tbaa !1386\l  store i64 %10, i64* %7, align 8, !dbg !1390, !tbaa !1386\l  %11 = load i8*, i8** %4, align 8, !dbg !1393, !tbaa !1380\l  %12 = icmp ne i8* %11, null, !dbg !1393\l  br i1 %12, label %27, label %13, !dbg !1395\l|{<s0>T|<s1>F}}"];
	Node0x18b6060:s0 -> Node0x18b61a0;
	Node0x18b6060:s1 -> Node0x18b60b0;
	Node0x18b60b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%13:\l13:                                               \l  %14 = load i64, i64* %7, align 8, !dbg !1396, !tbaa !1386\l  %15 = icmp ne i64 %14, 0, !dbg !1396\l  br i1 %15, label %26, label %16, !dbg !1399\l|{<s0>T|<s1>F}}"];
	Node0x18b60b0:s0 -> Node0x18b6150;
	Node0x18b60b0:s1 -> Node0x18b6100;
	Node0x18b6100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%16:\l16:                                               \l  %17 = load i64, i64* %6, align 8, !dbg !1400, !tbaa !1386\l  %18 = udiv i64 128, %17, !dbg !1402\l  store i64 %18, i64* %7, align 8, !dbg !1403, !tbaa !1386\l  %19 = load i64, i64* %7, align 8, !dbg !1404, !tbaa !1386\l  %20 = icmp ne i64 %19, 0, !dbg !1405\l  %21 = xor i1 %20, true, !dbg !1405\l  %22 = zext i1 %21 to i32, !dbg !1405\l  %23 = sext i32 %22 to i64, !dbg !1405\l  %24 = load i64, i64* %7, align 8, !dbg !1406, !tbaa !1386\l  %25 = add i64 %24, %23, !dbg !1406\l  store i64 %25, i64* %7, align 8, !dbg !1406, !tbaa !1386\l  br label %26, !dbg !1407\l}"];
	Node0x18b6100 -> Node0x18b6150;
	Node0x18b6150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%26:\l26:                                               \l  br label %37, !dbg !1408\l}"];
	Node0x18b6150 -> Node0x18b6290;
	Node0x18b61a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%27:\l27:                                               \l  %28 = load i64, i64* %7, align 8, !dbg !1409, !tbaa !1386\l  %29 = load i64, i64* %7, align 8, !dbg !1409, !tbaa !1386\l  %30 = lshr i64 %29, 1, !dbg !1409\l  %31 = add i64 %30, 1, !dbg !1409\l  %32 = call \{ i64, i1 \} @llvm.uadd.with.overflow.i64(i64 %28, i64 %31), !dbg\l... !1409\l  %33 = extractvalue \{ i64, i1 \} %32, 1, !dbg !1409\l  %34 = extractvalue \{ i64, i1 \} %32, 0, !dbg !1409\l  store i64 %34, i64* %7, align 8, !dbg !1409\l  br i1 %33, label %35, label %36, !dbg !1412\l|{<s0>T|<s1>F}}"];
	Node0x18b61a0:s0 -> Node0x18b61f0;
	Node0x18b61a0:s1 -> Node0x18b6240;
	Node0x18b61f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%35:\l35:                                               \l  call void @xalloc_die() #23, !dbg !1413\l  unreachable, !dbg !1413\l}"];
	Node0x18b6240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%36:\l36:                                               \l  br label %37\l}"];
	Node0x18b6240 -> Node0x18b6290;
	Node0x18b6290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = load i8*, i8** %4, align 8, !dbg !1414, !tbaa !1380\l  %39 = load i64, i64* %7, align 8, !dbg !1415, !tbaa !1386\l  %40 = load i64, i64* %6, align 8, !dbg !1416, !tbaa !1386\l  %41 = call i8* @xreallocarray(i8* noundef %38, i64 noundef %39, i64 noundef\l... %40) #24, !dbg !1417\l  store i8* %41, i8** %4, align 8, !dbg !1418, !tbaa !1380\l  %42 = load i64, i64* %7, align 8, !dbg !1419, !tbaa !1386\l  %43 = load i64*, i64** %5, align 8, !dbg !1420, !tbaa !1380\l  store i64 %42, i64* %43, align 8, !dbg !1421, !tbaa !1386\l  %44 = load i8*, i8** %4, align 8, !dbg !1422, !tbaa !1380\l  %45 = bitcast i64* %7 to i8*, !dbg !1423\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #22, !dbg !1423\l  ret i8* %44, !dbg !1424\l}"];
}
