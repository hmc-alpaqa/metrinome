digraph "CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function" {
	label="CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function";

	Node0x1a885c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4, !tbaa !1380\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !532, metadata\l... !DIExpression()), !dbg !1384\l  store i32 %1, i32* %4, align 4, !tbaa !1380\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !533, metadata\l... !DIExpression()), !dbg !1385\l  %8 = bitcast i32* %5 to i8*, !dbg !1386\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #22, !dbg !1386\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !534, metadata\l... !DIExpression()), !dbg !1387\l  %9 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1388, !tbaa !1380\l  %10 = icmp sle i32 0, %9, !dbg !1390\l  br i1 %10, label %11, label %31, !dbg !1391\l|{<s0>T|<s1>F}}"];
	Node0x1a885c0:s0 -> Node0x1a89800;
	Node0x1a885c0:s1 -> Node0x1a89a30;
	Node0x1a89800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%11:\l11:                                               \l  %12 = load i32, i32* %3, align 4, !dbg !1392, !tbaa !1380\l  %13 = load i32, i32* %4, align 4, !dbg !1394, !tbaa !1380\l  %14 = call i32 (i32, i32, ...) @fcntl(i32 noundef %12, i32 noundef 1030, i32\l... noundef %13), !dbg !1395\l  store i32 %14, i32* %5, align 4, !dbg !1396, !tbaa !1380\l  %15 = load i32, i32* %5, align 4, !dbg !1397, !tbaa !1380\l  %16 = icmp sle i32 0, %15, !dbg !1399\l  br i1 %16, label %21, label %17, !dbg !1400\l|{<s0>T|<s1>F}}"];
	Node0x1a89800:s0 -> Node0x1a898a0;
	Node0x1a89800:s1 -> Node0x1a89850;
	Node0x1a89850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%17:\l17:                                               \l  %18 = call i32* @__errno_location() #23, !dbg !1401\l  %19 = load i32, i32* %18, align 4, !dbg !1401, !tbaa !1380\l  %20 = icmp ne i32 %19, 22, !dbg !1402\l  br i1 %20, label %21, label %22, !dbg !1403\l|{<s0>T|<s1>F}}"];
	Node0x1a89850:s0 -> Node0x1a898a0;
	Node0x1a89850:s1 -> Node0x1a898f0;
	Node0x1a898a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%21:\l21:                                               \l  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg\l... !1404, !tbaa !1380\l  br label %30, !dbg !1406\l}"];
	Node0x1a898a0 -> Node0x1a899e0;
	Node0x1a898f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%22:\l22:                                               \l  %23 = load i32, i32* %3, align 4, !dbg !1407, !tbaa !1380\l  %24 = load i32, i32* %4, align 4, !dbg !1409, !tbaa !1380\l  %25 = call i32 @rpl_fcntl_DUPFD(i32 noundef %23, i32 noundef %24), !dbg !1410\l  store i32 %25, i32* %5, align 4, !dbg !1411, !tbaa !1380\l  %26 = load i32, i32* %5, align 4, !dbg !1412, !tbaa !1380\l  %27 = icmp sge i32 %26, 0, !dbg !1414\l  br i1 %27, label %28, label %29, !dbg !1415\l|{<s0>T|<s1>F}}"];
	Node0x1a898f0:s0 -> Node0x1a89940;
	Node0x1a898f0:s1 -> Node0x1a89990;
	Node0x1a89940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%28:\l28:                                               \l  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1416, !tbaa !1380\l  br label %29, !dbg !1417\l}"];
	Node0x1a89940 -> Node0x1a89990;
	Node0x1a89990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%29:\l29:                                               \l  br label %30\l}"];
	Node0x1a89990 -> Node0x1a899e0;
	Node0x1a899e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%30:\l30:                                               \l  br label %35, !dbg !1418\l}"];
	Node0x1a899e0 -> Node0x1a89a80;
	Node0x1a89a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%31:\l31:                                               \l  %32 = load i32, i32* %3, align 4, !dbg !1419, !tbaa !1380\l  %33 = load i32, i32* %4, align 4, !dbg !1420, !tbaa !1380\l  %34 = call i32 @rpl_fcntl_DUPFD(i32 noundef %32, i32 noundef %33), !dbg !1421\l  store i32 %34, i32* %5, align 4, !dbg !1422, !tbaa !1380\l  br label %35\l}"];
	Node0x1a89a30 -> Node0x1a89a80;
	Node0x1a89a80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = load i32, i32* %5, align 4, !dbg !1423, !tbaa !1380\l  %37 = icmp sle i32 0, %36, !dbg !1424\l  br i1 %37, label %38, label %64, !dbg !1425\l|{<s0>T|<s1>F}}"];
	Node0x1a89a80:s0 -> Node0x1a89ad0;
	Node0x1a89a80:s1 -> Node0x1a89c60;
	Node0x1a89ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%38:\l38:                                               \l  %39 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1426, !tbaa !1380\l  %40 = icmp eq i32 %39, -1, !dbg !1427\l  br i1 %40, label %41, label %64, !dbg !1428\l|{<s0>T|<s1>F}}"];
	Node0x1a89ad0:s0 -> Node0x1a89b20;
	Node0x1a89ad0:s1 -> Node0x1a89c60;
	Node0x1a89b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = bitcast i32* %6 to i8*, !dbg !1429\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #22, !dbg !1429\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !535, metadata\l... !DIExpression()), !dbg !1430\l  %43 = load i32, i32* %5, align 4, !dbg !1431, !tbaa !1380\l  %44 = call i32 (i32, i32, ...) @fcntl(i32 noundef %43, i32 noundef 1), !dbg\l... !1432\l  store i32 %44, i32* %6, align 4, !dbg !1430, !tbaa !1380\l  %45 = load i32, i32* %6, align 4, !dbg !1433, !tbaa !1380\l  %46 = icmp slt i32 %45, 0, !dbg !1434\l  br i1 %46, label %53, label %47, !dbg !1435\l|{<s0>T|<s1>F}}"];
	Node0x1a89b20:s0 -> Node0x1a89bc0;
	Node0x1a89b20:s1 -> Node0x1a89b70;
	Node0x1a89b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%47:\l47:                                               \l  %48 = load i32, i32* %5, align 4, !dbg !1436, !tbaa !1380\l  %49 = load i32, i32* %6, align 4, !dbg !1437, !tbaa !1380\l  %50 = or i32 %49, 1, !dbg !1438\l  %51 = call i32 (i32, i32, ...) @fcntl(i32 noundef %48, i32 noundef 2, i32\l... noundef %50), !dbg !1439\l  %52 = icmp eq i32 %51, -1, !dbg !1440\l  br i1 %52, label %53, label %62, !dbg !1441\l|{<s0>T|<s1>F}}"];
	Node0x1a89b70:s0 -> Node0x1a89bc0;
	Node0x1a89b70:s1 -> Node0x1a89c10;
	Node0x1a89bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%53:\l53:                                               \l  %54 = bitcast i32* %7 to i8*, !dbg !1442\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #22, !dbg !1442\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !538, metadata\l... !DIExpression()), !dbg !1443\l  %55 = call i32* @__errno_location() #23, !dbg !1444\l  %56 = load i32, i32* %55, align 4, !dbg !1444, !tbaa !1380\l  store i32 %56, i32* %7, align 4, !dbg !1443, !tbaa !1380\l  %57 = load i32, i32* %5, align 4, !dbg !1445, !tbaa !1380\l  %58 = call i32 @close(i32 noundef %57), !dbg !1446\l  %59 = load i32, i32* %7, align 4, !dbg !1447, !tbaa !1380\l  %60 = call i32* @__errno_location() #23, !dbg !1448\l  store i32 %59, i32* %60, align 4, !dbg !1449, !tbaa !1380\l  store i32 -1, i32* %5, align 4, !dbg !1450, !tbaa !1380\l  %61 = bitcast i32* %7 to i8*, !dbg !1451\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #22, !dbg !1451\l  br label %62, !dbg !1452\l}"];
	Node0x1a89bc0 -> Node0x1a89c10;
	Node0x1a89c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%62:\l62:                                               \l  %63 = bitcast i32* %6 to i8*, !dbg !1453\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %63) #22, !dbg !1453\l  br label %64, !dbg !1454\l}"];
	Node0x1a89c10 -> Node0x1a89c60;
	Node0x1a89c60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = load i32, i32* %5, align 4, !dbg !1455, !tbaa !1380\l  %66 = bitcast i32* %5 to i8*, !dbg !1456\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #22, !dbg !1456\l  ret i32 %65, !dbg !1457\l}"];
}
