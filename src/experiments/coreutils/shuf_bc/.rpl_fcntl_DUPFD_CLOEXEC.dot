digraph "CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function" {
	label="CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function";

	Node0x1b5d640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4, !tbaa !790\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !219, metadata\l... !DIExpression()), !dbg !794\l  store i32 %1, i32* %4, align 4, !tbaa !790\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !220, metadata\l... !DIExpression()), !dbg !795\l  %8 = bitcast i32* %5 to i8*, !dbg !796\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #22, !dbg !796\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !221, metadata\l... !DIExpression()), !dbg !797\l  %9 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !798, !tbaa !790\l  %10 = icmp sle i32 0, %9, !dbg !800\l  br i1 %10, label %11, label %31, !dbg !801\l|{<s0>T|<s1>F}}"];
	Node0x1b5d640:s0 -> Node0x1b5e880;
	Node0x1b5d640:s1 -> Node0x1b5eab0;
	Node0x1b5e880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%11:\l11:                                               \l  %12 = load i32, i32* %3, align 4, !dbg !802, !tbaa !790\l  %13 = load i32, i32* %4, align 4, !dbg !804, !tbaa !790\l  %14 = call i32 (i32, i32, ...) @fcntl(i32 noundef %12, i32 noundef 1030, i32\l... noundef %13), !dbg !805\l  store i32 %14, i32* %5, align 4, !dbg !806, !tbaa !790\l  %15 = load i32, i32* %5, align 4, !dbg !807, !tbaa !790\l  %16 = icmp sle i32 0, %15, !dbg !809\l  br i1 %16, label %21, label %17, !dbg !810\l|{<s0>T|<s1>F}}"];
	Node0x1b5e880:s0 -> Node0x1b5e920;
	Node0x1b5e880:s1 -> Node0x1b5e8d0;
	Node0x1b5e8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%17:\l17:                                               \l  %18 = call i32* @__errno_location() #23, !dbg !811\l  %19 = load i32, i32* %18, align 4, !dbg !811, !tbaa !790\l  %20 = icmp ne i32 %19, 22, !dbg !812\l  br i1 %20, label %21, label %22, !dbg !813\l|{<s0>T|<s1>F}}"];
	Node0x1b5e8d0:s0 -> Node0x1b5e920;
	Node0x1b5e8d0:s1 -> Node0x1b5e970;
	Node0x1b5e920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%21:\l21:                                               \l  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg\l... !814, !tbaa !790\l  br label %30, !dbg !816\l}"];
	Node0x1b5e920 -> Node0x1b5ea60;
	Node0x1b5e970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%22:\l22:                                               \l  %23 = load i32, i32* %3, align 4, !dbg !817, !tbaa !790\l  %24 = load i32, i32* %4, align 4, !dbg !819, !tbaa !790\l  %25 = call i32 @rpl_fcntl_DUPFD(i32 noundef %23, i32 noundef %24), !dbg !820\l  store i32 %25, i32* %5, align 4, !dbg !821, !tbaa !790\l  %26 = load i32, i32* %5, align 4, !dbg !822, !tbaa !790\l  %27 = icmp sge i32 %26, 0, !dbg !824\l  br i1 %27, label %28, label %29, !dbg !825\l|{<s0>T|<s1>F}}"];
	Node0x1b5e970:s0 -> Node0x1b5e9c0;
	Node0x1b5e970:s1 -> Node0x1b5ea10;
	Node0x1b5e9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%28:\l28:                                               \l  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !826, !tbaa !790\l  br label %29, !dbg !827\l}"];
	Node0x1b5e9c0 -> Node0x1b5ea10;
	Node0x1b5ea10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%29:\l29:                                               \l  br label %30\l}"];
	Node0x1b5ea10 -> Node0x1b5ea60;
	Node0x1b5ea60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%30:\l30:                                               \l  br label %35, !dbg !828\l}"];
	Node0x1b5ea60 -> Node0x1b5eb00;
	Node0x1b5eab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%31:\l31:                                               \l  %32 = load i32, i32* %3, align 4, !dbg !829, !tbaa !790\l  %33 = load i32, i32* %4, align 4, !dbg !830, !tbaa !790\l  %34 = call i32 @rpl_fcntl_DUPFD(i32 noundef %32, i32 noundef %33), !dbg !831\l  store i32 %34, i32* %5, align 4, !dbg !832, !tbaa !790\l  br label %35\l}"];
	Node0x1b5eab0 -> Node0x1b5eb00;
	Node0x1b5eb00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = load i32, i32* %5, align 4, !dbg !833, !tbaa !790\l  %37 = icmp sle i32 0, %36, !dbg !834\l  br i1 %37, label %38, label %64, !dbg !835\l|{<s0>T|<s1>F}}"];
	Node0x1b5eb00:s0 -> Node0x1b5eb50;
	Node0x1b5eb00:s1 -> Node0x1b5ece0;
	Node0x1b5eb50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%38:\l38:                                               \l  %39 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !836, !tbaa !790\l  %40 = icmp eq i32 %39, -1, !dbg !837\l  br i1 %40, label %41, label %64, !dbg !838\l|{<s0>T|<s1>F}}"];
	Node0x1b5eb50:s0 -> Node0x1b5eba0;
	Node0x1b5eb50:s1 -> Node0x1b5ece0;
	Node0x1b5eba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = bitcast i32* %6 to i8*, !dbg !839\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #22, !dbg !839\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !222, metadata\l... !DIExpression()), !dbg !840\l  %43 = load i32, i32* %5, align 4, !dbg !841, !tbaa !790\l  %44 = call i32 (i32, i32, ...) @fcntl(i32 noundef %43, i32 noundef 1), !dbg\l... !842\l  store i32 %44, i32* %6, align 4, !dbg !840, !tbaa !790\l  %45 = load i32, i32* %6, align 4, !dbg !843, !tbaa !790\l  %46 = icmp slt i32 %45, 0, !dbg !844\l  br i1 %46, label %53, label %47, !dbg !845\l|{<s0>T|<s1>F}}"];
	Node0x1b5eba0:s0 -> Node0x1b5ec40;
	Node0x1b5eba0:s1 -> Node0x1b5ebf0;
	Node0x1b5ebf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%47:\l47:                                               \l  %48 = load i32, i32* %5, align 4, !dbg !846, !tbaa !790\l  %49 = load i32, i32* %6, align 4, !dbg !847, !tbaa !790\l  %50 = or i32 %49, 1, !dbg !848\l  %51 = call i32 (i32, i32, ...) @fcntl(i32 noundef %48, i32 noundef 2, i32\l... noundef %50), !dbg !849\l  %52 = icmp eq i32 %51, -1, !dbg !850\l  br i1 %52, label %53, label %62, !dbg !851\l|{<s0>T|<s1>F}}"];
	Node0x1b5ebf0:s0 -> Node0x1b5ec40;
	Node0x1b5ebf0:s1 -> Node0x1b5ec90;
	Node0x1b5ec40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%53:\l53:                                               \l  %54 = bitcast i32* %7 to i8*, !dbg !852\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #22, !dbg !852\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !225, metadata\l... !DIExpression()), !dbg !853\l  %55 = call i32* @__errno_location() #23, !dbg !854\l  %56 = load i32, i32* %55, align 4, !dbg !854, !tbaa !790\l  store i32 %56, i32* %7, align 4, !dbg !853, !tbaa !790\l  %57 = load i32, i32* %5, align 4, !dbg !855, !tbaa !790\l  %58 = call i32 @close(i32 noundef %57), !dbg !856\l  %59 = load i32, i32* %7, align 4, !dbg !857, !tbaa !790\l  %60 = call i32* @__errno_location() #23, !dbg !858\l  store i32 %59, i32* %60, align 4, !dbg !859, !tbaa !790\l  store i32 -1, i32* %5, align 4, !dbg !860, !tbaa !790\l  %61 = bitcast i32* %7 to i8*, !dbg !861\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #22, !dbg !861\l  br label %62, !dbg !862\l}"];
	Node0x1b5ec40 -> Node0x1b5ec90;
	Node0x1b5ec90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%62:\l62:                                               \l  %63 = bitcast i32* %6 to i8*, !dbg !863\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %63) #22, !dbg !863\l  br label %64, !dbg !864\l}"];
	Node0x1b5ec90 -> Node0x1b5ece0;
	Node0x1b5ece0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = load i32, i32* %5, align 4, !dbg !865, !tbaa !790\l  %66 = bitcast i32* %5 to i8*, !dbg !866\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #22, !dbg !866\l  ret i32 %65, !dbg !867\l}"];
}
