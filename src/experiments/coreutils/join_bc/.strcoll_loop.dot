digraph "CFG for 'strcoll_loop' function" {
	label="CFG for 'strcoll_loop' function";

	Node0xb18cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%4:\l  %5 = alloca i32, align 4\l  %6 = alloca i8*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i32, align 4\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i32, align 4\l  store i8* %0, i8** %6, align 8, !tbaa !802\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !794, metadata\l... !DIExpression()), !dbg !806\l  store i64 %1, i64* %7, align 8, !tbaa !807\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !795, metadata\l... !DIExpression()), !dbg !809\l  store i8* %2, i8** %8, align 8, !tbaa !802\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !796, metadata\l... !DIExpression()), !dbg !810\l  store i64 %3, i64* %9, align 8, !tbaa !807\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !797, metadata\l... !DIExpression()), !dbg !811\l  %14 = bitcast i32* %10 to i8*, !dbg !812\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #22, !dbg !812\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !798, metadata\l... !DIExpression()), !dbg !813\l  br label %15, !dbg !814\l}"];
	Node0xb18cb0 -> Node0xb1ceb0;
	Node0xb1ceb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  %16 = call i32* @__errno_location() #23, !dbg !815\l  store i32 0, i32* %16, align 4, !dbg !816, !tbaa !817\l  %17 = load i8*, i8** %6, align 8, !dbg !819, !tbaa !802\l  %18 = load i8*, i8** %8, align 8, !dbg !820, !tbaa !802\l  %19 = call i32 @strcoll(i8* noundef %17, i8* noundef %18) #24, !dbg !821\l  store i32 %19, i32* %10, align 4, !dbg !822, !tbaa !817\l  %20 = icmp ne i32 %19, 0, !dbg !822\l  br i1 %20, label %25, label %21, !dbg !823\l|{<s0>T|<s1>F}}"];
	Node0xb1ceb0:s0 -> Node0xb1cf50;
	Node0xb1ceb0:s1 -> Node0xb1cf00;
	Node0xb1cf00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%21:\l21:                                               \l  %22 = call i32* @__errno_location() #23, !dbg !824\l  %23 = load i32, i32* %22, align 4, !dbg !824, !tbaa !817\l  %24 = icmp ne i32 %23, 0, !dbg !823\l  br label %25, !dbg !823\l}"];
	Node0xb1cf00 -> Node0xb1cf50;
	Node0xb1cf50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i1 [ true, %15 ], [ %24, %21 ]\l  %27 = xor i1 %26, true, !dbg !825\l  br i1 %27, label %28, label %66, !dbg !814\l|{<s0>T|<s1>F}}"];
	Node0xb1cf50:s0 -> Node0xb1cfa0;
	Node0xb1cf50:s1 -> Node0xb1d1d0;
	Node0xb1cfa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%28:\l28:                                               \l  %29 = bitcast i64* %11 to i8*, !dbg !826\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #22, !dbg !826\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !799, metadata\l... !DIExpression()), !dbg !827\l  %30 = load i8*, i8** %6, align 8, !dbg !828, !tbaa !802\l  %31 = call i64 @strlen(i8* noundef %30) #24, !dbg !829\l  %32 = add i64 %31, 1, !dbg !830\l  store i64 %32, i64* %11, align 8, !dbg !827, !tbaa !807\l  %33 = bitcast i64* %12 to i8*, !dbg !831\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #22, !dbg !831\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !801, metadata\l... !DIExpression()), !dbg !832\l  %34 = load i8*, i8** %8, align 8, !dbg !833, !tbaa !802\l  %35 = call i64 @strlen(i8* noundef %34) #24, !dbg !834\l  %36 = add i64 %35, 1, !dbg !835\l  store i64 %36, i64* %12, align 8, !dbg !832, !tbaa !807\l  %37 = load i64, i64* %11, align 8, !dbg !836, !tbaa !807\l  %38 = load i8*, i8** %6, align 8, !dbg !837, !tbaa !802\l  %39 = getelementptr inbounds i8, i8* %38, i64 %37, !dbg !837\l  store i8* %39, i8** %6, align 8, !dbg !837, !tbaa !802\l  %40 = load i64, i64* %12, align 8, !dbg !838, !tbaa !807\l  %41 = load i8*, i8** %8, align 8, !dbg !839, !tbaa !802\l  %42 = getelementptr inbounds i8, i8* %41, i64 %40, !dbg !839\l  store i8* %42, i8** %8, align 8, !dbg !839, !tbaa !802\l  %43 = load i64, i64* %11, align 8, !dbg !840, !tbaa !807\l  %44 = load i64, i64* %7, align 8, !dbg !841, !tbaa !807\l  %45 = sub i64 %44, %43, !dbg !841\l  store i64 %45, i64* %7, align 8, !dbg !841, !tbaa !807\l  %46 = load i64, i64* %12, align 8, !dbg !842, !tbaa !807\l  %47 = load i64, i64* %9, align 8, !dbg !843, !tbaa !807\l  %48 = sub i64 %47, %46, !dbg !843\l  store i64 %48, i64* %9, align 8, !dbg !843, !tbaa !807\l  %49 = load i64, i64* %7, align 8, !dbg !844, !tbaa !807\l  %50 = icmp eq i64 %49, 0, !dbg !846\l  br i1 %50, label %51, label %56, !dbg !847\l|{<s0>T|<s1>F}}"];
	Node0xb1cfa0:s0 -> Node0xb1cff0;
	Node0xb1cfa0:s1 -> Node0xb1d040;
	Node0xb1cff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%51:\l51:                                               \l  %52 = load i64, i64* %9, align 8, !dbg !848, !tbaa !807\l  %53 = icmp ne i64 %52, 0, !dbg !849\l  %54 = zext i1 %53 to i32, !dbg !849\l  %55 = sub nsw i32 0, %54, !dbg !850\l  store i32 %55, i32* %5, align 4, !dbg !851\l  store i32 1, i32* %13, align 4\l  br label %61, !dbg !851\l}"];
	Node0xb1cff0 -> Node0xb1d130;
	Node0xb1d040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%56:\l56:                                               \l  %57 = load i64, i64* %9, align 8, !dbg !852, !tbaa !807\l  %58 = icmp eq i64 %57, 0, !dbg !854\l  br i1 %58, label %59, label %60, !dbg !855\l|{<s0>T|<s1>F}}"];
	Node0xb1d040:s0 -> Node0xb1d090;
	Node0xb1d040:s1 -> Node0xb1d0e0;
	Node0xb1d090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%59:\l59:                                               \l  store i32 1, i32* %5, align 4, !dbg !856\l  store i32 1, i32* %13, align 4\l  br label %61, !dbg !856\l}"];
	Node0xb1d090 -> Node0xb1d130;
	Node0xb1d0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%60:\l60:                                               \l  store i32 0, i32* %13, align 4, !dbg !857\l  br label %61, !dbg !857\l}"];
	Node0xb1d0e0 -> Node0xb1d130;
	Node0xb1d130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%61:\l61:                                               \l  %62 = bitcast i64* %12 to i8*, !dbg !857\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #22, !dbg !857\l  %63 = bitcast i64* %11 to i8*, !dbg !857\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #22, !dbg !857\l  %64 = load i32, i32* %13, align 4\l  switch i32 %64, label %68 [\l    i32 0, label %65\l  ]\l|{<s0>def|<s1>0}}"];
	Node0xb1d130:s0 -> Node0xb1d220;
	Node0xb1d130:s1 -> Node0xb1d180;
	Node0xb1d180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%65:\l65:                                               \l  br label %15, !dbg !814, !llvm.loop !858\l}"];
	Node0xb1d180 -> Node0xb1ceb0;
	Node0xb1d1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%66:\l66:                                               \l  %67 = load i32, i32* %10, align 4, !dbg !861, !tbaa !817\l  store i32 %67, i32* %5, align 4, !dbg !862\l  store i32 1, i32* %13, align 4\l  br label %68, !dbg !862\l}"];
	Node0xb1d1d0 -> Node0xb1d220;
	Node0xb1d220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%68:\l68:                                               \l  %69 = bitcast i32* %10 to i8*, !dbg !863\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %69) #22, !dbg !863\l  %70 = load i32, i32* %5, align 4, !dbg !863\l  ret i32 %70, !dbg !863\l}"];
}
