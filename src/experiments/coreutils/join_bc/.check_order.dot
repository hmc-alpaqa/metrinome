digraph "CFG for 'check_order' function" {
	label="CFG for 'check_order' function";

	Node0x9a5fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca %struct.line*, align 8\l  %5 = alloca %struct.line*, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i32, align 4\l  store %struct.line* %0, %struct.line** %4, align 8, !tbaa !810\l  call void @llvm.dbg.declare(metadata %struct.line** %4, metadata !796,\l... metadata !DIExpression()), !dbg !814\l  store %struct.line* %1, %struct.line** %5, align 8, !tbaa !810\l  call void @llvm.dbg.declare(metadata %struct.line** %5, metadata !797,\l... metadata !DIExpression()), !dbg !815\l  store i32 %2, i32* %6, align 4, !tbaa !816\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !798, metadata\l... !DIExpression()), !dbg !818\l  %10 = load i32, i32* @check_input_order, align 4, !dbg !819, !tbaa !820\l  %11 = icmp ne i32 %10, 2, !dbg !821\l  br i1 %11, label %12, label %145, !dbg !822\l|{<s0>T|<s1>F}}"];
	Node0x9a5fb0:s0 -> Node0x9a6000;
	Node0x9a5fb0:s1 -> Node0x9a6870;
	Node0x9a6000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%12:\l12:                                               \l  %13 = load i32, i32* @check_input_order, align 4, !dbg !823, !tbaa !820\l  %14 = icmp eq i32 %13, 1, !dbg !824\l  br i1 %14, label %18, label %15, !dbg !825\l|{<s0>T|<s1>F}}"];
	Node0x9a6000:s0 -> Node0x9a60a0;
	Node0x9a6000:s1 -> Node0x9a6050;
	Node0x9a6050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%15:\l15:                                               \l  %16 = load i8, i8* @seen_unpairable, align 1, !dbg !826, !tbaa !827, !range\l... !829\l  %17 = trunc i8 %16 to i1, !dbg !826\l  br i1 %17, label %18, label %145, !dbg !830\l|{<s0>T|<s1>F}}"];
	Node0x9a6050:s0 -> Node0x9a60a0;
	Node0x9a6050:s1 -> Node0x9a6870;
	Node0x9a60a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%18:\l18:                                               \l  %19 = load i32, i32* %6, align 4, !dbg !831, !tbaa !816\l  %20 = sub nsw i32 %19, 1, !dbg !832\l  %21 = sext i32 %20 to i64, !dbg !833\l  %22 = getelementptr inbounds [2 x i8], [2 x i8]* @issued_disorder_warning,\l... i64 0, i64 %21, !dbg !833\l  %23 = load i8, i8* %22, align 1, !dbg !833, !tbaa !827, !range !829\l  %24 = trunc i8 %23 to i1, !dbg !833\l  br i1 %24, label %144, label %25, !dbg !834\l|{<s0>T|<s1>F}}"];
	Node0x9a60a0:s0 -> Node0x9a6820;
	Node0x9a60a0:s1 -> Node0x9a60f0;
	Node0x9a60f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%25:\l25:                                               \l  %26 = bitcast i64* %7 to i8*, !dbg !835\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #22, !dbg !835\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !799, metadata\l... !DIExpression()), !dbg !836\l  %27 = load i32, i32* %6, align 4, !dbg !837, !tbaa !816\l  %28 = icmp eq i32 %27, 1, !dbg !838\l  br i1 %28, label %29, label %31, !dbg !837\l|{<s0>T|<s1>F}}"];
	Node0x9a60f0:s0 -> Node0x9a6140;
	Node0x9a60f0:s1 -> Node0x9a6190;
	Node0x9a6140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%29:\l29:                                               \l  %30 = load i64, i64* @join_field_1, align 8, !dbg !839, !tbaa !840\l  br label %33, !dbg !837\l}"];
	Node0x9a6140 -> Node0x9a61e0;
	Node0x9a6190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%31:\l31:                                               \l  %32 = load i64, i64* @join_field_2, align 8, !dbg !842, !tbaa !840\l  br label %33, !dbg !837\l}"];
	Node0x9a6190 -> Node0x9a61e0;
	Node0x9a61e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%33:\l33:                                               \l  %34 = phi i64 [ %30, %29 ], [ %32, %31 ], !dbg !837\l  store i64 %34, i64* %7, align 8, !dbg !836, !tbaa !840\l  %35 = load %struct.line*, %struct.line** %4, align 8, !dbg !843, !tbaa !810\l  %36 = load %struct.line*, %struct.line** %5, align 8, !dbg !844, !tbaa !810\l  %37 = load i64, i64* %7, align 8, !dbg !845, !tbaa !840\l  %38 = load i64, i64* %7, align 8, !dbg !846, !tbaa !840\l  %39 = call i32 @keycmp(%struct.line* noundef %35, %struct.line* noundef %36,\l... i64 noundef %37, i64 noundef %38), !dbg !847\l  %40 = icmp sgt i32 %39, 0, !dbg !848\l  br i1 %40, label %41, label %142, !dbg !849\l|{<s0>T|<s1>F}}"];
	Node0x9a61e0:s0 -> Node0x9a6230;
	Node0x9a61e0:s1 -> Node0x9a67d0;
	Node0x9a6230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%41:\l41:                                               \l  %42 = bitcast i64* %8 to i8*, !dbg !850\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #22, !dbg !850\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !804, metadata\l... !DIExpression()), !dbg !851\l  %43 = load %struct.line*, %struct.line** %5, align 8, !dbg !852, !tbaa !810\l  %44 = getelementptr inbounds %struct.line, %struct.line* %43, i32 0, i32 0,\l... !dbg !853\l  %45 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %44,\l... i32 0, i32 1, !dbg !854\l  %46 = load i64, i64* %45, align 8, !dbg !854, !tbaa !855\l  store i64 %46, i64* %8, align 8, !dbg !851, !tbaa !840\l  %47 = load i64, i64* %8, align 8, !dbg !858, !tbaa !840\l  %48 = icmp slt i64 0, %47, !dbg !860\l  br i1 %48, label %49, label %63, !dbg !861\l|{<s0>T|<s1>F}}"];
	Node0x9a6230:s0 -> Node0x9a6280;
	Node0x9a6230:s1 -> Node0x9a6320;
	Node0x9a6280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%49:\l49:                                               \l  %50 = load %struct.line*, %struct.line** %5, align 8, !dbg !862, !tbaa !810\l  %51 = getelementptr inbounds %struct.line, %struct.line* %50, i32 0, i32 0,\l... !dbg !863\l  %52 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %51,\l... i32 0, i32 2, !dbg !864\l  %53 = load i8*, i8** %52, align 8, !dbg !864, !tbaa !865\l  %54 = load i64, i64* %8, align 8, !dbg !866, !tbaa !840\l  %55 = sub nsw i64 %54, 1, !dbg !867\l  %56 = getelementptr inbounds i8, i8* %53, i64 %55, !dbg !862\l  %57 = load i8, i8* %56, align 1, !dbg !862, !tbaa !820\l  %58 = sext i8 %57 to i32, !dbg !862\l  %59 = icmp eq i32 %58, 10, !dbg !868\l  br i1 %59, label %60, label %63, !dbg !869\l|{<s0>T|<s1>F}}"];
	Node0x9a6280:s0 -> Node0x9a62d0;
	Node0x9a6280:s1 -> Node0x9a6320;
	Node0x9a62d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%60:\l60:                                               \l  %61 = load i64, i64* %8, align 8, !dbg !870, !tbaa !840\l  %62 = add nsw i64 %61, -1, !dbg !870\l  store i64 %62, i64* %8, align 8, !dbg !870, !tbaa !840\l  br label %63, !dbg !870\l}"];
	Node0x9a62d0 -> Node0x9a6320;
	Node0x9a6320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%63:\l63:                                               \l  %64 = load i64, i64* %8, align 8, !dbg !871, !tbaa !840\l  %65 = icmp slt i64 2147483647, %64, !dbg !871\l  br i1 %65, label %66, label %67, !dbg !871\l|{<s0>T|<s1>F}}"];
	Node0x9a6320:s0 -> Node0x9a6370;
	Node0x9a6320:s1 -> Node0x9a63c0;
	Node0x9a6370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%66:\l66:                                               \l  br label %69, !dbg !871\l}"];
	Node0x9a6370 -> Node0x9a6410;
	Node0x9a63c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%67:\l67:                                               \l  %68 = load i64, i64* %8, align 8, !dbg !871, !tbaa !840\l  br label %69, !dbg !871\l}"];
	Node0x9a63c0 -> Node0x9a6410;
	Node0x9a6410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%69:\l69:                                               \l  %70 = phi i64 [ 2147483647, %66 ], [ %68, %67 ], !dbg !871\l  store i64 %70, i64* %8, align 8, !dbg !872, !tbaa !840\l  %71 = load i32, i32* @check_input_order, align 4, !dbg !873, !tbaa !820\l  %72 = icmp eq i32 %71, 1, !dbg !873\l  %73 = zext i1 %72 to i64, !dbg !873\l  %74 = select i1 %72, i32 1, i32 0, !dbg !873\l  %75 = call i1 @llvm.is.constant.i32(i32 %74), !dbg !873\l  br i1 %75, label %76, label %106, !dbg !873\l|{<s0>T|<s1>F}}"];
	Node0x9a6410:s0 -> Node0x9a6460;
	Node0x9a6410:s1 -> Node0x9a65f0;
	Node0x9a6460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%76:\l76:                                               \l  %77 = load i32, i32* @check_input_order, align 4, !dbg !873, !tbaa !820\l  %78 = icmp eq i32 %77, 1, !dbg !873\l  %79 = zext i1 %78 to i64, !dbg !873\l  %80 = select i1 %78, i32 1, i32 0, !dbg !873\l  %81 = load i32, i32* %6, align 4, !dbg !873, !tbaa !816\l  %82 = sub nsw i32 %81, 1, !dbg !873\l  %83 = sext i32 %82 to i64, !dbg !873\l  %84 = getelementptr inbounds [2 x i8*], [2 x i8*]* @g_names, i64 0, i64 %83,\l... !dbg !873\l  %85 = load i8*, i8** %84, align 8, !dbg !873, !tbaa !810\l  %86 = load i32, i32* %6, align 4, !dbg !873, !tbaa !816\l  %87 = sub nsw i32 %86, 1, !dbg !873\l  %88 = sext i32 %87 to i64, !dbg !873\l  %89 = getelementptr inbounds [2 x i64], [2 x i64]* @line_no, i64 0, i64 %88,\l... !dbg !873\l  %90 = load i64, i64* %89, align 8, !dbg !873, !tbaa !840\l  %91 = load i64, i64* %8, align 8, !dbg !873, !tbaa !840\l  %92 = trunc i64 %91 to i32, !dbg !873\l  %93 = load %struct.line*, %struct.line** %5, align 8, !dbg !873, !tbaa !810\l  %94 = getelementptr inbounds %struct.line, %struct.line* %93, i32 0, i32 0,\l... !dbg !873\l  %95 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %94,\l... i32 0, i32 2, !dbg !873\l  %96 = load i8*, i8** %95, align 8, !dbg !873, !tbaa !865\l  call void (i32, i32, i8*, ...) @error(i32 noundef %80, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.64, i64 0, i64\l... 0), i8* noundef %85, i64 noundef %90, i32 noundef %92, i8* noundef %96), !dbg\l... !873\l  %97 = load i32, i32* @check_input_order, align 4, !dbg !873, !tbaa !820\l  %98 = icmp eq i32 %97, 1, !dbg !873\l  %99 = zext i1 %98 to i64, !dbg !873\l  %100 = select i1 %98, i32 1, i32 0, !dbg !873\l  %101 = icmp ne i32 %100, 0, !dbg !873\l  br i1 %101, label %102, label %104, !dbg !873\l|{<s0>T|<s1>F}}"];
	Node0x9a6460:s0 -> Node0x9a64b0;
	Node0x9a6460:s1 -> Node0x9a6550;
	Node0x9a64b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%102:\l102:                                              \l  unreachable, !dbg !873\l}"];
	Node0x9a6500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#3d50c370",label="{%103:\l103:                                              \l  br label %105, !dbg !873\l}"];
	Node0x9a6500 -> Node0x9a65a0;
	Node0x9a6550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%104:\l104:                                              \l  br label %105, !dbg !873\l}"];
	Node0x9a6550 -> Node0x9a65a0;
	Node0x9a65a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%105:\l105:                                              \l  br label %136, !dbg !873\l}"];
	Node0x9a65a0 -> Node0x9a6780;
	Node0x9a65f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%106:\l106:                                              \l  %107 = bitcast i32* %9 to i8*, !dbg !874\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %107) #22, !dbg !874\l  call void @llvm.dbg.declare(metadata i32* %9, metadata !807, metadata\l... !DIExpression()), !dbg !874\l  %108 = load i32, i32* @check_input_order, align 4, !dbg !874, !tbaa !820\l  %109 = icmp eq i32 %108, 1, !dbg !874\l  %110 = zext i1 %109 to i64, !dbg !874\l  %111 = select i1 %109, i32 1, i32 0, !dbg !874\l  store i32 %111, i32* %9, align 4, !dbg !874, !tbaa !816\l  %112 = load i32, i32* %9, align 4, !dbg !874, !tbaa !816\l  %113 = load i32, i32* %6, align 4, !dbg !874, !tbaa !816\l  %114 = sub nsw i32 %113, 1, !dbg !874\l  %115 = sext i32 %114 to i64, !dbg !874\l  %116 = getelementptr inbounds [2 x i8*], [2 x i8*]* @g_names, i64 0, i64\l... %115, !dbg !874\l  %117 = load i8*, i8** %116, align 8, !dbg !874, !tbaa !810\l  %118 = load i32, i32* %6, align 4, !dbg !874, !tbaa !816\l  %119 = sub nsw i32 %118, 1, !dbg !874\l  %120 = sext i32 %119 to i64, !dbg !874\l  %121 = getelementptr inbounds [2 x i64], [2 x i64]* @line_no, i64 0, i64\l... %120, !dbg !874\l  %122 = load i64, i64* %121, align 8, !dbg !874, !tbaa !840\l  %123 = load i64, i64* %8, align 8, !dbg !874, !tbaa !840\l  %124 = trunc i64 %123 to i32, !dbg !874\l  %125 = load %struct.line*, %struct.line** %5, align 8, !dbg !874, !tbaa !810\l  %126 = getelementptr inbounds %struct.line, %struct.line* %125, i32 0, i32\l... 0, !dbg !874\l  %127 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %126,\l... i32 0, i32 2, !dbg !874\l  %128 = load i8*, i8** %127, align 8, !dbg !874, !tbaa !865\l  call void (i32, i32, i8*, ...) @error(i32 noundef %112, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.64, i64 0, i64\l... 0), i8* noundef %117, i64 noundef %122, i32 noundef %124, i8* noundef %128),\l... !dbg !874\l  %129 = load i32, i32* %9, align 4, !dbg !874, !tbaa !816\l  %130 = icmp ne i32 %129, 0, !dbg !874\l  br i1 %130, label %131, label %133, !dbg !874\l|{<s0>T|<s1>F}}"];
	Node0x9a65f0:s0 -> Node0x9a6640;
	Node0x9a65f0:s1 -> Node0x9a66e0;
	Node0x9a6640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%131:\l131:                                              \l  unreachable, !dbg !874\l}"];
	Node0x9a6690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#3d50c370",label="{%132:\l132:                                              \l  br label %134, !dbg !874\l}"];
	Node0x9a6690 -> Node0x9a6730;
	Node0x9a66e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%133:\l133:                                              \l  br label %134, !dbg !874\l}"];
	Node0x9a66e0 -> Node0x9a6730;
	Node0x9a6730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%134:\l134:                                              \l  %135 = bitcast i32* %9 to i8*, !dbg !873\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %135) #22, !dbg !873\l  br label %136, !dbg !873\l}"];
	Node0x9a6730 -> Node0x9a6780;
	Node0x9a6780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%136:\l136:                                              \l  %137 = load i32, i32* %6, align 4, !dbg !875, !tbaa !816\l  %138 = sub nsw i32 %137, 1, !dbg !876\l  %139 = sext i32 %138 to i64, !dbg !877\l  %140 = getelementptr inbounds [2 x i8], [2 x i8]* @issued_disorder_warning,\l... i64 0, i64 %139, !dbg !877\l  store i8 1, i8* %140, align 1, !dbg !878, !tbaa !827\l  %141 = bitcast i64* %8 to i8*, !dbg !879\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %141) #22, !dbg !879\l  br label %142, !dbg !880\l}"];
	Node0x9a6780 -> Node0x9a67d0;
	Node0x9a67d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%142:\l142:                                              \l  %143 = bitcast i64* %7 to i8*, !dbg !881\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %143) #22, !dbg !881\l  br label %144, !dbg !882\l}"];
	Node0x9a67d0 -> Node0x9a6820;
	Node0x9a6820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%144:\l144:                                              \l  br label %145, !dbg !883\l}"];
	Node0x9a6820 -> Node0x9a6870;
	Node0x9a6870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%145:\l145:                                              \l  ret void, !dbg !884\l}"];
}
