digraph "CFG for 'add_field' function" {
	label="CFG for 'add_field' function";

	Node0x9b9f30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i64, align 8\l  %5 = alloca %struct.outlist*, align 8\l  store i32 %0, i32* %3, align 4, !tbaa !797\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !794, metadata\l... !DIExpression()), !dbg !801\l  store i64 %1, i64* %4, align 8, !tbaa !802\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !795, metadata\l... !DIExpression()), !dbg !804\l  %6 = bitcast %struct.outlist** %5 to i8*, !dbg !805\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #22, !dbg !805\l  call void @llvm.dbg.declare(metadata %struct.outlist** %5, metadata !796,\l... metadata !DIExpression()), !dbg !806\l  %7 = load i32, i32* %3, align 4, !dbg !807, !tbaa !797\l  %8 = icmp eq i32 %7, 0, !dbg !807\l  br i1 %8, label %15, label %9, !dbg !807\l|{<s0>T|<s1>F}}"];
	Node0x9b9f30:s0 -> Node0x9bcff0;
	Node0x9b9f30:s1 -> Node0x9bcef0;
	Node0x9bcef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%9:\l9:                                                \l  %10 = load i32, i32* %3, align 4, !dbg !807, !tbaa !797\l  %11 = icmp eq i32 %10, 1, !dbg !807\l  br i1 %11, label %15, label %12, !dbg !807\l|{<s0>T|<s1>F}}"];
	Node0x9bcef0:s0 -> Node0x9bcff0;
	Node0x9bcef0:s1 -> Node0x9bcfa0;
	Node0x9bcfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%12:\l12:                                               \l  %13 = load i32, i32* %3, align 4, !dbg !807, !tbaa !797\l  %14 = icmp eq i32 %13, 2, !dbg !807\l  br i1 %14, label %15, label %16, !dbg !810\l|{<s0>T|<s1>F}}"];
	Node0x9bcfa0:s0 -> Node0x9bcff0;
	Node0x9bcfa0:s1 -> Node0x9bd040;
	Node0x9bcff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  br label %17, !dbg !810\l}"];
	Node0x9bcff0 -> Node0x9bd090;
	Node0x9bd040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%16:\l16:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([36 x i8], [36\l... x i8]* @.str.58, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x\l... i8], [14 x i8]* @.str.59, i64 0, i64 0), i32 noundef 821, i8* noundef\l... getelementptr inbounds ([27 x i8], [27 x i8]* @__PRETTY_FUNCTION__.add_field,\l... i64 0, i64 0)) #23, !dbg !807\l  unreachable, !dbg !807\l}"];
	Node0x9bd090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = load i32, i32* %3, align 4, !dbg !811, !tbaa !797\l  %19 = icmp ne i32 %18, 0, !dbg !811\l  br i1 %19, label %23, label %20, !dbg !811\l|{<s0>T|<s1>F}}"];
	Node0x9bd090:s0 -> Node0x9bd130;
	Node0x9bd090:s1 -> Node0x9bd0e0;
	Node0x9bd0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%20:\l20:                                               \l  %21 = load i64, i64* %4, align 8, !dbg !811, !tbaa !802\l  %22 = icmp eq i64 %21, 0, !dbg !811\l  br i1 %22, label %23, label %24, !dbg !814\l|{<s0>T|<s1>F}}"];
	Node0x9bd0e0:s0 -> Node0x9bd130;
	Node0x9bd0e0:s1 -> Node0x9bd180;
	Node0x9bd130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  br label %25, !dbg !814\l}"];
	Node0x9bd130 -> Node0x9bd1d0;
	Node0x9bd180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%24:\l24:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([24 x i8], [24\l... x i8]* @.str.60, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x\l... i8], [14 x i8]* @.str.59, i64 0, i64 0), i32 noundef 822, i8* noundef\l... getelementptr inbounds ([27 x i8], [27 x i8]* @__PRETTY_FUNCTION__.add_field,\l... i64 0, i64 0)) #23, !dbg !811\l  unreachable, !dbg !811\l}"];
	Node0x9bd1d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = call noalias nonnull i8* @xmalloc(i64 noundef 24) #24, !dbg !815\l  %27 = bitcast i8* %26 to %struct.outlist*, !dbg !815\l  store %struct.outlist* %27, %struct.outlist** %5, align 8, !dbg !816, !tbaa\l... !817\l  %28 = load i32, i32* %3, align 4, !dbg !819, !tbaa !797\l  %29 = load %struct.outlist*, %struct.outlist** %5, align 8, !dbg !820, !tbaa\l... !817\l  %30 = getelementptr inbounds %struct.outlist, %struct.outlist* %29, i32 0,\l... i32 0, !dbg !821\l  store i32 %28, i32* %30, align 8, !dbg !822, !tbaa !823\l  %31 = load i64, i64* %4, align 8, !dbg !825, !tbaa !802\l  %32 = load %struct.outlist*, %struct.outlist** %5, align 8, !dbg !826, !tbaa\l... !817\l  %33 = getelementptr inbounds %struct.outlist, %struct.outlist* %32, i32 0,\l... i32 1, !dbg !827\l  store i64 %31, i64* %33, align 8, !dbg !828, !tbaa !829\l  %34 = load %struct.outlist*, %struct.outlist** %5, align 8, !dbg !830, !tbaa\l... !817\l  %35 = getelementptr inbounds %struct.outlist, %struct.outlist* %34, i32 0,\l... i32 2, !dbg !831\l  store %struct.outlist* null, %struct.outlist** %35, align 8, !dbg !832,\l... !tbaa !833\l  %36 = load %struct.outlist*, %struct.outlist** %5, align 8, !dbg !834, !tbaa\l... !817\l  %37 = load %struct.outlist*, %struct.outlist** @outlist_end, align 8, !dbg\l... !835, !tbaa !817\l  %38 = getelementptr inbounds %struct.outlist, %struct.outlist* %37, i32 0,\l... i32 2, !dbg !836\l  store %struct.outlist* %36, %struct.outlist** %38, align 8, !dbg !837, !tbaa\l... !833\l  %39 = load %struct.outlist*, %struct.outlist** %5, align 8, !dbg !838, !tbaa\l... !817\l  store %struct.outlist* %39, %struct.outlist** @outlist_end, align 8, !dbg\l... !839, !tbaa !817\l  %40 = bitcast %struct.outlist** %5 to i8*, !dbg !840\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #22, !dbg !840\l  ret void, !dbg !840\l}"];
}
