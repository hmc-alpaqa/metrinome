digraph "CFG for 'cut_bytes' function" {
	label="CFG for 'cut_bytes' function";

	Node0x106ec60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%1:\l  %2 = alloca %struct._IO_FILE*, align 8\l  %3 = alloca i64, align 8\l  %4 = alloca i8, align 1\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8, !tbaa !806\l  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %2, metadata !801,\l... metadata !DIExpression()), !dbg !810\l  %7 = bitcast i64* %3 to i8*, !dbg !811\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #21, !dbg !811\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !802, metadata\l... !DIExpression()), !dbg !812\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %4) #21, !dbg !813\l  call void @llvm.dbg.declare(metadata i8* %4, metadata !803, metadata\l... !DIExpression()), !dbg !814\l  store i64 0, i64* %3, align 8, !dbg !815, !tbaa !816\l  store i8 0, i8* %4, align 1, !dbg !818, !tbaa !819\l  %8 = load %struct.field_range_pair*, %struct.field_range_pair** @frp, align\l... 8, !dbg !821, !tbaa !806\l  store %struct.field_range_pair* %8, %struct.field_range_pair** @current_rp,\l... align 8, !dbg !822, !tbaa !806\l  br label %9, !dbg !823\l}"];
	Node0x106ec60 -> Node0x106f030;
	Node0x106f030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l9:                                                \l  br label %10, !dbg !823\l}"];
	Node0x106f030 -> Node0x106f080;
	Node0x106f080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l10:                                               \l  %11 = bitcast i32* %5 to i8*, !dbg !824\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #21, !dbg !824\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !804, metadata\l... !DIExpression()), !dbg !825\l  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !826,\l... !tbaa !806\l  %13 = call i32 @getc_unlocked(%struct._IO_FILE* noundef %12), !dbg !826\l  store i32 %13, i32* %5, align 4, !dbg !827, !tbaa !828\l  %14 = load i32, i32* %5, align 4, !dbg !830, !tbaa !828\l  %15 = load i8, i8* @line_delim, align 1, !dbg !832, !tbaa !833\l  %16 = zext i8 %15 to i32, !dbg !832\l  %17 = icmp eq i32 %14, %16, !dbg !834\l  br i1 %17, label %18, label %25, !dbg !835\l|{<s0>T|<s1>F}}"];
	Node0x106f080:s0 -> Node0x106f0d0;
	Node0x106f080:s1 -> Node0x106f1c0;
	Node0x106f0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%18:\l18:                                               \l  %19 = load i32, i32* %5, align 4, !dbg !836, !tbaa !828\l  %20 = call i32 @putchar_unlocked(i32 noundef %19), !dbg !836\l  %21 = icmp slt i32 %20, 0, !dbg !839\l  br i1 %21, label %22, label %23, !dbg !840\l|{<s0>T|<s1>F}}"];
	Node0x106f0d0:s0 -> Node0x106f120;
	Node0x106f0d0:s1 -> Node0x106f170;
	Node0x106f120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%22:\l22:                                               \l  call void @write_error(), !dbg !841\l  br label %23, !dbg !841\l}"];
	Node0x106f120 -> Node0x106f170;
	Node0x106f170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%23:\l23:                                               \l  store i64 0, i64* %3, align 8, !dbg !842, !tbaa !816\l  store i8 0, i8* %4, align 1, !dbg !843, !tbaa !819\l  %24 = load %struct.field_range_pair*, %struct.field_range_pair** @frp, align\l... 8, !dbg !844, !tbaa !806\l  store %struct.field_range_pair* %24, %struct.field_range_pair** @current_rp,\l... align 8, !dbg !845, !tbaa !806\l  br label %69, !dbg !846\l}"];
	Node0x106f170 -> Node0x106f7b0;
	Node0x106f1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%25:\l25:                                               \l  %26 = load i32, i32* %5, align 4, !dbg !847, !tbaa !828\l  %27 = icmp eq i32 %26, -1, !dbg !849\l  br i1 %27, label %28, label %39, !dbg !850\l|{<s0>T|<s1>F}}"];
	Node0x106f1c0:s0 -> Node0x106f210;
	Node0x106f1c0:s1 -> Node0x106f3a0;
	Node0x106f210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%28:\l28:                                               \l  %29 = load i64, i64* %3, align 8, !dbg !851, !tbaa !816\l  %30 = icmp ugt i64 %29, 0, !dbg !854\l  br i1 %30, label %31, label %38, !dbg !855\l|{<s0>T|<s1>F}}"];
	Node0x106f210:s0 -> Node0x106f260;
	Node0x106f210:s1 -> Node0x106f350;
	Node0x106f260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%31:\l31:                                               \l  %32 = load i8, i8* @line_delim, align 1, !dbg !856, !tbaa !833\l  %33 = zext i8 %32 to i32, !dbg !856\l  %34 = call i32 @putchar_unlocked(i32 noundef %33), !dbg !856\l  %35 = icmp slt i32 %34, 0, !dbg !859\l  br i1 %35, label %36, label %37, !dbg !860\l|{<s0>T|<s1>F}}"];
	Node0x106f260:s0 -> Node0x106f2b0;
	Node0x106f260:s1 -> Node0x106f300;
	Node0x106f2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%36:\l36:                                               \l  call void @write_error(), !dbg !861\l  br label %37, !dbg !861\l}"];
	Node0x106f2b0 -> Node0x106f300;
	Node0x106f300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%37:\l37:                                               \l  br label %38, !dbg !862\l}"];
	Node0x106f300 -> Node0x106f350;
	Node0x106f350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%38:\l38:                                               \l  store i32 3, i32* %6, align 4\l  br label %70, !dbg !863\l}"];
	Node0x106f350 -> Node0x106f800;
	Node0x106f3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%39:\l39:                                               \l  call void @next_item(i64* noundef %3), !dbg !864\l  %40 = load i64, i64* %3, align 8, !dbg !866, !tbaa !816\l  %41 = call zeroext i1 @print_kth(i64 noundef %40), !dbg !868\l  br i1 %41, label %42, label %67, !dbg !869\l|{<s0>T|<s1>F}}"];
	Node0x106f3a0:s0 -> Node0x106f3f0;
	Node0x106f3a0:s1 -> Node0x106f710;
	Node0x106f3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%42:\l42:                                               \l  %43 = load i8*, i8** @output_delimiter_string, align 8, !dbg !870, !tbaa !806\l  %44 = icmp ne i8* %43, getelementptr inbounds ([1 x i8], [1 x i8]*\l... @output_delimiter_default, i64 0, i64 0), !dbg !873\l  br i1 %44, label %45, label %61, !dbg !874\l|{<s0>T|<s1>F}}"];
	Node0x106f3f0:s0 -> Node0x106f440;
	Node0x106f3f0:s1 -> Node0x106f620;
	Node0x106f440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%45:\l45:                                               \l  %46 = load i8, i8* %4, align 1, !dbg !875, !tbaa !819, !range !878\l  %47 = trunc i8 %46 to i1, !dbg !875\l  br i1 %47, label %48, label %60, !dbg !879\l|{<s0>T|<s1>F}}"];
	Node0x106f440:s0 -> Node0x106f490;
	Node0x106f440:s1 -> Node0x106f5d0;
	Node0x106f490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%48:\l48:                                               \l  %49 = load i64, i64* %3, align 8, !dbg !880, !tbaa !816\l  %50 = call zeroext i1 @is_range_start_index(i64 noundef %49), !dbg !881\l  br i1 %50, label %51, label %60, !dbg !882\l|{<s0>T|<s1>F}}"];
	Node0x106f490:s0 -> Node0x106f4e0;
	Node0x106f490:s1 -> Node0x106f5d0;
	Node0x106f4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%51:\l51:                                               \l  %52 = load i8*, i8** @output_delimiter_string, align 8, !dbg !883, !tbaa !806\l  %53 = load i64, i64* @output_delimiter_length, align 8, !dbg !883, !tbaa !816\l  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg\l... !883, !tbaa !806\l  %55 = call i64 @fwrite_unlocked(i8* noundef %52, i64 noundef 1, i64 noundef\l... %53, %struct._IO_FILE* noundef %54), !dbg !883\l  %56 = load i64, i64* @output_delimiter_length, align 8, !dbg !886, !tbaa !816\l  %57 = icmp ne i64 %55, %56, !dbg !887\l  br i1 %57, label %58, label %59, !dbg !888\l|{<s0>T|<s1>F}}"];
	Node0x106f4e0:s0 -> Node0x106f530;
	Node0x106f4e0:s1 -> Node0x106f580;
	Node0x106f530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%58:\l58:                                               \l  call void @write_error(), !dbg !889\l  br label %59, !dbg !889\l}"];
	Node0x106f530 -> Node0x106f580;
	Node0x106f580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%59:\l59:                                               \l  br label %60, !dbg !890\l}"];
	Node0x106f580 -> Node0x106f5d0;
	Node0x106f5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%60:\l60:                                               \l  store i8 1, i8* %4, align 1, !dbg !891, !tbaa !819\l  br label %61, !dbg !892\l}"];
	Node0x106f5d0 -> Node0x106f620;
	Node0x106f620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%61:\l61:                                               \l  %62 = load i32, i32* %5, align 4, !dbg !893, !tbaa !828\l  %63 = call i32 @putchar_unlocked(i32 noundef %62), !dbg !893\l  %64 = icmp slt i32 %63, 0, !dbg !895\l  br i1 %64, label %65, label %66, !dbg !896\l|{<s0>T|<s1>F}}"];
	Node0x106f620:s0 -> Node0x106f670;
	Node0x106f620:s1 -> Node0x106f6c0;
	Node0x106f670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%65:\l65:                                               \l  call void @write_error(), !dbg !897\l  br label %66, !dbg !897\l}"];
	Node0x106f670 -> Node0x106f6c0;
	Node0x106f6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%66:\l66:                                               \l  br label %67, !dbg !898\l}"];
	Node0x106f6c0 -> Node0x106f710;
	Node0x106f710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%67:\l67:                                               \l  br label %68\l}"];
	Node0x106f710 -> Node0x106f760;
	Node0x106f760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%68:\l68:                                               \l  br label %69\l}"];
	Node0x106f760 -> Node0x106f7b0;
	Node0x106f7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%69:\l69:                                               \l  store i32 0, i32* %6, align 4, !dbg !899\l  br label %70, !dbg !899\l}"];
	Node0x106f7b0 -> Node0x106f800;
	Node0x106f800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = bitcast i32* %5 to i8*, !dbg !899\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %71) #21, !dbg !899\l  %72 = load i32, i32* %6, align 4\l  switch i32 %72, label %76 [\l    i32 0, label %73\l    i32 3, label %74\l  ]\l|{<s0>def|<s1>0|<s2>3}}"];
	Node0x106f800:s0 -> Node0x106f8f0;
	Node0x106f800:s1 -> Node0x106f850;
	Node0x106f800:s2 -> Node0x106f8a0;
	Node0x106f850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  br label %9, !dbg !823, !llvm.loop !900\l}"];
	Node0x106f850 -> Node0x106f030;
	Node0x106f8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%74:\l74:                                               \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %4) #21, !dbg !902\l  %75 = bitcast i64* %3 to i8*, !dbg !902\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #21, !dbg !902\l  ret void, !dbg !902\l}"];
	Node0x106f8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%76:\l76:                                               \l  unreachable\l}"];
}
