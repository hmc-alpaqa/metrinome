digraph "CFG for 'x2nrealloc' function" {
	label="CFG for 'x2nrealloc' function";

	Node0x7ade50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i64*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  store i8* %0, i8** %4, align 8, !tbaa !619\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !169, metadata\l... !DIExpression()), !dbg !623\l  store i64* %1, i64** %5, align 8, !tbaa !619\l  call void @llvm.dbg.declare(metadata i64** %5, metadata !170, metadata\l... !DIExpression()), !dbg !624\l  store i64 %2, i64* %6, align 8, !tbaa !625\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !171, metadata\l... !DIExpression()), !dbg !627\l  %8 = bitcast i64* %7 to i8*, !dbg !628\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #21, !dbg !628\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !172, metadata\l... !DIExpression()), !dbg !629\l  %9 = load i64*, i64** %5, align 8, !dbg !630, !tbaa !619\l  %10 = load i64, i64* %9, align 8, !dbg !631, !tbaa !625\l  store i64 %10, i64* %7, align 8, !dbg !629, !tbaa !625\l  %11 = load i8*, i8** %4, align 8, !dbg !632, !tbaa !619\l  %12 = icmp ne i8* %11, null, !dbg !632\l  br i1 %12, label %27, label %13, !dbg !634\l|{<s0>T|<s1>F}}"];
	Node0x7ade50:s0 -> Node0x7adf90;
	Node0x7ade50:s1 -> Node0x7adea0;
	Node0x7adea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%13:\l13:                                               \l  %14 = load i64, i64* %7, align 8, !dbg !635, !tbaa !625\l  %15 = icmp ne i64 %14, 0, !dbg !635\l  br i1 %15, label %26, label %16, !dbg !638\l|{<s0>T|<s1>F}}"];
	Node0x7adea0:s0 -> Node0x7adf40;
	Node0x7adea0:s1 -> Node0x7adef0;
	Node0x7adef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%16:\l16:                                               \l  %17 = load i64, i64* %6, align 8, !dbg !639, !tbaa !625\l  %18 = udiv i64 128, %17, !dbg !641\l  store i64 %18, i64* %7, align 8, !dbg !642, !tbaa !625\l  %19 = load i64, i64* %7, align 8, !dbg !643, !tbaa !625\l  %20 = icmp ne i64 %19, 0, !dbg !644\l  %21 = xor i1 %20, true, !dbg !644\l  %22 = zext i1 %21 to i32, !dbg !644\l  %23 = sext i32 %22 to i64, !dbg !644\l  %24 = load i64, i64* %7, align 8, !dbg !645, !tbaa !625\l  %25 = add i64 %24, %23, !dbg !645\l  store i64 %25, i64* %7, align 8, !dbg !645, !tbaa !625\l  br label %26, !dbg !646\l}"];
	Node0x7adef0 -> Node0x7adf40;
	Node0x7adf40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%26:\l26:                                               \l  br label %37, !dbg !647\l}"];
	Node0x7adf40 -> Node0x7ae080;
	Node0x7adf90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%27:\l27:                                               \l  %28 = load i64, i64* %7, align 8, !dbg !648, !tbaa !625\l  %29 = load i64, i64* %7, align 8, !dbg !648, !tbaa !625\l  %30 = lshr i64 %29, 1, !dbg !648\l  %31 = add i64 %30, 1, !dbg !648\l  %32 = call \{ i64, i1 \} @llvm.uadd.with.overflow.i64(i64 %28, i64 %31), !dbg\l... !648\l  %33 = extractvalue \{ i64, i1 \} %32, 1, !dbg !648\l  %34 = extractvalue \{ i64, i1 \} %32, 0, !dbg !648\l  store i64 %34, i64* %7, align 8, !dbg !648\l  br i1 %33, label %35, label %36, !dbg !651\l|{<s0>T|<s1>F}}"];
	Node0x7adf90:s0 -> Node0x7adfe0;
	Node0x7adf90:s1 -> Node0x7ae030;
	Node0x7adfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%35:\l35:                                               \l  call void @xalloc_die() #22, !dbg !652\l  unreachable, !dbg !652\l}"];
	Node0x7ae030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%36:\l36:                                               \l  br label %37\l}"];
	Node0x7ae030 -> Node0x7ae080;
	Node0x7ae080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = load i8*, i8** %4, align 8, !dbg !653, !tbaa !619\l  %39 = load i64, i64* %7, align 8, !dbg !654, !tbaa !625\l  %40 = load i64, i64* %6, align 8, !dbg !655, !tbaa !625\l  %41 = call i8* @xreallocarray(i8* noundef %38, i64 noundef %39, i64 noundef\l... %40) #23, !dbg !656\l  store i8* %41, i8** %4, align 8, !dbg !657, !tbaa !619\l  %42 = load i64, i64* %7, align 8, !dbg !658, !tbaa !625\l  %43 = load i64*, i64** %5, align 8, !dbg !659, !tbaa !619\l  store i64 %42, i64* %43, align 8, !dbg !660, !tbaa !625\l  %44 = load i8*, i8** %4, align 8, !dbg !661, !tbaa !619\l  %45 = bitcast i64* %7 to i8*, !dbg !662\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #21, !dbg !662\l  ret i8* %44, !dbg !663\l}"];
}
