digraph "CFG for 'sha1_finish_ctx' function" {
	label="CFG for 'sha1_finish_ctx' function";

	Node0x17d7240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca %struct.sha1_ctx*, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i64, align 8\l  store %struct.sha1_ctx* %0, %struct.sha1_ctx** %3, align 8, !tbaa !761\l  call void @llvm.dbg.declare(metadata %struct.sha1_ctx** %3, metadata !757,\l... metadata !DIExpression()), !dbg !765\l  store i8* %1, i8** %4, align 8, !tbaa !761\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !758, metadata\l... !DIExpression()), !dbg !766\l  %7 = bitcast i32* %5 to i8*, !dbg !767\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #21, !dbg !767\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !759, metadata\l... !DIExpression()), !dbg !768\l  %8 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !769,\l... !tbaa !761\l  %9 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %8, i32 0,\l... i32 6, !dbg !770\l  %10 = load i32, i32* %9, align 4, !dbg !770, !tbaa !771\l  store i32 %10, i32* %5, align 4, !dbg !768, !tbaa !774\l  %11 = bitcast i64* %6 to i8*, !dbg !775\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #21, !dbg !775\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !760, metadata\l... !DIExpression()), !dbg !776\l  %12 = load i32, i32* %5, align 4, !dbg !777, !tbaa !774\l  %13 = icmp ult i32 %12, 56, !dbg !778\l  %14 = zext i1 %13 to i64, !dbg !779\l  %15 = select i1 %13, i32 16, i32 32, !dbg !779\l  %16 = sext i32 %15 to i64, !dbg !779\l  store i64 %16, i64* %6, align 8, !dbg !776, !tbaa !780\l  %17 = load i32, i32* %5, align 4, !dbg !782, !tbaa !774\l  %18 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !783,\l... !tbaa !761\l  %19 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %18, i32 0,\l... i32 5, !dbg !784\l  %20 = getelementptr inbounds [2 x i32], [2 x i32]* %19, i64 0, i64 0, !dbg\l... !783\l  %21 = load i32, i32* %20, align 4, !dbg !785, !tbaa !774\l  %22 = add i32 %21, %17, !dbg !785\l  store i32 %22, i32* %20, align 4, !dbg !785, !tbaa !774\l  %23 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !786,\l... !tbaa !761\l  %24 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %23, i32 0,\l... i32 5, !dbg !788\l  %25 = getelementptr inbounds [2 x i32], [2 x i32]* %24, i64 0, i64 0, !dbg\l... !786\l  %26 = load i32, i32* %25, align 4, !dbg !786, !tbaa !774\l  %27 = load i32, i32* %5, align 4, !dbg !789, !tbaa !774\l  %28 = icmp ult i32 %26, %27, !dbg !790\l  br i1 %28, label %29, label %35, !dbg !791\l|{<s0>T|<s1>F}}"];
	Node0x17d7240:s0 -> Node0x17d7290;
	Node0x17d7240:s1 -> Node0x17d72e0;
	Node0x17d7290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !792,\l... !tbaa !761\l  %31 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %30, i32 0,\l... i32 5, !dbg !793\l  %32 = getelementptr inbounds [2 x i32], [2 x i32]* %31, i64 0, i64 1, !dbg\l... !792\l  %33 = load i32, i32* %32, align 4, !dbg !794, !tbaa !774\l  %34 = add i32 %33, 1, !dbg !794\l  store i32 %34, i32* %32, align 4, !dbg !794, !tbaa !774\l  br label %35, !dbg !794\l}"];
	Node0x17d7290 -> Node0x17d72e0;
	Node0x17d72e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !795,\l... !tbaa !761\l  %37 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %36, i32 0,\l... i32 5, !dbg !795\l  %38 = getelementptr inbounds [2 x i32], [2 x i32]* %37, i64 0, i64 1, !dbg\l... !795\l  %39 = load i32, i32* %38, align 4, !dbg !795, !tbaa !774\l  %40 = shl i32 %39, 3, !dbg !795\l  %41 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !795,\l... !tbaa !761\l  %42 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %41, i32 0,\l... i32 5, !dbg !795\l  %43 = getelementptr inbounds [2 x i32], [2 x i32]* %42, i64 0, i64 0, !dbg\l... !795\l  %44 = load i32, i32* %43, align 4, !dbg !795, !tbaa !774\l  %45 = lshr i32 %44, 29, !dbg !795\l  %46 = or i32 %40, %45, !dbg !795\l  %47 = call i32 @__bswap_32(i32 noundef %46), !dbg !795\l  %48 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !796,\l... !tbaa !761\l  %49 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %48, i32 0,\l... i32 7, !dbg !797\l  %50 = load i64, i64* %6, align 8, !dbg !798, !tbaa !780\l  %51 = sub i64 %50, 2, !dbg !799\l  %52 = getelementptr inbounds [32 x i32], [32 x i32]* %49, i64 0, i64 %51,\l... !dbg !796\l  store i32 %47, i32* %52, align 4, !dbg !800, !tbaa !774\l  %53 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !801,\l... !tbaa !761\l  %54 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %53, i32 0,\l... i32 5, !dbg !801\l  %55 = getelementptr inbounds [2 x i32], [2 x i32]* %54, i64 0, i64 0, !dbg\l... !801\l  %56 = load i32, i32* %55, align 4, !dbg !801, !tbaa !774\l  %57 = shl i32 %56, 3, !dbg !801\l  %58 = call i32 @__bswap_32(i32 noundef %57), !dbg !801\l  %59 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !802,\l... !tbaa !761\l  %60 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %59, i32 0,\l... i32 7, !dbg !803\l  %61 = load i64, i64* %6, align 8, !dbg !804, !tbaa !780\l  %62 = sub i64 %61, 1, !dbg !805\l  %63 = getelementptr inbounds [32 x i32], [32 x i32]* %60, i64 0, i64 %62,\l... !dbg !802\l  store i32 %58, i32* %63, align 4, !dbg !806, !tbaa !774\l  %64 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !807,\l... !tbaa !761\l  %65 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %64, i32 0,\l... i32 7, !dbg !808\l  %66 = getelementptr inbounds [32 x i32], [32 x i32]* %65, i64 0, i64 0, !dbg\l... !809\l  %67 = bitcast i32* %66 to i8*, !dbg !809\l  %68 = load i32, i32* %5, align 4, !dbg !810, !tbaa !774\l  %69 = zext i32 %68 to i64, !dbg !809\l  %70 = getelementptr inbounds i8, i8* %67, i64 %69, !dbg !809\l  %71 = load i64, i64* %6, align 8, !dbg !811, !tbaa !780\l  %72 = sub i64 %71, 2, !dbg !812\l  %73 = mul i64 %72, 4, !dbg !813\l  %74 = load i32, i32* %5, align 4, !dbg !814, !tbaa !774\l  %75 = zext i32 %74 to i64, !dbg !814\l  %76 = sub i64 %73, %75, !dbg !815\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 16\l... getelementptr inbounds ([64 x i8], [64 x i8]* bitcast (\<\{ i8, [63 x i8] \}\>*\l... @fillbuf to [64 x i8]*), i64 0, i64 0), i64 %76, i1 false), !dbg !816\l  %77 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !817,\l... !tbaa !761\l  %78 = getelementptr inbounds %struct.sha1_ctx, %struct.sha1_ctx* %77, i32 0,\l... i32 7, !dbg !818\l  %79 = getelementptr inbounds [32 x i32], [32 x i32]* %78, i64 0, i64 0, !dbg\l... !817\l  %80 = bitcast i32* %79 to i8*, !dbg !817\l  %81 = load i64, i64* %6, align 8, !dbg !819, !tbaa !780\l  %82 = mul i64 %81, 4, !dbg !820\l  %83 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !821,\l... !tbaa !761\l  call void @sha1_process_block(i8* noundef %80, i64 noundef %82,\l... %struct.sha1_ctx* noundef %83), !dbg !822\l  %84 = load %struct.sha1_ctx*, %struct.sha1_ctx** %3, align 8, !dbg !823,\l... !tbaa !761\l  %85 = load i8*, i8** %4, align 8, !dbg !824, !tbaa !761\l  %86 = call i8* @sha1_read_ctx(%struct.sha1_ctx* noundef %84, i8* noundef\l... %85), !dbg !825\l  %87 = bitcast i64* %6 to i8*, !dbg !826\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87) #21, !dbg !826\l  %88 = bitcast i32* %5 to i8*, !dbg !826\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %88) #21, !dbg !826\l  ret i8* %86, !dbg !827\l}"];
}
