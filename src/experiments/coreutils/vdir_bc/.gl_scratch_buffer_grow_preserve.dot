digraph "CFG for 'gl_scratch_buffer_grow_preserve' function" {
	label="CFG for 'gl_scratch_buffer_grow_preserve' function";

	Node0x1e160a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = alloca i1, align 1\l  %3 = alloca %struct.scratch_buffer*, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i32, align 4\l  store %struct.scratch_buffer* %0, %struct.scratch_buffer** %3, align 8,\l... !tbaa !1897\l  call void @llvm.dbg.declare(metadata %struct.scratch_buffer** %3, metadata\l... !1894, metadata !DIExpression()), !dbg !1901\l  %7 = bitcast i64* %4 to i8*, !dbg !1902\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #27, !dbg !1902\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !1895, metadata\l... !DIExpression()), !dbg !1903\l  %8 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1904, !tbaa !1897\l  %9 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %8, i32 0, i32 1, !dbg !1905\l  %10 = load i64, i64* %9, align 8, !dbg !1905, !tbaa !1906\l  %11 = mul i64 2, %10, !dbg !1909\l  store i64 %11, i64* %4, align 8, !dbg !1903, !tbaa !1910\l  %12 = bitcast i8** %5 to i8*, !dbg !1911\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #27, !dbg !1911\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !1896, metadata\l... !DIExpression()), !dbg !1912\l  %13 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1913, !tbaa !1897\l  %14 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %13, i32 0, i32 0, !dbg !1915\l  %15 = load i8*, i8** %14, align 16, !dbg !1915, !tbaa !1916\l  %16 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1917, !tbaa !1897\l  %17 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %16, i32 0, i32 2, !dbg !1918\l  %18 = bitcast %union.anon.4* %17 to [1024 x i8]*, !dbg !1919\l  %19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %18, i64 0, i64 0,\l... !dbg !1917\l  %20 = icmp eq i8* %15, %19, !dbg !1920\l  br i1 %20, label %21, label %36, !dbg !1921\l|{<s0>T|<s1>F}}"];
	Node0x1e160a0:s0 -> Node0x1e16160;
	Node0x1e160a0:s1 -> Node0x1e16250;
	Node0x1e16160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%21:\l21:                                               \l  %22 = load i64, i64* %4, align 8, !dbg !1922, !tbaa !1910\l  %23 = call noalias i8* @malloc(i64 noundef %22) #27, !dbg !1924\l  store i8* %23, i8** %5, align 8, !dbg !1925, !tbaa !1897\l  %24 = load i8*, i8** %5, align 8, !dbg !1926, !tbaa !1897\l  %25 = icmp eq i8* %24, null, !dbg !1928\l  br i1 %25, label %26, label %27, !dbg !1929\l|{<s0>T|<s1>F}}"];
	Node0x1e16160:s0 -> Node0x1e161b0;
	Node0x1e16160:s1 -> Node0x1e16200;
	Node0x1e161b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%26:\l26:                                               \l  store i1 false, i1* %2, align 1, !dbg !1930\l  store i32 1, i32* %6, align 4\l  br label %74, !dbg !1930\l}"];
	Node0x1e161b0 -> Node0x1e16480;
	Node0x1e16200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%27:\l27:                                               \l  %28 = load i8*, i8** %5, align 8, !dbg !1931, !tbaa !1897\l  %29 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1932, !tbaa !1897\l  %30 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %29, i32 0, i32 2, !dbg !1933\l  %31 = bitcast %union.anon.4* %30 to [1024 x i8]*, !dbg !1934\l  %32 = getelementptr inbounds [1024 x i8], [1024 x i8]* %31, i64 0, i64 0,\l... !dbg !1935\l  %33 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1936, !tbaa !1897\l  %34 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %33, i32 0, i32 1, !dbg !1937\l  %35 = load i64, i64* %34, align 8, !dbg !1937, !tbaa !1906\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 16 %32, i64\l... %35, i1 false), !dbg !1935\l  br label %67, !dbg !1938\l}"];
	Node0x1e16200 -> Node0x1e16430;
	Node0x1e16250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%36:\l36:                                               \l  %37 = load i64, i64* %4, align 8, !dbg !1939, !tbaa !1910\l  %38 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1939, !tbaa !1897\l  %39 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %38, i32 0, i32 1, !dbg !1939\l  %40 = load i64, i64* %39, align 8, !dbg !1939, !tbaa !1906\l  %41 = icmp uge i64 %37, %40, !dbg !1939\l  %42 = zext i1 %41 to i32, !dbg !1939\l  %43 = sext i32 %42 to i64, !dbg !1939\l  %44 = call i64 @llvm.expect.i64(i64 %43, i64 1), !dbg !1939\l  %45 = icmp ne i64 %44, 0, !dbg !1939\l  br i1 %45, label %46, label %52, !dbg !1942\l|{<s0>T|<s1>F}}"];
	Node0x1e16250:s0 -> Node0x1e162a0;
	Node0x1e16250:s1 -> Node0x1e162f0;
	Node0x1e162a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%46:\l46:                                               \l  %47 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1943, !tbaa !1897\l  %48 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %47, i32 0, i32 0, !dbg !1944\l  %49 = load i8*, i8** %48, align 16, !dbg !1944, !tbaa !1916\l  %50 = load i64, i64* %4, align 8, !dbg !1945, !tbaa !1910\l  %51 = call i8* @realloc(i8* noundef %49, i64 noundef %50) #27, !dbg !1946\l  store i8* %51, i8** %5, align 8, !dbg !1947, !tbaa !1897\l  br label %54, !dbg !1948\l}"];
	Node0x1e162a0 -> Node0x1e16340;
	Node0x1e162f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%52:\l52:                                               \l  %53 = call i32* @__errno_location() #28, !dbg !1949\l  store i32 12, i32* %53, align 4, !dbg !1949, !tbaa !1951\l  store i8* null, i8** %5, align 8, !dbg !1953, !tbaa !1897\l  br label %54\l}"];
	Node0x1e162f0 -> Node0x1e16340;
	Node0x1e16340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%54:\l54:                                               \l  %55 = load i8*, i8** %5, align 8, !dbg !1954, !tbaa !1897\l  %56 = icmp eq i8* %55, null, !dbg !1954\l  %57 = zext i1 %56 to i32, !dbg !1954\l  %58 = sext i32 %57 to i64, !dbg !1954\l  %59 = call i64 @llvm.expect.i64(i64 %58, i64 0), !dbg !1954\l  %60 = icmp ne i64 %59, 0, !dbg !1954\l  br i1 %60, label %61, label %66, !dbg !1956\l|{<s0>T|<s1>F}}"];
	Node0x1e16340:s0 -> Node0x1e16390;
	Node0x1e16340:s1 -> Node0x1e163e0;
	Node0x1e16390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%61:\l61:                                               \l  %62 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1957, !tbaa !1897\l  %63 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %62, i32 0, i32 0, !dbg !1959\l  %64 = load i8*, i8** %63, align 16, !dbg !1959, !tbaa !1916\l  call void @free(i8* noundef %64) #27, !dbg !1960\l  %65 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1961, !tbaa !1897\l  call void @scratch_buffer_init.324(%struct.scratch_buffer* noundef %65),\l... !dbg !1962\l  store i1 false, i1* %2, align 1, !dbg !1963\l  store i32 1, i32* %6, align 4\l  br label %74, !dbg !1963\l}"];
	Node0x1e16390 -> Node0x1e16480;
	Node0x1e163e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%66:\l66:                                               \l  br label %67\l}"];
	Node0x1e163e0 -> Node0x1e16430;
	Node0x1e16430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%67:\l67:                                               \l  %68 = load i8*, i8** %5, align 8, !dbg !1964, !tbaa !1897\l  %69 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1965, !tbaa !1897\l  %70 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %69, i32 0, i32 0, !dbg !1966\l  store i8* %68, i8** %70, align 16, !dbg !1967, !tbaa !1916\l  %71 = load i64, i64* %4, align 8, !dbg !1968, !tbaa !1910\l  %72 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !1969, !tbaa !1897\l  %73 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %72, i32 0, i32 1, !dbg !1970\l  store i64 %71, i64* %73, align 8, !dbg !1971, !tbaa !1906\l  store i1 true, i1* %2, align 1, !dbg !1972\l  store i32 1, i32* %6, align 4\l  br label %74, !dbg !1972\l}"];
	Node0x1e16430 -> Node0x1e16480;
	Node0x1e16480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = bitcast i8** %5 to i8*, !dbg !1973\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #27, !dbg !1973\l  %76 = bitcast i64* %4 to i8*, !dbg !1973\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #27, !dbg !1973\l  %77 = load i1, i1* %2, align 1, !dbg !1973\l  ret i1 %77, !dbg !1973\l}"];
}
