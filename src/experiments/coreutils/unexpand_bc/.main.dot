digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x78ca20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i8**, align 8\l  %6 = alloca i8, align 1\l  %7 = alloca i64, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i8, align 1\l  store i32 0, i32* %3, align 4\l  store i32 %0, i32* %4, align 4, !tbaa !763\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !757, metadata\l... !DIExpression()), !dbg !767\l  store i8** %1, i8*** %5, align 8, !tbaa !768\l  call void @llvm.dbg.declare(metadata i8*** %5, metadata !758, metadata\l... !DIExpression()), !dbg !770\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %6) #21, !dbg !771\l  call void @llvm.dbg.declare(metadata i8* %6, metadata !759, metadata\l... !DIExpression()), !dbg !772\l  store i8 0, i8* %6, align 1, !dbg !772, !tbaa !773\l  %10 = bitcast i64* %7 to i8*, !dbg !775\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #21, !dbg !775\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !760, metadata\l... !DIExpression()), !dbg !776\l  %11 = bitcast i32* %8 to i8*, !dbg !777\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #21, !dbg !777\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !761, metadata\l... !DIExpression()), !dbg !778\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %9) #21, !dbg !779\l  call void @llvm.dbg.declare(metadata i8* %9, metadata !762, metadata\l... !DIExpression()), !dbg !780\l  store i8 0, i8* %9, align 1, !dbg !780, !tbaa !773\l  %12 = load i8**, i8*** %5, align 8, !dbg !781, !tbaa !768\l  %13 = getelementptr inbounds i8*, i8** %12, i64 0, !dbg !781\l  %14 = load i8*, i8** %13, align 8, !dbg !781, !tbaa !768\l  call void @set_program_name(i8* noundef %14), !dbg !782\l  %15 = call i8* @setlocale(i32 noundef 6, i8* noundef getelementptr inbounds\l... ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0)) #21, !dbg !783\l  %16 = call i32 @atexit(void ()* noundef @close_stdout) #21, !dbg !784\l  br label %17, !dbg !785\l}"];
	Node0x78ca20 -> Node0x7828d0;
	Node0x7828d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = load i32, i32* %4, align 4, !dbg !786, !tbaa !763\l  %19 = load i8**, i8*** %5, align 8, !dbg !787, !tbaa !768\l  %20 = call i32 @getopt_long(i32 noundef %18, i8** noundef %19, i8* noundef\l... getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0),\l... %struct.option* noundef getelementptr inbounds ([6 x %struct.option], [6 x\l... %struct.option]* @longopts, i64 0, i64 0), i32* noundef null) #21, !dbg !788\l  store i32 %20, i32* %8, align 4, !dbg !789, !tbaa !763\l  %21 = icmp ne i32 %20, -1, !dbg !790\l  br i1 %21, label %22, label %72, !dbg !785\l|{<s0>T|<s1>F}}"];
	Node0x7828d0:s0 -> Node0x782920;
	Node0x7828d0:s1 -> Node0x782f60;
	Node0x782920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = load i32, i32* %8, align 4, !dbg !791, !tbaa !763\l  switch i32 %23, label %40 [\l    i32 63, label %24\l    i32 97, label %25\l    i32 116, label %26\l    i32 128, label %28\l    i32 44, label %29\l    i32 -130, label %35\l    i32 -131, label %36\l  ], !dbg !793\l|{<s0>def|<s1>63|<s2>97|<s3>116|<s4>128|<s5>44|<s6>-130|<s7>-131}}"];
	Node0x782920:s0 -> Node0x782c40;
	Node0x782920:s1 -> Node0x782970;
	Node0x782920:s2 -> Node0x7829c0;
	Node0x782920:s3 -> Node0x782a10;
	Node0x782920:s4 -> Node0x782a60;
	Node0x782920:s5 -> Node0x782ab0;
	Node0x782920:s6 -> Node0x782ba0;
	Node0x782920:s7 -> Node0x782bf0;
	Node0x782970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%24:\l24:                                               \l  call void @usage(i32 noundef 1) #22, !dbg !794\l  unreachable, !dbg !794\l}"];
	Node0x7829c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%25:\l25:                                               \l  store i8 1, i8* @convert_entire_line, align 1, !dbg !796, !tbaa !773\l  br label %71, !dbg !797\l}"];
	Node0x7829c0 -> Node0x782f10;
	Node0x782a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%26:\l26:                                               \l  store i8 1, i8* @convert_entire_line, align 1, !dbg !798, !tbaa !773\l  %27 = load i8*, i8** @optarg, align 8, !dbg !799, !tbaa !768\l  call void @parse_tab_stops(i8* noundef %27), !dbg !800\l  br label %71, !dbg !801\l}"];
	Node0x782a10 -> Node0x782f10;
	Node0x782a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%28:\l28:                                               \l  store i8 1, i8* %9, align 1, !dbg !802, !tbaa !773\l  br label %71, !dbg !803\l}"];
	Node0x782a60 -> Node0x782f10;
	Node0x782ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%29:\l29:                                               \l  %30 = load i8, i8* %6, align 1, !dbg !804, !tbaa !773, !range !806\l  %31 = trunc i8 %30 to i1, !dbg !804\l  br i1 %31, label %32, label %34, !dbg !807\l|{<s0>T|<s1>F}}"];
	Node0x782ab0:s0 -> Node0x782b00;
	Node0x782ab0:s1 -> Node0x782b50;
	Node0x782b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%32:\l32:                                               \l  %33 = load i64, i64* %7, align 8, !dbg !808, !tbaa !809\l  call void @add_tab_stop(i64 noundef %33), !dbg !811\l  br label %34, !dbg !811\l}"];
	Node0x782b00 -> Node0x782b50;
	Node0x782b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%34:\l34:                                               \l  store i8 0, i8* %6, align 1, !dbg !812, !tbaa !773\l  br label %71, !dbg !813\l}"];
	Node0x782b50 -> Node0x782f10;
	Node0x782ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%35:\l35:                                               \l  call void @usage(i32 noundef 0) #22, !dbg !814\l  unreachable, !dbg !814\l}"];
	Node0x782bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%36:\l36:                                               \l  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg\l... !815, !tbaa !768\l  %38 = load i8*, i8** @Version, align 8, !dbg !815, !tbaa !768\l  %39 = call i8* @proper_name_lite(i8* noundef getelementptr inbounds ([16 x\l... i8], [16 x i8]* @.str.10, i64 0, i64 0), i8* noundef getelementptr inbounds\l... ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0)), !dbg !815\l  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...)\l... @version_etc(%struct._IO_FILE* noundef %37, i8* noundef getelementptr\l... inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8* noundef\l... getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i8*\l... noundef %38, i8* noundef %39, i8* noundef null), !dbg !815\l  call void @exit(i32 noundef 0) #23, !dbg !815\l  unreachable, !dbg !815\l}"];
	Node0x782c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%40:\l40:                                               \l  %41 = load i8, i8* %6, align 1, !dbg !816, !tbaa !773, !range !806\l  %42 = trunc i8 %41 to i1, !dbg !816\l  br i1 %42, label %44, label %43, !dbg !818\l|{<s0>T|<s1>F}}"];
	Node0x782c40:s0 -> Node0x782ce0;
	Node0x782c40:s1 -> Node0x782c90;
	Node0x782c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%43:\l43:                                               \l  store i64 0, i64* %7, align 8, !dbg !819, !tbaa !809\l  store i8 1, i8* %6, align 1, !dbg !821, !tbaa !773\l  br label %44, !dbg !822\l}"];
	Node0x782c90 -> Node0x782ce0;
	Node0x782ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%44:\l44:                                               \l  %45 = icmp eq i64* %7, null, !dbg !823\l  %46 = zext i1 %45 to i32, !dbg !823\l  %47 = load i64, i64* %7, align 8, !dbg !823, !tbaa !809\l  %48 = icmp ult i64 1844674407370955161, %47, !dbg !823\l  br i1 %48, label %58, label %49, !dbg !823\l|{<s0>T|<s1>F}}"];
	Node0x782ce0:s0 -> Node0x782d80;
	Node0x782ce0:s1 -> Node0x782d30;
	Node0x782d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%49:\l49:                                               \l  %50 = load i64, i64* %7, align 8, !dbg !823, !tbaa !809\l  %51 = mul i64 %50, 10, !dbg !823\l  %52 = load i32, i32* %8, align 4, !dbg !823, !tbaa !763\l  %53 = sub nsw i32 %52, 48, !dbg !823\l  %54 = sext i32 %53 to i64, !dbg !823\l  %55 = add i64 %51, %54, !dbg !823\l  %56 = load i64, i64* %7, align 8, !dbg !823, !tbaa !809\l  %57 = icmp ult i64 %55, %56, !dbg !823\l  br i1 %57, label %58, label %59, !dbg !823\l|{<s0>T|<s1>F}}"];
	Node0x782d30:s0 -> Node0x782d80;
	Node0x782d30:s1 -> Node0x782dd0;
	Node0x782d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%58:\l58:                                               \l  br label %66, !dbg !823\l}"];
	Node0x782d80 -> Node0x782e20;
	Node0x782dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%59:\l59:                                               \l  %60 = load i64, i64* %7, align 8, !dbg !823, !tbaa !809\l  %61 = mul i64 %60, 10, !dbg !823\l  %62 = load i32, i32* %8, align 4, !dbg !823, !tbaa !763\l  %63 = sub nsw i32 %62, 48, !dbg !823\l  %64 = sext i32 %63 to i64, !dbg !823\l  %65 = add i64 %61, %64, !dbg !823\l  store i64 %65, i64* %7, align 8, !dbg !823, !tbaa !809\l  br label %66, !dbg !823\l}"];
	Node0x782dd0 -> Node0x782e20;
	Node0x782e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%66:\l66:                                               \l  %67 = phi i32 [ 0, %58 ], [ 1, %59 ], !dbg !823\l  %68 = icmp ne i32 %67, 0, !dbg !823\l  br i1 %68, label %70, label %69, !dbg !825\l|{<s0>T|<s1>F}}"];
	Node0x782e20:s0 -> Node0x782ec0;
	Node0x782e20:s1 -> Node0x782e70;
	Node0x782e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%69:\l69:                                               \l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64\l... 0)), !dbg !826\l  unreachable, !dbg !826\l}"];
	Node0x782ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%70:\l70:                                               \l  br label %71, !dbg !827\l}"];
	Node0x782ec0 -> Node0x782f10;
	Node0x782f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  br label %17, !dbg !785, !llvm.loop !828\l}"];
	Node0x782f10 -> Node0x7828d0;
	Node0x782f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%72:\l72:                                               \l  %73 = load i8, i8* %9, align 1, !dbg !832, !tbaa !773, !range !806\l  %74 = trunc i8 %73 to i1, !dbg !832\l  br i1 %74, label %75, label %76, !dbg !834\l|{<s0>T|<s1>F}}"];
	Node0x782f60:s0 -> Node0x782fb0;
	Node0x782f60:s1 -> Node0x783000;
	Node0x782fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%75:\l75:                                               \l  store i8 0, i8* @convert_entire_line, align 1, !dbg !835, !tbaa !773\l  br label %76, !dbg !836\l}"];
	Node0x782fb0 -> Node0x783000;
	Node0x783000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%76:\l76:                                               \l  %77 = load i8, i8* %6, align 1, !dbg !837, !tbaa !773, !range !806\l  %78 = trunc i8 %77 to i1, !dbg !837\l  br i1 %78, label %79, label %81, !dbg !839\l|{<s0>T|<s1>F}}"];
	Node0x783000:s0 -> Node0x783050;
	Node0x783000:s1 -> Node0x7830a0;
	Node0x783050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%79:\l79:                                               \l  %80 = load i64, i64* %7, align 8, !dbg !840, !tbaa !809\l  call void @add_tab_stop(i64 noundef %80), !dbg !841\l  br label %81, !dbg !841\l}"];
	Node0x783050 -> Node0x7830a0;
	Node0x7830a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%81:\l81:                                               \l  call void @finalize_tab_stops(), !dbg !842\l  %82 = load i32, i32* @optind, align 4, !dbg !843, !tbaa !763\l  %83 = load i32, i32* %4, align 4, !dbg !844, !tbaa !763\l  %84 = icmp slt i32 %82, %83, !dbg !845\l  br i1 %84, label %85, label %90, !dbg !846\l|{<s0>T|<s1>F}}"];
	Node0x7830a0:s0 -> Node0x7830f0;
	Node0x7830a0:s1 -> Node0x783140;
	Node0x7830f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%85:\l85:                                               \l  %86 = load i8**, i8*** %5, align 8, !dbg !847, !tbaa !768\l  %87 = load i32, i32* @optind, align 4, !dbg !848, !tbaa !763\l  %88 = sext i32 %87 to i64, !dbg !847\l  %89 = getelementptr inbounds i8*, i8** %86, i64 %88, !dbg !847\l  br label %91, !dbg !846\l}"];
	Node0x7830f0 -> Node0x783190;
	Node0x783140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%90:\l90:                                               \l  br label %91, !dbg !846\l}"];
	Node0x783140 -> Node0x783190;
	Node0x783190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%91:\l91:                                               \l  %92 = phi i8** [ %89, %85 ], [ null, %90 ], !dbg !846\l  call void @set_file_list(i8** noundef %92), !dbg !849\l  call void @unexpand(), !dbg !850\l  call void @cleanup_file_list_stdin(), !dbg !851\l  %93 = load i32, i32* @exit_status, align 4, !dbg !852, !tbaa !763\l  store i32 %93, i32* %3, align 4, !dbg !853\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #21, !dbg !854\l  %94 = bitcast i32* %8 to i8*, !dbg !854\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %94) #21, !dbg !854\l  %95 = bitcast i64* %7 to i8*, !dbg !854\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %95) #21, !dbg !854\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #21, !dbg !854\l  %96 = load i32, i32* %3, align 4, !dbg !854\l  ret i32 %96, !dbg !854\l}"];
}
