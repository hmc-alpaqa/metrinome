digraph "CFG for 'check_order' function" {
	label="CFG for 'check_order' function";

	Node0x250f1e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca %struct.linebuffer*, align 8\l  %5 = alloca %struct.linebuffer*, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  store %struct.linebuffer* %0, %struct.linebuffer** %4, align 8, !tbaa !742\l  call void @llvm.dbg.declare(metadata %struct.linebuffer** %4, metadata !729,\l... metadata !DIExpression()), !dbg !746\l  store %struct.linebuffer* %1, %struct.linebuffer** %5, align 8, !tbaa !742\l  call void @llvm.dbg.declare(metadata %struct.linebuffer** %5, metadata !730,\l... metadata !DIExpression()), !dbg !747\l  store i32 %2, i32* %6, align 4, !tbaa !748\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !731, metadata\l... !DIExpression()), !dbg !750\l  %9 = load i32, i32* @check_input_order, align 4, !dbg !751, !tbaa !752\l  %10 = icmp ne i32 %9, 2, !dbg !753\l  br i1 %10, label %11, label %107, !dbg !754\l|{<s0>T|<s1>F}}"];
	Node0x250f1e0:s0 -> Node0x250f470;
	Node0x250f1e0:s1 -> Node0x250fb00;
	Node0x250f470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%11:\l11:                                               \l  %12 = load i32, i32* @check_input_order, align 4, !dbg !755, !tbaa !752\l  %13 = icmp eq i32 %12, 1, !dbg !756\l  br i1 %13, label %17, label %14, !dbg !757\l|{<s0>T|<s1>F}}"];
	Node0x250f470:s0 -> Node0x250f510;
	Node0x250f470:s1 -> Node0x250f4c0;
	Node0x250f4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%14:\l14:                                               \l  %15 = load i8, i8* @seen_unpairable, align 1, !dbg !758, !tbaa !759, !range\l... !761\l  %16 = trunc i8 %15 to i1, !dbg !758\l  br i1 %16, label %17, label %107, !dbg !762\l|{<s0>T|<s1>F}}"];
	Node0x250f4c0:s0 -> Node0x250f510;
	Node0x250f4c0:s1 -> Node0x250fb00;
	Node0x250f510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%17:\l17:                                               \l  %18 = load i32, i32* %6, align 4, !dbg !763, !tbaa !748\l  %19 = sub nsw i32 %18, 1, !dbg !764\l  %20 = sext i32 %19 to i64, !dbg !765\l  %21 = getelementptr inbounds [2 x i8], [2 x i8]* @issued_disorder_warning,\l... i64 0, i64 %20, !dbg !765\l  %22 = load i8, i8* %21, align 1, !dbg !765, !tbaa !759, !range !761\l  %23 = trunc i8 %22 to i1, !dbg !765\l  br i1 %23, label %106, label %24, !dbg !766\l|{<s0>T|<s1>F}}"];
	Node0x250f510:s0 -> Node0x250fab0;
	Node0x250f510:s1 -> Node0x250f560;
	Node0x250f560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%24:\l24:                                               \l  %25 = bitcast i32* %7 to i8*, !dbg !767\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #22, !dbg !767\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !732, metadata\l... !DIExpression()), !dbg !768\l  %26 = load i8, i8* @hard_LC_COLLATE, align 1, !dbg !769, !tbaa !759, !range\l... !761\l  %27 = trunc i8 %26 to i1, !dbg !769\l  br i1 %27, label %28, label %44, !dbg !771\l|{<s0>T|<s1>F}}"];
	Node0x250f560:s0 -> Node0x250f5b0;
	Node0x250f560:s1 -> Node0x250f600;
	Node0x250f5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%28:\l28:                                               \l  %29 = load %struct.linebuffer*, %struct.linebuffer** %4, align 8, !dbg !772,\l... !tbaa !742\l  %30 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %29,\l... i32 0, i32 2, !dbg !773\l  %31 = load i8*, i8** %30, align 8, !dbg !773, !tbaa !774\l  %32 = load %struct.linebuffer*, %struct.linebuffer** %4, align 8, !dbg !777,\l... !tbaa !742\l  %33 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %32,\l... i32 0, i32 1, !dbg !778\l  %34 = load i64, i64* %33, align 8, !dbg !778, !tbaa !779\l  %35 = sub nsw i64 %34, 1, !dbg !780\l  %36 = load %struct.linebuffer*, %struct.linebuffer** %5, align 8, !dbg !781,\l... !tbaa !742\l  %37 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %36,\l... i32 0, i32 2, !dbg !782\l  %38 = load i8*, i8** %37, align 8, !dbg !782, !tbaa !774\l  %39 = load %struct.linebuffer*, %struct.linebuffer** %5, align 8, !dbg !783,\l... !tbaa !742\l  %40 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %39,\l... i32 0, i32 1, !dbg !784\l  %41 = load i64, i64* %40, align 8, !dbg !784, !tbaa !779\l  %42 = sub nsw i64 %41, 1, !dbg !785\l  %43 = call i32 @xmemcoll(i8* noundef %31, i64 noundef %35, i8* noundef %38,\l... i64 noundef %42), !dbg !786\l  store i32 %43, i32* %7, align 4, !dbg !787, !tbaa !748\l  br label %60, !dbg !788\l}"];
	Node0x250f5b0 -> Node0x250f650;
	Node0x250f600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%44:\l44:                                               \l  %45 = load %struct.linebuffer*, %struct.linebuffer** %4, align 8, !dbg !789,\l... !tbaa !742\l  %46 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %45,\l... i32 0, i32 2, !dbg !790\l  %47 = load i8*, i8** %46, align 8, !dbg !790, !tbaa !774\l  %48 = load %struct.linebuffer*, %struct.linebuffer** %4, align 8, !dbg !791,\l... !tbaa !742\l  %49 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %48,\l... i32 0, i32 1, !dbg !792\l  %50 = load i64, i64* %49, align 8, !dbg !792, !tbaa !779\l  %51 = sub nsw i64 %50, 1, !dbg !793\l  %52 = load %struct.linebuffer*, %struct.linebuffer** %5, align 8, !dbg !794,\l... !tbaa !742\l  %53 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %52,\l... i32 0, i32 2, !dbg !795\l  %54 = load i8*, i8** %53, align 8, !dbg !795, !tbaa !774\l  %55 = load %struct.linebuffer*, %struct.linebuffer** %5, align 8, !dbg !796,\l... !tbaa !742\l  %56 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %55,\l... i32 0, i32 1, !dbg !797\l  %57 = load i64, i64* %56, align 8, !dbg !797, !tbaa !779\l  %58 = sub nsw i64 %57, 1, !dbg !798\l  %59 = call i32 @memcmp2(i8* noundef %47, i64 noundef %51, i8* noundef %54,\l... i64 noundef %58) #23, !dbg !799\l  store i32 %59, i32* %7, align 4, !dbg !800, !tbaa !748\l  br label %60\l}"];
	Node0x250f600 -> Node0x250f650;
	Node0x250f650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%60:\l60:                                               \l  %61 = load i32, i32* %7, align 4, !dbg !801, !tbaa !748\l  %62 = icmp slt i32 0, %61, !dbg !802\l  br i1 %62, label %63, label %104, !dbg !803\l|{<s0>T|<s1>F}}"];
	Node0x250f650:s0 -> Node0x250f6a0;
	Node0x250f650:s1 -> Node0x250fa60;
	Node0x250f6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%63:\l63:                                               \l  %64 = load i32, i32* @check_input_order, align 4, !dbg !804, !tbaa !752\l  %65 = icmp eq i32 %64, 1, !dbg !804\l  %66 = zext i1 %65 to i64, !dbg !804\l  %67 = select i1 %65, i32 1, i32 0, !dbg !804\l  %68 = call i1 @llvm.is.constant.i32(i32 %67), !dbg !804\l  br i1 %68, label %69, label %84, !dbg !804\l|{<s0>T|<s1>F}}"];
	Node0x250f6a0:s0 -> Node0x250f6f0;
	Node0x250f6a0:s1 -> Node0x250f880;
	Node0x250f6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%69:\l69:                                               \l  %70 = load i32, i32* @check_input_order, align 4, !dbg !804, !tbaa !752\l  %71 = icmp eq i32 %70, 1, !dbg !804\l  %72 = zext i1 %71 to i64, !dbg !804\l  %73 = select i1 %71, i32 1, i32 0, !dbg !804\l  %74 = load i32, i32* %6, align 4, !dbg !804, !tbaa !748\l  call void (i32, i32, i8*, ...) @error(i32 noundef %73, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.56, i64 0, i64\l... 0), i32 noundef %74), !dbg !804\l  %75 = load i32, i32* @check_input_order, align 4, !dbg !804, !tbaa !752\l  %76 = icmp eq i32 %75, 1, !dbg !804\l  %77 = zext i1 %76 to i64, !dbg !804\l  %78 = select i1 %76, i32 1, i32 0, !dbg !804\l  %79 = icmp ne i32 %78, 0, !dbg !804\l  br i1 %79, label %80, label %82, !dbg !804\l|{<s0>T|<s1>F}}"];
	Node0x250f6f0:s0 -> Node0x250f740;
	Node0x250f6f0:s1 -> Node0x250f7e0;
	Node0x250f740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%80:\l80:                                               \l  unreachable, !dbg !804\l}"];
	Node0x250f790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#3d50c370",label="{%81:\l81:                                               \l  br label %83, !dbg !804\l}"];
	Node0x250f790 -> Node0x250f830;
	Node0x250f7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%82:\l82:                                               \l  br label %83, !dbg !804\l}"];
	Node0x250f7e0 -> Node0x250f830;
	Node0x250f830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%83:\l83:                                               \l  br label %99, !dbg !804\l}"];
	Node0x250f830 -> Node0x250fa10;
	Node0x250f880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%84:\l84:                                               \l  %85 = bitcast i32* %8 to i8*, !dbg !805\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %85) #22, !dbg !805\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !737, metadata\l... !DIExpression()), !dbg !805\l  %86 = load i32, i32* @check_input_order, align 4, !dbg !805, !tbaa !752\l  %87 = icmp eq i32 %86, 1, !dbg !805\l  %88 = zext i1 %87 to i64, !dbg !805\l  %89 = select i1 %87, i32 1, i32 0, !dbg !805\l  store i32 %89, i32* %8, align 4, !dbg !805, !tbaa !748\l  %90 = load i32, i32* %8, align 4, !dbg !805, !tbaa !748\l  %91 = load i32, i32* %6, align 4, !dbg !805, !tbaa !748\l  call void (i32, i32, i8*, ...) @error(i32 noundef %90, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.56, i64 0, i64\l... 0), i32 noundef %91), !dbg !805\l  %92 = load i32, i32* %8, align 4, !dbg !805, !tbaa !748\l  %93 = icmp ne i32 %92, 0, !dbg !805\l  br i1 %93, label %94, label %96, !dbg !805\l|{<s0>T|<s1>F}}"];
	Node0x250f880:s0 -> Node0x250f8d0;
	Node0x250f880:s1 -> Node0x250f970;
	Node0x250f8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%94:\l94:                                               \l  unreachable, !dbg !805\l}"];
	Node0x250f920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#3d50c370",label="{%95:\l95:                                               \l  br label %97, !dbg !805\l}"];
	Node0x250f920 -> Node0x250f9c0;
	Node0x250f970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%96:\l96:                                               \l  br label %97, !dbg !805\l}"];
	Node0x250f970 -> Node0x250f9c0;
	Node0x250f9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%97:\l97:                                               \l  %98 = bitcast i32* %8 to i8*, !dbg !804\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %98) #22, !dbg !804\l  br label %99, !dbg !804\l}"];
	Node0x250f9c0 -> Node0x250fa10;
	Node0x250fa10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%99:\l99:                                               \l  %100 = load i32, i32* %6, align 4, !dbg !806, !tbaa !748\l  %101 = sub nsw i32 %100, 1, !dbg !807\l  %102 = sext i32 %101 to i64, !dbg !808\l  %103 = getelementptr inbounds [2 x i8], [2 x i8]* @issued_disorder_warning,\l... i64 0, i64 %102, !dbg !808\l  store i8 1, i8* %103, align 1, !dbg !809, !tbaa !759\l  br label %104, !dbg !810\l}"];
	Node0x250fa10 -> Node0x250fa60;
	Node0x250fa60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%104:\l104:                                              \l  %105 = bitcast i32* %7 to i8*, !dbg !811\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %105) #22, !dbg !811\l  br label %106, !dbg !812\l}"];
	Node0x250fa60 -> Node0x250fab0;
	Node0x250fab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%106:\l106:                                              \l  br label %107, !dbg !813\l}"];
	Node0x250fab0 -> Node0x250fb00;
	Node0x250fb00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  ret void, !dbg !814\l}"];
}
