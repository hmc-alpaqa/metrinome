digraph "CFG for 'init_store_cols' function" {
	label="CFG for 'init_store_cols' function";

	Node0x1618ad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%0:\l  %1 = alloca i32, align 4\l  %2 = alloca i32, align 4\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = bitcast i32* %1 to i8*, !dbg !1127\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #23, !dbg !1127\l  call void @llvm.dbg.declare(metadata i32* %1, metadata !1123, metadata\l... !DIExpression()), !dbg !1128\l  %6 = bitcast i32* %2 to i8*, !dbg !1127\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %6) #23, !dbg !1127\l  call void @llvm.dbg.declare(metadata i32* %2, metadata !1124, metadata\l... !DIExpression()), !dbg !1129\l  %7 = bitcast i32* %3 to i8*, !dbg !1127\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #23, !dbg !1127\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !1125, metadata\l... !DIExpression()), !dbg !1130\l  %8 = bitcast i32* %4 to i8*, !dbg !1127\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #23, !dbg !1127\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !1126, metadata\l... !DIExpression()), !dbg !1131\l  %9 = load i32, i32* @lines_per_body, align 4, !dbg !1132, !tbaa !1134\l  %10 = load i32, i32* @columns, align 4, !dbg !1132, !tbaa !1134\l  %11 = call \{ i32, i1 \} @llvm.smul.with.overflow.i32(i32 %9, i32 %10), !dbg\l... !1132\l  %12 = extractvalue \{ i32, i1 \} %11, 1, !dbg !1132\l  %13 = extractvalue \{ i32, i1 \} %11, 0, !dbg !1132\l  store i32 %13, i32* %1, align 4, !dbg !1132\l  br i1 %12, label %30, label %14, !dbg !1138\l|{<s0>T|<s1>F}}"];
	Node0x1618ad0:s0 -> Node0x1618c90;
	Node0x1618ad0:s1 -> Node0x1618ba0;
	Node0x1618ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l14:                                               \l  %15 = load i32, i32* %1, align 4, !dbg !1139, !tbaa !1134\l  %16 = call \{ i32, i1 \} @llvm.sadd.with.overflow.i32(i32 %15, i32 1), !dbg\l... !1139\l  %17 = extractvalue \{ i32, i1 \} %16, 1, !dbg !1139\l  %18 = extractvalue \{ i32, i1 \} %16, 0, !dbg !1139\l  store i32 %18, i32* %2, align 4, !dbg !1139\l  br i1 %17, label %30, label %19, !dbg !1140\l|{<s0>T|<s1>F}}"];
	Node0x1618ba0:s0 -> Node0x1618c90;
	Node0x1618ba0:s1 -> Node0x1618bf0;
	Node0x1618bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = load i32, i32* @chars_per_column, align 4, !dbg !1141, !tbaa !1134\l  %21 = call \{ i32, i1 \} @llvm.sadd.with.overflow.i32(i32 %20, i32 1), !dbg\l... !1141\l  %22 = extractvalue \{ i32, i1 \} %21, 1, !dbg !1141\l  %23 = extractvalue \{ i32, i1 \} %21, 0, !dbg !1141\l  store i32 %23, i32* %3, align 4, !dbg !1141\l  br i1 %22, label %30, label %24, !dbg !1142\l|{<s0>T|<s1>F}}"];
	Node0x1618bf0:s0 -> Node0x1618c90;
	Node0x1618bf0:s1 -> Node0x1618c40;
	Node0x1618c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = load i32, i32* %1, align 4, !dbg !1143, !tbaa !1134\l  %26 = load i32, i32* %3, align 4, !dbg !1143, !tbaa !1134\l  %27 = call \{ i32, i1 \} @llvm.smul.with.overflow.i32(i32 %25, i32 %26), !dbg\l... !1143\l  %28 = extractvalue \{ i32, i1 \} %27, 1, !dbg !1143\l  %29 = extractvalue \{ i32, i1 \} %27, 0, !dbg !1143\l  store i32 %29, i32* %4, align 4, !dbg !1143\l  br i1 %28, label %30, label %31, !dbg !1144\l|{<s0>T|<s1>F}}"];
	Node0x1618c40:s0 -> Node0x1618c90;
	Node0x1618c40:s1 -> Node0x1618ce0;
	Node0x1618c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%30:\l30:                                               \l  call void @integer_overflow() #24, !dbg !1145\l  unreachable, !dbg !1145\l}"];
	Node0x1618ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = load i32*, i32** @line_vector, align 8, !dbg !1146, !tbaa !1147\l  %33 = bitcast i32* %32 to i8*, !dbg !1146\l  call void @free(i8* noundef %33) #23, !dbg !1149\l  %34 = load i32, i32* %2, align 4, !dbg !1150, !tbaa !1134\l  %35 = sext i32 %34 to i64, !dbg !1150\l  %36 = call noalias nonnull i8* @xnmalloc(i64 noundef %35, i64 noundef 4)\l... #25, !dbg !1151\l  %37 = bitcast i8* %36 to i32*, !dbg !1151\l  store i32* %37, i32** @line_vector, align 8, !dbg !1152, !tbaa !1147\l  %38 = load i32*, i32** @end_vector, align 8, !dbg !1153, !tbaa !1147\l  %39 = bitcast i32* %38 to i8*, !dbg !1153\l  call void @free(i8* noundef %39) #23, !dbg !1154\l  %40 = load i32, i32* %1, align 4, !dbg !1155, !tbaa !1134\l  %41 = sext i32 %40 to i64, !dbg !1155\l  %42 = call noalias nonnull i8* @xnmalloc(i64 noundef %41, i64 noundef 4)\l... #25, !dbg !1156\l  %43 = bitcast i8* %42 to i32*, !dbg !1156\l  store i32* %43, i32** @end_vector, align 8, !dbg !1157, !tbaa !1147\l  %44 = load i8*, i8** @buff, align 8, !dbg !1158, !tbaa !1147\l  call void @free(i8* noundef %44) #23, !dbg !1159\l  %45 = load i32, i32* %4, align 4, !dbg !1160, !tbaa !1134\l  %46 = sext i32 %45 to i64, !dbg !1160\l  %47 = load i8, i8* @use_col_separator, align 1, !dbg !1161, !tbaa !1162,\l... !range !1164\l  %48 = trunc i8 %47 to i1, !dbg !1161\l  %49 = zext i1 %48 to i32, !dbg !1161\l  %50 = add nsw i32 %49, 1, !dbg !1165\l  %51 = sext i32 %50 to i64, !dbg !1161\l  %52 = call noalias nonnull i8* @xnmalloc(i64 noundef %46, i64 noundef %51)\l... #25, !dbg !1166\l  store i8* %52, i8** @buff, align 8, !dbg !1167, !tbaa !1147\l  %53 = load i32, i32* %4, align 4, !dbg !1168, !tbaa !1134\l  %54 = sext i32 %53 to i64, !dbg !1168\l  store i64 %54, i64* @buff_allocated, align 8, !dbg !1169, !tbaa !1170\l  %55 = load i8, i8* @use_col_separator, align 1, !dbg !1172, !tbaa !1162,\l... !range !1164\l  %56 = trunc i8 %55 to i1, !dbg !1172\l  %57 = zext i1 %56 to i32, !dbg !1172\l  %58 = add nsw i32 %57, 1, !dbg !1173\l  %59 = sext i32 %58 to i64, !dbg !1172\l  %60 = load i64, i64* @buff_allocated, align 8, !dbg !1174, !tbaa !1170\l  %61 = mul i64 %60, %59, !dbg !1174\l  store i64 %61, i64* @buff_allocated, align 8, !dbg !1174, !tbaa !1170\l  %62 = bitcast i32* %4 to i8*, !dbg !1175\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %62) #23, !dbg !1175\l  %63 = bitcast i32* %3 to i8*, !dbg !1175\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %63) #23, !dbg !1175\l  %64 = bitcast i32* %2 to i8*, !dbg !1175\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %64) #23, !dbg !1175\l  %65 = bitcast i32* %1 to i8*, !dbg !1175\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %65) #23, !dbg !1175\l  ret void, !dbg !1175\l}"];
}
