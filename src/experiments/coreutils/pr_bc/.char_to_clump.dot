digraph "CFG for 'char_to_clump' function" {
	label="CFG for 'char_to_clump' function";

	Node0x16932e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%1:\l  %2 = alloca i8, align 1\l  %3 = alloca i8, align 1\l  %4 = alloca i8*, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca [4 x i8], align 1\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  store i8 %0, i8* %2, align 1, !tbaa !1131\l  call void @llvm.dbg.declare(metadata i8* %2, metadata !1123, metadata\l... !DIExpression()), !dbg !1134\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #23, !dbg !1135\l  call void @llvm.dbg.declare(metadata i8* %3, metadata !1124, metadata\l... !DIExpression()), !dbg !1136\l  %10 = load i8, i8* %2, align 1, !dbg !1137, !tbaa !1131\l  store i8 %10, i8* %3, align 1, !dbg !1136, !tbaa !1131\l  %11 = bitcast i8** %4 to i8*, !dbg !1138\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #23, !dbg !1138\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !1125, metadata\l... !DIExpression()), !dbg !1139\l  %12 = load i8*, i8** @clump_buff, align 8, !dbg !1140, !tbaa !1141\l  store i8* %12, i8** %4, align 8, !dbg !1139, !tbaa !1141\l  %13 = bitcast i32* %5 to i8*, !dbg !1143\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #23, !dbg !1143\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !1126, metadata\l... !DIExpression()), !dbg !1144\l  %14 = bitcast [4 x i8]* %6 to i8*, !dbg !1145\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #23, !dbg !1145\l  call void @llvm.dbg.declare(metadata [4 x i8]* %6, metadata !1127, metadata\l... !DIExpression()), !dbg !1146\l  %15 = bitcast i32* %7 to i8*, !dbg !1147\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #23, !dbg !1147\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !1128, metadata\l... !DIExpression()), !dbg !1148\l  %16 = bitcast i32* %8 to i8*, !dbg !1149\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #23, !dbg !1149\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !1129, metadata\l... !DIExpression()), !dbg !1150\l  %17 = bitcast i32* %9 to i8*, !dbg !1151\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #23, !dbg !1151\l  call void @llvm.dbg.declare(metadata i32* %9, metadata !1130, metadata\l... !DIExpression()), !dbg !1152\l  store i32 8, i32* %9, align 4, !dbg !1152, !tbaa !1153\l  %18 = load i8, i8* %2, align 1, !dbg !1155, !tbaa !1131\l  %19 = sext i8 %18 to i32, !dbg !1155\l  %20 = load i8, i8* @input_tab_char, align 1, !dbg !1157, !tbaa !1131\l  %21 = sext i8 %20 to i32, !dbg !1157\l  %22 = icmp eq i32 %19, %21, !dbg !1158\l  br i1 %22, label %23, label %25, !dbg !1159\l|{<s0>T|<s1>F}}"];
	Node0x16932e0:s0 -> Node0x16934a0;
	Node0x16932e0:s1 -> Node0x16934f0;
	Node0x16934a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%23:\l23:                                               \l  %24 = load i32, i32* @chars_per_input_tab, align 4, !dbg !1160, !tbaa !1153\l  store i32 %24, i32* %9, align 4, !dbg !1161, !tbaa !1153\l  br label %25, !dbg !1162\l}"];
	Node0x16934a0 -> Node0x16934f0;
	Node0x16934f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%25:\l25:                                               \l  %26 = load i8, i8* %2, align 1, !dbg !1163, !tbaa !1131\l  %27 = sext i8 %26 to i32, !dbg !1163\l  %28 = load i8, i8* @input_tab_char, align 1, !dbg !1165, !tbaa !1131\l  %29 = sext i8 %28 to i32, !dbg !1165\l  %30 = icmp eq i32 %27, %29, !dbg !1166\l  br i1 %30, label %35, label %31, !dbg !1167\l|{<s0>T|<s1>F}}"];
	Node0x16934f0:s0 -> Node0x1693590;
	Node0x16934f0:s1 -> Node0x1693540;
	Node0x1693540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%31:\l31:                                               \l  %32 = load i8, i8* %2, align 1, !dbg !1168, !tbaa !1131\l  %33 = sext i8 %32 to i32, !dbg !1168\l  %34 = icmp eq i32 %33, 9, !dbg !1169\l  br i1 %34, label %35, label %60, !dbg !1170\l|{<s0>T|<s1>F}}"];
	Node0x1693540:s0 -> Node0x1693590;
	Node0x1693540:s1 -> Node0x1693810;
	Node0x1693590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%35:\l35:                                               \l  %36 = load i32, i32* %9, align 4, !dbg !1171, !tbaa !1153\l  %37 = load i32, i32* @input_position, align 4, !dbg !1171, !tbaa !1153\l  %38 = load i32, i32* %9, align 4, !dbg !1171, !tbaa !1153\l  %39 = srem i32 %37, %38, !dbg !1171\l  %40 = sub nsw i32 %36, %39, !dbg !1171\l  store i32 %40, i32* %7, align 4, !dbg !1173, !tbaa !1153\l  %41 = load i8, i8* @untabify_input, align 1, !dbg !1174, !tbaa !1176, !range\l... !1178\l  %42 = trunc i8 %41 to i1, !dbg !1174\l  br i1 %42, label %43, label %56, !dbg !1179\l|{<s0>T|<s1>F}}"];
	Node0x1693590:s0 -> Node0x16935e0;
	Node0x1693590:s1 -> Node0x1693770;
	Node0x16935e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%43:\l43:                                               \l  %44 = load i32, i32* %7, align 4, !dbg !1180, !tbaa !1153\l  store i32 %44, i32* %5, align 4, !dbg !1183, !tbaa !1153\l  br label %45, !dbg !1184\l}"];
	Node0x16935e0 -> Node0x1693630;
	Node0x1693630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = load i32, i32* %5, align 4, !dbg !1185, !tbaa !1153\l  %47 = icmp ne i32 %46, 0, !dbg !1187\l  br i1 %47, label %48, label %54, !dbg !1187\l|{<s0>T|<s1>F}}"];
	Node0x1693630:s0 -> Node0x1693680;
	Node0x1693630:s1 -> Node0x1693720;
	Node0x1693680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = load i8*, i8** %4, align 8, !dbg !1188, !tbaa !1141\l  %50 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !1188\l  store i8* %50, i8** %4, align 8, !dbg !1188, !tbaa !1141\l  store i8 32, i8* %49, align 1, !dbg !1189, !tbaa !1131\l  br label %51, !dbg !1190\l}"];
	Node0x1693680 -> Node0x16936d0;
	Node0x16936d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = load i32, i32* %5, align 4, !dbg !1191, !tbaa !1153\l  %53 = add nsw i32 %52, -1, !dbg !1191\l  store i32 %53, i32* %5, align 4, !dbg !1191, !tbaa !1153\l  br label %45, !dbg !1192, !llvm.loop !1193\l}"];
	Node0x16936d0 -> Node0x1693630;
	Node0x1693720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%54:\l54:                                               \l  %55 = load i32, i32* %7, align 4, !dbg !1197, !tbaa !1153\l  store i32 %55, i32* %8, align 4, !dbg !1198, !tbaa !1153\l  br label %59, !dbg !1199\l}"];
	Node0x1693720 -> Node0x16937c0;
	Node0x1693770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%56:\l56:                                               \l  %57 = load i8, i8* %2, align 1, !dbg !1200, !tbaa !1131\l  %58 = load i8*, i8** %4, align 8, !dbg !1202, !tbaa !1141\l  store i8 %57, i8* %58, align 1, !dbg !1203, !tbaa !1131\l  store i32 1, i32* %8, align 4, !dbg !1204, !tbaa !1153\l  br label %59\l}"];
	Node0x1693770 -> Node0x16937c0;
	Node0x16937c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%59:\l59:                                               \l  br label %149, !dbg !1205\l}"];
	Node0x16937c0 -> Node0x1693f90;
	Node0x1693810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%60:\l60:                                               \l  %61 = call i16** @__ctype_b_loc() #24, !dbg !1206\l  %62 = load i16*, i16** %61, align 8, !dbg !1206, !tbaa !1141\l  %63 = load i8, i8* %3, align 1, !dbg !1206, !tbaa !1131\l  %64 = zext i8 %63 to i32, !dbg !1206\l  %65 = sext i32 %64 to i64, !dbg !1206\l  %66 = getelementptr inbounds i16, i16* %62, i64 %65, !dbg !1206\l  %67 = load i16, i16* %66, align 2, !dbg !1206, !tbaa !1208\l  %68 = zext i16 %67 to i32, !dbg !1206\l  %69 = and i32 %68, 16384, !dbg !1206\l  %70 = icmp ne i32 %69, 0, !dbg !1206\l  br i1 %70, label %145, label %71, !dbg !1210\l|{<s0>T|<s1>F}}"];
	Node0x1693810:s0 -> Node0x1693ef0;
	Node0x1693810:s1 -> Node0x1693860;
	Node0x1693860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%71:\l71:                                               \l  %72 = load i8, i8* @use_esc_sequence, align 1, !dbg !1211, !tbaa !1176,\l... !range !1178\l  %73 = trunc i8 %72 to i1, !dbg !1211\l  br i1 %73, label %74, label %95, !dbg !1214\l|{<s0>T|<s1>F}}"];
	Node0x1693860:s0 -> Node0x16938b0;
	Node0x1693860:s1 -> Node0x1693a40;
	Node0x16938b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%74:\l74:                                               \l  store i32 4, i32* %7, align 4, !dbg !1215, !tbaa !1153\l  store i32 4, i32* %8, align 4, !dbg !1217, !tbaa !1153\l  %75 = load i8*, i8** %4, align 8, !dbg !1218, !tbaa !1141\l  %76 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !1218\l  store i8* %76, i8** %4, align 8, !dbg !1218, !tbaa !1141\l  store i8 92, i8* %75, align 1, !dbg !1219, !tbaa !1131\l  %77 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 0, i64 0, !dbg !1220\l  %78 = load i8, i8* %3, align 1, !dbg !1221, !tbaa !1131\l  %79 = zext i8 %78 to i32, !dbg !1221\l  %80 = call i32 (i8*, i8*, ...) @sprintf(i8* noundef %77, i8* noundef\l... getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0), i32\l... noundef %79) #23, !dbg !1222\l  store i32 0, i32* %5, align 4, !dbg !1223, !tbaa !1153\l  br label %81, !dbg !1225\l}"];
	Node0x16938b0 -> Node0x1693900;
	Node0x1693900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%81:\l81:                                               \l  %82 = load i32, i32* %5, align 4, !dbg !1226, !tbaa !1153\l  %83 = icmp sle i32 %82, 2, !dbg !1228\l  br i1 %83, label %84, label %94, !dbg !1229\l|{<s0>T|<s1>F}}"];
	Node0x1693900:s0 -> Node0x1693950;
	Node0x1693900:s1 -> Node0x16939f0;
	Node0x1693950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%84:\l84:                                               \l  %85 = load i32, i32* %5, align 4, !dbg !1230, !tbaa !1153\l  %86 = sext i32 %85 to i64, !dbg !1231\l  %87 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 0, i64 %86, !dbg\l... !1231\l  %88 = load i8, i8* %87, align 1, !dbg !1231, !tbaa !1131\l  %89 = load i8*, i8** %4, align 8, !dbg !1232, !tbaa !1141\l  %90 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !1232\l  store i8* %90, i8** %4, align 8, !dbg !1232, !tbaa !1141\l  store i8 %88, i8* %89, align 1, !dbg !1233, !tbaa !1131\l  br label %91, !dbg !1234\l}"];
	Node0x1693950 -> Node0x16939a0;
	Node0x16939a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%91:\l91:                                               \l  %92 = load i32, i32* %5, align 4, !dbg !1235, !tbaa !1153\l  %93 = add nsw i32 %92, 1, !dbg !1235\l  store i32 %93, i32* %5, align 4, !dbg !1235, !tbaa !1153\l  br label %81, !dbg !1236, !llvm.loop !1237\l}"];
	Node0x16939a0 -> Node0x1693900;
	Node0x16939f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%94:\l94:                                               \l  br label %144, !dbg !1239\l}"];
	Node0x16939f0 -> Node0x1693ea0;
	Node0x1693a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%95:\l95:                                               \l  %96 = load i8, i8* @use_cntrl_prefix, align 1, !dbg !1240, !tbaa !1176,\l... !range !1178\l  %97 = trunc i8 %96 to i1, !dbg !1240\l  br i1 %97, label %98, label %132, !dbg !1242\l|{<s0>T|<s1>F}}"];
	Node0x1693a40:s0 -> Node0x1693a90;
	Node0x1693a40:s1 -> Node0x1693d10;
	Node0x1693a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%98:\l98:                                               \l  %99 = load i8, i8* %3, align 1, !dbg !1243, !tbaa !1131\l  %100 = zext i8 %99 to i32, !dbg !1243\l  %101 = icmp slt i32 %100, 128, !dbg !1246\l  br i1 %101, label %102, label %110, !dbg !1247\l|{<s0>T|<s1>F}}"];
	Node0x1693a90:s0 -> Node0x1693ae0;
	Node0x1693a90:s1 -> Node0x1693b30;
	Node0x1693ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%102:\l102:                                              \l  store i32 2, i32* %7, align 4, !dbg !1248, !tbaa !1153\l  store i32 2, i32* %8, align 4, !dbg !1250, !tbaa !1153\l  %103 = load i8*, i8** %4, align 8, !dbg !1251, !tbaa !1141\l  %104 = getelementptr inbounds i8, i8* %103, i32 1, !dbg !1251\l  store i8* %104, i8** %4, align 8, !dbg !1251, !tbaa !1141\l  store i8 94, i8* %103, align 1, !dbg !1252, !tbaa !1131\l  %105 = load i8, i8* %2, align 1, !dbg !1253, !tbaa !1131\l  %106 = sext i8 %105 to i32, !dbg !1253\l  %107 = xor i32 %106, 64, !dbg !1254\l  %108 = trunc i32 %107 to i8, !dbg !1253\l  %109 = load i8*, i8** %4, align 8, !dbg !1255, !tbaa !1141\l  store i8 %108, i8* %109, align 1, !dbg !1256, !tbaa !1131\l  br label %131, !dbg !1257\l}"];
	Node0x1693ae0 -> Node0x1693cc0;
	Node0x1693b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%110:\l110:                                              \l  store i32 4, i32* %7, align 4, !dbg !1258, !tbaa !1153\l  store i32 4, i32* %8, align 4, !dbg !1260, !tbaa !1153\l  %111 = load i8*, i8** %4, align 8, !dbg !1261, !tbaa !1141\l  %112 = getelementptr inbounds i8, i8* %111, i32 1, !dbg !1261\l  store i8* %112, i8** %4, align 8, !dbg !1261, !tbaa !1141\l  store i8 92, i8* %111, align 1, !dbg !1262, !tbaa !1131\l  %113 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 0, i64 0, !dbg\l... !1263\l  %114 = load i8, i8* %3, align 1, !dbg !1264, !tbaa !1131\l  %115 = zext i8 %114 to i32, !dbg !1264\l  %116 = call i32 (i8*, i8*, ...) @sprintf(i8* noundef %113, i8* noundef\l... getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0), i32\l... noundef %115) #23, !dbg !1265\l  store i32 0, i32* %5, align 4, !dbg !1266, !tbaa !1153\l  br label %117, !dbg !1268\l}"];
	Node0x1693b30 -> Node0x1693b80;
	Node0x1693b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%117:\l117:                                              \l  %118 = load i32, i32* %5, align 4, !dbg !1269, !tbaa !1153\l  %119 = icmp sle i32 %118, 2, !dbg !1271\l  br i1 %119, label %120, label %130, !dbg !1272\l|{<s0>T|<s1>F}}"];
	Node0x1693b80:s0 -> Node0x1693bd0;
	Node0x1693b80:s1 -> Node0x1693c70;
	Node0x1693bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%120:\l120:                                              \l  %121 = load i32, i32* %5, align 4, !dbg !1273, !tbaa !1153\l  %122 = sext i32 %121 to i64, !dbg !1274\l  %123 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 0, i64 %122, !dbg\l... !1274\l  %124 = load i8, i8* %123, align 1, !dbg !1274, !tbaa !1131\l  %125 = load i8*, i8** %4, align 8, !dbg !1275, !tbaa !1141\l  %126 = getelementptr inbounds i8, i8* %125, i32 1, !dbg !1275\l  store i8* %126, i8** %4, align 8, !dbg !1275, !tbaa !1141\l  store i8 %124, i8* %125, align 1, !dbg !1276, !tbaa !1131\l  br label %127, !dbg !1277\l}"];
	Node0x1693bd0 -> Node0x1693c20;
	Node0x1693c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%127:\l127:                                              \l  %128 = load i32, i32* %5, align 4, !dbg !1278, !tbaa !1153\l  %129 = add nsw i32 %128, 1, !dbg !1278\l  store i32 %129, i32* %5, align 4, !dbg !1278, !tbaa !1153\l  br label %117, !dbg !1279, !llvm.loop !1280\l}"];
	Node0x1693c20 -> Node0x1693b80;
	Node0x1693c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%130:\l130:                                              \l  br label %131\l}"];
	Node0x1693c70 -> Node0x1693cc0;
	Node0x1693cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%131:\l131:                                              \l  br label %143, !dbg !1282\l}"];
	Node0x1693cc0 -> Node0x1693e50;
	Node0x1693d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%132:\l132:                                              \l  %133 = load i8, i8* %2, align 1, !dbg !1283, !tbaa !1131\l  %134 = sext i8 %133 to i32, !dbg !1283\l  %135 = icmp eq i32 %134, 8, !dbg !1285\l  br i1 %135, label %136, label %139, !dbg !1286\l|{<s0>T|<s1>F}}"];
	Node0x1693d10:s0 -> Node0x1693d60;
	Node0x1693d10:s1 -> Node0x1693db0;
	Node0x1693d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%136:\l136:                                              \l  store i32 -1, i32* %7, align 4, !dbg !1287, !tbaa !1153\l  store i32 1, i32* %8, align 4, !dbg !1289, !tbaa !1153\l  %137 = load i8, i8* %2, align 1, !dbg !1290, !tbaa !1131\l  %138 = load i8*, i8** %4, align 8, !dbg !1291, !tbaa !1141\l  store i8 %137, i8* %138, align 1, !dbg !1292, !tbaa !1131\l  br label %142, !dbg !1293\l}"];
	Node0x1693d60 -> Node0x1693e00;
	Node0x1693db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%139:\l139:                                              \l  store i32 0, i32* %7, align 4, !dbg !1294, !tbaa !1153\l  store i32 1, i32* %8, align 4, !dbg !1296, !tbaa !1153\l  %140 = load i8, i8* %2, align 1, !dbg !1297, !tbaa !1131\l  %141 = load i8*, i8** %4, align 8, !dbg !1298, !tbaa !1141\l  store i8 %140, i8* %141, align 1, !dbg !1299, !tbaa !1131\l  br label %142\l}"];
	Node0x1693db0 -> Node0x1693e00;
	Node0x1693e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%142:\l142:                                              \l  br label %143\l}"];
	Node0x1693e00 -> Node0x1693e50;
	Node0x1693e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%143:\l143:                                              \l  br label %144\l}"];
	Node0x1693e50 -> Node0x1693ea0;
	Node0x1693ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%144:\l144:                                              \l  br label %148, !dbg !1300\l}"];
	Node0x1693ea0 -> Node0x1693f40;
	Node0x1693ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%145:\l145:                                              \l  store i32 1, i32* %7, align 4, !dbg !1301, !tbaa !1153\l  store i32 1, i32* %8, align 4, !dbg !1303, !tbaa !1153\l  %146 = load i8, i8* %2, align 1, !dbg !1304, !tbaa !1131\l  %147 = load i8*, i8** %4, align 8, !dbg !1305, !tbaa !1141\l  store i8 %146, i8* %147, align 1, !dbg !1306, !tbaa !1131\l  br label %148\l}"];
	Node0x1693ef0 -> Node0x1693f40;
	Node0x1693f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%148:\l148:                                              \l  br label %149\l}"];
	Node0x1693f40 -> Node0x1693f90;
	Node0x1693f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%149:\l149:                                              \l  %150 = load i32, i32* %7, align 4, !dbg !1307, !tbaa !1153\l  %151 = icmp slt i32 %150, 0, !dbg !1309\l  br i1 %151, label %152, label %156, !dbg !1310\l|{<s0>T|<s1>F}}"];
	Node0x1693f90:s0 -> Node0x1693fe0;
	Node0x1693f90:s1 -> Node0x1694080;
	Node0x1693fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%152:\l152:                                              \l  %153 = load i32, i32* @input_position, align 4, !dbg !1311, !tbaa !1153\l  %154 = icmp eq i32 %153, 0, !dbg !1312\l  br i1 %154, label %155, label %156, !dbg !1313\l|{<s0>T|<s1>F}}"];
	Node0x1693fe0:s0 -> Node0x1694030;
	Node0x1693fe0:s1 -> Node0x1694080;
	Node0x1694030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%155:\l155:                                              \l  store i32 0, i32* %8, align 4, !dbg !1314, !tbaa !1153\l  store i32 0, i32* @input_position, align 4, !dbg !1316, !tbaa !1153\l  br label %170, !dbg !1317\l}"];
	Node0x1694030 -> Node0x1694210;
	Node0x1694080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%156:\l156:                                              \l  %157 = load i32, i32* %7, align 4, !dbg !1318, !tbaa !1153\l  %158 = icmp slt i32 %157, 0, !dbg !1320\l  br i1 %158, label %159, label %165, !dbg !1321\l|{<s0>T|<s1>F}}"];
	Node0x1694080:s0 -> Node0x16940d0;
	Node0x1694080:s1 -> Node0x1694170;
	Node0x16940d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%159:\l159:                                              \l  %160 = load i32, i32* @input_position, align 4, !dbg !1322, !tbaa !1153\l  %161 = load i32, i32* %7, align 4, !dbg !1323, !tbaa !1153\l  %162 = sub nsw i32 0, %161, !dbg !1324\l  %163 = icmp sle i32 %160, %162, !dbg !1325\l  br i1 %163, label %164, label %165, !dbg !1326\l|{<s0>T|<s1>F}}"];
	Node0x16940d0:s0 -> Node0x1694120;
	Node0x16940d0:s1 -> Node0x1694170;
	Node0x1694120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%164:\l164:                                              \l  store i32 0, i32* @input_position, align 4, !dbg !1327, !tbaa !1153\l  br label %169, !dbg !1328\l}"];
	Node0x1694120 -> Node0x16941c0;
	Node0x1694170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%165:\l165:                                              \l  %166 = load i32, i32* %7, align 4, !dbg !1329, !tbaa !1153\l  %167 = load i32, i32* @input_position, align 4, !dbg !1330, !tbaa !1153\l  %168 = add nsw i32 %167, %166, !dbg !1330\l  store i32 %168, i32* @input_position, align 4, !dbg !1330, !tbaa !1153\l  br label %169\l}"];
	Node0x1694170 -> Node0x16941c0;
	Node0x16941c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%169:\l169:                                              \l  br label %170\l}"];
	Node0x16941c0 -> Node0x1694210;
	Node0x1694210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%170:\l170:                                              \l  %171 = load i32, i32* %8, align 4, !dbg !1331, !tbaa !1153\l  %172 = bitcast i32* %9 to i8*, !dbg !1332\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %172) #23, !dbg !1332\l  %173 = bitcast i32* %8 to i8*, !dbg !1332\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %173) #23, !dbg !1332\l  %174 = bitcast i32* %7 to i8*, !dbg !1332\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %174) #23, !dbg !1332\l  %175 = bitcast [4 x i8]* %6 to i8*, !dbg !1332\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %175) #23, !dbg !1332\l  %176 = bitcast i32* %5 to i8*, !dbg !1332\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %176) #23, !dbg !1332\l  %177 = bitcast i8** %4 to i8*, !dbg !1332\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %177) #23, !dbg !1332\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %3) #23, !dbg !1332\l  ret i32 %171, !dbg !1333\l}"];
}
