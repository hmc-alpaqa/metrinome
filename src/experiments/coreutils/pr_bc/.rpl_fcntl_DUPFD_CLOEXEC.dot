digraph "CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function" {
	label="CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function";

	Node0x19611c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4, !tbaa !1119\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !553, metadata\l... !DIExpression()), !dbg !1123\l  store i32 %1, i32* %4, align 4, !tbaa !1119\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !554, metadata\l... !DIExpression()), !dbg !1124\l  %8 = bitcast i32* %5 to i8*, !dbg !1125\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #23, !dbg !1125\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !555, metadata\l... !DIExpression()), !dbg !1126\l  %9 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1127, !tbaa !1119\l  %10 = icmp sle i32 0, %9, !dbg !1129\l  br i1 %10, label %11, label %31, !dbg !1130\l|{<s0>T|<s1>F}}"];
	Node0x19611c0:s0 -> Node0x1962400;
	Node0x19611c0:s1 -> Node0x1962630;
	Node0x1962400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%11:\l11:                                               \l  %12 = load i32, i32* %3, align 4, !dbg !1131, !tbaa !1119\l  %13 = load i32, i32* %4, align 4, !dbg !1133, !tbaa !1119\l  %14 = call i32 (i32, i32, ...) @fcntl(i32 noundef %12, i32 noundef 1030, i32\l... noundef %13), !dbg !1134\l  store i32 %14, i32* %5, align 4, !dbg !1135, !tbaa !1119\l  %15 = load i32, i32* %5, align 4, !dbg !1136, !tbaa !1119\l  %16 = icmp sle i32 0, %15, !dbg !1138\l  br i1 %16, label %21, label %17, !dbg !1139\l|{<s0>T|<s1>F}}"];
	Node0x1962400:s0 -> Node0x19624a0;
	Node0x1962400:s1 -> Node0x1962450;
	Node0x1962450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%17:\l17:                                               \l  %18 = call i32* @__errno_location() #24, !dbg !1140\l  %19 = load i32, i32* %18, align 4, !dbg !1140, !tbaa !1119\l  %20 = icmp ne i32 %19, 22, !dbg !1141\l  br i1 %20, label %21, label %22, !dbg !1142\l|{<s0>T|<s1>F}}"];
	Node0x1962450:s0 -> Node0x19624a0;
	Node0x1962450:s1 -> Node0x19624f0;
	Node0x19624a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%21:\l21:                                               \l  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg\l... !1143, !tbaa !1119\l  br label %30, !dbg !1145\l}"];
	Node0x19624a0 -> Node0x19625e0;
	Node0x19624f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%22:\l22:                                               \l  %23 = load i32, i32* %3, align 4, !dbg !1146, !tbaa !1119\l  %24 = load i32, i32* %4, align 4, !dbg !1148, !tbaa !1119\l  %25 = call i32 @rpl_fcntl_DUPFD(i32 noundef %23, i32 noundef %24), !dbg !1149\l  store i32 %25, i32* %5, align 4, !dbg !1150, !tbaa !1119\l  %26 = load i32, i32* %5, align 4, !dbg !1151, !tbaa !1119\l  %27 = icmp sge i32 %26, 0, !dbg !1153\l  br i1 %27, label %28, label %29, !dbg !1154\l|{<s0>T|<s1>F}}"];
	Node0x19624f0:s0 -> Node0x1962540;
	Node0x19624f0:s1 -> Node0x1962590;
	Node0x1962540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%28:\l28:                                               \l  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1155, !tbaa !1119\l  br label %29, !dbg !1156\l}"];
	Node0x1962540 -> Node0x1962590;
	Node0x1962590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%29:\l29:                                               \l  br label %30\l}"];
	Node0x1962590 -> Node0x19625e0;
	Node0x19625e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%30:\l30:                                               \l  br label %35, !dbg !1157\l}"];
	Node0x19625e0 -> Node0x1962680;
	Node0x1962630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%31:\l31:                                               \l  %32 = load i32, i32* %3, align 4, !dbg !1158, !tbaa !1119\l  %33 = load i32, i32* %4, align 4, !dbg !1159, !tbaa !1119\l  %34 = call i32 @rpl_fcntl_DUPFD(i32 noundef %32, i32 noundef %33), !dbg !1160\l  store i32 %34, i32* %5, align 4, !dbg !1161, !tbaa !1119\l  br label %35\l}"];
	Node0x1962630 -> Node0x1962680;
	Node0x1962680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = load i32, i32* %5, align 4, !dbg !1162, !tbaa !1119\l  %37 = icmp sle i32 0, %36, !dbg !1163\l  br i1 %37, label %38, label %64, !dbg !1164\l|{<s0>T|<s1>F}}"];
	Node0x1962680:s0 -> Node0x19626d0;
	Node0x1962680:s1 -> Node0x1962860;
	Node0x19626d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%38:\l38:                                               \l  %39 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1165, !tbaa !1119\l  %40 = icmp eq i32 %39, -1, !dbg !1166\l  br i1 %40, label %41, label %64, !dbg !1167\l|{<s0>T|<s1>F}}"];
	Node0x19626d0:s0 -> Node0x1962720;
	Node0x19626d0:s1 -> Node0x1962860;
	Node0x1962720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = bitcast i32* %6 to i8*, !dbg !1168\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #23, !dbg !1168\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !556, metadata\l... !DIExpression()), !dbg !1169\l  %43 = load i32, i32* %5, align 4, !dbg !1170, !tbaa !1119\l  %44 = call i32 (i32, i32, ...) @fcntl(i32 noundef %43, i32 noundef 1), !dbg\l... !1171\l  store i32 %44, i32* %6, align 4, !dbg !1169, !tbaa !1119\l  %45 = load i32, i32* %6, align 4, !dbg !1172, !tbaa !1119\l  %46 = icmp slt i32 %45, 0, !dbg !1173\l  br i1 %46, label %53, label %47, !dbg !1174\l|{<s0>T|<s1>F}}"];
	Node0x1962720:s0 -> Node0x19627c0;
	Node0x1962720:s1 -> Node0x1962770;
	Node0x1962770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%47:\l47:                                               \l  %48 = load i32, i32* %5, align 4, !dbg !1175, !tbaa !1119\l  %49 = load i32, i32* %6, align 4, !dbg !1176, !tbaa !1119\l  %50 = or i32 %49, 1, !dbg !1177\l  %51 = call i32 (i32, i32, ...) @fcntl(i32 noundef %48, i32 noundef 2, i32\l... noundef %50), !dbg !1178\l  %52 = icmp eq i32 %51, -1, !dbg !1179\l  br i1 %52, label %53, label %62, !dbg !1180\l|{<s0>T|<s1>F}}"];
	Node0x1962770:s0 -> Node0x19627c0;
	Node0x1962770:s1 -> Node0x1962810;
	Node0x19627c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%53:\l53:                                               \l  %54 = bitcast i32* %7 to i8*, !dbg !1181\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #23, !dbg !1181\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !559, metadata\l... !DIExpression()), !dbg !1182\l  %55 = call i32* @__errno_location() #24, !dbg !1183\l  %56 = load i32, i32* %55, align 4, !dbg !1183, !tbaa !1119\l  store i32 %56, i32* %7, align 4, !dbg !1182, !tbaa !1119\l  %57 = load i32, i32* %5, align 4, !dbg !1184, !tbaa !1119\l  %58 = call i32 @close(i32 noundef %57), !dbg !1185\l  %59 = load i32, i32* %7, align 4, !dbg !1186, !tbaa !1119\l  %60 = call i32* @__errno_location() #24, !dbg !1187\l  store i32 %59, i32* %60, align 4, !dbg !1188, !tbaa !1119\l  store i32 -1, i32* %5, align 4, !dbg !1189, !tbaa !1119\l  %61 = bitcast i32* %7 to i8*, !dbg !1190\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #23, !dbg !1190\l  br label %62, !dbg !1191\l}"];
	Node0x19627c0 -> Node0x1962810;
	Node0x1962810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%62:\l62:                                               \l  %63 = bitcast i32* %6 to i8*, !dbg !1192\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %63) #23, !dbg !1192\l  br label %64, !dbg !1193\l}"];
	Node0x1962810 -> Node0x1962860;
	Node0x1962860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = load i32, i32* %5, align 4, !dbg !1194, !tbaa !1119\l  %66 = bitcast i32* %5 to i8*, !dbg !1195\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #23, !dbg !1195\l  ret i32 %65, !dbg !1196\l}"];
}
