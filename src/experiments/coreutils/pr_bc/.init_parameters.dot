digraph "CFG for 'init_parameters' function" {
	label="CFG for 'init_parameters' function";

	Node0x16019e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = alloca i32, align 4\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  store i32 %0, i32* %2, align 4, !tbaa !1130\l  call void @llvm.dbg.declare(metadata i32* %2, metadata !1123, metadata\l... !DIExpression()), !dbg !1134\l  %7 = bitcast i32* %3 to i8*, !dbg !1135\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #23, !dbg !1135\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !1124, metadata\l... !DIExpression()), !dbg !1136\l  store i32 0, i32* %3, align 4, !dbg !1136, !tbaa !1130\l  %8 = load i32, i32* @lines_per_page, align 4, !dbg !1137, !tbaa !1130\l  %9 = sub nsw i32 %8, 5, !dbg !1138\l  %10 = sub nsw i32 %9, 5, !dbg !1139\l  store i32 %10, i32* @lines_per_body, align 4, !dbg !1140, !tbaa !1130\l  %11 = load i32, i32* @lines_per_body, align 4, !dbg !1141, !tbaa !1130\l  %12 = icmp sle i32 %11, 0, !dbg !1143\l  br i1 %12, label %13, label %14, !dbg !1144\l|{<s0>T|<s1>F}}"];
	Node0x16019e0:s0 -> Node0x1601a30;
	Node0x16019e0:s1 -> Node0x1601a80;
	Node0x1601a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%13:\l13:                                               \l  store i8 0, i8* @extremities, align 1, !dbg !1145, !tbaa !1147\l  store i8 1, i8* @keep_FF, align 1, !dbg !1149, !tbaa !1147\l  br label %14, !dbg !1150\l}"];
	Node0x1601a30 -> Node0x1601a80;
	Node0x1601a80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l14:                                               \l  %15 = load i8, i8* @extremities, align 1, !dbg !1151, !tbaa !1147, !range\l... !1153\l  %16 = trunc i8 %15 to i1, !dbg !1151\l  %17 = zext i1 %16 to i32, !dbg !1151\l  %18 = icmp eq i32 %17, 0, !dbg !1154\l  br i1 %18, label %19, label %21, !dbg !1155\l|{<s0>T|<s1>F}}"];
	Node0x1601a80:s0 -> Node0x1601ad0;
	Node0x1601a80:s1 -> Node0x1601b20;
	Node0x1601ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%19:\l19:                                               \l  %20 = load i32, i32* @lines_per_page, align 4, !dbg !1156, !tbaa !1130\l  store i32 %20, i32* @lines_per_body, align 4, !dbg !1157, !tbaa !1130\l  br label %21, !dbg !1158\l}"];
	Node0x1601ad0 -> Node0x1601b20;
	Node0x1601b20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = load i8, i8* @double_space, align 1, !dbg !1159, !tbaa !1147, !range\l... !1153\l  %23 = trunc i8 %22 to i1, !dbg !1159\l  br i1 %23, label %24, label %34, !dbg !1161\l|{<s0>T|<s1>F}}"];
	Node0x1601b20:s0 -> Node0x1601b70;
	Node0x1601b20:s1 -> Node0x1601cb0;
	Node0x1601b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%24:\l24:                                               \l  %25 = load i32, i32* @lines_per_body, align 4, !dbg !1162, !tbaa !1130\l  %26 = sdiv i32 %25, 2, !dbg !1162\l  %27 = icmp sgt i32 1, %26, !dbg !1162\l  br i1 %27, label %28, label %29, !dbg !1162\l|{<s0>T|<s1>F}}"];
	Node0x1601b70:s0 -> Node0x1601bc0;
	Node0x1601b70:s1 -> Node0x1601c10;
	Node0x1601bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%28:\l28:                                               \l  br label %32, !dbg !1162\l}"];
	Node0x1601bc0 -> Node0x1601c60;
	Node0x1601c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%29:\l29:                                               \l  %30 = load i32, i32* @lines_per_body, align 4, !dbg !1162, !tbaa !1130\l  %31 = sdiv i32 %30, 2, !dbg !1162\l  br label %32, !dbg !1162\l}"];
	Node0x1601c10 -> Node0x1601c60;
	Node0x1601c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%32:\l32:                                               \l  %33 = phi i32 [ 1, %28 ], [ %31, %29 ], !dbg !1162\l  store i32 %33, i32* @lines_per_body, align 4, !dbg !1163, !tbaa !1130\l  br label %34, !dbg !1164\l}"];
	Node0x1601c60 -> Node0x1601cb0;
	Node0x1601cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = load i32, i32* %2, align 4, !dbg !1165, !tbaa !1130\l  %36 = icmp eq i32 %35, 0, !dbg !1167\l  br i1 %36, label %37, label %38, !dbg !1168\l|{<s0>T|<s1>F}}"];
	Node0x1601cb0:s0 -> Node0x1601d00;
	Node0x1601cb0:s1 -> Node0x1601d50;
	Node0x1601d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%37:\l37:                                               \l  store i8 0, i8* @parallel_files, align 1, !dbg !1169, !tbaa !1147\l  br label %38, !dbg !1170\l}"];
	Node0x1601d00 -> Node0x1601d50;
	Node0x1601d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = load i8, i8* @parallel_files, align 1, !dbg !1171, !tbaa !1147, !range\l... !1153\l  %40 = trunc i8 %39 to i1, !dbg !1171\l  br i1 %40, label %41, label %43, !dbg !1173\l|{<s0>T|<s1>F}}"];
	Node0x1601d50:s0 -> Node0x1601da0;
	Node0x1601d50:s1 -> Node0x1601df0;
	Node0x1601da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%41:\l41:                                               \l  %42 = load i32, i32* %2, align 4, !dbg !1174, !tbaa !1130\l  store i32 %42, i32* @columns, align 4, !dbg !1175, !tbaa !1130\l  br label %43, !dbg !1176\l}"];
	Node0x1601da0 -> Node0x1601df0;
	Node0x1601df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = load i8, i8* @storing_columns, align 1, !dbg !1177, !tbaa !1147,\l... !range !1153\l  %45 = trunc i8 %44 to i1, !dbg !1177\l  br i1 %45, label %46, label %47, !dbg !1179\l|{<s0>T|<s1>F}}"];
	Node0x1601df0:s0 -> Node0x1601e40;
	Node0x1601df0:s1 -> Node0x1601e90;
	Node0x1601e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%46:\l46:                                               \l  store i8 1, i8* @balance_columns, align 1, !dbg !1180, !tbaa !1147\l  br label %47, !dbg !1181\l}"];
	Node0x1601e40 -> Node0x1601e90;
	Node0x1601e90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = load i32, i32* @columns, align 4, !dbg !1182, !tbaa !1130\l  %49 = icmp sgt i32 %48, 1, !dbg !1184\l  br i1 %49, label %50, label %85, !dbg !1185\l|{<s0>T|<s1>F}}"];
	Node0x1601e90:s0 -> Node0x1601ee0;
	Node0x1601e90:s1 -> Node0x1602340;
	Node0x1601ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%50:\l50:                                               \l  %51 = load i8, i8* @use_col_separator, align 1, !dbg !1186, !tbaa !1147,\l... !range !1153\l  %52 = trunc i8 %51 to i1, !dbg !1186\l  br i1 %52, label %61, label %53, !dbg !1189\l|{<s0>T|<s1>F}}"];
	Node0x1601ee0:s0 -> Node0x1602070;
	Node0x1601ee0:s1 -> Node0x1601f30;
	Node0x1601f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%53:\l53:                                               \l  %54 = load i8, i8* @join_lines, align 1, !dbg !1190, !tbaa !1147, !range\l... !1153\l  %55 = trunc i8 %54 to i1, !dbg !1190\l  br i1 %55, label %56, label %58, !dbg !1193\l|{<s0>T|<s1>F}}"];
	Node0x1601f30:s0 -> Node0x1601f80;
	Node0x1601f30:s1 -> Node0x1601fd0;
	Node0x1601f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%56:\l56:                                               \l  %57 = load i8*, i8** @line_separator, align 8, !dbg !1194, !tbaa !1195\l  store i8* %57, i8** @col_sep_string, align 8, !dbg !1197, !tbaa !1195\l  br label %60, !dbg !1198\l}"];
	Node0x1601f80 -> Node0x1602020;
	Node0x1601fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%58:\l58:                                               \l  %59 = load i8*, i8** @column_separator, align 8, !dbg !1199, !tbaa !1195\l  store i8* %59, i8** @col_sep_string, align 8, !dbg !1200, !tbaa !1195\l  br label %60\l}"];
	Node0x1601fd0 -> Node0x1602020;
	Node0x1602020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%60:\l60:                                               \l  store i32 1, i32* @col_sep_length, align 4, !dbg !1201, !tbaa !1130\l  store i8 1, i8* @use_col_separator, align 1, !dbg !1202, !tbaa !1147\l  br label %75, !dbg !1203\l}"];
	Node0x1602020 -> Node0x1602200;
	Node0x1602070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%61:\l61:                                               \l  %62 = load i8, i8* @join_lines, align 1, !dbg !1204, !tbaa !1147, !range\l... !1153\l  %63 = trunc i8 %62 to i1, !dbg !1204\l  br i1 %63, label %74, label %64, !dbg !1206\l|{<s0>T|<s1>F}}"];
	Node0x1602070:s0 -> Node0x16021b0;
	Node0x1602070:s1 -> Node0x16020c0;
	Node0x16020c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%64:\l64:                                               \l  %65 = load i32, i32* @col_sep_length, align 4, !dbg !1207, !tbaa !1130\l  %66 = icmp eq i32 %65, 1, !dbg !1208\l  br i1 %66, label %67, label %74, !dbg !1209\l|{<s0>T|<s1>F}}"];
	Node0x16020c0:s0 -> Node0x1602110;
	Node0x16020c0:s1 -> Node0x16021b0;
	Node0x1602110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%67:\l67:                                               \l  %68 = load i8*, i8** @col_sep_string, align 8, !dbg !1210, !tbaa !1195\l  %69 = load i8, i8* %68, align 1, !dbg !1211, !tbaa !1212\l  %70 = sext i8 %69 to i32, !dbg !1211\l  %71 = icmp eq i32 %70, 9, !dbg !1213\l  br i1 %71, label %72, label %74, !dbg !1214\l|{<s0>T|<s1>F}}"];
	Node0x1602110:s0 -> Node0x1602160;
	Node0x1602110:s1 -> Node0x16021b0;
	Node0x1602160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%72:\l72:                                               \l  %73 = load i8*, i8** @column_separator, align 8, !dbg !1215, !tbaa !1195\l  store i8* %73, i8** @col_sep_string, align 8, !dbg !1216, !tbaa !1195\l  br label %74, !dbg !1217\l}"];
	Node0x1602160 -> Node0x16021b0;
	Node0x16021b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%74:\l74:                                               \l  br label %75\l}"];
	Node0x16021b0 -> Node0x1602200;
	Node0x1602200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%75:\l75:                                               \l  store i8 1, i8* @truncate_lines, align 1, !dbg !1218, !tbaa !1147\l  %76 = load i32, i32* @col_sep_length, align 4, !dbg !1219, !tbaa !1130\l  %77 = icmp eq i32 %76, 1, !dbg !1221\l  br i1 %77, label %78, label %83, !dbg !1222\l|{<s0>T|<s1>F}}"];
	Node0x1602200:s0 -> Node0x1602250;
	Node0x1602200:s1 -> Node0x16022a0;
	Node0x1602250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%78:\l78:                                               \l  %79 = load i8*, i8** @col_sep_string, align 8, !dbg !1223, !tbaa !1195\l  %80 = load i8, i8* %79, align 1, !dbg !1224, !tbaa !1212\l  %81 = sext i8 %80 to i32, !dbg !1224\l  %82 = icmp eq i32 %81, 9, !dbg !1225\l  br i1 %82, label %84, label %83, !dbg !1226\l|{<s0>T|<s1>F}}"];
	Node0x1602250:s0 -> Node0x16022f0;
	Node0x1602250:s1 -> Node0x16022a0;
	Node0x16022a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%83:\l83:                                               \l  store i8 1, i8* @untabify_input, align 1, !dbg !1227, !tbaa !1147\l  br label %84, !dbg !1228\l}"];
	Node0x16022a0 -> Node0x16022f0;
	Node0x16022f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%84:\l84:                                               \l  store i8 1, i8* @tabify_output, align 1, !dbg !1229, !tbaa !1147\l  br label %86, !dbg !1230\l}"];
	Node0x16022f0 -> Node0x1602390;
	Node0x1602340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%85:\l85:                                               \l  store i8 0, i8* @storing_columns, align 1, !dbg !1231, !tbaa !1147\l  br label %86\l}"];
	Node0x1602340 -> Node0x1602390;
	Node0x1602390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  %87 = load i8, i8* @join_lines, align 1, !dbg !1232, !tbaa !1147, !range\l... !1153\l  %88 = trunc i8 %87 to i1, !dbg !1232\l  br i1 %88, label %89, label %90, !dbg !1234\l|{<s0>T|<s1>F}}"];
	Node0x1602390:s0 -> Node0x16023e0;
	Node0x1602390:s1 -> Node0x1602430;
	Node0x16023e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%89:\l89:                                               \l  store i8 0, i8* @truncate_lines, align 1, !dbg !1235, !tbaa !1147\l  br label %90, !dbg !1236\l}"];
	Node0x16023e0 -> Node0x1602430;
	Node0x1602430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = load i8, i8* @numbered_lines, align 1, !dbg !1237, !tbaa !1147, !range\l... !1153\l  %92 = trunc i8 %91 to i1, !dbg !1237\l  br i1 %92, label %93, label %117, !dbg !1238\l|{<s0>T|<s1>F}}"];
	Node0x1602430:s0 -> Node0x1602480;
	Node0x1602430:s1 -> Node0x1602660;
	Node0x1602480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%93:\l93:                                               \l  %94 = bitcast i32* %4 to i8*, !dbg !1239\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %94) #23, !dbg !1239\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !1125, metadata\l... !DIExpression()), !dbg !1240\l  store i32 8, i32* %4, align 4, !dbg !1240, !tbaa !1130\l  %95 = load i32, i32* @start_line_num, align 4, !dbg !1241, !tbaa !1130\l  store i32 %95, i32* @line_count, align 4, !dbg !1242, !tbaa !1130\l  %96 = load i8, i8* @number_separator, align 1, !dbg !1243, !tbaa !1212\l  %97 = sext i8 %96 to i32, !dbg !1243\l  %98 = icmp eq i32 %97, 9, !dbg !1245\l  br i1 %98, label %99, label %107, !dbg !1246\l|{<s0>T|<s1>F}}"];
	Node0x1602480:s0 -> Node0x16024d0;
	Node0x1602480:s1 -> Node0x1602520;
	Node0x16024d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%99:\l99:                                               \l  %100 = load i32, i32* @chars_per_number, align 4, !dbg !1247, !tbaa !1130\l  %101 = load i32, i32* %4, align 4, !dbg !1248, !tbaa !1130\l  %102 = load i32, i32* @chars_per_number, align 4, !dbg !1248, !tbaa !1130\l  %103 = load i32, i32* %4, align 4, !dbg !1248, !tbaa !1130\l  %104 = srem i32 %102, %103, !dbg !1248\l  %105 = sub nsw i32 %101, %104, !dbg !1248\l  %106 = add nsw i32 %100, %105, !dbg !1249\l  store i32 %106, i32* @number_width, align 4, !dbg !1250, !tbaa !1130\l  br label %110, !dbg !1251\l}"];
	Node0x16024d0 -> Node0x1602570;
	Node0x1602520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%107:\l107:                                              \l  %108 = load i32, i32* @chars_per_number, align 4, !dbg !1252, !tbaa !1130\l  %109 = add nsw i32 %108, 1, !dbg !1253\l  store i32 %109, i32* @number_width, align 4, !dbg !1254, !tbaa !1130\l  br label %110\l}"];
	Node0x1602520 -> Node0x1602570;
	Node0x1602570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%110:\l110:                                              \l  %111 = load i8, i8* @parallel_files, align 1, !dbg !1255, !tbaa !1147,\l... !range !1153\l  %112 = trunc i8 %111 to i1, !dbg !1255\l  br i1 %112, label %113, label %115, !dbg !1257\l|{<s0>T|<s1>F}}"];
	Node0x1602570:s0 -> Node0x16025c0;
	Node0x1602570:s1 -> Node0x1602610;
	Node0x16025c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%113:\l113:                                              \l  %114 = load i32, i32* @number_width, align 4, !dbg !1258, !tbaa !1130\l  store i32 %114, i32* %3, align 4, !dbg !1259, !tbaa !1130\l  br label %115, !dbg !1260\l}"];
	Node0x16025c0 -> Node0x1602610;
	Node0x1602610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%115:\l115:                                              \l  %116 = bitcast i32* %4 to i8*, !dbg !1261\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %116) #23, !dbg !1261\l  br label %117, !dbg !1262\l}"];
	Node0x1602610 -> Node0x1602660;
	Node0x1602660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%117:\l117:                                              \l  %118 = bitcast i32* %5 to i8*, !dbg !1263\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %118) #23, !dbg !1263\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !1128, metadata\l... !DIExpression()), !dbg !1264\l  %119 = bitcast i32* %6 to i8*, !dbg !1263\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %119) #23, !dbg !1263\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !1129, metadata\l... !DIExpression()), !dbg !1265\l  %120 = load i32, i32* @columns, align 4, !dbg !1266, !tbaa !1130\l  %121 = sub nsw i32 %120, 1, !dbg !1266\l  %122 = load i32, i32* @col_sep_length, align 4, !dbg !1266, !tbaa !1130\l  %123 = call \{ i32, i1 \} @llvm.smul.with.overflow.i32(i32 %121, i32 %122),\l... !dbg !1266\l  %124 = extractvalue \{ i32, i1 \} %123, 1, !dbg !1266\l  %125 = extractvalue \{ i32, i1 \} %123, 0, !dbg !1266\l  store i32 %125, i32* %5, align 4, !dbg !1266\l  br i1 %124, label %126, label %127, !dbg !1268\l|{<s0>T|<s1>F}}"];
	Node0x1602660:s0 -> Node0x16026b0;
	Node0x1602660:s1 -> Node0x1602700;
	Node0x16026b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%126:\l126:                                              \l  store i32 2147483647, i32* %5, align 4, !dbg !1269, !tbaa !1130\l  br label %127, !dbg !1270\l}"];
	Node0x16026b0 -> Node0x1602700;
	Node0x1602700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%127:\l127:                                              \l  %128 = load i32, i32* @chars_per_line, align 4, !dbg !1271, !tbaa !1130\l  %129 = load i32, i32* %3, align 4, !dbg !1271, !tbaa !1130\l  %130 = sub nsw i32 %128, %129, !dbg !1271\l  %131 = load i32, i32* %5, align 4, !dbg !1271, !tbaa !1130\l  %132 = call \{ i32, i1 \} @llvm.ssub.with.overflow.i32(i32 %130, i32 %131),\l... !dbg !1271\l  %133 = extractvalue \{ i32, i1 \} %132, 1, !dbg !1271\l  %134 = extractvalue \{ i32, i1 \} %132, 0, !dbg !1271\l  store i32 %134, i32* %6, align 4, !dbg !1271\l  br i1 %133, label %135, label %136, !dbg !1273\l|{<s0>T|<s1>F}}"];
	Node0x1602700:s0 -> Node0x1602750;
	Node0x1602700:s1 -> Node0x16027a0;
	Node0x1602750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%135:\l135:                                              \l  store i32 0, i32* %6, align 4, !dbg !1274, !tbaa !1130\l  br label %136, !dbg !1275\l}"];
	Node0x1602750 -> Node0x16027a0;
	Node0x16027a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%136:\l136:                                              \l  %137 = load i32, i32* %6, align 4, !dbg !1276, !tbaa !1130\l  %138 = load i32, i32* @columns, align 4, !dbg !1277, !tbaa !1130\l  %139 = sdiv i32 %137, %138, !dbg !1278\l  store i32 %139, i32* @chars_per_column, align 4, !dbg !1279, !tbaa !1130\l  %140 = load i32, i32* @chars_per_column, align 4, !dbg !1280, !tbaa !1130\l  %141 = icmp slt i32 %140, 1, !dbg !1282\l  br i1 %141, label %142, label %143, !dbg !1283\l|{<s0>T|<s1>F}}"];
	Node0x16027a0:s0 -> Node0x16027f0;
	Node0x16027a0:s1 -> Node0x1602840;
	Node0x16027f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%142:\l142:                                              \l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.67, i64 0, i64\l... 0)), !dbg !1284\l  unreachable, !dbg !1284\l}"];
	Node0x1602840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%143:\l143:                                              \l  %144 = load i8, i8* @numbered_lines, align 1, !dbg !1285, !tbaa !1147,\l... !range !1153\l  %145 = trunc i8 %144 to i1, !dbg !1285\l  br i1 %145, label %146, label %159, !dbg !1287\l|{<s0>T|<s1>F}}"];
	Node0x1602840:s0 -> Node0x1602890;
	Node0x1602840:s1 -> Node0x16029d0;
	Node0x1602890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%146:\l146:                                              \l  %147 = load i8*, i8** @number_buff, align 8, !dbg !1288, !tbaa !1195\l  call void @free(i8* noundef %147) #23, !dbg !1290\l  %148 = load i32, i32* @chars_per_number, align 4, !dbg !1291, !tbaa !1130\l  %149 = sext i32 %148 to i64, !dbg !1291\l  %150 = icmp ugt i64 %149, 11, !dbg !1291\l  br i1 %150, label %151, label %154, !dbg !1291\l|{<s0>T|<s1>F}}"];
	Node0x1602890:s0 -> Node0x16028e0;
	Node0x1602890:s1 -> Node0x1602930;
	Node0x16028e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%151:\l151:                                              \l  %152 = load i32, i32* @chars_per_number, align 4, !dbg !1291, !tbaa !1130\l  %153 = sext i32 %152 to i64, !dbg !1291\l  br label %155, !dbg !1291\l}"];
	Node0x16028e0 -> Node0x1602980;
	Node0x1602930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%154:\l154:                                              \l  br label %155, !dbg !1291\l}"];
	Node0x1602930 -> Node0x1602980;
	Node0x1602980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%155:\l155:                                              \l  %156 = phi i64 [ %153, %151 ], [ 11, %154 ], !dbg !1291\l  %157 = add i64 %156, 1, !dbg !1292\l  %158 = call noalias nonnull i8* @xmalloc(i64 noundef %157) #24, !dbg !1293\l  store i8* %158, i8** @number_buff, align 8, !dbg !1294, !tbaa !1195\l  br label %159, !dbg !1295\l}"];
	Node0x1602980 -> Node0x16029d0;
	Node0x16029d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%159:\l159:                                              \l  %160 = load i8*, i8** @clump_buff, align 8, !dbg !1296, !tbaa !1195\l  call void @free(i8* noundef %160) #23, !dbg !1297\l  %161 = load i32, i32* @chars_per_input_tab, align 4, !dbg !1298, !tbaa !1130\l  %162 = icmp sgt i32 8, %161, !dbg !1298\l  br i1 %162, label %163, label %164, !dbg !1298\l|{<s0>T|<s1>F}}"];
	Node0x16029d0:s0 -> Node0x1602a20;
	Node0x16029d0:s1 -> Node0x1602a70;
	Node0x1602a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%163:\l163:                                              \l  br label %166, !dbg !1298\l}"];
	Node0x1602a20 -> Node0x1602ac0;
	Node0x1602a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%164:\l164:                                              \l  %165 = load i32, i32* @chars_per_input_tab, align 4, !dbg !1298, !tbaa !1130\l  br label %166, !dbg !1298\l}"];
	Node0x1602a70 -> Node0x1602ac0;
	Node0x1602ac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%166:\l166:                                              \l  %167 = phi i32 [ 8, %163 ], [ %165, %164 ], !dbg !1298\l  %168 = sext i32 %167 to i64, !dbg !1298\l  %169 = call noalias nonnull i8* @xmalloc(i64 noundef %168) #24, !dbg !1299\l  store i8* %169, i8** @clump_buff, align 8, !dbg !1300, !tbaa !1195\l  %170 = bitcast i32* %6 to i8*, !dbg !1301\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %170) #23, !dbg !1301\l  %171 = bitcast i32* %5 to i8*, !dbg !1301\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %171) #23, !dbg !1301\l  %172 = bitcast i32* %3 to i8*, !dbg !1301\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %172) #23, !dbg !1301\l  ret void, !dbg !1301\l}"];
}
