digraph "CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function" {
	label="CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function";

	Node0x8ca2d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4, !tbaa !679\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !27, metadata\l... !DIExpression()), !dbg !683\l  store i32 %1, i32* %4, align 4, !tbaa !679\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !28, metadata\l... !DIExpression()), !dbg !684\l  %8 = bitcast i32* %5 to i8*, !dbg !685\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #22, !dbg !685\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !29, metadata\l... !DIExpression()), !dbg !686\l  %9 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !687, !tbaa !679\l  %10 = icmp sle i32 0, %9, !dbg !689\l  br i1 %10, label %11, label %31, !dbg !690\l|{<s0>T|<s1>F}}"];
	Node0x8ca2d0:s0 -> Node0x8cb510;
	Node0x8ca2d0:s1 -> Node0x8cb740;
	Node0x8cb510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%11:\l11:                                               \l  %12 = load i32, i32* %3, align 4, !dbg !691, !tbaa !679\l  %13 = load i32, i32* %4, align 4, !dbg !693, !tbaa !679\l  %14 = call i32 (i32, i32, ...) @fcntl(i32 noundef %12, i32 noundef 1030, i32\l... noundef %13), !dbg !694\l  store i32 %14, i32* %5, align 4, !dbg !695, !tbaa !679\l  %15 = load i32, i32* %5, align 4, !dbg !696, !tbaa !679\l  %16 = icmp sle i32 0, %15, !dbg !698\l  br i1 %16, label %21, label %17, !dbg !699\l|{<s0>T|<s1>F}}"];
	Node0x8cb510:s0 -> Node0x8cb5b0;
	Node0x8cb510:s1 -> Node0x8cb560;
	Node0x8cb560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%17:\l17:                                               \l  %18 = call i32* @__errno_location() #23, !dbg !700\l  %19 = load i32, i32* %18, align 4, !dbg !700, !tbaa !679\l  %20 = icmp ne i32 %19, 22, !dbg !701\l  br i1 %20, label %21, label %22, !dbg !702\l|{<s0>T|<s1>F}}"];
	Node0x8cb560:s0 -> Node0x8cb5b0;
	Node0x8cb560:s1 -> Node0x8cb600;
	Node0x8cb5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%21:\l21:                                               \l  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg\l... !703, !tbaa !679\l  br label %30, !dbg !705\l}"];
	Node0x8cb5b0 -> Node0x8cb6f0;
	Node0x8cb600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%22:\l22:                                               \l  %23 = load i32, i32* %3, align 4, !dbg !706, !tbaa !679\l  %24 = load i32, i32* %4, align 4, !dbg !708, !tbaa !679\l  %25 = call i32 @rpl_fcntl_DUPFD(i32 noundef %23, i32 noundef %24), !dbg !709\l  store i32 %25, i32* %5, align 4, !dbg !710, !tbaa !679\l  %26 = load i32, i32* %5, align 4, !dbg !711, !tbaa !679\l  %27 = icmp sge i32 %26, 0, !dbg !713\l  br i1 %27, label %28, label %29, !dbg !714\l|{<s0>T|<s1>F}}"];
	Node0x8cb600:s0 -> Node0x8cb650;
	Node0x8cb600:s1 -> Node0x8cb6a0;
	Node0x8cb650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%28:\l28:                                               \l  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !715, !tbaa !679\l  br label %29, !dbg !716\l}"];
	Node0x8cb650 -> Node0x8cb6a0;
	Node0x8cb6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%29:\l29:                                               \l  br label %30\l}"];
	Node0x8cb6a0 -> Node0x8cb6f0;
	Node0x8cb6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%30:\l30:                                               \l  br label %35, !dbg !717\l}"];
	Node0x8cb6f0 -> Node0x8cb790;
	Node0x8cb740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%31:\l31:                                               \l  %32 = load i32, i32* %3, align 4, !dbg !718, !tbaa !679\l  %33 = load i32, i32* %4, align 4, !dbg !719, !tbaa !679\l  %34 = call i32 @rpl_fcntl_DUPFD(i32 noundef %32, i32 noundef %33), !dbg !720\l  store i32 %34, i32* %5, align 4, !dbg !721, !tbaa !679\l  br label %35\l}"];
	Node0x8cb740 -> Node0x8cb790;
	Node0x8cb790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = load i32, i32* %5, align 4, !dbg !722, !tbaa !679\l  %37 = icmp sle i32 0, %36, !dbg !723\l  br i1 %37, label %38, label %64, !dbg !724\l|{<s0>T|<s1>F}}"];
	Node0x8cb790:s0 -> Node0x8cb7e0;
	Node0x8cb790:s1 -> Node0x8cb970;
	Node0x8cb7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%38:\l38:                                               \l  %39 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !725, !tbaa !679\l  %40 = icmp eq i32 %39, -1, !dbg !726\l  br i1 %40, label %41, label %64, !dbg !727\l|{<s0>T|<s1>F}}"];
	Node0x8cb7e0:s0 -> Node0x8cb830;
	Node0x8cb7e0:s1 -> Node0x8cb970;
	Node0x8cb830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = bitcast i32* %6 to i8*, !dbg !728\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #22, !dbg !728\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !30, metadata\l... !DIExpression()), !dbg !729\l  %43 = load i32, i32* %5, align 4, !dbg !730, !tbaa !679\l  %44 = call i32 (i32, i32, ...) @fcntl(i32 noundef %43, i32 noundef 1), !dbg\l... !731\l  store i32 %44, i32* %6, align 4, !dbg !729, !tbaa !679\l  %45 = load i32, i32* %6, align 4, !dbg !732, !tbaa !679\l  %46 = icmp slt i32 %45, 0, !dbg !733\l  br i1 %46, label %53, label %47, !dbg !734\l|{<s0>T|<s1>F}}"];
	Node0x8cb830:s0 -> Node0x8cb8d0;
	Node0x8cb830:s1 -> Node0x8cb880;
	Node0x8cb880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%47:\l47:                                               \l  %48 = load i32, i32* %5, align 4, !dbg !735, !tbaa !679\l  %49 = load i32, i32* %6, align 4, !dbg !736, !tbaa !679\l  %50 = or i32 %49, 1, !dbg !737\l  %51 = call i32 (i32, i32, ...) @fcntl(i32 noundef %48, i32 noundef 2, i32\l... noundef %50), !dbg !738\l  %52 = icmp eq i32 %51, -1, !dbg !739\l  br i1 %52, label %53, label %62, !dbg !740\l|{<s0>T|<s1>F}}"];
	Node0x8cb880:s0 -> Node0x8cb8d0;
	Node0x8cb880:s1 -> Node0x8cb920;
	Node0x8cb8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%53:\l53:                                               \l  %54 = bitcast i32* %7 to i8*, !dbg !741\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #22, !dbg !741\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !33, metadata\l... !DIExpression()), !dbg !742\l  %55 = call i32* @__errno_location() #23, !dbg !743\l  %56 = load i32, i32* %55, align 4, !dbg !743, !tbaa !679\l  store i32 %56, i32* %7, align 4, !dbg !742, !tbaa !679\l  %57 = load i32, i32* %5, align 4, !dbg !744, !tbaa !679\l  %58 = call i32 @close(i32 noundef %57), !dbg !745\l  %59 = load i32, i32* %7, align 4, !dbg !746, !tbaa !679\l  %60 = call i32* @__errno_location() #23, !dbg !747\l  store i32 %59, i32* %60, align 4, !dbg !748, !tbaa !679\l  store i32 -1, i32* %5, align 4, !dbg !749, !tbaa !679\l  %61 = bitcast i32* %7 to i8*, !dbg !750\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #22, !dbg !750\l  br label %62, !dbg !751\l}"];
	Node0x8cb8d0 -> Node0x8cb920;
	Node0x8cb920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%62:\l62:                                               \l  %63 = bitcast i32* %6 to i8*, !dbg !752\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %63) #22, !dbg !752\l  br label %64, !dbg !753\l}"];
	Node0x8cb920 -> Node0x8cb970;
	Node0x8cb970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = load i32, i32* %5, align 4, !dbg !754, !tbaa !679\l  %66 = bitcast i32* %5 to i8*, !dbg !755\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #22, !dbg !755\l  ret i32 %65, !dbg !756\l}"];
}
