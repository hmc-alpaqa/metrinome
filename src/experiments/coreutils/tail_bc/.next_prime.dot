digraph "CFG for 'next_prime' function" {
	label="CFG for 'next_prime' function";

	Node0x11c3fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%1:\l  %2 = alloca i64, align 8\l  store i64 %0, i64* %2, align 8, !tbaa !952\l  call void @llvm.dbg.declare(metadata i64* %2, metadata !951, metadata\l... !DIExpression()), !dbg !956\l  %3 = load i64, i64* %2, align 8, !dbg !957, !tbaa !952\l  %4 = icmp ult i64 %3, 10, !dbg !959\l  br i1 %4, label %5, label %6, !dbg !960\l|{<s0>T|<s1>F}}"];
	Node0x11c3fc0:s0 -> Node0x11c4010;
	Node0x11c3fc0:s1 -> Node0x11c4060;
	Node0x11c4010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%5:\l5:                                                \l  store i64 10, i64* %2, align 8, !dbg !961, !tbaa !952\l  br label %6, !dbg !962\l}"];
	Node0x11c4010 -> Node0x11c4060;
	Node0x11c4060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%6:\l6:                                                \l  %7 = load i64, i64* %2, align 8, !dbg !963, !tbaa !952\l  %8 = or i64 %7, 1, !dbg !963\l  store i64 %8, i64* %2, align 8, !dbg !963, !tbaa !952\l  br label %9, !dbg !964\l}"];
	Node0x11c4060 -> Node0x11c40b0;
	Node0x11c40b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l9:                                                \l  %10 = load i64, i64* %2, align 8, !dbg !965, !tbaa !952\l  %11 = icmp ne i64 -1, %10, !dbg !966\l  br i1 %11, label %12, label %16, !dbg !967\l|{<s0>T|<s1>F}}"];
	Node0x11c40b0:s0 -> Node0x11c4100;
	Node0x11c40b0:s1 -> Node0x11c4150;
	Node0x11c4100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%12:\l12:                                               \l  %13 = load i64, i64* %2, align 8, !dbg !968, !tbaa !952\l  %14 = call zeroext i1 @is_prime(i64 noundef %13) #24, !dbg !969\l  %15 = xor i1 %14, true, !dbg !970\l  br label %16\l}"];
	Node0x11c4100 -> Node0x11c4150;
	Node0x11c4150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  %17 = phi i1 [ false, %9 ], [ %15, %12 ], !dbg !971\l  br i1 %17, label %18, label %21, !dbg !964\l|{<s0>T|<s1>F}}"];
	Node0x11c4150:s0 -> Node0x11c41a0;
	Node0x11c4150:s1 -> Node0x11c41f0;
	Node0x11c41a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%18:\l18:                                               \l  %19 = load i64, i64* %2, align 8, !dbg !972, !tbaa !952\l  %20 = add i64 %19, 2, !dbg !972\l  store i64 %20, i64* %2, align 8, !dbg !972, !tbaa !952\l  br label %9, !dbg !964, !llvm.loop !973\l}"];
	Node0x11c41a0 -> Node0x11c40b0;
	Node0x11c41f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%21:\l21:                                               \l  %22 = load i64, i64* %2, align 8, !dbg !977, !tbaa !952\l  ret i64 %22, !dbg !978\l}"];
}
