digraph "CFG for 'sha512_process_bytes' function" {
	label="CFG for 'sha512_process_bytes' function";

	Node0x17d5f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca %struct.sha512_ctx*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  store i8* %0, i8** %4, align 8, !tbaa !781\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !771, metadata\l... !DIExpression()), !dbg !785\l  store i64 %1, i64* %5, align 8, !tbaa !786\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !772, metadata\l... !DIExpression()), !dbg !788\l  store %struct.sha512_ctx* %2, %struct.sha512_ctx** %6, align 8, !tbaa !781\l  call void @llvm.dbg.declare(metadata %struct.sha512_ctx** %6, metadata !773,\l... metadata !DIExpression()), !dbg !789\l  %10 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg !790,\l... !tbaa !781\l  %11 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %10,\l... i32 0, i32 2, !dbg !791\l  %12 = load i64, i64* %11, align 8, !dbg !791, !tbaa !792\l  %13 = icmp ne i64 %12, 0, !dbg !794\l  br i1 %13, label %14, label %87, !dbg !795\l|{<s0>T|<s1>F}}"];
	Node0x17d5f00:s0 -> Node0x17d75c0;
	Node0x17d5f00:s1 -> Node0x17d77a0;
	Node0x17d75c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%14:\l14:                                               \l  %15 = bitcast i64* %7 to i8*, !dbg !796\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #21, !dbg !796\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !774, metadata\l... !DIExpression()), !dbg !797\l  %16 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg !798,\l... !tbaa !781\l  %17 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %16,\l... i32 0, i32 2, !dbg !799\l  %18 = load i64, i64* %17, align 8, !dbg !799, !tbaa !792\l  store i64 %18, i64* %7, align 8, !dbg !797, !tbaa !786\l  %19 = bitcast i64* %8 to i8*, !dbg !800\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #21, !dbg !800\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !777, metadata\l... !DIExpression()), !dbg !801\l  %20 = load i64, i64* %7, align 8, !dbg !802, !tbaa !786\l  %21 = sub i64 256, %20, !dbg !803\l  %22 = load i64, i64* %5, align 8, !dbg !804, !tbaa !786\l  %23 = icmp ugt i64 %21, %22, !dbg !805\l  br i1 %23, label %24, label %26, !dbg !806\l|{<s0>T|<s1>F}}"];
	Node0x17d75c0:s0 -> Node0x17d7610;
	Node0x17d75c0:s1 -> Node0x17d7660;
	Node0x17d7610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%24:\l24:                                               \l  %25 = load i64, i64* %5, align 8, !dbg !807, !tbaa !786\l  br label %29, !dbg !806\l}"];
	Node0x17d7610 -> Node0x17d76b0;
	Node0x17d7660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%26:\l26:                                               \l  %27 = load i64, i64* %7, align 8, !dbg !808, !tbaa !786\l  %28 = sub i64 256, %27, !dbg !809\l  br label %29, !dbg !806\l}"];
	Node0x17d7660 -> Node0x17d76b0;
	Node0x17d76b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%29:\l29:                                               \l  %30 = phi i64 [ %25, %24 ], [ %28, %26 ], !dbg !806\l  store i64 %30, i64* %8, align 8, !dbg !801, !tbaa !786\l  %31 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg !810,\l... !tbaa !781\l  %32 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %31,\l... i32 0, i32 3, !dbg !811\l  %33 = getelementptr inbounds [32 x i64], [32 x i64]* %32, i64 0, i64 0, !dbg\l... !812\l  %34 = bitcast i64* %33 to i8*, !dbg !812\l  %35 = load i64, i64* %7, align 8, !dbg !813, !tbaa !786\l  %36 = getelementptr inbounds i8, i8* %34, i64 %35, !dbg !812\l  %37 = load i8*, i8** %4, align 8, !dbg !814, !tbaa !781\l  %38 = load i64, i64* %8, align 8, !dbg !815, !tbaa !786\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %37, i64\l... %38, i1 false), !dbg !816\l  %39 = load i64, i64* %8, align 8, !dbg !817, !tbaa !786\l  %40 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg !818,\l... !tbaa !781\l  %41 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %40,\l... i32 0, i32 2, !dbg !819\l  %42 = load i64, i64* %41, align 8, !dbg !820, !tbaa !792\l  %43 = add i64 %42, %39, !dbg !820\l  store i64 %43, i64* %41, align 8, !dbg !820, !tbaa !792\l  %44 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg !821,\l... !tbaa !781\l  %45 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %44,\l... i32 0, i32 2, !dbg !823\l  %46 = load i64, i64* %45, align 8, !dbg !823, !tbaa !792\l  %47 = icmp ugt i64 %46, 128, !dbg !824\l  br i1 %47, label %48, label %78, !dbg !825\l|{<s0>T|<s1>F}}"];
	Node0x17d76b0:s0 -> Node0x17d7700;
	Node0x17d76b0:s1 -> Node0x17d7750;
	Node0x17d7700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%48:\l48:                                               \l  %49 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg !826,\l... !tbaa !781\l  %50 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %49,\l... i32 0, i32 3, !dbg !828\l  %51 = getelementptr inbounds [32 x i64], [32 x i64]* %50, i64 0, i64 0, !dbg\l... !826\l  %52 = bitcast i64* %51 to i8*, !dbg !826\l  %53 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg !829,\l... !tbaa !781\l  %54 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %53,\l... i32 0, i32 2, !dbg !830\l  %55 = load i64, i64* %54, align 8, !dbg !830, !tbaa !792\l  %56 = and i64 %55, -128, !dbg !831\l  %57 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg !832,\l... !tbaa !781\l  call void @sha512_process_block(i8* noundef %52, i64 noundef %56,\l... %struct.sha512_ctx* noundef %57), !dbg !833\l  %58 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg !834,\l... !tbaa !781\l  %59 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %58,\l... i32 0, i32 2, !dbg !835\l  %60 = load i64, i64* %59, align 8, !dbg !836, !tbaa !792\l  %61 = and i64 %60, 127, !dbg !836\l  store i64 %61, i64* %59, align 8, !dbg !836, !tbaa !792\l  %62 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg !837,\l... !tbaa !781\l  %63 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %62,\l... i32 0, i32 3, !dbg !838\l  %64 = getelementptr inbounds [32 x i64], [32 x i64]* %63, i64 0, i64 0, !dbg\l... !839\l  %65 = bitcast i64* %64 to i8*, !dbg !839\l  %66 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg !840,\l... !tbaa !781\l  %67 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %66,\l... i32 0, i32 3, !dbg !841\l  %68 = getelementptr inbounds [32 x i64], [32 x i64]* %67, i64 0, i64 0, !dbg\l... !842\l  %69 = bitcast i64* %68 to i8*, !dbg !842\l  %70 = load i64, i64* %7, align 8, !dbg !843, !tbaa !786\l  %71 = load i64, i64* %8, align 8, !dbg !844, !tbaa !786\l  %72 = add i64 %70, %71, !dbg !845\l  %73 = and i64 %72, -128, !dbg !846\l  %74 = getelementptr inbounds i8, i8* %69, i64 %73, !dbg !842\l  %75 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg !847,\l... !tbaa !781\l  %76 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %75,\l... i32 0, i32 2, !dbg !848\l  %77 = load i64, i64* %76, align 8, !dbg !848, !tbaa !792\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 1 %74, i64\l... %77, i1 false), !dbg !839\l  br label %78, !dbg !849\l}"];
	Node0x17d7700 -> Node0x17d7750;
	Node0x17d7750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%78:\l78:                                               \l  %79 = load i8*, i8** %4, align 8, !dbg !850, !tbaa !781\l  %80 = load i64, i64* %8, align 8, !dbg !851, !tbaa !786\l  %81 = getelementptr inbounds i8, i8* %79, i64 %80, !dbg !852\l  store i8* %81, i8** %4, align 8, !dbg !853, !tbaa !781\l  %82 = load i64, i64* %8, align 8, !dbg !854, !tbaa !786\l  %83 = load i64, i64* %5, align 8, !dbg !855, !tbaa !786\l  %84 = sub i64 %83, %82, !dbg !855\l  store i64 %84, i64* %5, align 8, !dbg !855, !tbaa !786\l  %85 = bitcast i64* %8 to i8*, !dbg !856\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #21, !dbg !856\l  %86 = bitcast i64* %7 to i8*, !dbg !856\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #21, !dbg !856\l  br label %87, !dbg !857\l}"];
	Node0x17d7750 -> Node0x17d77a0;
	Node0x17d77a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%87:\l87:                                               \l  %88 = load i64, i64* %5, align 8, !dbg !858, !tbaa !786\l  %89 = icmp uge i64 %88, 128, !dbg !860\l  br i1 %89, label %90, label %123, !dbg !861\l|{<s0>T|<s1>F}}"];
	Node0x17d77a0:s0 -> Node0x17d77f0;
	Node0x17d77a0:s1 -> Node0x17d7a20;
	Node0x17d77f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%90:\l90:                                               \l  %91 = load i8*, i8** %4, align 8, !dbg !862, !tbaa !781\l  %92 = ptrtoint i8* %91 to i64, !dbg !862\l  %93 = urem i64 %92, 8, !dbg !862\l  %94 = icmp ne i64 %93, 0, !dbg !862\l  br i1 %94, label %95, label %111, !dbg !865\l|{<s0>T|<s1>F}}"];
	Node0x17d77f0:s0 -> Node0x17d7840;
	Node0x17d77f0:s1 -> Node0x17d7980;
	Node0x17d7840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%95:\l95:                                               \l  br label %96, !dbg !866\l}"];
	Node0x17d7840 -> Node0x17d7890;
	Node0x17d7890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%96:\l96:                                               \l  %97 = load i64, i64* %5, align 8, !dbg !867, !tbaa !786\l  %98 = icmp ugt i64 %97, 128, !dbg !868\l  br i1 %98, label %99, label %110, !dbg !866\l|{<s0>T|<s1>F}}"];
	Node0x17d7890:s0 -> Node0x17d78e0;
	Node0x17d7890:s1 -> Node0x17d7930;
	Node0x17d78e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%99:\l99:                                               \l  %100 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg\l... !869, !tbaa !781\l  %101 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %100,\l... i32 0, i32 3, !dbg !871\l  %102 = getelementptr inbounds [32 x i64], [32 x i64]* %101, i64 0, i64 0,\l... !dbg !872\l  %103 = bitcast i64* %102 to i8*, !dbg !872\l  %104 = load i8*, i8** %4, align 8, !dbg !873, !tbaa !781\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 1 %104, i64\l... 128, i1 false), !dbg !872\l  %105 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg\l... !874, !tbaa !781\l  call void @sha512_process_block(i8* noundef %103, i64 noundef 128,\l... %struct.sha512_ctx* noundef %105), !dbg !875\l  %106 = load i8*, i8** %4, align 8, !dbg !876, !tbaa !781\l  %107 = getelementptr inbounds i8, i8* %106, i64 128, !dbg !877\l  store i8* %107, i8** %4, align 8, !dbg !878, !tbaa !781\l  %108 = load i64, i64* %5, align 8, !dbg !879, !tbaa !786\l  %109 = sub i64 %108, 128, !dbg !879\l  store i64 %109, i64* %5, align 8, !dbg !879, !tbaa !786\l  br label %96, !dbg !866, !llvm.loop !880\l}"];
	Node0x17d78e0 -> Node0x17d7890;
	Node0x17d7930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%110:\l110:                                              \l  br label %122, !dbg !866\l}"];
	Node0x17d7930 -> Node0x17d79d0;
	Node0x17d7980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%111:\l111:                                              \l  %112 = load i8*, i8** %4, align 8, !dbg !884, !tbaa !781\l  %113 = load i64, i64* %5, align 8, !dbg !886, !tbaa !786\l  %114 = and i64 %113, -128, !dbg !887\l  %115 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg\l... !888, !tbaa !781\l  call void @sha512_process_block(i8* noundef %112, i64 noundef %114,\l... %struct.sha512_ctx* noundef %115), !dbg !889\l  %116 = load i8*, i8** %4, align 8, !dbg !890, !tbaa !781\l  %117 = load i64, i64* %5, align 8, !dbg !891, !tbaa !786\l  %118 = and i64 %117, -128, !dbg !892\l  %119 = getelementptr inbounds i8, i8* %116, i64 %118, !dbg !893\l  store i8* %119, i8** %4, align 8, !dbg !894, !tbaa !781\l  %120 = load i64, i64* %5, align 8, !dbg !895, !tbaa !786\l  %121 = and i64 %120, 127, !dbg !895\l  store i64 %121, i64* %5, align 8, !dbg !895, !tbaa !786\l  br label %122\l}"];
	Node0x17d7980 -> Node0x17d79d0;
	Node0x17d79d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%122:\l122:                                              \l  br label %123, !dbg !896\l}"];
	Node0x17d79d0 -> Node0x17d7a20;
	Node0x17d7a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%123:\l123:                                              \l  %124 = load i64, i64* %5, align 8, !dbg !897, !tbaa !786\l  %125 = icmp ugt i64 %124, 0, !dbg !898\l  br i1 %125, label %126, label %166, !dbg !899\l|{<s0>T|<s1>F}}"];
	Node0x17d7a20:s0 -> Node0x17d7a70;
	Node0x17d7a20:s1 -> Node0x17d7b60;
	Node0x17d7a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%126:\l126:                                              \l  %127 = bitcast i64* %9 to i8*, !dbg !900\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %127) #21, !dbg !900\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !778, metadata\l... !DIExpression()), !dbg !901\l  %128 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg\l... !902, !tbaa !781\l  %129 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %128,\l... i32 0, i32 2, !dbg !903\l  %130 = load i64, i64* %129, align 8, !dbg !903, !tbaa !792\l  store i64 %130, i64* %9, align 8, !dbg !901, !tbaa !786\l  %131 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg\l... !904, !tbaa !781\l  %132 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %131,\l... i32 0, i32 3, !dbg !905\l  %133 = getelementptr inbounds [32 x i64], [32 x i64]* %132, i64 0, i64 0,\l... !dbg !906\l  %134 = bitcast i64* %133 to i8*, !dbg !906\l  %135 = load i64, i64* %9, align 8, !dbg !907, !tbaa !786\l  %136 = getelementptr inbounds i8, i8* %134, i64 %135, !dbg !906\l  %137 = load i8*, i8** %4, align 8, !dbg !908, !tbaa !781\l  %138 = load i64, i64* %5, align 8, !dbg !909, !tbaa !786\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %136, i8* align 1 %137, i64\l... %138, i1 false), !dbg !910\l  %139 = load i64, i64* %5, align 8, !dbg !911, !tbaa !786\l  %140 = load i64, i64* %9, align 8, !dbg !912, !tbaa !786\l  %141 = add i64 %140, %139, !dbg !912\l  store i64 %141, i64* %9, align 8, !dbg !912, !tbaa !786\l  %142 = load i64, i64* %9, align 8, !dbg !913, !tbaa !786\l  %143 = icmp uge i64 %142, 128, !dbg !915\l  br i1 %143, label %144, label %161, !dbg !916\l|{<s0>T|<s1>F}}"];
	Node0x17d7a70:s0 -> Node0x17d7ac0;
	Node0x17d7a70:s1 -> Node0x17d7b10;
	Node0x17d7ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%144:\l144:                                              \l  %145 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg\l... !917, !tbaa !781\l  %146 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %145,\l... i32 0, i32 3, !dbg !919\l  %147 = getelementptr inbounds [32 x i64], [32 x i64]* %146, i64 0, i64 0,\l... !dbg !917\l  %148 = bitcast i64* %147 to i8*, !dbg !917\l  %149 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg\l... !920, !tbaa !781\l  call void @sha512_process_block(i8* noundef %148, i64 noundef 128,\l... %struct.sha512_ctx* noundef %149), !dbg !921\l  %150 = load i64, i64* %9, align 8, !dbg !922, !tbaa !786\l  %151 = sub i64 %150, 128, !dbg !922\l  store i64 %151, i64* %9, align 8, !dbg !922, !tbaa !786\l  %152 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg\l... !923, !tbaa !781\l  %153 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %152,\l... i32 0, i32 3, !dbg !924\l  %154 = getelementptr inbounds [32 x i64], [32 x i64]* %153, i64 0, i64 0,\l... !dbg !925\l  %155 = bitcast i64* %154 to i8*, !dbg !925\l  %156 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg\l... !926, !tbaa !781\l  %157 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %156,\l... i32 0, i32 3, !dbg !927\l  %158 = getelementptr inbounds [32 x i64], [32 x i64]* %157, i64 0, i64 16,\l... !dbg !926\l  %159 = bitcast i64* %158 to i8*, !dbg !925\l  %160 = load i64, i64* %9, align 8, !dbg !928, !tbaa !786\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %159, i64\l... %160, i1 false), !dbg !925\l  br label %161, !dbg !929\l}"];
	Node0x17d7ac0 -> Node0x17d7b10;
	Node0x17d7b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%161:\l161:                                              \l  %162 = load i64, i64* %9, align 8, !dbg !930, !tbaa !786\l  %163 = load %struct.sha512_ctx*, %struct.sha512_ctx** %6, align 8, !dbg\l... !931, !tbaa !781\l  %164 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %163,\l... i32 0, i32 2, !dbg !932\l  store i64 %162, i64* %164, align 8, !dbg !933, !tbaa !792\l  %165 = bitcast i64* %9 to i8*, !dbg !934\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #21, !dbg !934\l  br label %166, !dbg !935\l}"];
	Node0x17d7b10 -> Node0x17d7b60;
	Node0x17d7b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%166:\l166:                                              \l  ret void, !dbg !936\l}"];
}
