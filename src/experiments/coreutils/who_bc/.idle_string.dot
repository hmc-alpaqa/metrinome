digraph "CFG for 'idle_string' function" {
	label="CFG for 'idle_string' function";

	Node0x117cd90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store i64 %0, i64* %4, align 8, !tbaa !1221\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !213, metadata\l... !DIExpression()), !dbg !1225\l  store i64 %1, i64* %5, align 8, !tbaa !1221\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !214, metadata\l... !DIExpression()), !dbg !1226\l  %8 = load i64, i64* @idle_string.now, align 8, !dbg !1227, !tbaa !1221\l  %9 = icmp eq i64 %8, -9223372036854775808, !dbg !1229\l  br i1 %9, label %10, label %12, !dbg !1230\l|{<s0>T|<s1>F}}"];
	Node0x117cd90:s0 -> Node0x117d810;
	Node0x117cd90:s1 -> Node0x117d860;
	Node0x117d810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%10:\l10:                                               \l  %11 = call i64 @rpl_time(i64* noundef @idle_string.now), !dbg !1231\l  br label %12, !dbg !1231\l}"];
	Node0x117d810 -> Node0x117d860;
	Node0x117d860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l12:                                               \l  %13 = bitcast i32* %6 to i8*, !dbg !1232\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #22, !dbg !1232\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !215, metadata\l... !DIExpression()), !dbg !1233\l  %14 = load i64, i64* %5, align 8, !dbg !1234, !tbaa !1221\l  %15 = load i64, i64* %4, align 8, !dbg !1236, !tbaa !1221\l  %16 = icmp slt i64 %14, %15, !dbg !1237\l  br i1 %16, label %17, label %45, !dbg !1238\l|{<s0>T|<s1>F}}"];
	Node0x117d860:s0 -> Node0x117d8b0;
	Node0x117d860:s1 -> Node0x117da90;
	Node0x117d8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%17:\l17:                                               \l  %18 = load i64, i64* %4, align 8, !dbg !1239, !tbaa !1221\l  %19 = load i64, i64* @idle_string.now, align 8, !dbg !1240, !tbaa !1221\l  %20 = icmp sle i64 %18, %19, !dbg !1241\l  br i1 %20, label %21, label %45, !dbg !1242\l|{<s0>T|<s1>F}}"];
	Node0x117d8b0:s0 -> Node0x117d900;
	Node0x117d8b0:s1 -> Node0x117da90;
	Node0x117d900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%21:\l21:                                               \l  %22 = load i64, i64* @idle_string.now, align 8, !dbg !1243, !tbaa !1221\l  %23 = load i64, i64* %4, align 8, !dbg !1243, !tbaa !1221\l  %24 = call \{ i64, i1 \} @llvm.ssub.with.overflow.i64(i64 %22, i64 %23), !dbg\l... !1243\l  %25 = extractvalue \{ i64, i1 \} %24, 1, !dbg !1243\l  %26 = extractvalue \{ i64, i1 \} %24, 0, !dbg !1243\l  %27 = trunc i64 %26 to i32, !dbg !1243\l  %28 = sext i32 %27 to i64, !dbg !1243\l  %29 = icmp ne i64 %26, %28, !dbg !1243\l  %30 = or i1 %25, %29, !dbg !1243\l  store i32 %27, i32* %6, align 4, !dbg !1243\l  br i1 %30, label %45, label %31, !dbg !1244\l|{<s0>T|<s1>F}}"];
	Node0x117d900:s0 -> Node0x117da90;
	Node0x117d900:s1 -> Node0x117d950;
	Node0x117d950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%31:\l31:                                               \l  %32 = load i32, i32* %6, align 4, !dbg !1245, !tbaa !1246\l  %33 = icmp slt i32 %32, 86400, !dbg !1248\l  br i1 %33, label %34, label %45, !dbg !1249\l|{<s0>T|<s1>F}}"];
	Node0x117d950:s0 -> Node0x117d9a0;
	Node0x117d950:s1 -> Node0x117da90;
	Node0x117d9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%34:\l34:                                               \l  %35 = load i32, i32* %6, align 4, !dbg !1250, !tbaa !1246\l  %36 = icmp slt i32 %35, 60, !dbg !1253\l  br i1 %36, label %37, label %38, !dbg !1254\l|{<s0>T|<s1>F}}"];
	Node0x117d9a0:s0 -> Node0x117d9f0;
	Node0x117d9a0:s1 -> Node0x117da40;
	Node0x117d9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%37:\l37:                                               \l  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64\l... 0), i8** %3, align 8, !dbg !1255\l  store i32 1, i32* %7, align 4\l  br label %46, !dbg !1255\l}"];
	Node0x117d9f0 -> Node0x117dae0;
	Node0x117da40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%38:\l38:                                               \l  %39 = load i32, i32* %6, align 4, !dbg !1256, !tbaa !1246\l  %40 = sdiv i32 %39, 3600, !dbg !1258\l  %41 = load i32, i32* %6, align 4, !dbg !1259, !tbaa !1246\l  %42 = srem i32 %41, 3600, !dbg !1260\l  %43 = sdiv i32 %42, 60, !dbg !1261\l  %44 = call i32 (i8*, i8*, ...) @sprintf(i8* noundef getelementptr inbounds\l... ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8* noundef\l... getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80, i64 0, i64 0), i32\l... noundef %40, i32 noundef %43) #22, !dbg !1262\l  store i8* getelementptr inbounds ([6 x i8], [6 x i8]*\l... @idle_string.idle_hhmm, i64 0, i64 0), i8** %3, align 8, !dbg !1263\l  store i32 1, i32* %7, align 4\l  br label %46, !dbg !1263\l}"];
	Node0x117da40 -> Node0x117dae0;
	Node0x117da90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%45:\l45:                                               \l  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64\l... 0), i8** %3, align 8, !dbg !1264\l  store i32 1, i32* %7, align 4\l  br label %46, !dbg !1264\l}"];
	Node0x117da90 -> Node0x117dae0;
	Node0x117dae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = bitcast i32* %6 to i8*, !dbg !1265\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %47) #22, !dbg !1265\l  %48 = load i8*, i8** %3, align 8, !dbg !1265\l  ret i8* %48, !dbg !1265\l}"];
}
