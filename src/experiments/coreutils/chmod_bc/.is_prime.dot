digraph "CFG for 'is_prime' function" {
	label="CFG for 'is_prime' function";

	Node0x2169a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%1:\l  %2 = alloca i64, align 8\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  store i64 %0, i64* %2, align 8, !tbaa !957\l  call void @llvm.dbg.declare(metadata i64* %2, metadata !954, metadata\l... !DIExpression()), !dbg !961\l  %5 = bitcast i64* %3 to i8*, !dbg !962\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #22, !dbg !962\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !955, metadata\l... !DIExpression()), !dbg !963\l  store i64 3, i64* %3, align 8, !dbg !963, !tbaa !957\l  %6 = bitcast i64* %4 to i8*, !dbg !964\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #22, !dbg !964\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !956, metadata\l... !DIExpression()), !dbg !965\l  %7 = load i64, i64* %3, align 8, !dbg !966, !tbaa !957\l  %8 = load i64, i64* %3, align 8, !dbg !967, !tbaa !957\l  %9 = mul i64 %7, %8, !dbg !968\l  store i64 %9, i64* %4, align 8, !dbg !965, !tbaa !957\l  br label %10, !dbg !969\l}"];
	Node0x2169a40 -> Node0x216b220;
	Node0x216b220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l10:                                               \l  %11 = load i64, i64* %4, align 8, !dbg !970, !tbaa !957\l  %12 = load i64, i64* %2, align 8, !dbg !971, !tbaa !957\l  %13 = icmp ult i64 %11, %12, !dbg !972\l  br i1 %13, label %14, label %19, !dbg !973\l|{<s0>T|<s1>F}}"];
	Node0x216b220:s0 -> Node0x216b2b0;
	Node0x216b220:s1 -> Node0x216b300;
	Node0x216b2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%14:\l14:                                               \l  %15 = load i64, i64* %2, align 8, !dbg !974, !tbaa !957\l  %16 = load i64, i64* %3, align 8, !dbg !975, !tbaa !957\l  %17 = urem i64 %15, %16, !dbg !976\l  %18 = icmp ne i64 %17, 0, !dbg !973\l  br label %19\l}"];
	Node0x216b2b0 -> Node0x216b300;
	Node0x216b300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = phi i1 [ false, %10 ], [ %18, %14 ], !dbg !977\l  br i1 %20, label %21, label %30, !dbg !969\l|{<s0>T|<s1>F}}"];
	Node0x216b300:s0 -> Node0x216b350;
	Node0x216b300:s1 -> Node0x216b3a0;
	Node0x216b350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%21:\l21:                                               \l  %22 = load i64, i64* %3, align 8, !dbg !978, !tbaa !957\l  %23 = add i64 %22, 1, !dbg !978\l  store i64 %23, i64* %3, align 8, !dbg !978, !tbaa !957\l  %24 = load i64, i64* %3, align 8, !dbg !980, !tbaa !957\l  %25 = mul i64 4, %24, !dbg !981\l  %26 = load i64, i64* %4, align 8, !dbg !982, !tbaa !957\l  %27 = add i64 %26, %25, !dbg !982\l  store i64 %27, i64* %4, align 8, !dbg !982, !tbaa !957\l  %28 = load i64, i64* %3, align 8, !dbg !983, !tbaa !957\l  %29 = add i64 %28, 1, !dbg !983\l  store i64 %29, i64* %3, align 8, !dbg !983, !tbaa !957\l  br label %10, !dbg !969, !llvm.loop !984\l}"];
	Node0x216b350 -> Node0x216b220;
	Node0x216b3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%30:\l30:                                               \l  %31 = load i64, i64* %2, align 8, !dbg !988, !tbaa !957\l  %32 = load i64, i64* %3, align 8, !dbg !989, !tbaa !957\l  %33 = urem i64 %31, %32, !dbg !990\l  %34 = icmp ne i64 %33, 0, !dbg !988\l  %35 = zext i1 %34 to i64, !dbg !988\l  %36 = select i1 %34, i32 1, i32 0, !dbg !988\l  %37 = icmp ne i32 %36, 0, !dbg !991\l  %38 = bitcast i64* %4 to i8*, !dbg !992\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #22, !dbg !992\l  %39 = bitcast i64* %3 to i8*, !dbg !992\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #22, !dbg !992\l  ret i1 %37, !dbg !993\l}"];
}
