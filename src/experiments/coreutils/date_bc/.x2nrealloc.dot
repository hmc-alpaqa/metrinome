digraph "CFG for 'x2nrealloc' function" {
	label="CFG for 'x2nrealloc' function";

	Node0x17037c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i64*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  store i8* %0, i8** %4, align 8, !tbaa !1634\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !1493, metadata\l... !DIExpression()), !dbg !1638\l  store i64* %1, i64** %5, align 8, !tbaa !1634\l  call void @llvm.dbg.declare(metadata i64** %5, metadata !1494, metadata\l... !DIExpression()), !dbg !1639\l  store i64 %2, i64* %6, align 8, !tbaa !1640\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1495, metadata\l... !DIExpression()), !dbg !1642\l  %8 = bitcast i64* %7 to i8*, !dbg !1643\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #23, !dbg !1643\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1496, metadata\l... !DIExpression()), !dbg !1644\l  %9 = load i64*, i64** %5, align 8, !dbg !1645, !tbaa !1634\l  %10 = load i64, i64* %9, align 8, !dbg !1646, !tbaa !1640\l  store i64 %10, i64* %7, align 8, !dbg !1644, !tbaa !1640\l  %11 = load i8*, i8** %4, align 8, !dbg !1647, !tbaa !1634\l  %12 = icmp ne i8* %11, null, !dbg !1647\l  br i1 %12, label %27, label %13, !dbg !1649\l|{<s0>T|<s1>F}}"];
	Node0x17037c0:s0 -> Node0x1703900;
	Node0x17037c0:s1 -> Node0x1703810;
	Node0x1703810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%13:\l13:                                               \l  %14 = load i64, i64* %7, align 8, !dbg !1650, !tbaa !1640\l  %15 = icmp ne i64 %14, 0, !dbg !1650\l  br i1 %15, label %26, label %16, !dbg !1653\l|{<s0>T|<s1>F}}"];
	Node0x1703810:s0 -> Node0x17038b0;
	Node0x1703810:s1 -> Node0x1703860;
	Node0x1703860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%16:\l16:                                               \l  %17 = load i64, i64* %6, align 8, !dbg !1654, !tbaa !1640\l  %18 = udiv i64 128, %17, !dbg !1656\l  store i64 %18, i64* %7, align 8, !dbg !1657, !tbaa !1640\l  %19 = load i64, i64* %7, align 8, !dbg !1658, !tbaa !1640\l  %20 = icmp ne i64 %19, 0, !dbg !1659\l  %21 = xor i1 %20, true, !dbg !1659\l  %22 = zext i1 %21 to i32, !dbg !1659\l  %23 = sext i32 %22 to i64, !dbg !1659\l  %24 = load i64, i64* %7, align 8, !dbg !1660, !tbaa !1640\l  %25 = add i64 %24, %23, !dbg !1660\l  store i64 %25, i64* %7, align 8, !dbg !1660, !tbaa !1640\l  br label %26, !dbg !1661\l}"];
	Node0x1703860 -> Node0x17038b0;
	Node0x17038b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%26:\l26:                                               \l  br label %37, !dbg !1662\l}"];
	Node0x17038b0 -> Node0x17039f0;
	Node0x1703900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%27:\l27:                                               \l  %28 = load i64, i64* %7, align 8, !dbg !1663, !tbaa !1640\l  %29 = load i64, i64* %7, align 8, !dbg !1663, !tbaa !1640\l  %30 = lshr i64 %29, 1, !dbg !1663\l  %31 = add i64 %30, 1, !dbg !1663\l  %32 = call \{ i64, i1 \} @llvm.uadd.with.overflow.i64(i64 %28, i64 %31), !dbg\l... !1663\l  %33 = extractvalue \{ i64, i1 \} %32, 1, !dbg !1663\l  %34 = extractvalue \{ i64, i1 \} %32, 0, !dbg !1663\l  store i64 %34, i64* %7, align 8, !dbg !1663\l  br i1 %33, label %35, label %36, !dbg !1666\l|{<s0>T|<s1>F}}"];
	Node0x1703900:s0 -> Node0x1703950;
	Node0x1703900:s1 -> Node0x17039a0;
	Node0x1703950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%35:\l35:                                               \l  call void @xalloc_die() #24, !dbg !1667\l  unreachable, !dbg !1667\l}"];
	Node0x17039a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%36:\l36:                                               \l  br label %37\l}"];
	Node0x17039a0 -> Node0x17039f0;
	Node0x17039f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = load i8*, i8** %4, align 8, !dbg !1668, !tbaa !1634\l  %39 = load i64, i64* %7, align 8, !dbg !1669, !tbaa !1640\l  %40 = load i64, i64* %6, align 8, !dbg !1670, !tbaa !1640\l  %41 = call i8* @xreallocarray(i8* noundef %38, i64 noundef %39, i64 noundef\l... %40) #25, !dbg !1671\l  store i8* %41, i8** %4, align 8, !dbg !1672, !tbaa !1634\l  %42 = load i64, i64* %7, align 8, !dbg !1673, !tbaa !1640\l  %43 = load i64*, i64** %5, align 8, !dbg !1674, !tbaa !1634\l  store i64 %42, i64* %43, align 8, !dbg !1675, !tbaa !1640\l  %44 = load i8*, i8** %4, align 8, !dbg !1676, !tbaa !1634\l  %45 = bitcast i64* %7 to i8*, !dbg !1677\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #23, !dbg !1677\l  ret i8* %44, !dbg !1678\l}"];
}
