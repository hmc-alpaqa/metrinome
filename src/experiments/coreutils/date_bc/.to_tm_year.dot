digraph "CFG for 'to_tm_year' function" {
	label="CFG for 'to_tm_year' function";

	Node0x1763df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca i1, align 1\l  %5 = alloca i8, align 1\l  %6 = alloca i32*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i32, align 4\l  call void @llvm.dbg.declare(metadata %struct.textint* %0, metadata !1638,\l... metadata !DIExpression()), !dbg !1642\l  %9 = zext i1 %1 to i8\l  store i8 %9, i8* %5, align 1, !tbaa !1643\l  call void @llvm.dbg.declare(metadata i8* %5, metadata !1639, metadata\l... !DIExpression()), !dbg !1647\l  store i32* %2, i32** %6, align 8, !tbaa !1648\l  call void @llvm.dbg.declare(metadata i32** %6, metadata !1640, metadata\l... !DIExpression()), !dbg !1650\l  %10 = bitcast i64* %7 to i8*, !dbg !1651\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #23, !dbg !1651\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1641, metadata\l... !DIExpression()), !dbg !1652\l  %11 = getelementptr inbounds %struct.textint, %struct.textint* %0, i32 0,\l... i32 1, !dbg !1653\l  %12 = load i64, i64* %11, align 8, !dbg !1653, !tbaa !1654\l  store i64 %12, i64* %7, align 8, !dbg !1652, !tbaa !1657\l  %13 = load i64, i64* %7, align 8, !dbg !1658, !tbaa !1657\l  %14 = icmp sle i64 0, %13, !dbg !1660\l  br i1 %14, label %15, label %34, !dbg !1661\l|{<s0>T|<s1>F}}"];
	Node0x1763df0:s0 -> Node0x17055d0;
	Node0x1763df0:s1 -> Node0x1705710;
	Node0x17055d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%15:\l15:                                               \l  %16 = getelementptr inbounds %struct.textint, %struct.textint* %0, i32 0,\l... i32 2, !dbg !1662\l  %17 = load i64, i64* %16, align 8, !dbg !1662, !tbaa !1663\l  %18 = icmp eq i64 %17, 2, !dbg !1664\l  br i1 %18, label %19, label %34, !dbg !1665\l|{<s0>T|<s1>F}}"];
	Node0x17055d0:s0 -> Node0x1705620;
	Node0x17055d0:s1 -> Node0x1705710;
	Node0x1705620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%19:\l19:                                               \l  %20 = load i64, i64* %7, align 8, !dbg !1666, !tbaa !1657\l  %21 = icmp slt i64 %20, 69, !dbg !1668\l  %22 = zext i1 %21 to i64, !dbg !1666\l  %23 = select i1 %21, i32 2000, i32 1900, !dbg !1666\l  %24 = sext i32 %23 to i64, !dbg !1666\l  %25 = load i64, i64* %7, align 8, !dbg !1669, !tbaa !1657\l  %26 = add nsw i64 %25, %24, !dbg !1669\l  store i64 %26, i64* %7, align 8, !dbg !1669, !tbaa !1657\l  %27 = load i8, i8* %5, align 1, !dbg !1670, !tbaa !1643, !range !1672\l  %28 = trunc i8 %27 to i1, !dbg !1670\l  br i1 %28, label %29, label %33, !dbg !1673\l|{<s0>T|<s1>F}}"];
	Node0x1705620:s0 -> Node0x1705670;
	Node0x1705620:s1 -> Node0x17056c0;
	Node0x1705670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%29:\l29:                                               \l  %30 = getelementptr inbounds %struct.textint, %struct.textint* %0, i32 0,\l... i32 1, !dbg !1674\l  %31 = load i64, i64* %30, align 8, !dbg !1674, !tbaa !1654\l  %32 = load i64, i64* %7, align 8, !dbg !1675, !tbaa !1657\l  call void (i8*, ...) @dbg_printf(i8* noundef getelementptr inbounds ([42 x\l... i8], [42 x i8]* @.str.238, i64 0, i64 0), i64 noundef %31, i64 noundef %32),\l... !dbg !1676\l  br label %33, !dbg !1676\l}"];
	Node0x1705670 -> Node0x17056c0;
	Node0x17056c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%33:\l33:                                               \l  br label %34, !dbg !1677\l}"];
	Node0x17056c0 -> Node0x1705710;
	Node0x1705710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = load i64, i64* %7, align 8, !dbg !1678, !tbaa !1657\l  %36 = icmp slt i64 %35, 0, !dbg !1680\l  br i1 %36, label %37, label %47, !dbg !1681\l|{<s0>T|<s1>F}}"];
	Node0x1705710:s0 -> Node0x1705760;
	Node0x1705710:s1 -> Node0x17057b0;
	Node0x1705760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%37:\l37:                                               \l  %38 = load i64, i64* %7, align 8, !dbg !1682, !tbaa !1657\l  %39 = load i32*, i32** %6, align 8, !dbg !1682, !tbaa !1648\l  %40 = call \{ i64, i1 \} @llvm.ssub.with.overflow.i64(i64 -1900, i64 %38),\l... !dbg !1682\l  %41 = extractvalue \{ i64, i1 \} %40, 1, !dbg !1682\l  %42 = extractvalue \{ i64, i1 \} %40, 0, !dbg !1682\l  %43 = trunc i64 %42 to i32, !dbg !1682\l  %44 = sext i32 %43 to i64, !dbg !1682\l  %45 = icmp ne i64 %42, %44, !dbg !1682\l  %46 = or i1 %41, %45, !dbg !1682\l  store i32 %43, i32* %39, align 4, !dbg !1682\l  br i1 %46, label %57, label %63, !dbg !1678\l|{<s0>T|<s1>F}}"];
	Node0x1705760:s0 -> Node0x1705800;
	Node0x1705760:s1 -> Node0x17058f0;
	Node0x17057b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#dc5d4a70",label="{%47:\l47:                                               \l  %48 = load i64, i64* %7, align 8, !dbg !1683, !tbaa !1657\l  %49 = load i32*, i32** %6, align 8, !dbg !1683, !tbaa !1648\l  %50 = call \{ i64, i1 \} @llvm.ssub.with.overflow.i64(i64 %48, i64 1900), !dbg\l... !1683\l  %51 = extractvalue \{ i64, i1 \} %50, 1, !dbg !1683\l  %52 = extractvalue \{ i64, i1 \} %50, 0, !dbg !1683\l  %53 = trunc i64 %52 to i32, !dbg !1683\l  %54 = sext i32 %53 to i64, !dbg !1683\l  %55 = icmp ne i64 %52, %54, !dbg !1683\l  %56 = or i1 %51, %55, !dbg !1683\l  store i32 %53, i32* %49, align 4, !dbg !1683\l  br i1 %56, label %57, label %63, !dbg !1681\l|{<s0>T|<s1>F}}"];
	Node0x17057b0:s0 -> Node0x1705800;
	Node0x17057b0:s1 -> Node0x17058f0;
	Node0x1705800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%57:\l57:                                               \l  %58 = load i8, i8* %5, align 1, !dbg !1684, !tbaa !1643, !range !1672\l  %59 = trunc i8 %58 to i1, !dbg !1684\l  br i1 %59, label %60, label %62, !dbg !1687\l|{<s0>T|<s1>F}}"];
	Node0x1705800:s0 -> Node0x1705850;
	Node0x1705800:s1 -> Node0x17058a0;
	Node0x1705850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%60:\l60:                                               \l  %61 = load i64, i64* %7, align 8, !dbg !1688, !tbaa !1657\l  call void (i8*, ...) @dbg_printf(i8* noundef getelementptr inbounds ([30 x\l... i8], [30 x i8]* @.str.239, i64 0, i64 0), i64 noundef %61), !dbg !1689\l  br label %62, !dbg !1689\l}"];
	Node0x1705850 -> Node0x17058a0;
	Node0x17058a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%62:\l62:                                               \l  store i1 false, i1* %4, align 1, !dbg !1690\l  store i32 1, i32* %8, align 4\l  br label %64, !dbg !1690\l}"];
	Node0x17058a0 -> Node0x1705940;
	Node0x17058f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%63:\l63:                                               \l  store i1 true, i1* %4, align 1, !dbg !1691\l  store i32 1, i32* %8, align 4\l  br label %64, !dbg !1691\l}"];
	Node0x17058f0 -> Node0x1705940;
	Node0x1705940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = bitcast i64* %7 to i8*, !dbg !1692\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %65) #23, !dbg !1692\l  %66 = load i1, i1* %4, align 1, !dbg !1692\l  ret i1 %66, !dbg !1692\l}"];
}
