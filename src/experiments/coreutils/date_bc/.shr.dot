digraph "CFG for 'shr' function" {
	label="CFG for 'shr' function";

	Node0x18f2d80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca i32, align 4\l  %5 = alloca i64, align 8\l  store i64 %0, i64* %3, align 8, !tbaa !1641\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !1638, metadata\l... !DIExpression()), !dbg !1645\l  store i32 %1, i32* %4, align 4, !tbaa !1646\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !1639, metadata\l... !DIExpression()), !dbg !1648\l  %6 = bitcast i64* %5 to i8*, !dbg !1649\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #23, !dbg !1649\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !1640, metadata\l... !DIExpression()), !dbg !1650\l  store i64 1, i64* %5, align 8, !dbg !1650, !tbaa !1641\l  %7 = load i64, i64* %5, align 8, !dbg !1651, !tbaa !1641\l  %8 = sub nsw i64 0, %7, !dbg !1652\l  %9 = ashr i64 %8, 1, !dbg !1653\l  %10 = icmp eq i64 %9, -1, !dbg !1654\l  br i1 %10, label %11, label %16, !dbg !1652\l|{<s0>T|<s1>F}}"];
	Node0x18f2d80:s0 -> Node0x18f3e10;
	Node0x18f2d80:s1 -> Node0x18f3e60;
	Node0x18f3e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%11:\l11:                                               \l  %12 = load i64, i64* %3, align 8, !dbg !1655, !tbaa !1641\l  %13 = load i32, i32* %4, align 4, !dbg !1656, !tbaa !1646\l  %14 = zext i32 %13 to i64, !dbg !1657\l  %15 = ashr i64 %12, %14, !dbg !1657\l  br label %33, !dbg !1652\l}"];
	Node0x18f3e10 -> Node0x18f3eb0;
	Node0x18f3e60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%16:\l16:                                               \l  %17 = load i64, i64* %3, align 8, !dbg !1658, !tbaa !1641\l  %18 = load i64, i64* %3, align 8, !dbg !1659, !tbaa !1641\l  %19 = icmp slt i64 %18, 0, !dbg !1660\l  %20 = zext i1 %19 to i32, !dbg !1660\l  %21 = sext i32 %20 to i64, !dbg !1661\l  %22 = add nsw i64 %17, %21, !dbg !1662\l  %23 = load i64, i64* %5, align 8, !dbg !1663, !tbaa !1641\l  %24 = load i32, i32* %4, align 4, !dbg !1664, !tbaa !1646\l  %25 = zext i32 %24 to i64, !dbg !1665\l  %26 = shl i64 %23, %25, !dbg !1665\l  %27 = sdiv i64 %22, %26, !dbg !1666\l  %28 = load i64, i64* %3, align 8, !dbg !1667, !tbaa !1641\l  %29 = icmp slt i64 %28, 0, !dbg !1668\l  %30 = zext i1 %29 to i32, !dbg !1668\l  %31 = sext i32 %30 to i64, !dbg !1669\l  %32 = sub nsw i64 %27, %31, !dbg !1670\l  br label %33, !dbg !1652\l}"];
	Node0x18f3e60 -> Node0x18f3eb0;
	Node0x18f3eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i64 [ %15, %11 ], [ %32, %16 ], !dbg !1652\l  %35 = bitcast i64* %5 to i8*, !dbg !1671\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #23, !dbg !1671\l  ret i64 %34, !dbg !1672\l}"];
}
