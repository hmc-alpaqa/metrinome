digraph "CFG for 'time_zone_hhmm' function" {
	label="CFG for 'time_zone_hhmm' function";

	Node0x16c1340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca i1, align 1\l  %5 = alloca %struct.parser_control*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i8, align 1\l  %9 = alloca i32, align 4\l  store %struct.parser_control* %0, %struct.parser_control** %5, align 8,\l... !tbaa !1643\l  call void @llvm.dbg.declare(metadata %struct.parser_control** %5, metadata\l... !1638, metadata !DIExpression()), !dbg !1647\l  call void @llvm.dbg.declare(metadata %struct.textint* %1, metadata !1639,\l... metadata !DIExpression()), !dbg !1648\l  store i64 %2, i64* %6, align 8, !tbaa !1649\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1640, metadata\l... !DIExpression()), !dbg !1651\l  %10 = bitcast i64* %7 to i8*, !dbg !1652\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #23, !dbg !1652\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1641, metadata\l... !DIExpression()), !dbg !1653\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %8) #23, !dbg !1654\l  call void @llvm.dbg.declare(metadata i8* %8, metadata !1642, metadata\l... !DIExpression()), !dbg !1655\l  store i8 0, i8* %8, align 1, !dbg !1655, !tbaa !1656\l  %11 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0,\l... i32 2, !dbg !1658\l  %12 = load i64, i64* %11, align 8, !dbg !1658, !tbaa !1660\l  %13 = icmp sle i64 %12, 2, !dbg !1662\l  br i1 %13, label %14, label %21, !dbg !1663\l|{<s0>T|<s1>F}}"];
	Node0x16c1340:s0 -> Node0x16c1410;
	Node0x16c1340:s1 -> Node0x16c14b0;
	Node0x16c1410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%14:\l14:                                               \l  %15 = load i64, i64* %6, align 8, !dbg !1664, !tbaa !1649\l  %16 = icmp slt i64 %15, 0, !dbg !1665\l  br i1 %16, label %17, label %21, !dbg !1666\l|{<s0>T|<s1>F}}"];
	Node0x16c1410:s0 -> Node0x16c1460;
	Node0x16c1410:s1 -> Node0x16c14b0;
	Node0x16c1460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%17:\l17:                                               \l  %18 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0,\l... i32 1, !dbg !1667\l  %19 = load i64, i64* %18, align 8, !dbg !1668, !tbaa !1669\l  %20 = mul nsw i64 %19, 100, !dbg !1668\l  store i64 %20, i64* %18, align 8, !dbg !1668, !tbaa !1669\l  br label %21, !dbg !1670\l}"];
	Node0x16c1460 -> Node0x16c14b0;
	Node0x16c14b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = load i64, i64* %6, align 8, !dbg !1671, !tbaa !1649\l  %23 = icmp slt i64 %22, 0, !dbg !1673\l  br i1 %23, label %24, label %33, !dbg !1674\l|{<s0>T|<s1>F}}"];
	Node0x16c14b0:s0 -> Node0x16c1500;
	Node0x16c14b0:s1 -> Node0x16c1550;
	Node0x16c1500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%24:\l24:                                               \l  %25 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0,\l... i32 1, !dbg !1675\l  %26 = load i64, i64* %25, align 8, !dbg !1675, !tbaa !1669\l  %27 = sdiv i64 %26, 100, !dbg !1676\l  %28 = mul nsw i64 %27, 60, !dbg !1677\l  %29 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0,\l... i32 1, !dbg !1678\l  %30 = load i64, i64* %29, align 8, !dbg !1678, !tbaa !1669\l  %31 = srem i64 %30, 100, !dbg !1679\l  %32 = add nsw i64 %28, %31, !dbg !1680\l  store i64 %32, i64* %7, align 8, !dbg !1681, !tbaa !1649\l  br label %71, !dbg !1682\l}"];
	Node0x16c1500 -> Node0x16c1690;
	Node0x16c1550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#dc5d4a70",label="{%33:\l33:                                               \l  %34 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0,\l... i32 1, !dbg !1683\l  %35 = load i64, i64* %34, align 8, !dbg !1683, !tbaa !1669\l  %36 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %35, i64 60), !dbg\l... !1683\l  %37 = extractvalue \{ i64, i1 \} %36, 1, !dbg !1683\l  %38 = extractvalue \{ i64, i1 \} %36, 0, !dbg !1683\l  store i64 %38, i64* %7, align 8, !dbg !1683\l  %39 = zext i1 %37 to i32, !dbg !1683\l  %40 = load i8, i8* %8, align 1, !dbg !1685, !tbaa !1656, !range !1686\l  %41 = trunc i8 %40 to i1, !dbg !1685\l  %42 = zext i1 %41 to i32, !dbg !1685\l  %43 = or i32 %42, %39, !dbg !1685\l  %44 = icmp ne i32 %43, 0, !dbg !1685\l  %45 = zext i1 %44 to i8, !dbg !1685\l  store i8 %45, i8* %8, align 1, !dbg !1685, !tbaa !1656\l  %46 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0,\l... i32 0, !dbg !1687\l  %47 = load i8, i8* %46, align 8, !dbg !1687, !tbaa !1688, !range !1686\l  %48 = trunc i8 %47 to i1, !dbg !1687\l  br i1 %48, label %49, label %56, !dbg !1689\l|{<s0>T|<s1>F}}"];
	Node0x16c1550:s0 -> Node0x16c15a0;
	Node0x16c1550:s1 -> Node0x16c15f0;
	Node0x16c15a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%49:\l49:                                               \l  %50 = load i64, i64* %7, align 8, !dbg !1690, !tbaa !1649\l  %51 = load i64, i64* %6, align 8, !dbg !1690, !tbaa !1649\l  %52 = call \{ i64, i1 \} @llvm.ssub.with.overflow.i64(i64 %50, i64 %51), !dbg\l... !1690\l  %53 = extractvalue \{ i64, i1 \} %52, 1, !dbg !1690\l  %54 = extractvalue \{ i64, i1 \} %52, 0, !dbg !1690\l  store i64 %54, i64* %7, align 8, !dbg !1690\l  %55 = zext i1 %53 to i32, !dbg !1690\l  br label %63, !dbg !1689\l}"];
	Node0x16c15a0 -> Node0x16c1640;
	Node0x16c15f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%56:\l56:                                               \l  %57 = load i64, i64* %7, align 8, !dbg !1691, !tbaa !1649\l  %58 = load i64, i64* %6, align 8, !dbg !1691, !tbaa !1649\l  %59 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %57, i64 %58), !dbg\l... !1691\l  %60 = extractvalue \{ i64, i1 \} %59, 1, !dbg !1691\l  %61 = extractvalue \{ i64, i1 \} %59, 0, !dbg !1691\l  store i64 %61, i64* %7, align 8, !dbg !1691\l  %62 = zext i1 %60 to i32, !dbg !1691\l  br label %63, !dbg !1689\l}"];
	Node0x16c15f0 -> Node0x16c1640;
	Node0x16c1640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#dc5d4a70",label="{%63:\l63:                                               \l  %64 = phi i32 [ %55, %49 ], [ %62, %56 ], !dbg !1689\l  %65 = load i8, i8* %8, align 1, !dbg !1692, !tbaa !1656, !range !1686\l  %66 = trunc i8 %65 to i1, !dbg !1692\l  %67 = zext i1 %66 to i32, !dbg !1692\l  %68 = or i32 %67, %64, !dbg !1692\l  %69 = icmp ne i32 %68, 0, !dbg !1692\l  %70 = zext i1 %69 to i8, !dbg !1692\l  store i8 %70, i8* %8, align 1, !dbg !1692, !tbaa !1656\l  br label %71\l}"];
	Node0x16c1640 -> Node0x16c1690;
	Node0x16c1690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = load i8, i8* %8, align 1, !dbg !1693, !tbaa !1656, !range !1686\l  %73 = trunc i8 %72 to i1, !dbg !1693\l  br i1 %73, label %80, label %74, !dbg !1695\l|{<s0>T|<s1>F}}"];
	Node0x16c1690:s0 -> Node0x16c1780;
	Node0x16c1690:s1 -> Node0x16c16e0;
	Node0x16c16e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%74:\l74:                                               \l  %75 = load i64, i64* %7, align 8, !dbg !1696, !tbaa !1649\l  %76 = icmp sle i64 -1440, %75, !dbg !1697\l  br i1 %76, label %77, label %80, !dbg !1698\l|{<s0>T|<s1>F}}"];
	Node0x16c16e0:s0 -> Node0x16c1730;
	Node0x16c16e0:s1 -> Node0x16c1780;
	Node0x16c1730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%77:\l77:                                               \l  %78 = load i64, i64* %7, align 8, !dbg !1699, !tbaa !1649\l  %79 = icmp sle i64 %78, 1440, !dbg !1700\l  br i1 %79, label %81, label %80, !dbg !1701\l|{<s0>T|<s1>F}}"];
	Node0x16c1730:s0 -> Node0x16c17d0;
	Node0x16c1730:s1 -> Node0x16c1780;
	Node0x16c1780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%80:\l80:                                               \l  store i1 false, i1* %4, align 1, !dbg !1702\l  store i32 1, i32* %9, align 4\l  br label %87, !dbg !1702\l}"];
	Node0x16c1780 -> Node0x16c1820;
	Node0x16c17d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%81:\l81:                                               \l  %82 = load i64, i64* %7, align 8, !dbg !1703, !tbaa !1649\l  %83 = mul nsw i64 %82, 60, !dbg !1704\l  %84 = trunc i64 %83 to i32, !dbg !1703\l  %85 = load %struct.parser_control*, %struct.parser_control** %5, align 8,\l... !dbg !1705, !tbaa !1643\l  %86 = getelementptr inbounds %struct.parser_control, %struct.parser_control*\l... %85, i32 0, i32 4, !dbg !1706\l  store i32 %84, i32* %86, align 8, !dbg !1707, !tbaa !1708\l  store i1 true, i1* %4, align 1, !dbg !1713\l  store i32 1, i32* %9, align 4\l  br label %87, !dbg !1713\l}"];
	Node0x16c17d0 -> Node0x16c1820;
	Node0x16c1820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %8) #23, !dbg !1714\l  %88 = bitcast i64* %7 to i8*, !dbg !1714\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88) #23, !dbg !1714\l  %89 = load i1, i1* %4, align 1, !dbg !1714\l  ret i1 %89, !dbg !1714\l}"];
}
