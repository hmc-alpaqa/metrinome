digraph "CFG for 'setlocale_null_unlocked' function" {
	label="CFG for 'setlocale_null_unlocked' function";

	Node0xcede60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i8*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i64, align 8\l  store i32 %0, i32* %5, align 4, !tbaa !1237\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !1230, metadata\l... !DIExpression()), !dbg !1241\l  store i8* %1, i8** %6, align 8, !tbaa !1242\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1231, metadata\l... !DIExpression()), !dbg !1244\l  store i64 %2, i64* %7, align 8, !tbaa !1245\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1232, metadata\l... !DIExpression()), !dbg !1247\l  %11 = bitcast i8** %8 to i8*, !dbg !1248\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #24, !dbg !1248\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1233, metadata\l... !DIExpression()), !dbg !1249\l  %12 = load i32, i32* %5, align 4, !dbg !1250, !tbaa !1237\l  %13 = call i8* @setlocale_null_androidfix(i32 noundef %12), !dbg !1251\l  store i8* %13, i8** %8, align 8, !dbg !1249, !tbaa !1242\l  %14 = load i8*, i8** %8, align 8, !dbg !1252, !tbaa !1242\l  %15 = icmp eq i8* %14, null, !dbg !1253\l  br i1 %15, label %16, label %23, !dbg !1254\l|{<s0>T|<s1>F}}"];
	Node0xcede60:s0 -> Node0xceed40;
	Node0xcede60:s1 -> Node0xceee30;
	Node0xceed40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%16:\l16:                                               \l  %17 = load i64, i64* %7, align 8, !dbg !1255, !tbaa !1245\l  %18 = icmp ugt i64 %17, 0, !dbg !1258\l  br i1 %18, label %19, label %22, !dbg !1259\l|{<s0>T|<s1>F}}"];
	Node0xceed40:s0 -> Node0xceed90;
	Node0xceed40:s1 -> Node0xceede0;
	Node0xceed90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%19:\l19:                                               \l  %20 = load i8*, i8** %6, align 8, !dbg !1260, !tbaa !1242\l  %21 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !1260\l  store i8 0, i8* %21, align 1, !dbg !1261, !tbaa !1262\l  br label %22, !dbg !1260\l}"];
	Node0xceed90 -> Node0xceede0;
	Node0xceede0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%22:\l22:                                               \l  store i32 22, i32* %4, align 4, !dbg !1263\l  store i32 1, i32* %9, align 4\l  br label %50, !dbg !1263\l}"];
	Node0xceede0 -> Node0xcef010;
	Node0xceee30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%23:\l23:                                               \l  %24 = bitcast i64* %10 to i8*, !dbg !1264\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #24, !dbg !1264\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1234, metadata\l... !DIExpression()), !dbg !1265\l  %25 = load i8*, i8** %8, align 8, !dbg !1266, !tbaa !1242\l  %26 = call i64 @strlen(i8* noundef %25) #25, !dbg !1267\l  store i64 %26, i64* %10, align 8, !dbg !1265, !tbaa !1245\l  %27 = load i64, i64* %10, align 8, !dbg !1268, !tbaa !1245\l  %28 = load i64, i64* %7, align 8, !dbg !1270, !tbaa !1245\l  %29 = icmp ult i64 %27, %28, !dbg !1271\l  br i1 %29, label %30, label %35, !dbg !1272\l|{<s0>T|<s1>F}}"];
	Node0xceee30:s0 -> Node0xceee80;
	Node0xceee30:s1 -> Node0xceeed0;
	Node0xceee80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%30:\l30:                                               \l  %31 = load i8*, i8** %6, align 8, !dbg !1273, !tbaa !1242\l  %32 = load i8*, i8** %8, align 8, !dbg !1275, !tbaa !1242\l  %33 = load i64, i64* %10, align 8, !dbg !1276, !tbaa !1245\l  %34 = add i64 %33, 1, !dbg !1277\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %32, i64\l... %34, i1 false), !dbg !1278\l  store i32 0, i32* %4, align 4, !dbg !1279\l  store i32 1, i32* %9, align 4\l  br label %48, !dbg !1279\l}"];
	Node0xceee80 -> Node0xceefc0;
	Node0xceeed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%35:\l35:                                               \l  %36 = load i64, i64* %7, align 8, !dbg !1280, !tbaa !1245\l  %37 = icmp ugt i64 %36, 0, !dbg !1283\l  br i1 %37, label %38, label %47, !dbg !1284\l|{<s0>T|<s1>F}}"];
	Node0xceeed0:s0 -> Node0xceef20;
	Node0xceeed0:s1 -> Node0xceef70;
	Node0xceef20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%38:\l38:                                               \l  %39 = load i8*, i8** %6, align 8, !dbg !1285, !tbaa !1242\l  %40 = load i8*, i8** %8, align 8, !dbg !1287, !tbaa !1242\l  %41 = load i64, i64* %7, align 8, !dbg !1288, !tbaa !1245\l  %42 = sub i64 %41, 1, !dbg !1289\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %40, i64\l... %42, i1 false), !dbg !1290\l  %43 = load i8*, i8** %6, align 8, !dbg !1291, !tbaa !1242\l  %44 = load i64, i64* %7, align 8, !dbg !1292, !tbaa !1245\l  %45 = sub i64 %44, 1, !dbg !1293\l  %46 = getelementptr inbounds i8, i8* %43, i64 %45, !dbg !1291\l  store i8 0, i8* %46, align 1, !dbg !1294, !tbaa !1262\l  br label %47, !dbg !1295\l}"];
	Node0xceef20 -> Node0xceef70;
	Node0xceef70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%47:\l47:                                               \l  store i32 34, i32* %4, align 4, !dbg !1296\l  store i32 1, i32* %9, align 4\l  br label %48, !dbg !1296\l}"];
	Node0xceef70 -> Node0xceefc0;
	Node0xceefc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%48:\l48:                                               \l  %49 = bitcast i64* %10 to i8*, !dbg !1297\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #24, !dbg !1297\l  br label %50\l}"];
	Node0xceefc0 -> Node0xcef010;
	Node0xcef010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = bitcast i8** %8 to i8*, !dbg !1298\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #24, !dbg !1298\l  %52 = load i32, i32* %4, align 4, !dbg !1298\l  ret i32 %52, !dbg !1298\l}"];
}
