digraph "CFG for 'ftoastr' function" {
	label="CFG for 'ftoastr' function";

	Node0xa8ebc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%5:\l  %6 = alloca i32, align 4\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  %11 = alloca float, align 4\l  %12 = alloca double, align 8\l  %13 = alloca [11 x i8], align 1\l  %14 = alloca float, align 4\l  %15 = alloca i32, align 4\l  %16 = alloca i8*, align 8\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  store i8* %0, i8** %7, align 8, !tbaa !1245\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !1230, metadata\l... !DIExpression()), !dbg !1249\l  store i64 %1, i64* %8, align 8, !tbaa !1250\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1231, metadata\l... !DIExpression()), !dbg !1252\l  store i32 %2, i32* %9, align 4, !tbaa !1253\l  call void @llvm.dbg.declare(metadata i32* %9, metadata !1232, metadata\l... !DIExpression()), !dbg !1255\l  store i32 %3, i32* %10, align 4, !tbaa !1253\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !1233, metadata\l... !DIExpression()), !dbg !1256\l  store float %4, float* %11, align 4, !tbaa !1257\l  call void @llvm.dbg.declare(metadata float* %11, metadata !1234, metadata\l... !DIExpression()), !dbg !1259\l  %19 = bitcast double* %12 to i8*, !dbg !1260\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #24, !dbg !1260\l  call void @llvm.dbg.declare(metadata double* %12, metadata !1235, metadata\l... !DIExpression()), !dbg !1261\l  %20 = load float, float* %11, align 4, !dbg !1262, !tbaa !1257\l  %21 = fpext float %20 to double, !dbg !1262\l  store double %21, double* %12, align 8, !dbg !1261, !tbaa !1263\l  %22 = bitcast [11 x i8]* %13 to i8*, !dbg !1265\l  call void @llvm.lifetime.start.p0i8(i64 11, i8* %22) #24, !dbg !1265\l  call void @llvm.dbg.declare(metadata [11 x i8]* %13, metadata !1236,\l... metadata !DIExpression()), !dbg !1266\l  %23 = bitcast float* %14 to i8*, !dbg !1267\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #24, !dbg !1267\l  call void @llvm.dbg.declare(metadata float* %14, metadata !1238, metadata\l... !DIExpression()), !dbg !1268\l  %24 = load float, float* %11, align 4, !dbg !1269, !tbaa !1257\l  %25 = fcmp olt float %24, 0.000000e+00, !dbg !1270\l  br i1 %25, label %26, label %29, !dbg !1269\l|{<s0>T|<s1>F}}"];
	Node0xa8ebc0:s0 -> Node0xa8eee0;
	Node0xa8ebc0:s1 -> Node0xa92fe0;
	Node0xa8eee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%26:\l26:                                               \l  %27 = load float, float* %11, align 4, !dbg !1271, !tbaa !1257\l  %28 = fneg float %27, !dbg !1272\l  br label %31, !dbg !1269\l}"];
	Node0xa8eee0 -> Node0xa93030;
	Node0xa92fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%29:\l29:                                               \l  %30 = load float, float* %11, align 4, !dbg !1273, !tbaa !1257\l  br label %31, !dbg !1269\l}"];
	Node0xa92fe0 -> Node0xa93030;
	Node0xa93030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%31:\l31:                                               \l  %32 = phi float [ %28, %26 ], [ %30, %29 ], !dbg !1269\l  store float %32, float* %14, align 4, !dbg !1268, !tbaa !1257\l  %33 = bitcast i32* %15 to i8*, !dbg !1274\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #24, !dbg !1274\l  call void @llvm.dbg.declare(metadata i32* %15, metadata !1239, metadata\l... !DIExpression()), !dbg !1275\l  %34 = bitcast i8** %16 to i8*, !dbg !1276\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #24, !dbg !1276\l  call void @llvm.dbg.declare(metadata i8** %16, metadata !1240, metadata\l... !DIExpression()), !dbg !1277\l  %35 = getelementptr inbounds [11 x i8], [11 x i8]* %13, i64 0, i64 0, !dbg\l... !1278\l  store i8* %35, i8** %16, align 8, !dbg !1277, !tbaa !1245\l  %36 = load i8*, i8** %16, align 8, !dbg !1279, !tbaa !1245\l  %37 = getelementptr inbounds i8, i8* %36, i32 1, !dbg !1279\l  store i8* %37, i8** %16, align 8, !dbg !1279, !tbaa !1245\l  store i8 37, i8* %36, align 1, !dbg !1280, !tbaa !1281\l  %38 = load i8*, i8** %16, align 8, !dbg !1282, !tbaa !1245\l  store i8 45, i8* %38, align 1, !dbg !1283, !tbaa !1281\l  %39 = load i32, i32* %9, align 4, !dbg !1284, !tbaa !1253\l  %40 = and i32 %39, 1, !dbg !1285\l  %41 = icmp ne i32 %40, 0, !dbg !1286\l  %42 = zext i1 %41 to i32, !dbg !1286\l  %43 = load i8*, i8** %16, align 8, !dbg !1287, !tbaa !1245\l  %44 = sext i32 %42 to i64, !dbg !1287\l  %45 = getelementptr inbounds i8, i8* %43, i64 %44, !dbg !1287\l  store i8* %45, i8** %16, align 8, !dbg !1287, !tbaa !1245\l  %46 = load i8*, i8** %16, align 8, !dbg !1288, !tbaa !1245\l  store i8 43, i8* %46, align 1, !dbg !1289, !tbaa !1281\l  %47 = load i32, i32* %9, align 4, !dbg !1290, !tbaa !1253\l  %48 = and i32 %47, 2, !dbg !1291\l  %49 = icmp ne i32 %48, 0, !dbg !1292\l  %50 = zext i1 %49 to i32, !dbg !1292\l  %51 = load i8*, i8** %16, align 8, !dbg !1293, !tbaa !1245\l  %52 = sext i32 %50 to i64, !dbg !1293\l  %53 = getelementptr inbounds i8, i8* %51, i64 %52, !dbg !1293\l  store i8* %53, i8** %16, align 8, !dbg !1293, !tbaa !1245\l  %54 = load i8*, i8** %16, align 8, !dbg !1294, !tbaa !1245\l  store i8 32, i8* %54, align 1, !dbg !1295, !tbaa !1281\l  %55 = load i32, i32* %9, align 4, !dbg !1296, !tbaa !1253\l  %56 = and i32 %55, 4, !dbg !1297\l  %57 = icmp ne i32 %56, 0, !dbg !1298\l  %58 = zext i1 %57 to i32, !dbg !1298\l  %59 = load i8*, i8** %16, align 8, !dbg !1299, !tbaa !1245\l  %60 = sext i32 %58 to i64, !dbg !1299\l  %61 = getelementptr inbounds i8, i8* %59, i64 %60, !dbg !1299\l  store i8* %61, i8** %16, align 8, !dbg !1299, !tbaa !1245\l  %62 = load i8*, i8** %16, align 8, !dbg !1300, !tbaa !1245\l  store i8 48, i8* %62, align 1, !dbg !1301, !tbaa !1281\l  %63 = load i32, i32* %9, align 4, !dbg !1302, !tbaa !1253\l  %64 = and i32 %63, 8, !dbg !1303\l  %65 = icmp ne i32 %64, 0, !dbg !1304\l  %66 = zext i1 %65 to i32, !dbg !1304\l  %67 = load i8*, i8** %16, align 8, !dbg !1305, !tbaa !1245\l  %68 = sext i32 %66 to i64, !dbg !1305\l  %69 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !1305\l  store i8* %69, i8** %16, align 8, !dbg !1305, !tbaa !1245\l  %70 = load i8*, i8** %16, align 8, !dbg !1306, !tbaa !1245\l  %71 = getelementptr inbounds i8, i8* %70, i32 1, !dbg !1306\l  store i8* %71, i8** %16, align 8, !dbg !1306, !tbaa !1245\l  store i8 42, i8* %70, align 1, !dbg !1307, !tbaa !1281\l  %72 = load i8*, i8** %16, align 8, !dbg !1308, !tbaa !1245\l  %73 = getelementptr inbounds i8, i8* %72, i32 1, !dbg !1308\l  store i8* %73, i8** %16, align 8, !dbg !1308, !tbaa !1245\l  store i8 46, i8* %72, align 1, !dbg !1309, !tbaa !1281\l  %74 = load i8*, i8** %16, align 8, !dbg !1310, !tbaa !1245\l  %75 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !1310\l  store i8* %75, i8** %16, align 8, !dbg !1310, !tbaa !1245\l  store i8 42, i8* %74, align 1, !dbg !1311, !tbaa !1281\l  %76 = load i8*, i8** %16, align 8, !dbg !1312, !tbaa !1245\l  store i8 76, i8* %76, align 1, !dbg !1313, !tbaa !1281\l  %77 = load i8*, i8** %16, align 8, !dbg !1314, !tbaa !1245\l  %78 = getelementptr inbounds i8, i8* %77, i64 0, !dbg !1314\l  store i8* %78, i8** %16, align 8, !dbg !1314, !tbaa !1245\l  %79 = load i32, i32* %9, align 4, !dbg !1315, !tbaa !1253\l  %80 = and i32 %79, 16, !dbg !1316\l  %81 = icmp ne i32 %80, 0, !dbg !1315\l  %82 = zext i1 %81 to i64, !dbg !1315\l  %83 = select i1 %81, i32 71, i32 103, !dbg !1315\l  %84 = trunc i32 %83 to i8, !dbg !1315\l  %85 = load i8*, i8** %16, align 8, !dbg !1317, !tbaa !1245\l  %86 = getelementptr inbounds i8, i8* %85, i32 1, !dbg !1317\l  store i8* %86, i8** %16, align 8, !dbg !1317, !tbaa !1245\l  store i8 %84, i8* %85, align 1, !dbg !1318, !tbaa !1281\l  %87 = load i8*, i8** %16, align 8, !dbg !1319, !tbaa !1245\l  store i8 0, i8* %87, align 1, !dbg !1320, !tbaa !1281\l  %88 = load float, float* %14, align 4, !dbg !1321, !tbaa !1257\l  %89 = fcmp olt float %88, 0x3810000000000000, !dbg !1322\l  %90 = zext i1 %89 to i64, !dbg !1321\l  %91 = select i1 %89, i32 1, i32 6, !dbg !1321\l  store i32 %91, i32* %15, align 4, !dbg !1323, !tbaa !1253\l  br label %92, !dbg !1324\l}"];
	Node0xa93030 -> Node0xa93080;
	Node0xa93080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%92:\l92:                                               \l  %93 = bitcast i32* %17 to i8*, !dbg !1325\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %93) #24, !dbg !1325\l  call void @llvm.dbg.declare(metadata i32* %17, metadata !1241, metadata\l... !DIExpression()), !dbg !1326\l  %94 = load i8*, i8** %7, align 8, !dbg !1327, !tbaa !1245\l  %95 = load i64, i64* %8, align 8, !dbg !1328, !tbaa !1250\l  %96 = getelementptr inbounds [11 x i8], [11 x i8]* %13, i64 0, i64 0, !dbg\l... !1329\l  %97 = load i32, i32* %10, align 4, !dbg !1330, !tbaa !1253\l  %98 = load i32, i32* %15, align 4, !dbg !1331, !tbaa !1253\l  %99 = load double, double* %12, align 8, !dbg !1332, !tbaa !1263\l  %100 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef %94, i64 noundef\l... %95, i8* noundef %96, i32 noundef %97, i32 noundef %98, double noundef %99)\l... #24, !dbg !1333\l  store i32 %100, i32* %17, align 4, !dbg !1326, !tbaa !1253\l  %101 = load i32, i32* %17, align 4, !dbg !1334, !tbaa !1253\l  %102 = icmp slt i32 %101, 0, !dbg !1336\l  br i1 %102, label %116, label %103, !dbg !1337\l|{<s0>T|<s1>F}}"];
	Node0xa93080:s0 -> Node0xa931c0;
	Node0xa93080:s1 -> Node0xa930d0;
	Node0xa930d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%103:\l103:                                              \l  %104 = load i32, i32* %15, align 4, !dbg !1338, !tbaa !1253\l  %105 = icmp sle i32 9, %104, !dbg !1339\l  br i1 %105, label %116, label %106, !dbg !1340\l|{<s0>T|<s1>F}}"];
	Node0xa930d0:s0 -> Node0xa931c0;
	Node0xa930d0:s1 -> Node0xa93120;
	Node0xa93120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%106:\l106:                                              \l  %107 = load i32, i32* %17, align 4, !dbg !1341, !tbaa !1253\l  %108 = sext i32 %107 to i64, !dbg !1341\l  %109 = load i64, i64* %8, align 8, !dbg !1342, !tbaa !1250\l  %110 = icmp ult i64 %108, %109, !dbg !1343\l  br i1 %110, label %111, label %118, !dbg !1344\l|{<s0>T|<s1>F}}"];
	Node0xa93120:s0 -> Node0xa93170;
	Node0xa93120:s1 -> Node0xa93210;
	Node0xa93170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%111:\l111:                                              \l  %112 = load i8*, i8** %7, align 8, !dbg !1345, !tbaa !1245\l  %113 = call float @strtof(i8* noundef %112, i8** noundef null) #24, !dbg\l... !1346\l  %114 = load float, float* %11, align 4, !dbg !1347, !tbaa !1257\l  %115 = fcmp oeq float %113, %114, !dbg !1348\l  br i1 %115, label %116, label %118, !dbg !1349\l|{<s0>T|<s1>F}}"];
	Node0xa93170:s0 -> Node0xa931c0;
	Node0xa93170:s1 -> Node0xa93210;
	Node0xa931c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%116:\l116:                                              \l  %117 = load i32, i32* %17, align 4, !dbg !1350, !tbaa !1253\l  store i32 %117, i32* %6, align 4, !dbg !1351\l  store i32 1, i32* %18, align 4\l  br label %119, !dbg !1351\l}"];
	Node0xa931c0 -> Node0xa93260;
	Node0xa93210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%118:\l118:                                              \l  store i32 0, i32* %18, align 4, !dbg !1352\l  br label %119, !dbg !1352\l}"];
	Node0xa93210 -> Node0xa93260;
	Node0xa93260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%119:\l119:                                              \l  %120 = bitcast i32* %17 to i8*, !dbg !1352\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %120) #24, !dbg !1352\l  %121 = load i32, i32* %18, align 4\l  switch i32 %121, label %126 [\l    i32 0, label %122\l  ]\l|{<s0>def|<s1>0}}"];
	Node0xa93260:s0 -> Node0xa93350;
	Node0xa93260:s1 -> Node0xa932b0;
	Node0xa932b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%122:\l122:                                              \l  br label %123, !dbg !1353\l}"];
	Node0xa932b0 -> Node0xa93300;
	Node0xa93300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%123:\l123:                                              \l  %124 = load i32, i32* %15, align 4, !dbg !1354, !tbaa !1253\l  %125 = add nsw i32 %124, 1, !dbg !1354\l  store i32 %125, i32* %15, align 4, !dbg !1354, !tbaa !1253\l  br label %92, !dbg !1355, !llvm.loop !1356\l}"];
	Node0xa93300 -> Node0xa93080;
	Node0xa93350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%126:\l126:                                              \l  %127 = bitcast i8** %16 to i8*, !dbg !1360\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %127) #24, !dbg !1360\l  %128 = bitcast i32* %15 to i8*, !dbg !1360\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %128) #24, !dbg !1360\l  %129 = bitcast float* %14 to i8*, !dbg !1360\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %129) #24, !dbg !1360\l  %130 = bitcast [11 x i8]* %13 to i8*, !dbg !1360\l  call void @llvm.lifetime.end.p0i8(i64 11, i8* %130) #24, !dbg !1360\l  %131 = bitcast double* %12 to i8*, !dbg !1360\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %131) #24, !dbg !1360\l  %132 = load i32, i32* %6, align 4, !dbg !1360\l  ret i32 %132, !dbg !1360\l}"];
}
