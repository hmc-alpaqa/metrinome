digraph "CFG for 'xpalloc' function" {
	label="CFG for 'xpalloc' function";

	Node0xb612d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = alloca i8*, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  store i8* %0, i8** %6, align 8, !tbaa !1226\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !698, metadata\l... !DIExpression()), !dbg !1230\l  store i64* %1, i64** %7, align 8, !tbaa !1226\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !699, metadata\l... !DIExpression()), !dbg !1231\l  store i64 %2, i64* %8, align 8, !tbaa !1232\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !700, metadata\l... !DIExpression()), !dbg !1234\l  store i64 %3, i64* %9, align 8, !tbaa !1232\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !701, metadata\l... !DIExpression()), !dbg !1235\l  store i64 %4, i64* %10, align 8, !tbaa !1232\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !702, metadata\l... !DIExpression()), !dbg !1236\l  %15 = bitcast i64* %11 to i8*, !dbg !1237\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #24, !dbg !1237\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !703, metadata\l... !DIExpression()), !dbg !1238\l  %16 = load i64*, i64** %7, align 8, !dbg !1239, !tbaa !1226\l  %17 = load i64, i64* %16, align 8, !dbg !1240, !tbaa !1232\l  store i64 %17, i64* %11, align 8, !dbg !1238, !tbaa !1232\l  %18 = bitcast i64* %12 to i8*, !dbg !1241\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #24, !dbg !1241\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !704, metadata\l... !DIExpression()), !dbg !1242\l  %19 = load i64, i64* %11, align 8, !dbg !1243, !tbaa !1232\l  %20 = load i64, i64* %11, align 8, !dbg !1243, !tbaa !1232\l  %21 = ashr i64 %20, 1, !dbg !1243\l  %22 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %19, i64 %21), !dbg\l... !1243\l  %23 = extractvalue \{ i64, i1 \} %22, 1, !dbg !1243\l  %24 = extractvalue \{ i64, i1 \} %22, 0, !dbg !1243\l  store i64 %24, i64* %12, align 8, !dbg !1243\l  br i1 %23, label %25, label %26, !dbg !1245\l|{<s0>T|<s1>F}}"];
	Node0xb612d0:s0 -> Node0xb64c10;
	Node0xb612d0:s1 -> Node0xb64d00;
	Node0xb64c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%25:\l25:                                               \l  store i64 9223372036854775807, i64* %12, align 8, !dbg !1246, !tbaa !1232\l  br label %26, !dbg !1247\l}"];
	Node0xb64c10 -> Node0xb64d00;
	Node0xb64d00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i64, i64* %9, align 8, !dbg !1248, !tbaa !1232\l  %28 = icmp sle i64 0, %27, !dbg !1250\l  br i1 %28, label %29, label %35, !dbg !1251\l|{<s0>T|<s1>F}}"];
	Node0xb64d00:s0 -> Node0xb64d50;
	Node0xb64d00:s1 -> Node0xb64df0;
	Node0xb64d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%29:\l29:                                               \l  %30 = load i64, i64* %9, align 8, !dbg !1252, !tbaa !1232\l  %31 = load i64, i64* %12, align 8, !dbg !1253, !tbaa !1232\l  %32 = icmp slt i64 %30, %31, !dbg !1254\l  br i1 %32, label %33, label %35, !dbg !1255\l|{<s0>T|<s1>F}}"];
	Node0xb64d50:s0 -> Node0xb64da0;
	Node0xb64d50:s1 -> Node0xb64df0;
	Node0xb64da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%33:\l33:                                               \l  %34 = load i64, i64* %9, align 8, !dbg !1256, !tbaa !1232\l  store i64 %34, i64* %12, align 8, !dbg !1257, !tbaa !1232\l  br label %35, !dbg !1258\l}"];
	Node0xb64da0 -> Node0xb64df0;
	Node0xb64df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = bitcast i64* %13 to i8*, !dbg !1259\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #24, !dbg !1259\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !705, metadata\l... !DIExpression()), !dbg !1260\l  %37 = bitcast i64* %14 to i8*, !dbg !1261\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #24, !dbg !1261\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !706, metadata\l... !DIExpression()), !dbg !1262\l  %38 = load i64, i64* %12, align 8, !dbg !1263, !tbaa !1232\l  %39 = load i64, i64* %10, align 8, !dbg !1263, !tbaa !1232\l  %40 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %38, i64 %39), !dbg\l... !1263\l  %41 = extractvalue \{ i64, i1 \} %40, 1, !dbg !1263\l  %42 = extractvalue \{ i64, i1 \} %40, 0, !dbg !1263\l  store i64 %42, i64* %13, align 8, !dbg !1263\l  br i1 %41, label %43, label %44, !dbg !1263\l|{<s0>T|<s1>F}}"];
	Node0xb64df0:s0 -> Node0xb64e40;
	Node0xb64df0:s1 -> Node0xb64e90;
	Node0xb64e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%43:\l43:                                               \l  br label %50, !dbg !1263\l}"];
	Node0xb64e40 -> Node0xb64ee0;
	Node0xb64e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%44:\l44:                                               \l  %45 = load i64, i64* %13, align 8, !dbg !1264, !tbaa !1232\l  %46 = icmp slt i64 %45, 128, !dbg !1265\l  %47 = zext i1 %46 to i64, !dbg !1264\l  %48 = select i1 %46, i32 128, i32 0, !dbg !1264\l  %49 = sext i32 %48 to i64, !dbg !1264\l  br label %50, !dbg !1263\l}"];
	Node0xb64e90 -> Node0xb64ee0;
	Node0xb64ee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i64 [ 9223372036854775807, %43 ], [ %49, %44 ], !dbg !1263\l  store i64 %51, i64* %14, align 8, !dbg !1262, !tbaa !1232\l  %52 = load i64, i64* %14, align 8, !dbg !1266, !tbaa !1232\l  %53 = icmp ne i64 %52, 0, !dbg !1266\l  br i1 %53, label %54, label %63, !dbg !1268\l|{<s0>T|<s1>F}}"];
	Node0xb64ee0:s0 -> Node0xb64f30;
	Node0xb64ee0:s1 -> Node0xb64f80;
	Node0xb64f30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%54:\l54:                                               \l  %55 = load i64, i64* %14, align 8, !dbg !1269, !tbaa !1232\l  %56 = load i64, i64* %10, align 8, !dbg !1271, !tbaa !1232\l  %57 = sdiv i64 %55, %56, !dbg !1272\l  store i64 %57, i64* %12, align 8, !dbg !1273, !tbaa !1232\l  %58 = load i64, i64* %14, align 8, !dbg !1274, !tbaa !1232\l  %59 = load i64, i64* %14, align 8, !dbg !1275, !tbaa !1232\l  %60 = load i64, i64* %10, align 8, !dbg !1276, !tbaa !1232\l  %61 = srem i64 %59, %60, !dbg !1277\l  %62 = sub nsw i64 %58, %61, !dbg !1278\l  store i64 %62, i64* %13, align 8, !dbg !1279, !tbaa !1232\l  br label %63, !dbg !1280\l}"];
	Node0xb64f30 -> Node0xb64f80;
	Node0xb64f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = load i8*, i8** %6, align 8, !dbg !1281, !tbaa !1226\l  %65 = icmp ne i8* %64, null, !dbg !1281\l  br i1 %65, label %68, label %66, !dbg !1283\l|{<s0>T|<s1>F}}"];
	Node0xb64f80:s0 -> Node0xb65020;
	Node0xb64f80:s1 -> Node0xb64fd0;
	Node0xb64fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%66:\l66:                                               \l  %67 = load i64*, i64** %7, align 8, !dbg !1284, !tbaa !1226\l  store i64 0, i64* %67, align 8, !dbg !1285, !tbaa !1232\l  br label %68, !dbg !1286\l}"];
	Node0xb64fd0 -> Node0xb65020;
	Node0xb65020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = load i64, i64* %12, align 8, !dbg !1287, !tbaa !1232\l  %70 = load i64, i64* %11, align 8, !dbg !1289, !tbaa !1232\l  %71 = sub nsw i64 %69, %70, !dbg !1290\l  %72 = load i64, i64* %8, align 8, !dbg !1291, !tbaa !1232\l  %73 = icmp slt i64 %71, %72, !dbg !1292\l  br i1 %73, label %74, label %94, !dbg !1293\l|{<s0>T|<s1>F}}"];
	Node0xb65020:s0 -> Node0xb65070;
	Node0xb65020:s1 -> Node0xb65200;
	Node0xb65070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%74:\l74:                                               \l  %75 = load i64, i64* %11, align 8, !dbg !1294, !tbaa !1232\l  %76 = load i64, i64* %8, align 8, !dbg !1294, !tbaa !1232\l  %77 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %75, i64 %76), !dbg\l... !1294\l  %78 = extractvalue \{ i64, i1 \} %77, 1, !dbg !1294\l  %79 = extractvalue \{ i64, i1 \} %77, 0, !dbg !1294\l  store i64 %79, i64* %12, align 8, !dbg !1294\l  br i1 %78, label %93, label %80, !dbg !1295\l|{<s0>T|<s1>F}}"];
	Node0xb65070:s0 -> Node0xb651b0;
	Node0xb65070:s1 -> Node0xb650c0;
	Node0xb650c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%80:\l80:                                               \l  %81 = load i64, i64* %9, align 8, !dbg !1296, !tbaa !1232\l  %82 = icmp sle i64 0, %81, !dbg !1297\l  br i1 %82, label %83, label %87, !dbg !1298\l|{<s0>T|<s1>F}}"];
	Node0xb650c0:s0 -> Node0xb65110;
	Node0xb650c0:s1 -> Node0xb65160;
	Node0xb65110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%83:\l83:                                               \l  %84 = load i64, i64* %9, align 8, !dbg !1299, !tbaa !1232\l  %85 = load i64, i64* %12, align 8, !dbg !1300, !tbaa !1232\l  %86 = icmp slt i64 %84, %85, !dbg !1301\l  br i1 %86, label %93, label %87, !dbg !1302\l|{<s0>T|<s1>F}}"];
	Node0xb65110:s0 -> Node0xb651b0;
	Node0xb65110:s1 -> Node0xb65160;
	Node0xb65160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%87:\l87:                                               \l  %88 = load i64, i64* %12, align 8, !dbg !1303, !tbaa !1232\l  %89 = load i64, i64* %10, align 8, !dbg !1303, !tbaa !1232\l  %90 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %88, i64 %89), !dbg\l... !1303\l  %91 = extractvalue \{ i64, i1 \} %90, 1, !dbg !1303\l  %92 = extractvalue \{ i64, i1 \} %90, 0, !dbg !1303\l  store i64 %92, i64* %13, align 8, !dbg !1303\l  br i1 %91, label %93, label %94, !dbg !1304\l|{<s0>T|<s1>F}}"];
	Node0xb65160:s0 -> Node0xb651b0;
	Node0xb65160:s1 -> Node0xb65200;
	Node0xb651b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%93:\l93:                                               \l  call void @xalloc_die() #25, !dbg !1305\l  unreachable, !dbg !1305\l}"];
	Node0xb65200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  %95 = load i8*, i8** %6, align 8, !dbg !1306, !tbaa !1226\l  %96 = load i64, i64* %13, align 8, !dbg !1307, !tbaa !1232\l  %97 = call i8* @xrealloc(i8* noundef %95, i64 noundef %96) #26, !dbg !1308\l  store i8* %97, i8** %6, align 8, !dbg !1309, !tbaa !1226\l  %98 = load i64, i64* %12, align 8, !dbg !1310, !tbaa !1232\l  %99 = load i64*, i64** %7, align 8, !dbg !1311, !tbaa !1226\l  store i64 %98, i64* %99, align 8, !dbg !1312, !tbaa !1232\l  %100 = load i8*, i8** %6, align 8, !dbg !1313, !tbaa !1226\l  %101 = bitcast i64* %14 to i8*, !dbg !1314\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #24, !dbg !1314\l  %102 = bitcast i64* %13 to i8*, !dbg !1314\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #24, !dbg !1314\l  %103 = bitcast i64* %12 to i8*, !dbg !1314\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #24, !dbg !1314\l  %104 = bitcast i64* %11 to i8*, !dbg !1314\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %104) #24, !dbg !1314\l  ret i8* %100, !dbg !1315\l}"];
}
