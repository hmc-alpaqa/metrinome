digraph "CFG for 'print_long_double' function" {
	label="CFG for 'print_long_double' function";

	Node0xa4cc40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%6:\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i8*, align 8\l  %10 = alloca i8*, align 8\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca x86_fp80*, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i32, align 4\l  %16 = alloca i32, align 4\l  %17 = alloca i32, align 4\l  %18 = alloca x86_fp80, align 16\l  %19 = alloca i64, align 8\l  %20 = alloca %union.anon.8, align 16\l  %21 = alloca [45 x i8], align 16\l  store i64 %0, i64* %7, align 8, !tbaa !1260\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1228, metadata\l... !DIExpression()), !dbg !1264\l  store i64 %1, i64* %8, align 8, !tbaa !1260\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1229, metadata\l... !DIExpression()), !dbg !1264\l  store i8* %2, i8** %9, align 8, !tbaa !1265\l  call void @llvm.dbg.declare(metadata i8** %9, metadata !1230, metadata\l... !DIExpression()), !dbg !1264\l  store i8* %3, i8** %10, align 8, !tbaa !1265\l  call void @llvm.dbg.declare(metadata i8** %10, metadata !1231, metadata\l... !DIExpression()), !dbg !1264\l  store i32 %4, i32* %11, align 4, !tbaa !1267\l  call void @llvm.dbg.declare(metadata i32* %11, metadata !1232, metadata\l... !DIExpression()), !dbg !1264\l  store i32 %5, i32* %12, align 4, !tbaa !1267\l  call void @llvm.dbg.declare(metadata i32* %12, metadata !1233, metadata\l... !DIExpression()), !dbg !1264\l  %22 = bitcast x86_fp80** %13 to i8*, !dbg !1264\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #24, !dbg !1264\l  call void @llvm.dbg.declare(metadata x86_fp80** %13, metadata !1234,\l... metadata !DIExpression()), !dbg !1264\l  %23 = load i8*, i8** %9, align 8, !dbg !1264, !tbaa !1265\l  %24 = bitcast i8* %23 to x86_fp80*, !dbg !1264\l  store x86_fp80* %24, x86_fp80** %13, align 8, !dbg !1264, !tbaa !1265\l  %25 = bitcast i64* %14 to i8*, !dbg !1264\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #24, !dbg !1264\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !1237, metadata\l... !DIExpression()), !dbg !1264\l  %26 = bitcast i32* %15 to i8*, !dbg !1264\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #24, !dbg !1264\l  call void @llvm.dbg.declare(metadata i32* %15, metadata !1238, metadata\l... !DIExpression()), !dbg !1264\l  %27 = load i32, i32* %12, align 4, !dbg !1264, !tbaa !1267\l  store i32 %27, i32* %15, align 4, !dbg !1264, !tbaa !1267\l  %28 = load i64, i64* %7, align 8, !dbg !1269, !tbaa !1260\l  store i64 %28, i64* %14, align 8, !dbg !1269, !tbaa !1260\l  br label %29, !dbg !1269\l}"];
	Node0xa4cc40 -> Node0xa4ccd0;
	Node0xa4ccd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%29:\l29:                                               \l  %30 = load i64, i64* %8, align 8, !dbg !1270, !tbaa !1260\l  %31 = load i64, i64* %14, align 8, !dbg !1270, !tbaa !1260\l  %32 = icmp ult i64 %30, %31, !dbg !1270\l  br i1 %32, label %33, label %97, !dbg !1269\l|{<s0>T|<s1>F}}"];
	Node0xa4ccd0:s0 -> Node0xa4cd20;
	Node0xa4ccd0:s1 -> Node0xa4cff0;
	Node0xa4cd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%33:\l33:                                               \l  %34 = bitcast i32* %16 to i8*, !dbg !1271\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #24, !dbg !1271\l  call void @llvm.dbg.declare(metadata i32* %16, metadata !1239, metadata\l... !DIExpression()), !dbg !1271\l  %35 = load i32, i32* %12, align 4, !dbg !1271, !tbaa !1267\l  %36 = sext i32 %35 to i64, !dbg !1271\l  %37 = load i64, i64* %14, align 8, !dbg !1271, !tbaa !1260\l  %38 = sub i64 %37, 1, !dbg !1271\l  %39 = mul i64 %36, %38, !dbg !1271\l  %40 = load i64, i64* %7, align 8, !dbg !1271, !tbaa !1260\l  %41 = udiv i64 %39, %40, !dbg !1271\l  %42 = trunc i64 %41 to i32, !dbg !1271\l  store i32 %42, i32* %16, align 4, !dbg !1271, !tbaa !1267\l  %43 = bitcast i32* %17 to i8*, !dbg !1271\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #24, !dbg !1271\l  call void @llvm.dbg.declare(metadata i32* %17, metadata !1243, metadata\l... !DIExpression()), !dbg !1271\l  %44 = load i32, i32* %15, align 4, !dbg !1271, !tbaa !1267\l  %45 = load i32, i32* %16, align 4, !dbg !1271, !tbaa !1267\l  %46 = sub nsw i32 %44, %45, !dbg !1271\l  %47 = load i32, i32* %11, align 4, !dbg !1271, !tbaa !1267\l  %48 = add nsw i32 %46, %47, !dbg !1271\l  store i32 %48, i32* %17, align 4, !dbg !1271, !tbaa !1267\l  %49 = bitcast x86_fp80* %18 to i8*, !dbg !1271\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* %49) #24, !dbg !1271\l  call void @llvm.dbg.declare(metadata x86_fp80* %18, metadata !1244, metadata\l... !DIExpression()), !dbg !1271\l  %50 = load i8, i8* @input_swap, align 1, !dbg !1272, !tbaa !1273, !range\l... !1275\l  %51 = trunc i8 %50 to i1, !dbg !1272\l  br i1 %51, label %52, label %76, !dbg !1271\l|{<s0>T|<s1>F}}"];
	Node0xa4cd20:s0 -> Node0xa4cd70;
	Node0xa4cd20:s1 -> Node0xa4cf00;
	Node0xa4cd70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%52:\l52:                                               \l  %53 = bitcast i64* %19 to i8*, !dbg !1276\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #24, !dbg !1276\l  call void @llvm.dbg.declare(metadata i64* %19, metadata !1245, metadata\l... !DIExpression()), !dbg !1276\l  %54 = bitcast %union.anon.8* %20 to i8*, !dbg !1276\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* %54) #24, !dbg !1276\l  call void @llvm.dbg.declare(metadata %union.anon.8* %20, metadata !1248,\l... metadata !DIExpression()), !dbg !1276\l  store i64 0, i64* %19, align 8, !dbg !1277, !tbaa !1260\l  br label %55, !dbg !1277\l}"];
	Node0xa4cd70 -> Node0xa4cdc0;
	Node0xa4cdc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  %56 = load i64, i64* %19, align 8, !dbg !1279, !tbaa !1260\l  %57 = icmp ult i64 %56, 16, !dbg !1279\l  br i1 %57, label %58, label %71, !dbg !1277\l|{<s0>T|<s1>F}}"];
	Node0xa4cdc0:s0 -> Node0xa4ce10;
	Node0xa4cdc0:s1 -> Node0xa4ceb0;
	Node0xa4ce10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = load x86_fp80*, x86_fp80** %13, align 8, !dbg !1279, !tbaa !1265\l  %60 = bitcast x86_fp80* %59 to i8*, !dbg !1279\l  %61 = load i64, i64* %19, align 8, !dbg !1279, !tbaa !1260\l  %62 = sub i64 15, %61, !dbg !1279\l  %63 = getelementptr inbounds i8, i8* %60, i64 %62, !dbg !1279\l  %64 = load i8, i8* %63, align 1, !dbg !1279, !tbaa !1281\l  %65 = bitcast %union.anon.8* %20 to [16 x i8]*, !dbg !1279\l  %66 = load i64, i64* %19, align 8, !dbg !1279, !tbaa !1260\l  %67 = getelementptr inbounds [16 x i8], [16 x i8]* %65, i64 0, i64 %66, !dbg\l... !1279\l  store i8 %64, i8* %67, align 1, !dbg !1279, !tbaa !1281\l  br label %68, !dbg !1279\l}"];
	Node0xa4ce10 -> Node0xa4ce60;
	Node0xa4ce60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = load i64, i64* %19, align 8, !dbg !1279, !tbaa !1260\l  %70 = add i64 %69, 1, !dbg !1279\l  store i64 %70, i64* %19, align 8, !dbg !1279, !tbaa !1260\l  br label %55, !dbg !1279, !llvm.loop !1282\l}"];
	Node0xa4ce60 -> Node0xa4cdc0;
	Node0xa4ceb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%71:\l71:                                               \l  %72 = bitcast %union.anon.8* %20 to x86_fp80*, !dbg !1276\l  %73 = load x86_fp80, x86_fp80* %72, align 16, !dbg !1276, !tbaa !1281\l  store x86_fp80 %73, x86_fp80* %18, align 16, !dbg !1276, !tbaa !1285\l  %74 = bitcast %union.anon.8* %20 to i8*, !dbg !1272\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* %74) #24, !dbg !1272\l  %75 = bitcast i64* %19 to i8*, !dbg !1272\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #24, !dbg !1272\l  br label %79, !dbg !1276\l}"];
	Node0xa4ceb0 -> Node0xa4cf50;
	Node0xa4cf00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%76:\l76:                                               \l  %77 = load x86_fp80*, x86_fp80** %13, align 8, !dbg !1272, !tbaa !1265\l  %78 = load x86_fp80, x86_fp80* %77, align 16, !dbg !1272, !tbaa !1285\l  store x86_fp80 %78, x86_fp80* %18, align 16, !dbg !1272, !tbaa !1285\l  br label %79\l}"];
	Node0xa4cf00 -> Node0xa4cf50;
	Node0xa4cf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%79:\l79:                                               \l  %80 = load x86_fp80*, x86_fp80** %13, align 8, !dbg !1271, !tbaa !1265\l  %81 = getelementptr inbounds x86_fp80, x86_fp80* %80, i32 1, !dbg !1271\l  store x86_fp80* %81, x86_fp80** %13, align 8, !dbg !1271, !tbaa !1265\l  %82 = bitcast [45 x i8]* %21 to i8*, !dbg !1271\l  call void @llvm.lifetime.start.p0i8(i64 45, i8* %82) #24, !dbg !1271\l  call void @llvm.dbg.declare(metadata [45 x i8]* %21, metadata !1256,\l... metadata !DIExpression()), !dbg !1271\l  %83 = getelementptr inbounds [45 x i8], [45 x i8]* %21, i64 0, i64 0, !dbg\l... !1271\l  %84 = load x86_fp80, x86_fp80* %18, align 16, !dbg !1271, !tbaa !1285\l  %85 = call i32 @ldtoastr(i8* noundef %83, i64 noundef 45, i32 noundef 0, i32\l... noundef 0, x86_fp80 noundef %84), !dbg !1271\l  %86 = load i32, i32* %17, align 4, !dbg !1271, !tbaa !1267\l  %87 = getelementptr inbounds [45 x i8], [45 x i8]* %21, i64 0, i64 0, !dbg\l... !1271\l  %88 = call i32 (i8*, ...) @xprintf(i8* noundef getelementptr inbounds ([4 x\l... i8], [4 x i8]* @.str.92, i64 0, i64 0), i32 noundef %86, i8* noundef %87),\l... !dbg !1271\l  %89 = load i32, i32* %16, align 4, !dbg !1271, !tbaa !1267\l  store i32 %89, i32* %15, align 4, !dbg !1271, !tbaa !1267\l  %90 = bitcast [45 x i8]* %21 to i8*, !dbg !1270\l  call void @llvm.lifetime.end.p0i8(i64 45, i8* %90) #24, !dbg !1270\l  %91 = bitcast x86_fp80* %18 to i8*, !dbg !1270\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* %91) #24, !dbg !1270\l  %92 = bitcast i32* %17 to i8*, !dbg !1270\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %92) #24, !dbg !1270\l  %93 = bitcast i32* %16 to i8*, !dbg !1270\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %93) #24, !dbg !1270\l  br label %94, !dbg !1271\l}"];
	Node0xa4cf50 -> Node0xa4cfa0;
	Node0xa4cfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%94:\l94:                                               \l  %95 = load i64, i64* %14, align 8, !dbg !1270, !tbaa !1260\l  %96 = add i64 %95, -1, !dbg !1270\l  store i64 %96, i64* %14, align 8, !dbg !1270, !tbaa !1260\l  br label %29, !dbg !1270, !llvm.loop !1287\l}"];
	Node0xa4cfa0 -> Node0xa4ccd0;
	Node0xa4cff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%97:\l97:                                               \l  %98 = bitcast i32* %15 to i8*, !dbg !1264\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %98) #24, !dbg !1264\l  %99 = bitcast i64* %14 to i8*, !dbg !1264\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #24, !dbg !1264\l  %100 = bitcast x86_fp80** %13 to i8*, !dbg !1264\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %100) #24, !dbg !1264\l  ret void, !dbg !1264\l}"];
}
