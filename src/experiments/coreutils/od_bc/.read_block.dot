digraph "CFG for 'read_block' function" {
	label="CFG for 'read_block' function";

	Node0x9e7390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%3:\l  %4 = alloca i64, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i64*, align 8\l  %7 = alloca i8, align 1\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i32, align 4\l  store i64 %0, i64* %4, align 8, !tbaa !1237\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !1230, metadata\l... !DIExpression()), !dbg !1241\l  store i8* %1, i8** %5, align 8, !tbaa !1242\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !1231, metadata\l... !DIExpression()), !dbg !1244\l  store i64* %2, i64** %6, align 8, !tbaa !1242\l  call void @llvm.dbg.declare(metadata i64** %6, metadata !1232, metadata\l... !DIExpression()), !dbg !1245\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %7) #24, !dbg !1246\l  call void @llvm.dbg.declare(metadata i8* %7, metadata !1233, metadata\l... !DIExpression()), !dbg !1247\l  store i8 1, i8* %7, align 1, !dbg !1247, !tbaa !1248\l  %11 = load i64, i64* %4, align 8, !dbg !1250, !tbaa !1237\l  %12 = icmp ult i64 0, %11, !dbg !1250\l  br i1 %12, label %13, label %18, !dbg !1250\l|{<s0>T|<s1>F}}"];
	Node0x9e7390:s0 -> Node0x9e7910;
	Node0x9e7390:s1 -> Node0x9e79b0;
	Node0x9e7910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%13:\l13:                                               \l  %14 = load i64, i64* %4, align 8, !dbg !1250, !tbaa !1237\l  %15 = load i64, i64* @bytes_per_block, align 8, !dbg !1250, !tbaa !1237\l  %16 = icmp ule i64 %14, %15, !dbg !1250\l  br i1 %16, label %17, label %18, !dbg !1253\l|{<s0>T|<s1>F}}"];
	Node0x9e7910:s0 -> Node0x9e7960;
	Node0x9e7910:s1 -> Node0x9e79b0;
	Node0x9e7960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%17:\l17:                                               \l  br label %19, !dbg !1253\l}"];
	Node0x9e7960 -> Node0x9e7a00;
	Node0x9e79b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%18:\l18:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([30 x i8], [30\l... x i8]* @.str.112, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x\l... i8], [12 x i8]* @.str.76, i64 0, i64 0), i32 noundef 1281, i8* noundef\l... getelementptr inbounds ([43 x i8], [43 x i8]*\l... @__PRETTY_FUNCTION__.read_block, i64 0, i64 0)) #25, !dbg !1250\l  unreachable, !dbg !1250\l}"];
	Node0x9e7a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%19:\l19:                                               \l  %20 = load i64*, i64** %6, align 8, !dbg !1254, !tbaa !1242\l  store i64 0, i64* %20, align 8, !dbg !1255, !tbaa !1237\l  br label %21, !dbg !1256\l}"];
	Node0x9e7a00 -> Node0x9e7a50;
	Node0x9e7a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @in_stream, align 8, !dbg\l... !1257, !tbaa !1242\l  %23 = icmp ne %struct._IO_FILE* %22, null, !dbg !1258\l  br i1 %23, label %24, label %70, !dbg !1256\l|{<s0>T|<s1>F}}"];
	Node0x9e7a50:s0 -> Node0x9e7aa0;
	Node0x9e7a50:s1 -> Node0x9e7c30;
	Node0x9e7aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = bitcast i64* %8 to i8*, !dbg !1259\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #24, !dbg !1259\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1234, metadata\l... !DIExpression()), !dbg !1260\l  %26 = bitcast i64* %9 to i8*, !dbg !1261\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #24, !dbg !1261\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1236, metadata\l... !DIExpression()), !dbg !1262\l  %27 = load i64, i64* %4, align 8, !dbg !1263, !tbaa !1237\l  %28 = load i64*, i64** %6, align 8, !dbg !1264, !tbaa !1242\l  %29 = load i64, i64* %28, align 8, !dbg !1265, !tbaa !1237\l  %30 = sub i64 %27, %29, !dbg !1266\l  store i64 %30, i64* %8, align 8, !dbg !1267, !tbaa !1237\l  %31 = load i8*, i8** %5, align 8, !dbg !1268, !tbaa !1242\l  %32 = load i64*, i64** %6, align 8, !dbg !1268, !tbaa !1242\l  %33 = load i64, i64* %32, align 8, !dbg !1268, !tbaa !1237\l  %34 = getelementptr inbounds i8, i8* %31, i64 %33, !dbg !1268\l  %35 = load i64, i64* %8, align 8, !dbg !1268, !tbaa !1237\l  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @in_stream, align 8, !dbg\l... !1268, !tbaa !1242\l  %37 = call i64 @fread_unlocked(i8* noundef %34, i64 noundef 1, i64 noundef\l... %35, %struct._IO_FILE* noundef %36), !dbg !1268\l  store i64 %37, i64* %9, align 8, !dbg !1269, !tbaa !1237\l  %38 = load i64, i64* %9, align 8, !dbg !1270, !tbaa !1237\l  %39 = load i64*, i64** %6, align 8, !dbg !1271, !tbaa !1242\l  %40 = load i64, i64* %39, align 8, !dbg !1272, !tbaa !1237\l  %41 = add i64 %40, %38, !dbg !1272\l  store i64 %41, i64* %39, align 8, !dbg !1272, !tbaa !1237\l  %42 = load i64, i64* %9, align 8, !dbg !1273, !tbaa !1237\l  %43 = load i64, i64* %8, align 8, !dbg !1275, !tbaa !1237\l  %44 = icmp eq i64 %42, %43, !dbg !1276\l  br i1 %44, label %45, label %46, !dbg !1277\l|{<s0>T|<s1>F}}"];
	Node0x9e7aa0:s0 -> Node0x9e7af0;
	Node0x9e7aa0:s1 -> Node0x9e7b40;
	Node0x9e7af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%45:\l45:                                               \l  store i32 3, i32* %10, align 4\l  br label %65, !dbg !1278\l}"];
	Node0x9e7af0 -> Node0x9e7b90;
	Node0x9e7b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%46:\l46:                                               \l  %47 = call i32* @__errno_location() #26, !dbg !1279\l  %48 = load i32, i32* %47, align 4, !dbg !1279, !tbaa !1280\l  %49 = call zeroext i1 @check_and_close(i32 noundef %48), !dbg !1282\l  %50 = zext i1 %49 to i32, !dbg !1282\l  %51 = load i8, i8* %7, align 1, !dbg !1283, !tbaa !1248, !range !1284\l  %52 = trunc i8 %51 to i1, !dbg !1283\l  %53 = zext i1 %52 to i32, !dbg !1283\l  %54 = and i32 %53, %50, !dbg !1283\l  %55 = icmp ne i32 %54, 0, !dbg !1283\l  %56 = zext i1 %55 to i8, !dbg !1283\l  store i8 %56, i8* %7, align 1, !dbg !1283, !tbaa !1248\l  %57 = call zeroext i1 @open_next_file(), !dbg !1285\l  %58 = zext i1 %57 to i32, !dbg !1285\l  %59 = load i8, i8* %7, align 1, !dbg !1286, !tbaa !1248, !range !1284\l  %60 = trunc i8 %59 to i1, !dbg !1286\l  %61 = zext i1 %60 to i32, !dbg !1286\l  %62 = and i32 %61, %58, !dbg !1286\l  %63 = icmp ne i32 %62, 0, !dbg !1286\l  %64 = zext i1 %63 to i8, !dbg !1286\l  store i8 %64, i8* %7, align 1, !dbg !1286, !tbaa !1248\l  store i32 0, i32* %10, align 4, !dbg !1287\l  br label %65, !dbg !1287\l}"];
	Node0x9e7b40 -> Node0x9e7b90;
	Node0x9e7b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = bitcast i64* %9 to i8*, !dbg !1287\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %66) #24, !dbg !1287\l  %67 = bitcast i64* %8 to i8*, !dbg !1287\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %67) #24, !dbg !1287\l  %68 = load i32, i32* %10, align 4\l  switch i32 %68, label %73 [\l    i32 0, label %69\l    i32 3, label %70\l  ]\l|{<s0>def|<s1>0|<s2>3}}"];
	Node0x9e7b90:s0 -> Node0x9e7c80;
	Node0x9e7b90:s1 -> Node0x9e7be0;
	Node0x9e7b90:s2 -> Node0x9e7c30;
	Node0x9e7be0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  br label %21, !dbg !1256, !llvm.loop !1288\l}"];
	Node0x9e7be0 -> Node0x9e7a50;
	Node0x9e7c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%70:\l70:                                               \l  %71 = load i8, i8* %7, align 1, !dbg !1291, !tbaa !1248, !range !1284\l  %72 = trunc i8 %71 to i1, !dbg !1291\l  store i32 1, i32* %10, align 4\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %7) #24, !dbg !1292\l  ret i1 %72, !dbg !1293\l}"];
	Node0x9e7c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%73:\l73:                                               \l  unreachable\l}"];
}
