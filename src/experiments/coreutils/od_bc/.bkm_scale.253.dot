digraph "CFG for 'bkm_scale.253' function" {
	label="CFG for 'bkm_scale.253' function";

	Node0xba82f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i64*, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i64, align 8\l  %7 = alloca i32, align 4\l  store i64* %0, i64** %4, align 8, !tbaa !1236\l  call void @llvm.dbg.declare(metadata i64** %4, metadata !1233, metadata\l... !DIExpression()), !dbg !1240\l  store i32 %1, i32* %5, align 4, !tbaa !1241\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !1234, metadata\l... !DIExpression()), !dbg !1243\l  %8 = bitcast i64* %6 to i8*, !dbg !1244\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #24, !dbg !1244\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1235, metadata\l... !DIExpression()), !dbg !1245\l  %9 = load i32, i32* %5, align 4, !dbg !1246, !tbaa !1241\l  %10 = load i64*, i64** %4, align 8, !dbg !1246, !tbaa !1236\l  %11 = load i64, i64* %10, align 8, !dbg !1246, !tbaa !1248\l  %12 = sext i32 %9 to i64, !dbg !1246\l  %13 = icmp slt i64 %12, 0, !dbg !1246\l  %14 = sub i64 0, %12, !dbg !1246\l  %15 = select i1 %13, i64 %14, i64 %12, !dbg !1246\l  %16 = call \{ i64, i1 \} @llvm.umul.with.overflow.i64(i64 %15, i64 %11), !dbg\l... !1246\l  %17 = extractvalue \{ i64, i1 \} %16, 1, !dbg !1246\l  %18 = extractvalue \{ i64, i1 \} %16, 0, !dbg !1246\l  %19 = icmp ne i64 %18, 0, !dbg !1246\l  %20 = and i1 %13, %19, !dbg !1246\l  %21 = or i1 %17, %20, !dbg !1246\l  %22 = sub i64 0, %18, !dbg !1246\l  %23 = select i1 %13, i64 %22, i64 %18, !dbg !1246\l  store i64 %23, i64* %6, align 8, !dbg !1246\l  br i1 %21, label %24, label %31, !dbg !1250\l|{<s0>T|<s1>F}}"];
	Node0xba82f0:s0 -> Node0xba8370;
	Node0xba82f0:s1 -> Node0xba83c0;
	Node0xba8370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%24:\l24:                                               \l  %25 = load i64*, i64** %4, align 8, !dbg !1251, !tbaa !1236\l  %26 = load i64, i64* %25, align 8, !dbg !1253, !tbaa !1248\l  %27 = icmp ult i64 %26, 0, !dbg !1254\l  %28 = zext i1 %27 to i64, !dbg !1253\l  %29 = select i1 %27, i64 0, i64 -1, !dbg !1253\l  %30 = load i64*, i64** %4, align 8, !dbg !1255, !tbaa !1236\l  store i64 %29, i64* %30, align 8, !dbg !1256, !tbaa !1248\l  store i32 1, i32* %3, align 4, !dbg !1257\l  store i32 1, i32* %7, align 4\l  br label %34, !dbg !1257\l}"];
	Node0xba8370 -> Node0xba8410;
	Node0xba83c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%31:\l31:                                               \l  %32 = load i64, i64* %6, align 8, !dbg !1258, !tbaa !1248\l  %33 = load i64*, i64** %4, align 8, !dbg !1259, !tbaa !1236\l  store i64 %32, i64* %33, align 8, !dbg !1260, !tbaa !1248\l  store i32 0, i32* %3, align 4, !dbg !1261\l  store i32 1, i32* %7, align 4\l  br label %34, !dbg !1261\l}"];
	Node0xba83c0 -> Node0xba8410;
	Node0xba8410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = bitcast i64* %6 to i8*, !dbg !1262\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #24, !dbg !1262\l  %36 = load i32, i32* %3, align 4, !dbg !1262\l  ret i32 %36, !dbg !1262\l}"];
}
