digraph "CFG for 'argmatch' function" {
	label="CFG for 'argmatch' function";

	Node0xa63550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i8**, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i8, align 1\l  %14 = alloca i32, align 4\l  store i8* %0, i8** %6, align 8, !tbaa !1238\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1230, metadata\l... !DIExpression()), !dbg !1242\l  store i8** %1, i8*** %7, align 8, !tbaa !1238\l  call void @llvm.dbg.declare(metadata i8*** %7, metadata !1231, metadata\l... !DIExpression()), !dbg !1243\l  store i8* %2, i8** %8, align 8, !tbaa !1238\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1232, metadata\l... !DIExpression()), !dbg !1244\l  store i64 %3, i64* %9, align 8, !tbaa !1245\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1233, metadata\l... !DIExpression()), !dbg !1247\l  %15 = bitcast i64* %10 to i8*, !dbg !1248\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #24, !dbg !1248\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1234, metadata\l... !DIExpression()), !dbg !1249\l  %16 = bitcast i64* %11 to i8*, !dbg !1250\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #24, !dbg !1250\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1235, metadata\l... !DIExpression()), !dbg !1251\l  %17 = bitcast i64* %12 to i8*, !dbg !1252\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #24, !dbg !1252\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1236, metadata\l... !DIExpression()), !dbg !1253\l  store i64 -1, i64* %12, align 8, !dbg !1253, !tbaa !1245\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #24, !dbg !1254\l  call void @llvm.dbg.declare(metadata i8* %13, metadata !1237, metadata\l... !DIExpression()), !dbg !1255\l  store i8 0, i8* %13, align 1, !dbg !1255, !tbaa !1256\l  %18 = load i8*, i8** %6, align 8, !dbg !1258, !tbaa !1238\l  %19 = call i64 @strlen(i8* noundef %18) #25, !dbg !1259\l  store i64 %19, i64* %11, align 8, !dbg !1260, !tbaa !1245\l  store i64 0, i64* %10, align 8, !dbg !1261, !tbaa !1245\l  br label %20, !dbg !1263\l}"];
	Node0xa63550 -> Node0xa63640;
	Node0xa63640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = load i8**, i8*** %7, align 8, !dbg !1264, !tbaa !1238\l  %22 = load i64, i64* %10, align 8, !dbg !1266, !tbaa !1245\l  %23 = getelementptr inbounds i8*, i8** %21, i64 %22, !dbg !1264\l  %24 = load i8*, i8** %23, align 8, !dbg !1264, !tbaa !1238\l  %25 = icmp ne i8* %24, null, !dbg !1267\l  br i1 %25, label %26, label %75, !dbg !1267\l|{<s0>T|<s1>F}}"];
	Node0xa63640:s0 -> Node0xa63690;
	Node0xa63640:s1 -> Node0xa63aa0;
	Node0xa63690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i8**, i8*** %7, align 8, !dbg !1268, !tbaa !1238\l  %28 = load i64, i64* %10, align 8, !dbg !1271, !tbaa !1245\l  %29 = getelementptr inbounds i8*, i8** %27, i64 %28, !dbg !1268\l  %30 = load i8*, i8** %29, align 8, !dbg !1268, !tbaa !1238\l  %31 = load i8*, i8** %6, align 8, !dbg !1272, !tbaa !1238\l  %32 = load i64, i64* %11, align 8, !dbg !1273, !tbaa !1245\l  %33 = call i32 @strncmp(i8* noundef %30, i8* noundef %31, i64 noundef %32)\l... #25, !dbg !1274\l  %34 = icmp ne i32 %33, 0, !dbg !1274\l  br i1 %34, label %71, label %35, !dbg !1275\l|{<s0>T|<s1>F}}"];
	Node0xa63690:s0 -> Node0xa63a00;
	Node0xa63690:s1 -> Node0xa636e0;
	Node0xa636e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%35:\l35:                                               \l  %36 = load i8**, i8*** %7, align 8, !dbg !1276, !tbaa !1238\l  %37 = load i64, i64* %10, align 8, !dbg !1279, !tbaa !1245\l  %38 = getelementptr inbounds i8*, i8** %36, i64 %37, !dbg !1276\l  %39 = load i8*, i8** %38, align 8, !dbg !1276, !tbaa !1238\l  %40 = call i64 @strlen(i8* noundef %39) #25, !dbg !1280\l  %41 = load i64, i64* %11, align 8, !dbg !1281, !tbaa !1245\l  %42 = icmp eq i64 %40, %41, !dbg !1282\l  br i1 %42, label %43, label %45, !dbg !1283\l|{<s0>T|<s1>F}}"];
	Node0xa636e0:s0 -> Node0xa63730;
	Node0xa636e0:s1 -> Node0xa63780;
	Node0xa63730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%43:\l43:                                               \l  %44 = load i64, i64* %10, align 8, !dbg !1284, !tbaa !1245\l  store i64 %44, i64* %5, align 8, !dbg !1285\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1285\l}"];
	Node0xa63730 -> Node0xa63b90;
	Node0xa63780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%45:\l45:                                               \l  %46 = load i64, i64* %12, align 8, !dbg !1286, !tbaa !1245\l  %47 = icmp eq i64 %46, -1, !dbg !1288\l  br i1 %47, label %48, label %50, !dbg !1289\l|{<s0>T|<s1>F}}"];
	Node0xa63780:s0 -> Node0xa637d0;
	Node0xa63780:s1 -> Node0xa63820;
	Node0xa637d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%48:\l48:                                               \l  %49 = load i64, i64* %10, align 8, !dbg !1290, !tbaa !1245\l  store i64 %49, i64* %12, align 8, !dbg !1291, !tbaa !1245\l  br label %69, !dbg !1292\l}"];
	Node0xa637d0 -> Node0xa63960;
	Node0xa63820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%50:\l50:                                               \l  %51 = load i8*, i8** %8, align 8, !dbg !1293, !tbaa !1238\l  %52 = icmp eq i8* %51, null, !dbg !1296\l  br i1 %52, label %67, label %53, !dbg !1297\l|{<s0>T|<s1>F}}"];
	Node0xa63820:s0 -> Node0xa638c0;
	Node0xa63820:s1 -> Node0xa63870;
	Node0xa63870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%53:\l53:                                               \l  %54 = load i8*, i8** %8, align 8, !dbg !1298, !tbaa !1238\l  %55 = load i64, i64* %9, align 8, !dbg !1299, !tbaa !1245\l  %56 = load i64, i64* %12, align 8, !dbg !1300, !tbaa !1245\l  %57 = mul i64 %55, %56, !dbg !1301\l  %58 = getelementptr inbounds i8, i8* %54, i64 %57, !dbg !1302\l  %59 = load i8*, i8** %8, align 8, !dbg !1303, !tbaa !1238\l  %60 = load i64, i64* %9, align 8, !dbg !1304, !tbaa !1245\l  %61 = load i64, i64* %10, align 8, !dbg !1305, !tbaa !1245\l  %62 = mul i64 %60, %61, !dbg !1306\l  %63 = getelementptr inbounds i8, i8* %59, i64 %62, !dbg !1307\l  %64 = load i64, i64* %9, align 8, !dbg !1308, !tbaa !1245\l  %65 = call i32 @memcmp(i8* noundef %58, i8* noundef %63, i64 noundef %64)\l... #25, !dbg !1309\l  %66 = icmp ne i32 %65, 0, !dbg !1309\l  br i1 %66, label %67, label %68, !dbg !1310\l|{<s0>T|<s1>F}}"];
	Node0xa63870:s0 -> Node0xa638c0;
	Node0xa63870:s1 -> Node0xa63910;
	Node0xa638c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%67:\l67:                                               \l  store i8 1, i8* %13, align 1, !dbg !1311, !tbaa !1256\l  br label %68, !dbg !1313\l}"];
	Node0xa638c0 -> Node0xa63910;
	Node0xa63910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%68:\l68:                                               \l  br label %69\l}"];
	Node0xa63910 -> Node0xa63960;
	Node0xa63960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%69:\l69:                                               \l  br label %70\l}"];
	Node0xa63960 -> Node0xa639b0;
	Node0xa639b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%70:\l70:                                               \l  br label %71, !dbg !1314\l}"];
	Node0xa639b0 -> Node0xa63a00;
	Node0xa63a00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%71:\l71:                                               \l  br label %72, !dbg !1315\l}"];
	Node0xa63a00 -> Node0xa63a50;
	Node0xa63a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%72:\l72:                                               \l  %73 = load i64, i64* %10, align 8, !dbg !1316, !tbaa !1245\l  %74 = add i64 %73, 1, !dbg !1316\l  store i64 %74, i64* %10, align 8, !dbg !1316, !tbaa !1245\l  br label %20, !dbg !1317, !llvm.loop !1318\l}"];
	Node0xa63a50 -> Node0xa63640;
	Node0xa63aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%75:\l75:                                               \l  %76 = load i8, i8* %13, align 1, !dbg !1322, !tbaa !1256, !range !1324\l  %77 = trunc i8 %76 to i1, !dbg !1322\l  br i1 %77, label %78, label %79, !dbg !1325\l|{<s0>T|<s1>F}}"];
	Node0xa63aa0:s0 -> Node0xa63af0;
	Node0xa63aa0:s1 -> Node0xa63b40;
	Node0xa63af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%78:\l78:                                               \l  store i64 -2, i64* %5, align 8, !dbg !1326\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1326\l}"];
	Node0xa63af0 -> Node0xa63b90;
	Node0xa63b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%79:\l79:                                               \l  %80 = load i64, i64* %12, align 8, !dbg !1327, !tbaa !1245\l  store i64 %80, i64* %5, align 8, !dbg !1328\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1328\l}"];
	Node0xa63b40 -> Node0xa63b90;
	Node0xa63b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%81:\l81:                                               \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #24, !dbg !1329\l  %82 = bitcast i64* %12 to i8*, !dbg !1329\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #24, !dbg !1329\l  %83 = bitcast i64* %11 to i8*, !dbg !1329\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #24, !dbg !1329\l  %84 = bitcast i64* %10 to i8*, !dbg !1329\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #24, !dbg !1329\l  %85 = load i64, i64* %5, align 8, !dbg !1329\l  ret i64 %85, !dbg !1329\l}"];
}
