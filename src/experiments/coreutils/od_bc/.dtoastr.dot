digraph "CFG for 'dtoastr' function" {
	label="CFG for 'dtoastr' function";

	Node0xa7f790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%5:\l  %6 = alloca i32, align 4\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  %11 = alloca double, align 8\l  %12 = alloca double, align 8\l  %13 = alloca [11 x i8], align 1\l  %14 = alloca double, align 8\l  %15 = alloca i32, align 4\l  %16 = alloca i8*, align 8\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  store i8* %0, i8** %7, align 8, !tbaa !1245\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !1230, metadata\l... !DIExpression()), !dbg !1249\l  store i64 %1, i64* %8, align 8, !tbaa !1250\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1231, metadata\l... !DIExpression()), !dbg !1252\l  store i32 %2, i32* %9, align 4, !tbaa !1253\l  call void @llvm.dbg.declare(metadata i32* %9, metadata !1232, metadata\l... !DIExpression()), !dbg !1255\l  store i32 %3, i32* %10, align 4, !tbaa !1253\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !1233, metadata\l... !DIExpression()), !dbg !1256\l  store double %4, double* %11, align 8, !tbaa !1257\l  call void @llvm.dbg.declare(metadata double* %11, metadata !1234, metadata\l... !DIExpression()), !dbg !1259\l  %19 = bitcast double* %12 to i8*, !dbg !1260\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #24, !dbg !1260\l  call void @llvm.dbg.declare(metadata double* %12, metadata !1235, metadata\l... !DIExpression()), !dbg !1261\l  %20 = load double, double* %11, align 8, !dbg !1262, !tbaa !1257\l  store double %20, double* %12, align 8, !dbg !1261, !tbaa !1257\l  %21 = bitcast [11 x i8]* %13 to i8*, !dbg !1263\l  call void @llvm.lifetime.start.p0i8(i64 11, i8* %21) #24, !dbg !1263\l  call void @llvm.dbg.declare(metadata [11 x i8]* %13, metadata !1236,\l... metadata !DIExpression()), !dbg !1264\l  %22 = bitcast double* %14 to i8*, !dbg !1265\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #24, !dbg !1265\l  call void @llvm.dbg.declare(metadata double* %14, metadata !1238, metadata\l... !DIExpression()), !dbg !1266\l  %23 = load double, double* %11, align 8, !dbg !1267, !tbaa !1257\l  %24 = fcmp olt double %23, 0.000000e+00, !dbg !1268\l  br i1 %24, label %25, label %28, !dbg !1267\l|{<s0>T|<s1>F}}"];
	Node0xa7f790:s0 -> Node0xa7f8a0;
	Node0xa7f790:s1 -> Node0xa7f8f0;
	Node0xa7f8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%25:\l25:                                               \l  %26 = load double, double* %11, align 8, !dbg !1269, !tbaa !1257\l  %27 = fneg double %26, !dbg !1270\l  br label %30, !dbg !1267\l}"];
	Node0xa7f8a0 -> Node0xa7f940;
	Node0xa7f8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%28:\l28:                                               \l  %29 = load double, double* %11, align 8, !dbg !1271, !tbaa !1257\l  br label %30, !dbg !1267\l}"];
	Node0xa7f8f0 -> Node0xa7f940;
	Node0xa7f940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%30:\l30:                                               \l  %31 = phi double [ %27, %25 ], [ %29, %28 ], !dbg !1267\l  store double %31, double* %14, align 8, !dbg !1266, !tbaa !1257\l  %32 = bitcast i32* %15 to i8*, !dbg !1272\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #24, !dbg !1272\l  call void @llvm.dbg.declare(metadata i32* %15, metadata !1239, metadata\l... !DIExpression()), !dbg !1273\l  %33 = bitcast i8** %16 to i8*, !dbg !1274\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #24, !dbg !1274\l  call void @llvm.dbg.declare(metadata i8** %16, metadata !1240, metadata\l... !DIExpression()), !dbg !1275\l  %34 = getelementptr inbounds [11 x i8], [11 x i8]* %13, i64 0, i64 0, !dbg\l... !1276\l  store i8* %34, i8** %16, align 8, !dbg !1275, !tbaa !1245\l  %35 = load i8*, i8** %16, align 8, !dbg !1277, !tbaa !1245\l  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !1277\l  store i8* %36, i8** %16, align 8, !dbg !1277, !tbaa !1245\l  store i8 37, i8* %35, align 1, !dbg !1278, !tbaa !1279\l  %37 = load i8*, i8** %16, align 8, !dbg !1280, !tbaa !1245\l  store i8 45, i8* %37, align 1, !dbg !1281, !tbaa !1279\l  %38 = load i32, i32* %9, align 4, !dbg !1282, !tbaa !1253\l  %39 = and i32 %38, 1, !dbg !1283\l  %40 = icmp ne i32 %39, 0, !dbg !1284\l  %41 = zext i1 %40 to i32, !dbg !1284\l  %42 = load i8*, i8** %16, align 8, !dbg !1285, !tbaa !1245\l  %43 = sext i32 %41 to i64, !dbg !1285\l  %44 = getelementptr inbounds i8, i8* %42, i64 %43, !dbg !1285\l  store i8* %44, i8** %16, align 8, !dbg !1285, !tbaa !1245\l  %45 = load i8*, i8** %16, align 8, !dbg !1286, !tbaa !1245\l  store i8 43, i8* %45, align 1, !dbg !1287, !tbaa !1279\l  %46 = load i32, i32* %9, align 4, !dbg !1288, !tbaa !1253\l  %47 = and i32 %46, 2, !dbg !1289\l  %48 = icmp ne i32 %47, 0, !dbg !1290\l  %49 = zext i1 %48 to i32, !dbg !1290\l  %50 = load i8*, i8** %16, align 8, !dbg !1291, !tbaa !1245\l  %51 = sext i32 %49 to i64, !dbg !1291\l  %52 = getelementptr inbounds i8, i8* %50, i64 %51, !dbg !1291\l  store i8* %52, i8** %16, align 8, !dbg !1291, !tbaa !1245\l  %53 = load i8*, i8** %16, align 8, !dbg !1292, !tbaa !1245\l  store i8 32, i8* %53, align 1, !dbg !1293, !tbaa !1279\l  %54 = load i32, i32* %9, align 4, !dbg !1294, !tbaa !1253\l  %55 = and i32 %54, 4, !dbg !1295\l  %56 = icmp ne i32 %55, 0, !dbg !1296\l  %57 = zext i1 %56 to i32, !dbg !1296\l  %58 = load i8*, i8** %16, align 8, !dbg !1297, !tbaa !1245\l  %59 = sext i32 %57 to i64, !dbg !1297\l  %60 = getelementptr inbounds i8, i8* %58, i64 %59, !dbg !1297\l  store i8* %60, i8** %16, align 8, !dbg !1297, !tbaa !1245\l  %61 = load i8*, i8** %16, align 8, !dbg !1298, !tbaa !1245\l  store i8 48, i8* %61, align 1, !dbg !1299, !tbaa !1279\l  %62 = load i32, i32* %9, align 4, !dbg !1300, !tbaa !1253\l  %63 = and i32 %62, 8, !dbg !1301\l  %64 = icmp ne i32 %63, 0, !dbg !1302\l  %65 = zext i1 %64 to i32, !dbg !1302\l  %66 = load i8*, i8** %16, align 8, !dbg !1303, !tbaa !1245\l  %67 = sext i32 %65 to i64, !dbg !1303\l  %68 = getelementptr inbounds i8, i8* %66, i64 %67, !dbg !1303\l  store i8* %68, i8** %16, align 8, !dbg !1303, !tbaa !1245\l  %69 = load i8*, i8** %16, align 8, !dbg !1304, !tbaa !1245\l  %70 = getelementptr inbounds i8, i8* %69, i32 1, !dbg !1304\l  store i8* %70, i8** %16, align 8, !dbg !1304, !tbaa !1245\l  store i8 42, i8* %69, align 1, !dbg !1305, !tbaa !1279\l  %71 = load i8*, i8** %16, align 8, !dbg !1306, !tbaa !1245\l  %72 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !1306\l  store i8* %72, i8** %16, align 8, !dbg !1306, !tbaa !1245\l  store i8 46, i8* %71, align 1, !dbg !1307, !tbaa !1279\l  %73 = load i8*, i8** %16, align 8, !dbg !1308, !tbaa !1245\l  %74 = getelementptr inbounds i8, i8* %73, i32 1, !dbg !1308\l  store i8* %74, i8** %16, align 8, !dbg !1308, !tbaa !1245\l  store i8 42, i8* %73, align 1, !dbg !1309, !tbaa !1279\l  %75 = load i8*, i8** %16, align 8, !dbg !1310, !tbaa !1245\l  store i8 76, i8* %75, align 1, !dbg !1311, !tbaa !1279\l  %76 = load i8*, i8** %16, align 8, !dbg !1312, !tbaa !1245\l  %77 = getelementptr inbounds i8, i8* %76, i64 0, !dbg !1312\l  store i8* %77, i8** %16, align 8, !dbg !1312, !tbaa !1245\l  %78 = load i32, i32* %9, align 4, !dbg !1313, !tbaa !1253\l  %79 = and i32 %78, 16, !dbg !1314\l  %80 = icmp ne i32 %79, 0, !dbg !1313\l  %81 = zext i1 %80 to i64, !dbg !1313\l  %82 = select i1 %80, i32 71, i32 103, !dbg !1313\l  %83 = trunc i32 %82 to i8, !dbg !1313\l  %84 = load i8*, i8** %16, align 8, !dbg !1315, !tbaa !1245\l  %85 = getelementptr inbounds i8, i8* %84, i32 1, !dbg !1315\l  store i8* %85, i8** %16, align 8, !dbg !1315, !tbaa !1245\l  store i8 %83, i8* %84, align 1, !dbg !1316, !tbaa !1279\l  %86 = load i8*, i8** %16, align 8, !dbg !1317, !tbaa !1245\l  store i8 0, i8* %86, align 1, !dbg !1318, !tbaa !1279\l  %87 = load double, double* %14, align 8, !dbg !1319, !tbaa !1257\l  %88 = fcmp olt double %87, 0x10000000000000, !dbg !1320\l  %89 = zext i1 %88 to i64, !dbg !1319\l  %90 = select i1 %88, i32 1, i32 15, !dbg !1319\l  store i32 %90, i32* %15, align 4, !dbg !1321, !tbaa !1253\l  br label %91, !dbg !1322\l}"];
	Node0xa7f940 -> Node0xa7f990;
	Node0xa7f990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%91:\l91:                                               \l  %92 = bitcast i32* %17 to i8*, !dbg !1323\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %92) #24, !dbg !1323\l  call void @llvm.dbg.declare(metadata i32* %17, metadata !1241, metadata\l... !DIExpression()), !dbg !1324\l  %93 = load i8*, i8** %7, align 8, !dbg !1325, !tbaa !1245\l  %94 = load i64, i64* %8, align 8, !dbg !1326, !tbaa !1250\l  %95 = getelementptr inbounds [11 x i8], [11 x i8]* %13, i64 0, i64 0, !dbg\l... !1327\l  %96 = load i32, i32* %10, align 4, !dbg !1328, !tbaa !1253\l  %97 = load i32, i32* %15, align 4, !dbg !1329, !tbaa !1253\l  %98 = load double, double* %12, align 8, !dbg !1330, !tbaa !1257\l  %99 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef %93, i64 noundef\l... %94, i8* noundef %95, i32 noundef %96, i32 noundef %97, double noundef %98)\l... #24, !dbg !1331\l  store i32 %99, i32* %17, align 4, !dbg !1324, !tbaa !1253\l  %100 = load i32, i32* %17, align 4, !dbg !1332, !tbaa !1253\l  %101 = icmp slt i32 %100, 0, !dbg !1334\l  br i1 %101, label %115, label %102, !dbg !1335\l|{<s0>T|<s1>F}}"];
	Node0xa7f990:s0 -> Node0xa7fad0;
	Node0xa7f990:s1 -> Node0xa7f9e0;
	Node0xa7f9e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%102:\l102:                                              \l  %103 = load i32, i32* %15, align 4, !dbg !1336, !tbaa !1253\l  %104 = icmp sle i32 17, %103, !dbg !1337\l  br i1 %104, label %115, label %105, !dbg !1338\l|{<s0>T|<s1>F}}"];
	Node0xa7f9e0:s0 -> Node0xa7fad0;
	Node0xa7f9e0:s1 -> Node0xa7fa30;
	Node0xa7fa30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%105:\l105:                                              \l  %106 = load i32, i32* %17, align 4, !dbg !1339, !tbaa !1253\l  %107 = sext i32 %106 to i64, !dbg !1339\l  %108 = load i64, i64* %8, align 8, !dbg !1340, !tbaa !1250\l  %109 = icmp ult i64 %107, %108, !dbg !1341\l  br i1 %109, label %110, label %117, !dbg !1342\l|{<s0>T|<s1>F}}"];
	Node0xa7fa30:s0 -> Node0xa7fa80;
	Node0xa7fa30:s1 -> Node0xa7fb20;
	Node0xa7fa80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%110:\l110:                                              \l  %111 = load i8*, i8** %7, align 8, !dbg !1343, !tbaa !1245\l  %112 = call double @strtod(i8* noundef %111, i8** noundef null) #24, !dbg\l... !1344\l  %113 = load double, double* %11, align 8, !dbg !1345, !tbaa !1257\l  %114 = fcmp oeq double %112, %113, !dbg !1346\l  br i1 %114, label %115, label %117, !dbg !1347\l|{<s0>T|<s1>F}}"];
	Node0xa7fa80:s0 -> Node0xa7fad0;
	Node0xa7fa80:s1 -> Node0xa7fb20;
	Node0xa7fad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%115:\l115:                                              \l  %116 = load i32, i32* %17, align 4, !dbg !1348, !tbaa !1253\l  store i32 %116, i32* %6, align 4, !dbg !1349\l  store i32 1, i32* %18, align 4\l  br label %118, !dbg !1349\l}"];
	Node0xa7fad0 -> Node0xa7fb70;
	Node0xa7fb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%117:\l117:                                              \l  store i32 0, i32* %18, align 4, !dbg !1350\l  br label %118, !dbg !1350\l}"];
	Node0xa7fb20 -> Node0xa7fb70;
	Node0xa7fb70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%118:\l118:                                              \l  %119 = bitcast i32* %17 to i8*, !dbg !1350\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %119) #24, !dbg !1350\l  %120 = load i32, i32* %18, align 4\l  switch i32 %120, label %125 [\l    i32 0, label %121\l  ]\l|{<s0>def|<s1>0}}"];
	Node0xa7fb70:s0 -> Node0xa7fc60;
	Node0xa7fb70:s1 -> Node0xa7fbc0;
	Node0xa7fbc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%121:\l121:                                              \l  br label %122, !dbg !1351\l}"];
	Node0xa7fbc0 -> Node0xa7fc10;
	Node0xa7fc10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%122:\l122:                                              \l  %123 = load i32, i32* %15, align 4, !dbg !1352, !tbaa !1253\l  %124 = add nsw i32 %123, 1, !dbg !1352\l  store i32 %124, i32* %15, align 4, !dbg !1352, !tbaa !1253\l  br label %91, !dbg !1353, !llvm.loop !1354\l}"];
	Node0xa7fc10 -> Node0xa7f990;
	Node0xa7fc60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%125:\l125:                                              \l  %126 = bitcast i8** %16 to i8*, !dbg !1358\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #24, !dbg !1358\l  %127 = bitcast i32* %15 to i8*, !dbg !1358\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %127) #24, !dbg !1358\l  %128 = bitcast double* %14 to i8*, !dbg !1358\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %128) #24, !dbg !1358\l  %129 = bitcast [11 x i8]* %13 to i8*, !dbg !1358\l  call void @llvm.lifetime.end.p0i8(i64 11, i8* %129) #24, !dbg !1358\l  %130 = bitcast double* %12 to i8*, !dbg !1358\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %130) #24, !dbg !1358\l  %131 = load i32, i32* %6, align 4, !dbg !1358\l  ret i32 %131, !dbg !1358\l}"];
}
