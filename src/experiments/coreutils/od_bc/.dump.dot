digraph "CFG for 'dump' function" {
	label="CFG for 'dump' function";

	Node0x9cf100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%0:\l  %1 = alloca [2 x i8*], align 16\l  %2 = alloca i64, align 8\l  %3 = alloca i8, align 1\l  %4 = alloca i8, align 1\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca i64, align 8\l  %10 = bitcast [2 x i8*]* %1 to i8*, !dbg !1244\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* %10) #24, !dbg !1244\l  call void @llvm.dbg.declare(metadata [2 x i8*]* %1, metadata !1230, metadata\l... !DIExpression()), !dbg !1245\l  %11 = bitcast i64* %2 to i8*, !dbg !1246\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #24, !dbg !1246\l  call void @llvm.dbg.declare(metadata i64* %2, metadata !1232, metadata\l... !DIExpression()), !dbg !1247\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #24, !dbg !1248\l  call void @llvm.dbg.declare(metadata i8* %3, metadata !1233, metadata\l... !DIExpression()), !dbg !1249\l  store i8 0, i8* %3, align 1, !dbg !1249, !tbaa !1250\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %4) #24, !dbg !1254\l  call void @llvm.dbg.declare(metadata i8* %4, metadata !1234, metadata\l... !DIExpression()), !dbg !1255\l  store i8 1, i8* %4, align 1, !dbg !1255, !tbaa !1250\l  %12 = bitcast i64* %5 to i8*, !dbg !1256\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #24, !dbg !1256\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !1235, metadata\l... !DIExpression()), !dbg !1257\l  %13 = load i64, i64* @bytes_per_block, align 8, !dbg !1258, !tbaa !1259\l  %14 = call noalias nonnull i8* @xnmalloc(i64 noundef 2, i64 noundef %13)\l... #25, !dbg !1261\l  %15 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 0, !dbg\l... !1262\l  store i8* %14, i8** %15, align 16, !dbg !1263, !tbaa !1264\l  %16 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 0, !dbg\l... !1266\l  %17 = load i8*, i8** %16, align 16, !dbg !1266, !tbaa !1264\l  %18 = load i64, i64* @bytes_per_block, align 8, !dbg !1267, !tbaa !1259\l  %19 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !1268\l  %20 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 1, !dbg\l... !1269\l  store i8* %19, i8** %20, align 8, !dbg !1270, !tbaa !1264\l  %21 = load i64, i64* @n_bytes_to_skip, align 8, !dbg !1271, !tbaa !1259\l  store i64 %21, i64* %2, align 8, !dbg !1272, !tbaa !1259\l  %22 = load i8, i8* @limit_bytes_to_format, align 1, !dbg !1273, !tbaa !1250,\l... !range !1274\l  %23 = trunc i8 %22 to i1, !dbg !1273\l  br i1 %23, label %24, label %104, !dbg !1275\l|{<s0>T|<s1>F}}"];
	Node0x9cf100:s0 -> Node0x99fd20;
	Node0x9cf100:s1 -> Node0x9a02c0;
	Node0x99fd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%24:\l24:                                               \l  br label %25, !dbg !1276\l}"];
	Node0x99fd20 -> Node0x99fd70;
	Node0x99fd70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = load i8, i8* %4, align 1, !dbg !1277, !tbaa !1250, !range !1274\l  %27 = trunc i8 %26 to i1, !dbg !1277\l  br i1 %27, label %28, label %103, !dbg !1276\l|{<s0>T|<s1>F}}"];
	Node0x99fd70:s0 -> Node0x99fdc0;
	Node0x99fd70:s1 -> Node0x9a0270;
	Node0x99fdc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = bitcast i64* %6 to i8*, !dbg !1278\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #24, !dbg !1278\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1236, metadata\l... !DIExpression()), !dbg !1279\l  %30 = load i64, i64* %2, align 8, !dbg !1280, !tbaa !1259\l  %31 = load i64, i64* @end_offset, align 8, !dbg !1282, !tbaa !1259\l  %32 = icmp uge i64 %30, %31, !dbg !1283\l  br i1 %32, label %33, label %34, !dbg !1284\l|{<s0>T|<s1>F}}"];
	Node0x99fdc0:s0 -> Node0x99fe10;
	Node0x99fdc0:s1 -> Node0x99fe60;
	Node0x99fe10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%33:\l33:                                               \l  store i64 0, i64* %5, align 8, !dbg !1285, !tbaa !1259\l  store i32 3, i32* %7, align 4\l  br label %99, !dbg !1287\l}"];
	Node0x99fe10 -> Node0x9a01d0;
	Node0x99fe60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%34:\l34:                                               \l  %35 = load i64, i64* @end_offset, align 8, !dbg !1288, !tbaa !1259\l  %36 = load i64, i64* %2, align 8, !dbg !1288, !tbaa !1259\l  %37 = sub i64 %35, %36, !dbg !1288\l  %38 = load i64, i64* @bytes_per_block, align 8, !dbg !1288, !tbaa !1259\l  %39 = icmp ult i64 %37, %38, !dbg !1288\l  br i1 %39, label %40, label %44, !dbg !1288\l|{<s0>T|<s1>F}}"];
	Node0x99fe60:s0 -> Node0x99feb0;
	Node0x99fe60:s1 -> Node0x99ff00;
	Node0x99feb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%40:\l40:                                               \l  %41 = load i64, i64* @end_offset, align 8, !dbg !1288, !tbaa !1259\l  %42 = load i64, i64* %2, align 8, !dbg !1288, !tbaa !1259\l  %43 = sub i64 %41, %42, !dbg !1288\l  br label %46, !dbg !1288\l}"];
	Node0x99feb0 -> Node0x99ff50;
	Node0x99ff00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%44:\l44:                                               \l  %45 = load i64, i64* @bytes_per_block, align 8, !dbg !1288, !tbaa !1259\l  br label %46, !dbg !1288\l}"];
	Node0x99ff00 -> Node0x99ff50;
	Node0x99ff50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%46:\l46:                                               \l  %47 = phi i64 [ %43, %40 ], [ %45, %44 ], !dbg !1288\l  store i64 %47, i64* %6, align 8, !dbg !1289, !tbaa !1259\l  %48 = load i64, i64* %6, align 8, !dbg !1290, !tbaa !1259\l  %49 = load i8, i8* %3, align 1, !dbg !1291, !tbaa !1250, !range !1274\l  %50 = trunc i8 %49 to i1, !dbg !1291\l  %51 = zext i1 %50 to i64, !dbg !1292\l  %52 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 %51, !dbg\l... !1292\l  %53 = load i8*, i8** %52, align 8, !dbg !1292, !tbaa !1264\l  %54 = call zeroext i1 @read_block(i64 noundef %48, i8* noundef %53, i64*\l... noundef %5), !dbg !1293\l  %55 = zext i1 %54 to i32, !dbg !1293\l  %56 = load i8, i8* %4, align 1, !dbg !1294, !tbaa !1250, !range !1274\l  %57 = trunc i8 %56 to i1, !dbg !1294\l  %58 = zext i1 %57 to i32, !dbg !1294\l  %59 = and i32 %58, %55, !dbg !1294\l  %60 = icmp ne i32 %59, 0, !dbg !1294\l  %61 = zext i1 %60 to i8, !dbg !1294\l  store i8 %61, i8* %4, align 1, !dbg !1294, !tbaa !1250\l  %62 = load i64, i64* %5, align 8, !dbg !1295, !tbaa !1259\l  %63 = load i64, i64* @bytes_per_block, align 8, !dbg !1297, !tbaa !1259\l  %64 = icmp ult i64 %62, %63, !dbg !1298\l  br i1 %64, label %65, label %66, !dbg !1299\l|{<s0>T|<s1>F}}"];
	Node0x99ff50:s0 -> Node0x99ffa0;
	Node0x99ff50:s1 -> Node0x99fff0;
	Node0x99ffa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%65:\l65:                                               \l  store i32 3, i32* %7, align 4\l  br label %99, !dbg !1300\l}"];
	Node0x99ffa0 -> Node0x9a01d0;
	Node0x99fff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%66:\l66:                                               \l  %67 = load i64, i64* %5, align 8, !dbg !1301, !tbaa !1259\l  %68 = load i64, i64* @bytes_per_block, align 8, !dbg !1301, !tbaa !1259\l  %69 = icmp eq i64 %67, %68, !dbg !1301\l  br i1 %69, label %70, label %71, !dbg !1304\l|{<s0>T|<s1>F}}"];
	Node0x99fff0:s0 -> Node0x9a0040;
	Node0x99fff0:s1 -> Node0x9a0090;
	Node0x9a0040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%70:\l70:                                               \l  br label %72, !dbg !1304\l}"];
	Node0x9a0040 -> Node0x9a00e0;
	Node0x9a0090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%71:\l71:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([32 x i8], [32\l... x i8]* @.str.111, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x\l... i8], [12 x i8]* @.str.76, i64 0, i64 0), i32 noundef 1392, i8* noundef\l... getelementptr inbounds ([17 x i8], [17 x i8]* @__PRETTY_FUNCTION__.dump, i64\l... 0, i64 0)) #26, !dbg !1301\l  unreachable, !dbg !1301\l}"];
	Node0x9a00e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%72:\l72:                                               \l  %73 = load i64, i64* %2, align 8, !dbg !1305, !tbaa !1259\l  %74 = load i64, i64* %5, align 8, !dbg !1306, !tbaa !1259\l  %75 = load i8, i8* %3, align 1, !dbg !1307, !tbaa !1250, !range !1274\l  %76 = trunc i8 %75 to i1, !dbg !1307\l  %77 = xor i1 %76, true, !dbg !1308\l  %78 = zext i1 %77 to i32, !dbg !1308\l  %79 = sext i32 %78 to i64, !dbg !1309\l  %80 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 %79, !dbg\l... !1309\l  %81 = load i8*, i8** %80, align 8, !dbg !1309, !tbaa !1264\l  %82 = load i8, i8* %3, align 1, !dbg !1310, !tbaa !1250, !range !1274\l  %83 = trunc i8 %82 to i1, !dbg !1310\l  %84 = zext i1 %83 to i64, !dbg !1311\l  %85 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 %84, !dbg\l... !1311\l  %86 = load i8*, i8** %85, align 8, !dbg !1311, !tbaa !1264\l  call void @write_block(i64 noundef %73, i64 noundef %74, i8* noundef %81,\l... i8* noundef %86), !dbg !1312\l  %87 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg\l... !1313, !tbaa !1264\l  %88 = call i32 @ferror_unlocked(%struct._IO_FILE* noundef %87) #24, !dbg\l... !1313\l  %89 = icmp ne i32 %88, 0, !dbg !1313\l  br i1 %89, label %90, label %91, !dbg !1315\l|{<s0>T|<s1>F}}"];
	Node0x9a00e0:s0 -> Node0x9a0130;
	Node0x9a00e0:s1 -> Node0x9a0180;
	Node0x9a0130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%90:\l90:                                               \l  store i8 0, i8* %4, align 1, !dbg !1316, !tbaa !1250\l  br label %91, !dbg !1317\l}"];
	Node0x9a0130 -> Node0x9a0180;
	Node0x9a0180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%91:\l91:                                               \l  %92 = load i64, i64* %5, align 8, !dbg !1318, !tbaa !1259\l  %93 = load i64, i64* %2, align 8, !dbg !1319, !tbaa !1259\l  %94 = add i64 %93, %92, !dbg !1319\l  store i64 %94, i64* %2, align 8, !dbg !1319, !tbaa !1259\l  %95 = load i8, i8* %3, align 1, !dbg !1320, !tbaa !1250, !range !1274\l  %96 = trunc i8 %95 to i1, !dbg !1320\l  %97 = xor i1 %96, true, !dbg !1321\l  %98 = zext i1 %97 to i8, !dbg !1322\l  store i8 %98, i8* %3, align 1, !dbg !1322, !tbaa !1250\l  store i32 0, i32* %7, align 4, !dbg !1323\l  br label %99, !dbg !1323\l}"];
	Node0x9a0180 -> Node0x9a01d0;
	Node0x9a01d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%99:\l99:                                               \l  %100 = bitcast i64* %6 to i8*, !dbg !1323\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %100) #24, !dbg !1323\l  %101 = load i32, i32* %7, align 4\l  switch i32 %101, label %234 [\l    i32 0, label %102\l    i32 3, label %103\l  ]\l|{<s0>def|<s1>0|<s2>3}}"];
	Node0x9a01d0:s0 -> Node0x9a0810;
	Node0x9a01d0:s1 -> Node0x9a0220;
	Node0x9a01d0:s2 -> Node0x9a0270;
	Node0x9a0220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  br label %25, !dbg !1276, !llvm.loop !1324\l}"];
	Node0x9a0220 -> Node0x99fd70;
	Node0x9a0270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%103:\l103:                                              \l  br label %161, !dbg !1327\l}"];
	Node0x9a0270 -> Node0x9a0630;
	Node0x9a02c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%104:\l104:                                              \l  br label %105, !dbg !1328\l}"];
	Node0x9a02c0 -> Node0x9a0310;
	Node0x9a0310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  %106 = load i8, i8* %4, align 1, !dbg !1330, !tbaa !1250, !range !1274\l  %107 = trunc i8 %106 to i1, !dbg !1330\l  br i1 %107, label %108, label %160, !dbg !1328\l|{<s0>T|<s1>F}}"];
	Node0x9a0310:s0 -> Node0x9a0360;
	Node0x9a0310:s1 -> Node0x9a05e0;
	Node0x9a0360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%108:\l108:                                              \l  %109 = load i64, i64* @bytes_per_block, align 8, !dbg !1331, !tbaa !1259\l  %110 = load i8, i8* %3, align 1, !dbg !1333, !tbaa !1250, !range !1274\l  %111 = trunc i8 %110 to i1, !dbg !1333\l  %112 = zext i1 %111 to i64, !dbg !1334\l  %113 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 %112,\l... !dbg !1334\l  %114 = load i8*, i8** %113, align 8, !dbg !1334, !tbaa !1264\l  %115 = call zeroext i1 @read_block(i64 noundef %109, i8* noundef %114, i64*\l... noundef %5), !dbg !1335\l  %116 = zext i1 %115 to i32, !dbg !1335\l  %117 = load i8, i8* %4, align 1, !dbg !1336, !tbaa !1250, !range !1274\l  %118 = trunc i8 %117 to i1, !dbg !1336\l  %119 = zext i1 %118 to i32, !dbg !1336\l  %120 = and i32 %119, %116, !dbg !1336\l  %121 = icmp ne i32 %120, 0, !dbg !1336\l  %122 = zext i1 %121 to i8, !dbg !1336\l  store i8 %122, i8* %4, align 1, !dbg !1336, !tbaa !1250\l  %123 = load i64, i64* %5, align 8, !dbg !1337, !tbaa !1259\l  %124 = load i64, i64* @bytes_per_block, align 8, !dbg !1339, !tbaa !1259\l  %125 = icmp ult i64 %123, %124, !dbg !1340\l  br i1 %125, label %126, label %127, !dbg !1341\l|{<s0>T|<s1>F}}"];
	Node0x9a0360:s0 -> Node0x9a03b0;
	Node0x9a0360:s1 -> Node0x9a0400;
	Node0x9a03b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%126:\l126:                                              \l  br label %160, !dbg !1342\l}"];
	Node0x9a03b0 -> Node0x9a05e0;
	Node0x9a0400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%127:\l127:                                              \l  %128 = load i64, i64* %5, align 8, !dbg !1343, !tbaa !1259\l  %129 = load i64, i64* @bytes_per_block, align 8, !dbg !1343, !tbaa !1259\l  %130 = icmp eq i64 %128, %129, !dbg !1343\l  br i1 %130, label %131, label %132, !dbg !1346\l|{<s0>T|<s1>F}}"];
	Node0x9a0400:s0 -> Node0x9a0450;
	Node0x9a0400:s1 -> Node0x9a04a0;
	Node0x9a0450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%131:\l131:                                              \l  br label %133, !dbg !1346\l}"];
	Node0x9a0450 -> Node0x9a04f0;
	Node0x9a04a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%132:\l132:                                              \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([32 x i8], [32\l... x i8]* @.str.111, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x\l... i8], [12 x i8]* @.str.76, i64 0, i64 0), i32 noundef 1408, i8* noundef\l... getelementptr inbounds ([17 x i8], [17 x i8]* @__PRETTY_FUNCTION__.dump, i64\l... 0, i64 0)) #26, !dbg !1343\l  unreachable, !dbg !1343\l}"];
	Node0x9a04f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%133:\l133:                                              \l  %134 = load i64, i64* %2, align 8, !dbg !1347, !tbaa !1259\l  %135 = load i64, i64* %5, align 8, !dbg !1348, !tbaa !1259\l  %136 = load i8, i8* %3, align 1, !dbg !1349, !tbaa !1250, !range !1274\l  %137 = trunc i8 %136 to i1, !dbg !1349\l  %138 = xor i1 %137, true, !dbg !1350\l  %139 = zext i1 %138 to i32, !dbg !1350\l  %140 = sext i32 %139 to i64, !dbg !1351\l  %141 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 %140,\l... !dbg !1351\l  %142 = load i8*, i8** %141, align 8, !dbg !1351, !tbaa !1264\l  %143 = load i8, i8* %3, align 1, !dbg !1352, !tbaa !1250, !range !1274\l  %144 = trunc i8 %143 to i1, !dbg !1352\l  %145 = zext i1 %144 to i64, !dbg !1353\l  %146 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 %145,\l... !dbg !1353\l  %147 = load i8*, i8** %146, align 8, !dbg !1353, !tbaa !1264\l  call void @write_block(i64 noundef %134, i64 noundef %135, i8* noundef %142,\l... i8* noundef %147), !dbg !1354\l  %148 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg\l... !1355, !tbaa !1264\l  %149 = call i32 @ferror_unlocked(%struct._IO_FILE* noundef %148) #24, !dbg\l... !1355\l  %150 = icmp ne i32 %149, 0, !dbg !1355\l  br i1 %150, label %151, label %152, !dbg !1357\l|{<s0>T|<s1>F}}"];
	Node0x9a04f0:s0 -> Node0x9a0540;
	Node0x9a04f0:s1 -> Node0x9a0590;
	Node0x9a0540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%151:\l151:                                              \l  store i8 0, i8* %4, align 1, !dbg !1358, !tbaa !1250\l  br label %152, !dbg !1359\l}"];
	Node0x9a0540 -> Node0x9a0590;
	Node0x9a0590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%152:\l152:                                              \l  %153 = load i64, i64* %5, align 8, !dbg !1360, !tbaa !1259\l  %154 = load i64, i64* %2, align 8, !dbg !1361, !tbaa !1259\l  %155 = add i64 %154, %153, !dbg !1361\l  store i64 %155, i64* %2, align 8, !dbg !1361, !tbaa !1259\l  %156 = load i8, i8* %3, align 1, !dbg !1362, !tbaa !1250, !range !1274\l  %157 = trunc i8 %156 to i1, !dbg !1362\l  %158 = xor i1 %157, true, !dbg !1363\l  %159 = zext i1 %158 to i8, !dbg !1364\l  store i8 %159, i8* %3, align 1, !dbg !1364, !tbaa !1250\l  br label %105, !dbg !1328, !llvm.loop !1365\l}"];
	Node0x9a0590 -> Node0x9a0310;
	Node0x9a05e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%160:\l160:                                              \l  br label %161\l}"];
	Node0x9a05e0 -> Node0x9a0630;
	Node0x9a0630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%161:\l161:                                              \l  %162 = load i64, i64* %5, align 8, !dbg !1367, !tbaa !1259\l  %163 = icmp ugt i64 %162, 0, !dbg !1368\l  br i1 %163, label %164, label %208, !dbg !1369\l|{<s0>T|<s1>F}}"];
	Node0x9a0630:s0 -> Node0x9a0680;
	Node0x9a0630:s1 -> Node0x9a06d0;
	Node0x9a0680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%164:\l164:                                              \l  %165 = bitcast i32* %8 to i8*, !dbg !1370\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %165) #24, !dbg !1370\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !1240, metadata\l... !DIExpression()), !dbg !1371\l  %166 = bitcast i64* %9 to i8*, !dbg !1372\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %166) #24, !dbg !1372\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1243, metadata\l... !DIExpression()), !dbg !1373\l  %167 = call i32 @get_lcm() #27, !dbg !1374\l  store i32 %167, i32* %8, align 4, !dbg !1375, !tbaa !1376\l  %168 = load i32, i32* %8, align 4, !dbg !1378, !tbaa !1376\l  %169 = sext i32 %168 to i64, !dbg !1378\l  %170 = load i64, i64* %5, align 8, !dbg !1379, !tbaa !1259\l  %171 = load i32, i32* %8, align 4, !dbg !1380, !tbaa !1376\l  %172 = sext i32 %171 to i64, !dbg !1380\l  %173 = add i64 %170, %172, !dbg !1381\l  %174 = sub i64 %173, 1, !dbg !1382\l  %175 = load i32, i32* %8, align 4, !dbg !1383, !tbaa !1376\l  %176 = sext i32 %175 to i64, !dbg !1383\l  %177 = udiv i64 %174, %176, !dbg !1384\l  %178 = mul i64 %169, %177, !dbg !1385\l  store i64 %178, i64* %9, align 8, !dbg !1386, !tbaa !1259\l  %179 = load i8, i8* %3, align 1, !dbg !1387, !tbaa !1250, !range !1274\l  %180 = trunc i8 %179 to i1, !dbg !1387\l  %181 = zext i1 %180 to i64, !dbg !1388\l  %182 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 %181,\l... !dbg !1388\l  %183 = load i8*, i8** %182, align 8, !dbg !1388, !tbaa !1264\l  %184 = load i64, i64* %5, align 8, !dbg !1389, !tbaa !1259\l  %185 = getelementptr inbounds i8, i8* %183, i64 %184, !dbg !1390\l  %186 = load i64, i64* %9, align 8, !dbg !1391, !tbaa !1259\l  %187 = load i64, i64* %5, align 8, !dbg !1392, !tbaa !1259\l  %188 = sub i64 %186, %187, !dbg !1393\l  call void @llvm.memset.p0i8.i64(i8* align 1 %185, i8 0, i64 %188, i1 false),\l... !dbg !1394\l  %189 = load i64, i64* %2, align 8, !dbg !1395, !tbaa !1259\l  %190 = load i64, i64* %5, align 8, !dbg !1396, !tbaa !1259\l  %191 = load i8, i8* %3, align 1, !dbg !1397, !tbaa !1250, !range !1274\l  %192 = trunc i8 %191 to i1, !dbg !1397\l  %193 = xor i1 %192, true, !dbg !1398\l  %194 = zext i1 %193 to i32, !dbg !1398\l  %195 = sext i32 %194 to i64, !dbg !1399\l  %196 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 %195,\l... !dbg !1399\l  %197 = load i8*, i8** %196, align 8, !dbg !1399, !tbaa !1264\l  %198 = load i8, i8* %3, align 1, !dbg !1400, !tbaa !1250, !range !1274\l  %199 = trunc i8 %198 to i1, !dbg !1400\l  %200 = zext i1 %199 to i64, !dbg !1401\l  %201 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 %200,\l... !dbg !1401\l  %202 = load i8*, i8** %201, align 8, !dbg !1401, !tbaa !1264\l  call void @write_block(i64 noundef %189, i64 noundef %190, i8* noundef %197,\l... i8* noundef %202), !dbg !1402\l  %203 = load i64, i64* %5, align 8, !dbg !1403, !tbaa !1259\l  %204 = load i64, i64* %2, align 8, !dbg !1404, !tbaa !1259\l  %205 = add i64 %204, %203, !dbg !1404\l  store i64 %205, i64* %2, align 8, !dbg !1404, !tbaa !1259\l  %206 = bitcast i64* %9 to i8*, !dbg !1405\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %206) #24, !dbg !1405\l  %207 = bitcast i32* %8 to i8*, !dbg !1405\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %207) #24, !dbg !1405\l  br label %208, !dbg !1406\l}"];
	Node0x9a0680 -> Node0x9a06d0;
	Node0x9a06d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%208:\l208:                                              \l  %209 = load void (i64, i8)*, void (i64, i8)** @format_address, align 8, !dbg\l... !1407, !tbaa !1264\l  %210 = load i64, i64* %2, align 8, !dbg !1408, !tbaa !1259\l  call void %209(i64 noundef %210, i8 noundef signext 10), !dbg !1407\l  %211 = load i8, i8* @limit_bytes_to_format, align 1, !dbg !1409, !tbaa\l... !1250, !range !1274\l  %212 = trunc i8 %211 to i1, !dbg !1409\l  br i1 %212, label %213, label %226, !dbg !1411\l|{<s0>T|<s1>F}}"];
	Node0x9a06d0:s0 -> Node0x9a0720;
	Node0x9a06d0:s1 -> Node0x9a07c0;
	Node0x9a0720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%213:\l213:                                              \l  %214 = load i64, i64* %2, align 8, !dbg !1412, !tbaa !1259\l  %215 = load i64, i64* @end_offset, align 8, !dbg !1413, !tbaa !1259\l  %216 = icmp uge i64 %214, %215, !dbg !1414\l  br i1 %216, label %217, label %226, !dbg !1415\l|{<s0>T|<s1>F}}"];
	Node0x9a0720:s0 -> Node0x9a0770;
	Node0x9a0720:s1 -> Node0x9a07c0;
	Node0x9a0770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%217:\l217:                                              \l  %218 = call zeroext i1 @check_and_close(i32 noundef 0), !dbg !1416\l  %219 = zext i1 %218 to i32, !dbg !1416\l  %220 = load i8, i8* %4, align 1, !dbg !1417, !tbaa !1250, !range !1274\l  %221 = trunc i8 %220 to i1, !dbg !1417\l  %222 = zext i1 %221 to i32, !dbg !1417\l  %223 = and i32 %222, %219, !dbg !1417\l  %224 = icmp ne i32 %223, 0, !dbg !1417\l  %225 = zext i1 %224 to i8, !dbg !1417\l  store i8 %225, i8* %4, align 1, !dbg !1417, !tbaa !1250\l  br label %226, !dbg !1418\l}"];
	Node0x9a0770 -> Node0x9a07c0;
	Node0x9a07c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%226:\l226:                                              \l  %227 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 0, !dbg\l... !1419\l  %228 = load i8*, i8** %227, align 16, !dbg !1419, !tbaa !1264\l  call void @free(i8* noundef %228) #24, !dbg !1420\l  %229 = load i8, i8* %4, align 1, !dbg !1421, !tbaa !1250, !range !1274\l  %230 = trunc i8 %229 to i1, !dbg !1421\l  store i32 1, i32* %7, align 4\l  %231 = bitcast i64* %5 to i8*, !dbg !1422\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %231) #24, !dbg !1422\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %4) #24, !dbg !1422\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %3) #24, !dbg !1422\l  %232 = bitcast i64* %2 to i8*, !dbg !1422\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %232) #24, !dbg !1422\l  %233 = bitcast [2 x i8*]* %1 to i8*, !dbg !1422\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* %233) #24, !dbg !1422\l  ret i1 %230, !dbg !1423\l}"];
	Node0x9a0810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%234:\l234:                                              \l  unreachable\l}"];
}
