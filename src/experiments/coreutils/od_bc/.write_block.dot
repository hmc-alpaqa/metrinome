digraph "CFG for 'write_block' function" {
	label="CFG for 'write_block' function";

	Node0x9ec520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i32, align 4\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i32, align 4\l  store i64 %0, i64* %5, align 8, !tbaa !1226\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !278, metadata\l... !DIExpression()), !dbg !1230\l  store i64 %1, i64* %6, align 8, !tbaa !1226\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !279, metadata\l... !DIExpression()), !dbg !1231\l  store i8* %2, i8** %7, align 8, !tbaa !1232\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !280, metadata\l... !DIExpression()), !dbg !1234\l  store i8* %3, i8** %8, align 8, !tbaa !1232\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !281, metadata\l... !DIExpression()), !dbg !1235\l  %15 = load i8, i8* @abbreviate_duplicate_blocks, align 1, !dbg !1236, !tbaa\l... !1237, !range !1239\l  %16 = trunc i8 %15 to i1, !dbg !1236\l  br i1 %16, label %17, label %37, !dbg !1240\l|{<s0>T|<s1>F}}"];
	Node0x9ec520:s0 -> Node0x9ec6e0;
	Node0x9ec520:s1 -> Node0x9ec910;
	Node0x9ec6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%17:\l17:                                               \l  %18 = load i8, i8* @write_block.first, align 1, !dbg !1241, !tbaa !1237,\l... !range !1239\l  %19 = trunc i8 %18 to i1, !dbg !1241\l  br i1 %19, label %37, label %20, !dbg !1242\l|{<s0>T|<s1>F}}"];
	Node0x9ec6e0:s0 -> Node0x9ec910;
	Node0x9ec6e0:s1 -> Node0x9ec730;
	Node0x9ec730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%20:\l20:                                               \l  %21 = load i64, i64* %6, align 8, !dbg !1243, !tbaa !1226\l  %22 = load i64, i64* @bytes_per_block, align 8, !dbg !1244, !tbaa !1226\l  %23 = icmp eq i64 %21, %22, !dbg !1245\l  br i1 %23, label %24, label %37, !dbg !1246\l|{<s0>T|<s1>F}}"];
	Node0x9ec730:s0 -> Node0x9ec780;
	Node0x9ec730:s1 -> Node0x9ec910;
	Node0x9ec780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%24:\l24:                                               \l  %25 = load i8*, i8** %7, align 8, !dbg !1247, !tbaa !1232\l  %26 = load i8*, i8** %8, align 8, !dbg !1247, !tbaa !1232\l  %27 = load i64, i64* @bytes_per_block, align 8, !dbg !1247, !tbaa !1226\l  %28 = call i32 @memcmp(i8* noundef %25, i8* noundef %26, i64 noundef %27)\l... #24, !dbg !1247\l  %29 = icmp eq i32 %28, 0, !dbg !1247\l  br i1 %29, label %30, label %37, !dbg !1248\l|{<s0>T|<s1>F}}"];
	Node0x9ec780:s0 -> Node0x9ec7d0;
	Node0x9ec780:s1 -> Node0x9ec910;
	Node0x9ec7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%30:\l30:                                               \l  %31 = load i8, i8* @write_block.prev_pair_equal, align 1, !dbg !1249, !tbaa\l... !1237, !range !1239\l  %32 = trunc i8 %31 to i1, !dbg !1249\l  br i1 %32, label %33, label %34, !dbg !1252\l|{<s0>T|<s1>F}}"];
	Node0x9ec7d0:s0 -> Node0x9ec820;
	Node0x9ec7d0:s1 -> Node0x9ec870;
	Node0x9ec820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%33:\l33:                                               \l  br label %36, !dbg !1253\l}"];
	Node0x9ec820 -> Node0x9ec8c0;
	Node0x9ec870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%34:\l34:                                               \l  %35 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x\l... i8], [3 x i8]* @.str.113, i64 0, i64 0)), !dbg !1255\l  store i8 1, i8* @write_block.prev_pair_equal, align 1, !dbg !1257, !tbaa\l... !1237\l  br label %36\l}"];
	Node0x9ec870 -> Node0x9ec8c0;
	Node0x9ec8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%36:\l36:                                               \l  br label %145, !dbg !1258\l}"];
	Node0x9ec8c0 -> Node0x9ecc80;
	Node0x9ec910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%37:\l37:                                               \l  store i8 0, i8* @write_block.prev_pair_equal, align 1, !dbg !1259, !tbaa\l... !1237\l  %38 = bitcast i64* %9 to i8*, !dbg !1260\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #25, !dbg !1260\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !282, metadata\l... !DIExpression()), !dbg !1261\l  store i64 0, i64* %9, align 8, !dbg !1261, !tbaa !1226\l  br label %39, !dbg !1260\l}"];
	Node0x9ec910 -> Node0x9ec960;
	Node0x9ec960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = load i64, i64* %9, align 8, !dbg !1262, !tbaa !1226\l  %41 = load i64, i64* @n_specs, align 8, !dbg !1263, !tbaa !1226\l  %42 = icmp ult i64 %40, %41, !dbg !1264\l  br i1 %42, label %45, label %43, !dbg !1265\l|{<s0>T|<s1>F}}"];
	Node0x9ec960:s0 -> Node0x9eca00;
	Node0x9ec960:s1 -> Node0x9ec9b0;
	Node0x9ec9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%43:\l43:                                               \l  %44 = bitcast i64* %9 to i8*, !dbg !1266\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44) #25, !dbg !1266\l  br label %144\l}"];
	Node0x9ec9b0 -> Node0x9ecc30;
	Node0x9eca00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = bitcast i32* %10 to i8*, !dbg !1267\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #25, !dbg !1267\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !286, metadata\l... !DIExpression()), !dbg !1268\l  %47 = load %struct.tspec*, %struct.tspec** @spec, align 8, !dbg !1269, !tbaa\l... !1232\l  %48 = load i64, i64* %9, align 8, !dbg !1270, !tbaa !1226\l  %49 = getelementptr inbounds %struct.tspec, %struct.tspec* %47, i64 %48,\l... !dbg !1269\l  %50 = getelementptr inbounds %struct.tspec, %struct.tspec* %49, i32 0, i32\l... 1, !dbg !1271\l  %51 = load i32, i32* %50, align 4, !dbg !1271, !tbaa !1272\l  %52 = zext i32 %51 to i64, !dbg !1275\l  %53 = getelementptr inbounds [9 x i32], [9 x i32]* @width_bytes, i64 0, i64\l... %52, !dbg !1275\l  %54 = load i32, i32* %53, align 4, !dbg !1275, !tbaa !1276\l  store i32 %54, i32* %10, align 4, !dbg !1268, !tbaa !1276\l  %55 = bitcast i32* %11 to i8*, !dbg !1277\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %55) #25, !dbg !1277\l  call void @llvm.dbg.declare(metadata i32* %11, metadata !289, metadata\l... !DIExpression()), !dbg !1278\l  %56 = load i64, i64* @bytes_per_block, align 8, !dbg !1279, !tbaa !1226\l  %57 = load i32, i32* %10, align 4, !dbg !1280, !tbaa !1276\l  %58 = sext i32 %57 to i64, !dbg !1280\l  %59 = udiv i64 %56, %58, !dbg !1281\l  %60 = trunc i64 %59 to i32, !dbg !1279\l  store i32 %60, i32* %11, align 4, !dbg !1278, !tbaa !1276\l  %61 = bitcast i32* %12 to i8*, !dbg !1282\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %61) #25, !dbg !1282\l  call void @llvm.dbg.declare(metadata i32* %12, metadata !290, metadata\l... !DIExpression()), !dbg !1283\l  %62 = load i64, i64* @bytes_per_block, align 8, !dbg !1284, !tbaa !1226\l  %63 = load i64, i64* %6, align 8, !dbg !1285, !tbaa !1226\l  %64 = sub i64 %62, %63, !dbg !1286\l  %65 = load i32, i32* %10, align 4, !dbg !1287, !tbaa !1276\l  %66 = sext i32 %65 to i64, !dbg !1287\l  %67 = udiv i64 %64, %66, !dbg !1288\l  %68 = trunc i64 %67 to i32, !dbg !1289\l  store i32 %68, i32* %12, align 4, !dbg !1283, !tbaa !1276\l  %69 = load i64, i64* %9, align 8, !dbg !1290, !tbaa !1226\l  %70 = icmp eq i64 %69, 0, !dbg !1292\l  br i1 %70, label %71, label %74, !dbg !1293\l|{<s0>T|<s1>F}}"];
	Node0x9eca00:s0 -> Node0x9eca50;
	Node0x9eca00:s1 -> Node0x9ecaa0;
	Node0x9eca50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%71:\l71:                                               \l  %72 = load void (i64, i8)*, void (i64, i8)** @format_address, align 8, !dbg\l... !1294, !tbaa !1232\l  %73 = load i64, i64* %5, align 8, !dbg !1295, !tbaa !1226\l  call void %72(i64 noundef %73, i8 noundef signext 0), !dbg !1294\l  br label %77, !dbg !1294\l}"];
	Node0x9eca50 -> Node0x9ecaf0;
	Node0x9ecaa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%74:\l74:                                               \l  %75 = load i32, i32* @address_pad_len, align 4, !dbg !1296, !tbaa !1276\l  %76 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([4 x\l... i8], [4 x i8]* @.str.92, i64 0, i64 0), i32 noundef %75, i8* noundef\l... getelementptr inbounds ([1 x i8], [1 x i8]* @.str.16, i64 0, i64 0)), !dbg\l... !1297\l  br label %77\l}"];
	Node0x9ecaa0 -> Node0x9ecaf0;
	Node0x9ecaf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = load %struct.tspec*, %struct.tspec** @spec, align 8, !dbg !1298, !tbaa\l... !1232\l  %79 = load i64, i64* %9, align 8, !dbg !1299, !tbaa !1226\l  %80 = getelementptr inbounds %struct.tspec, %struct.tspec* %78, i64 %79,\l... !dbg !1298\l  %81 = getelementptr inbounds %struct.tspec, %struct.tspec* %80, i32 0, i32\l... 2, !dbg !1300\l  %82 = load void (i64, i64, i8*, i8*, i32, i32)*, void (i64, i64, i8*, i8*,\l... i32, i32)** %81, align 8, !dbg !1300, !tbaa !1301\l  %83 = load i32, i32* %11, align 4, !dbg !1302, !tbaa !1276\l  %84 = sext i32 %83 to i64, !dbg !1302\l  %85 = load i32, i32* %12, align 4, !dbg !1303, !tbaa !1276\l  %86 = sext i32 %85 to i64, !dbg !1303\l  %87 = load i8*, i8** %8, align 8, !dbg !1304, !tbaa !1232\l  %88 = load %struct.tspec*, %struct.tspec** @spec, align 8, !dbg !1305, !tbaa\l... !1232\l  %89 = load i64, i64* %9, align 8, !dbg !1306, !tbaa !1226\l  %90 = getelementptr inbounds %struct.tspec, %struct.tspec* %88, i64 %89,\l... !dbg !1305\l  %91 = getelementptr inbounds %struct.tspec, %struct.tspec* %90, i32 0, i32\l... 3, !dbg !1307\l  %92 = getelementptr inbounds [10 x i8], [10 x i8]* %91, i64 0, i64 0, !dbg\l... !1305\l  %93 = load %struct.tspec*, %struct.tspec** @spec, align 8, !dbg !1308, !tbaa\l... !1232\l  %94 = load i64, i64* %9, align 8, !dbg !1309, !tbaa !1226\l  %95 = getelementptr inbounds %struct.tspec, %struct.tspec* %93, i64 %94,\l... !dbg !1308\l  %96 = getelementptr inbounds %struct.tspec, %struct.tspec* %95, i32 0, i32\l... 5, !dbg !1310\l  %97 = load i32, i32* %96, align 4, !dbg !1310, !tbaa !1311\l  %98 = load %struct.tspec*, %struct.tspec** @spec, align 8, !dbg !1312, !tbaa\l... !1232\l  %99 = load i64, i64* %9, align 8, !dbg !1313, !tbaa !1226\l  %100 = getelementptr inbounds %struct.tspec, %struct.tspec* %98, i64 %99,\l... !dbg !1312\l  %101 = getelementptr inbounds %struct.tspec, %struct.tspec* %100, i32 0, i32\l... 6, !dbg !1314\l  %102 = load i32, i32* %101, align 8, !dbg !1314, !tbaa !1315\l  call void %82(i64 noundef %84, i64 noundef %86, i8* noundef %87, i8* noundef\l... %92, i32 noundef %97, i32 noundef %102), !dbg !1316\l  %103 = load %struct.tspec*, %struct.tspec** @spec, align 8, !dbg !1317,\l... !tbaa !1232\l  %104 = load i64, i64* %9, align 8, !dbg !1318, !tbaa !1226\l  %105 = getelementptr inbounds %struct.tspec, %struct.tspec* %103, i64 %104,\l... !dbg !1317\l  %106 = getelementptr inbounds %struct.tspec, %struct.tspec* %105, i32 0, i32\l... 4, !dbg !1319\l  %107 = load i8, i8* %106, align 2, !dbg !1319, !tbaa !1320, !range !1239\l  %108 = trunc i8 %107 to i1, !dbg !1319\l  br i1 %108, label %109, label %136, !dbg !1321\l|{<s0>T|<s1>F}}"];
	Node0x9ecaf0:s0 -> Node0x9ecb40;
	Node0x9ecaf0:s1 -> Node0x9ecb90;
	Node0x9ecb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%109:\l109:                                              \l  %110 = bitcast i32* %13 to i8*, !dbg !1322\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %110) #25, !dbg !1322\l  call void @llvm.dbg.declare(metadata i32* %13, metadata !291, metadata\l... !DIExpression()), !dbg !1323\l  %111 = load %struct.tspec*, %struct.tspec** @spec, align 8, !dbg !1324,\l... !tbaa !1232\l  %112 = load i64, i64* %9, align 8, !dbg !1325, !tbaa !1226\l  %113 = getelementptr inbounds %struct.tspec, %struct.tspec* %111, i64 %112,\l... !dbg !1324\l  %114 = getelementptr inbounds %struct.tspec, %struct.tspec* %113, i32 0, i32\l... 5, !dbg !1326\l  %115 = load i32, i32* %114, align 4, !dbg !1326, !tbaa !1311\l  store i32 %115, i32* %13, align 4, !dbg !1323, !tbaa !1276\l  %116 = bitcast i32* %14 to i8*, !dbg !1327\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %116) #25, !dbg !1327\l  call void @llvm.dbg.declare(metadata i32* %14, metadata !294, metadata\l... !DIExpression()), !dbg !1328\l  %117 = load %struct.tspec*, %struct.tspec** @spec, align 8, !dbg !1329,\l... !tbaa !1232\l  %118 = load i64, i64* %9, align 8, !dbg !1330, !tbaa !1226\l  %119 = getelementptr inbounds %struct.tspec, %struct.tspec* %117, i64 %118,\l... !dbg !1329\l  %120 = getelementptr inbounds %struct.tspec, %struct.tspec* %119, i32 0, i32\l... 6, !dbg !1331\l  %121 = load i32, i32* %120, align 8, !dbg !1331, !tbaa !1315\l  %122 = load i32, i32* %12, align 4, !dbg !1332, !tbaa !1276\l  %123 = mul nsw i32 %121, %122, !dbg !1333\l  %124 = load i32, i32* %11, align 4, !dbg !1334, !tbaa !1276\l  %125 = sdiv i32 %123, %124, !dbg !1335\l  store i32 %125, i32* %14, align 4, !dbg !1328, !tbaa !1276\l  %126 = load i32, i32* %12, align 4, !dbg !1336, !tbaa !1276\l  %127 = load i32, i32* %13, align 4, !dbg !1337, !tbaa !1276\l  %128 = mul nsw i32 %126, %127, !dbg !1338\l  %129 = load i32, i32* %14, align 4, !dbg !1339, !tbaa !1276\l  %130 = add nsw i32 %128, %129, !dbg !1340\l  %131 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([4 x\l... i8], [4 x i8]* @.str.92, i64 0, i64 0), i32 noundef %130, i8* noundef\l... getelementptr inbounds ([1 x i8], [1 x i8]* @.str.16, i64 0, i64 0)), !dbg\l... !1341\l  %132 = load i64, i64* %6, align 8, !dbg !1342, !tbaa !1226\l  %133 = load i8*, i8** %8, align 8, !dbg !1343, !tbaa !1232\l  call void @dump_hexl_mode_trailer(i64 noundef %132, i8* noundef %133), !dbg\l... !1344\l  %134 = bitcast i32* %14 to i8*, !dbg !1345\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %134) #25, !dbg !1345\l  %135 = bitcast i32* %13 to i8*, !dbg !1345\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %135) #25, !dbg !1345\l  br label %136, !dbg !1346\l}"];
	Node0x9ecb40 -> Node0x9ecb90;
	Node0x9ecb90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%136:\l136:                                              \l  %137 = call i32 @putchar_unlocked(i32 noundef 10), !dbg !1347\l  %138 = bitcast i32* %12 to i8*, !dbg !1348\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %138) #25, !dbg !1348\l  %139 = bitcast i32* %11 to i8*, !dbg !1348\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %139) #25, !dbg !1348\l  %140 = bitcast i32* %10 to i8*, !dbg !1348\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %140) #25, !dbg !1348\l  br label %141, !dbg !1349\l}"];
	Node0x9ecb90 -> Node0x9ecbe0;
	Node0x9ecbe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%141:\l141:                                              \l  %142 = load i64, i64* %9, align 8, !dbg !1350, !tbaa !1226\l  %143 = add i64 %142, 1, !dbg !1350\l  store i64 %143, i64* %9, align 8, !dbg !1350, !tbaa !1226\l  br label %39, !dbg !1266, !llvm.loop !1351\l}"];
	Node0x9ecbe0 -> Node0x9ec960;
	Node0x9ecc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%144:\l144:                                              \l  br label %145\l}"];
	Node0x9ecc30 -> Node0x9ecc80;
	Node0x9ecc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%145:\l145:                                              \l  store i8 0, i8* @write_block.first, align 1, !dbg !1355, !tbaa !1237\l  ret void, !dbg !1356\l}"];
}
