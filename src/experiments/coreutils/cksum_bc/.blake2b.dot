digraph "CFG for 'blake2b' function" {
	label="CFG for 'blake2b' function";

	Node0x1e2bf90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = alloca i32, align 4\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i8*, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i8*, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca [1 x %struct.blake2b_state__], align 16\l  %15 = alloca i32, align 4\l  store i8* %0, i8** %8, align 8, !tbaa !1301\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1283, metadata\l... !DIExpression()), !dbg !1305\l  store i64 %1, i64* %9, align 8, !tbaa !1306\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1284, metadata\l... !DIExpression()), !dbg !1308\l  store i8* %2, i8** %10, align 8, !tbaa !1301\l  call void @llvm.dbg.declare(metadata i8** %10, metadata !1285, metadata\l... !DIExpression()), !dbg !1309\l  store i64 %3, i64* %11, align 8, !tbaa !1306\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1286, metadata\l... !DIExpression()), !dbg !1310\l  store i8* %4, i8** %12, align 8, !tbaa !1301\l  call void @llvm.dbg.declare(metadata i8** %12, metadata !1287, metadata\l... !DIExpression()), !dbg !1311\l  store i64 %5, i64* %13, align 8, !tbaa !1306\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !1288, metadata\l... !DIExpression()), !dbg !1312\l  %16 = bitcast [1 x %struct.blake2b_state__]* %14 to i8*, !dbg !1313\l  call void @llvm.lifetime.start.p0i8(i64 248, i8* %16) #26, !dbg !1313\l  call void @llvm.dbg.declare(metadata [1 x %struct.blake2b_state__]* %14,\l... metadata !1289, metadata !DIExpression()), !dbg !1314\l  %17 = load i8*, i8** %10, align 8, !dbg !1315, !tbaa !1301\l  %18 = icmp eq i8* null, %17, !dbg !1317\l  br i1 %18, label %19, label %23, !dbg !1318\l|{<s0>T|<s1>F}}"];
	Node0x1e2bf90:s0 -> Node0x1e2c0a0;
	Node0x1e2bf90:s1 -> Node0x1e2c140;
	Node0x1e2c0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%19:\l19:                                               \l  %20 = load i64, i64* %11, align 8, !dbg !1319, !tbaa !1306\l  %21 = icmp ugt i64 %20, 0, !dbg !1320\l  br i1 %21, label %22, label %23, !dbg !1321\l|{<s0>T|<s1>F}}"];
	Node0x1e2c0a0:s0 -> Node0x1e2c0f0;
	Node0x1e2c0a0:s1 -> Node0x1e2c140;
	Node0x1e2c0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%22:\l22:                                               \l  store i32 -1, i32* %7, align 4, !dbg !1322\l  store i32 1, i32* %15, align 4\l  br label %73, !dbg !1322\l}"];
	Node0x1e2c0f0 -> Node0x1e2c6e0;
	Node0x1e2c140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%23:\l23:                                               \l  %24 = load i8*, i8** %8, align 8, !dbg !1323, !tbaa !1301\l  %25 = icmp eq i8* null, %24, !dbg !1325\l  br i1 %25, label %26, label %27, !dbg !1326\l|{<s0>T|<s1>F}}"];
	Node0x1e2c140:s0 -> Node0x1e2c190;
	Node0x1e2c140:s1 -> Node0x1e2c1e0;
	Node0x1e2c190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%26:\l26:                                               \l  store i32 -1, i32* %7, align 4, !dbg !1327\l  store i32 1, i32* %15, align 4\l  br label %73, !dbg !1327\l}"];
	Node0x1e2c190 -> Node0x1e2c6e0;
	Node0x1e2c1e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d8564670",label="{%27:\l27:                                               \l  %28 = load i8*, i8** %12, align 8, !dbg !1328, !tbaa !1301\l  %29 = icmp eq i8* null, %28, !dbg !1330\l  br i1 %29, label %30, label %34, !dbg !1331\l|{<s0>T|<s1>F}}"];
	Node0x1e2c1e0:s0 -> Node0x1e2c230;
	Node0x1e2c1e0:s1 -> Node0x1e2c2d0;
	Node0x1e2c230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%30:\l30:                                               \l  %31 = load i64, i64* %13, align 8, !dbg !1332, !tbaa !1306\l  %32 = icmp ugt i64 %31, 0, !dbg !1333\l  br i1 %32, label %33, label %34, !dbg !1334\l|{<s0>T|<s1>F}}"];
	Node0x1e2c230:s0 -> Node0x1e2c280;
	Node0x1e2c230:s1 -> Node0x1e2c2d0;
	Node0x1e2c280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%33:\l33:                                               \l  store i32 -1, i32* %7, align 4, !dbg !1335\l  store i32 1, i32* %15, align 4\l  br label %73, !dbg !1335\l}"];
	Node0x1e2c280 -> Node0x1e2c6e0;
	Node0x1e2c2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%34:\l34:                                               \l  %35 = load i64, i64* %9, align 8, !dbg !1336, !tbaa !1306\l  %36 = icmp ne i64 %35, 0, !dbg !1336\l  br i1 %36, label %37, label %40, !dbg !1338\l|{<s0>T|<s1>F}}"];
	Node0x1e2c2d0:s0 -> Node0x1e2c320;
	Node0x1e2c2d0:s1 -> Node0x1e2c370;
	Node0x1e2c320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%37:\l37:                                               \l  %38 = load i64, i64* %9, align 8, !dbg !1339, !tbaa !1306\l  %39 = icmp ugt i64 %38, 64, !dbg !1340\l  br i1 %39, label %40, label %41, !dbg !1341\l|{<s0>T|<s1>F}}"];
	Node0x1e2c320:s0 -> Node0x1e2c370;
	Node0x1e2c320:s1 -> Node0x1e2c3c0;
	Node0x1e2c370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%40:\l40:                                               \l  store i32 -1, i32* %7, align 4, !dbg !1342\l  store i32 1, i32* %15, align 4\l  br label %73, !dbg !1342\l}"];
	Node0x1e2c370 -> Node0x1e2c6e0;
	Node0x1e2c3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%41:\l41:                                               \l  %42 = load i64, i64* %13, align 8, !dbg !1343, !tbaa !1306\l  %43 = icmp ugt i64 %42, 64, !dbg !1345\l  br i1 %43, label %44, label %45, !dbg !1346\l|{<s0>T|<s1>F}}"];
	Node0x1e2c3c0:s0 -> Node0x1e2c410;
	Node0x1e2c3c0:s1 -> Node0x1e2c460;
	Node0x1e2c410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%44:\l44:                                               \l  store i32 -1, i32* %7, align 4, !dbg !1347\l  store i32 1, i32* %15, align 4\l  br label %73, !dbg !1347\l}"];
	Node0x1e2c410 -> Node0x1e2c6e0;
	Node0x1e2c460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%45:\l45:                                               \l  %46 = load i64, i64* %13, align 8, !dbg !1348, !tbaa !1306\l  %47 = icmp ugt i64 %46, 0, !dbg !1350\l  br i1 %47, label %48, label %57, !dbg !1351\l|{<s0>T|<s1>F}}"];
	Node0x1e2c460:s0 -> Node0x1e2c4b0;
	Node0x1e2c460:s1 -> Node0x1e2c5a0;
	Node0x1e2c4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%48:\l48:                                               \l  %49 = getelementptr inbounds [1 x %struct.blake2b_state__], [1 x\l... %struct.blake2b_state__]* %14, i64 0, i64 0, !dbg !1352\l  %50 = load i64, i64* %9, align 8, !dbg !1355, !tbaa !1306\l  %51 = load i8*, i8** %12, align 8, !dbg !1356, !tbaa !1301\l  %52 = load i64, i64* %13, align 8, !dbg !1357, !tbaa !1306\l  %53 = call i32 @blake2b_init_key(%struct.blake2b_state__* noundef %49, i64\l... noundef %50, i8* noundef %51, i64 noundef %52), !dbg !1358\l  %54 = icmp slt i32 %53, 0, !dbg !1359\l  br i1 %54, label %55, label %56, !dbg !1360\l|{<s0>T|<s1>F}}"];
	Node0x1e2c4b0:s0 -> Node0x1e2c500;
	Node0x1e2c4b0:s1 -> Node0x1e2c550;
	Node0x1e2c500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%55:\l55:                                               \l  store i32 -1, i32* %7, align 4, !dbg !1361\l  store i32 1, i32* %15, align 4\l  br label %73, !dbg !1361\l}"];
	Node0x1e2c500 -> Node0x1e2c6e0;
	Node0x1e2c550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%56:\l56:                                               \l  br label %64, !dbg !1362\l}"];
	Node0x1e2c550 -> Node0x1e2c690;
	Node0x1e2c5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%57:\l57:                                               \l  %58 = getelementptr inbounds [1 x %struct.blake2b_state__], [1 x\l... %struct.blake2b_state__]* %14, i64 0, i64 0, !dbg !1363\l  %59 = load i64, i64* %9, align 8, !dbg !1366, !tbaa !1306\l  %60 = call i32 @blake2b_init(%struct.blake2b_state__* noundef %58, i64\l... noundef %59), !dbg !1367\l  %61 = icmp slt i32 %60, 0, !dbg !1368\l  br i1 %61, label %62, label %63, !dbg !1369\l|{<s0>T|<s1>F}}"];
	Node0x1e2c5a0:s0 -> Node0x1e2c5f0;
	Node0x1e2c5a0:s1 -> Node0x1e2c640;
	Node0x1e2c5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%62:\l62:                                               \l  store i32 -1, i32* %7, align 4, !dbg !1370\l  store i32 1, i32* %15, align 4\l  br label %73, !dbg !1370\l}"];
	Node0x1e2c5f0 -> Node0x1e2c6e0;
	Node0x1e2c640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%63:\l63:                                               \l  br label %64\l}"];
	Node0x1e2c640 -> Node0x1e2c690;
	Node0x1e2c690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%64:\l64:                                               \l  %65 = getelementptr inbounds [1 x %struct.blake2b_state__], [1 x\l... %struct.blake2b_state__]* %14, i64 0, i64 0, !dbg !1371\l  %66 = load i8*, i8** %10, align 8, !dbg !1372, !tbaa !1301\l  %67 = load i64, i64* %11, align 8, !dbg !1373, !tbaa !1306\l  %68 = call i32 @blake2b_update(%struct.blake2b_state__* noundef %65, i8*\l... noundef %66, i64 noundef %67), !dbg !1374\l  %69 = getelementptr inbounds [1 x %struct.blake2b_state__], [1 x\l... %struct.blake2b_state__]* %14, i64 0, i64 0, !dbg !1375\l  %70 = load i8*, i8** %8, align 8, !dbg !1376, !tbaa !1301\l  %71 = load i64, i64* %9, align 8, !dbg !1377, !tbaa !1306\l  %72 = call i32 @blake2b_final(%struct.blake2b_state__* noundef %69, i8*\l... noundef %70, i64 noundef %71), !dbg !1378\l  store i32 0, i32* %7, align 4, !dbg !1379\l  store i32 1, i32* %15, align 4\l  br label %73, !dbg !1379\l}"];
	Node0x1e2c690 -> Node0x1e2c6e0;
	Node0x1e2c6e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  %74 = bitcast [1 x %struct.blake2b_state__]* %14 to i8*, !dbg !1380\l  call void @llvm.lifetime.end.p0i8(i64 248, i8* %74) #26, !dbg !1380\l  %75 = load i32, i32* %7, align 4, !dbg !1380\l  ret i32 %75, !dbg !1380\l}"];
}
