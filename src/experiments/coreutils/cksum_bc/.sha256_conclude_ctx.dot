digraph "CFG for 'sha256_conclude_ctx' function" {
	label="CFG for 'sha256_conclude_ctx' function";

	Node0x215d650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = alloca %struct.sha256_ctx*, align 8\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  store %struct.sha256_ctx* %0, %struct.sha256_ctx** %2, align 8, !tbaa !1298\l  call void @llvm.dbg.declare(metadata %struct.sha256_ctx** %2, metadata\l... !1295, metadata !DIExpression()), !dbg !1302\l  %5 = bitcast i64* %3 to i8*, !dbg !1303\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #26, !dbg !1303\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !1296, metadata\l... !DIExpression()), !dbg !1304\l  %6 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg !1305,\l... !tbaa !1298\l  %7 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %6, i32\l... 0, i32 2, !dbg !1306\l  %8 = load i64, i64* %7, align 8, !dbg !1306, !tbaa !1307\l  store i64 %8, i64* %3, align 8, !dbg !1304, !tbaa !1310\l  %9 = bitcast i64* %4 to i8*, !dbg !1311\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #26, !dbg !1311\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !1297, metadata\l... !DIExpression()), !dbg !1312\l  %10 = load i64, i64* %3, align 8, !dbg !1313, !tbaa !1310\l  %11 = icmp ult i64 %10, 56, !dbg !1314\l  %12 = zext i1 %11 to i64, !dbg !1315\l  %13 = select i1 %11, i32 16, i32 32, !dbg !1315\l  %14 = sext i32 %13 to i64, !dbg !1315\l  store i64 %14, i64* %4, align 8, !dbg !1312, !tbaa !1310\l  %15 = load i64, i64* %3, align 8, !dbg !1316, !tbaa !1310\l  %16 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg\l... !1317, !tbaa !1298\l  %17 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %16,\l... i32 0, i32 1, !dbg !1318\l  %18 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 0, i64 0, !dbg\l... !1317\l  %19 = load i32, i32* %18, align 8, !dbg !1319, !tbaa !1320\l  %20 = zext i32 %19 to i64, !dbg !1319\l  %21 = add i64 %20, %15, !dbg !1319\l  %22 = trunc i64 %21 to i32, !dbg !1319\l  store i32 %22, i32* %18, align 8, !dbg !1319, !tbaa !1320\l  %23 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg\l... !1322, !tbaa !1298\l  %24 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %23,\l... i32 0, i32 1, !dbg !1324\l  %25 = getelementptr inbounds [2 x i32], [2 x i32]* %24, i64 0, i64 0, !dbg\l... !1322\l  %26 = load i32, i32* %25, align 8, !dbg !1322, !tbaa !1320\l  %27 = zext i32 %26 to i64, !dbg !1322\l  %28 = load i64, i64* %3, align 8, !dbg !1325, !tbaa !1310\l  %29 = icmp ult i64 %27, %28, !dbg !1326\l  br i1 %29, label %30, label %36, !dbg !1327\l|{<s0>T|<s1>F}}"];
	Node0x215d650:s0 -> Node0x215e220;
	Node0x215d650:s1 -> Node0x215e270;
	Node0x215e220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%30:\l30:                                               \l  %31 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg\l... !1328, !tbaa !1298\l  %32 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %31,\l... i32 0, i32 1, !dbg !1329\l  %33 = getelementptr inbounds [2 x i32], [2 x i32]* %32, i64 0, i64 1, !dbg\l... !1328\l  %34 = load i32, i32* %33, align 4, !dbg !1330, !tbaa !1320\l  %35 = add i32 %34, 1, !dbg !1330\l  store i32 %35, i32* %33, align 4, !dbg !1330, !tbaa !1320\l  br label %36, !dbg !1330\l}"];
	Node0x215e220 -> Node0x215e270;
	Node0x215e270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg\l... !1331, !tbaa !1298\l  %38 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %37,\l... i32 0, i32 3, !dbg !1332\l  %39 = load i64, i64* %4, align 8, !dbg !1333, !tbaa !1310\l  %40 = sub i64 %39, 2, !dbg !1334\l  %41 = getelementptr inbounds [32 x i32], [32 x i32]* %38, i64 0, i64 %40,\l... !dbg !1331\l  %42 = bitcast i32* %41 to i8*, !dbg !1335\l  %43 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg\l... !1336, !tbaa !1298\l  %44 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %43,\l... i32 0, i32 1, !dbg !1336\l  %45 = getelementptr inbounds [2 x i32], [2 x i32]* %44, i64 0, i64 1, !dbg\l... !1336\l  %46 = load i32, i32* %45, align 4, !dbg !1336, !tbaa !1320\l  %47 = shl i32 %46, 3, !dbg !1336\l  %48 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg\l... !1336, !tbaa !1298\l  %49 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %48,\l... i32 0, i32 1, !dbg !1336\l  %50 = getelementptr inbounds [2 x i32], [2 x i32]* %49, i64 0, i64 0, !dbg\l... !1336\l  %51 = load i32, i32* %50, align 8, !dbg !1336, !tbaa !1320\l  %52 = lshr i32 %51, 29, !dbg !1336\l  %53 = or i32 %47, %52, !dbg !1336\l  %54 = call i32 @__bswap_32.203(i32 noundef %53), !dbg !1336\l  call void @set_uint32.204(i8* noundef %42, i32 noundef %54), !dbg !1337\l  %55 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg\l... !1338, !tbaa !1298\l  %56 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %55,\l... i32 0, i32 3, !dbg !1339\l  %57 = load i64, i64* %4, align 8, !dbg !1340, !tbaa !1310\l  %58 = sub i64 %57, 1, !dbg !1341\l  %59 = getelementptr inbounds [32 x i32], [32 x i32]* %56, i64 0, i64 %58,\l... !dbg !1338\l  %60 = bitcast i32* %59 to i8*, !dbg !1342\l  %61 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg\l... !1343, !tbaa !1298\l  %62 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %61,\l... i32 0, i32 1, !dbg !1343\l  %63 = getelementptr inbounds [2 x i32], [2 x i32]* %62, i64 0, i64 0, !dbg\l... !1343\l  %64 = load i32, i32* %63, align 8, !dbg !1343, !tbaa !1320\l  %65 = shl i32 %64, 3, !dbg !1343\l  %66 = call i32 @__bswap_32.203(i32 noundef %65), !dbg !1343\l  call void @set_uint32.204(i8* noundef %60, i32 noundef %66), !dbg !1344\l  %67 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg\l... !1345, !tbaa !1298\l  %68 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %67,\l... i32 0, i32 3, !dbg !1346\l  %69 = getelementptr inbounds [32 x i32], [32 x i32]* %68, i64 0, i64 0, !dbg\l... !1347\l  %70 = bitcast i32* %69 to i8*, !dbg !1347\l  %71 = load i64, i64* %3, align 8, !dbg !1348, !tbaa !1310\l  %72 = getelementptr inbounds i8, i8* %70, i64 %71, !dbg !1347\l  %73 = load i64, i64* %4, align 8, !dbg !1349, !tbaa !1310\l  %74 = sub i64 %73, 2, !dbg !1350\l  %75 = mul i64 %74, 4, !dbg !1351\l  %76 = load i64, i64* %3, align 8, !dbg !1352, !tbaa !1310\l  %77 = sub i64 %75, %76, !dbg !1353\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* align 16\l... getelementptr inbounds ([64 x i8], [64 x i8]* bitcast (\<\{ i8, [63 x i8] \}\>*\l... @fillbuf.207 to [64 x i8]*), i64 0, i64 0), i64 %77, i1 false), !dbg !1354\l  %78 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg\l... !1355, !tbaa !1298\l  %79 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %78,\l... i32 0, i32 3, !dbg !1356\l  %80 = getelementptr inbounds [32 x i32], [32 x i32]* %79, i64 0, i64 0, !dbg\l... !1355\l  %81 = bitcast i32* %80 to i8*, !dbg !1355\l  %82 = load i64, i64* %4, align 8, !dbg !1357, !tbaa !1310\l  %83 = mul i64 %82, 4, !dbg !1358\l  %84 = load %struct.sha256_ctx*, %struct.sha256_ctx** %2, align 8, !dbg\l... !1359, !tbaa !1298\l  call void @sha256_process_block(i8* noundef %81, i64 noundef %83,\l... %struct.sha256_ctx* noundef %84), !dbg !1360\l  %85 = bitcast i64* %4 to i8*, !dbg !1361\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #26, !dbg !1361\l  %86 = bitcast i64* %3 to i8*, !dbg !1361\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #26, !dbg !1361\l  ret void, !dbg !1361\l}"];
}
