digraph "CFG for 'base64_encode' function" {
	label="CFG for 'base64_encode' function";

	Node0x1fef540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%4:\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  store i8* %0, i8** %5, align 8, !tbaa !1289\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !1285, metadata\l... !DIExpression()), !dbg !1293\l  store i64 %1, i64* %6, align 8, !tbaa !1294\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1286, metadata\l... !DIExpression()), !dbg !1296\l  store i8* %2, i8** %7, align 8, !tbaa !1289\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !1287, metadata\l... !DIExpression()), !dbg !1297\l  store i64 %3, i64* %8, align 8, !tbaa !1294\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1288, metadata\l... !DIExpression()), !dbg !1298\l  %9 = load i64, i64* %8, align 8, !dbg !1299, !tbaa !1294\l  %10 = srem i64 %9, 4, !dbg !1301\l  %11 = icmp eq i64 %10, 0, !dbg !1302\l  br i1 %11, label %12, label %22, !dbg !1303\l|{<s0>T|<s1>F}}"];
	Node0x1fef540:s0 -> Node0x1ff31c0;
	Node0x1fef540:s1 -> Node0x1ff5ff0;
	Node0x1ff31c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%12:\l12:                                               \l  %13 = load i64, i64* %6, align 8, !dbg !1304, !tbaa !1294\l  %14 = load i64, i64* %8, align 8, !dbg !1305, !tbaa !1294\l  %15 = ashr i64 %14, 2, !dbg !1306\l  %16 = mul nsw i64 %15, 3, !dbg !1307\l  %17 = icmp eq i64 %13, %16, !dbg !1308\l  br i1 %17, label %18, label %22, !dbg !1309\l|{<s0>T|<s1>F}}"];
	Node0x1ff31c0:s0 -> Node0x1ff5fa0;
	Node0x1ff31c0:s1 -> Node0x1ff5ff0;
	Node0x1ff5fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%18:\l18:                                               \l  %19 = load i8*, i8** %5, align 8, !dbg !1310, !tbaa !1289\l  %20 = load i64, i64* %6, align 8, !dbg !1312, !tbaa !1294\l  %21 = load i8*, i8** %7, align 8, !dbg !1313, !tbaa !1289\l  call void @base64_encode_fast(i8* noundef %19, i64 noundef %20, i8* noundef\l... %21), !dbg !1314\l  br label %160, !dbg !1315\l}"];
	Node0x1ff5fa0 -> Node0x1ff69a0;
	Node0x1ff5ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%22:\l22:                                               \l  br label %23, !dbg !1316\l}"];
	Node0x1ff5ff0 -> Node0x1ff6040;
	Node0x1ff6040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = load i64, i64* %6, align 8, !dbg !1317, !tbaa !1294\l  %25 = icmp ne i64 %24, 0, !dbg !1317\l  br i1 %25, label %26, label %29, !dbg !1318\l|{<s0>T|<s1>F}}"];
	Node0x1ff6040:s0 -> Node0x1ff6090;
	Node0x1ff6040:s1 -> Node0x1ff60e0;
	Node0x1ff6090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%26:\l26:                                               \l  %27 = load i64, i64* %8, align 8, !dbg !1319, !tbaa !1294\l  %28 = icmp ne i64 %27, 0, !dbg !1318\l  br label %29\l}"];
	Node0x1ff6090 -> Node0x1ff60e0;
	Node0x1ff60e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i1 [ false, %23 ], [ %28, %26 ], !dbg !1320\l  br i1 %30, label %31, label %155, !dbg !1316\l|{<s0>T|<s1>F}}"];
	Node0x1ff60e0:s0 -> Node0x1ff6130;
	Node0x1ff60e0:s1 -> Node0x1ff6900;
	Node0x1ff6130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%31:\l31:                                               \l  %32 = load i8*, i8** %5, align 8, !dbg !1321, !tbaa !1289\l  %33 = getelementptr inbounds i8, i8* %32, i64 0, !dbg !1321\l  %34 = load i8, i8* %33, align 1, !dbg !1321, !tbaa !1323\l  %35 = call zeroext i8 @to_uchar(i8 noundef signext %34), !dbg !1324\l  %36 = zext i8 %35 to i32, !dbg !1324\l  %37 = ashr i32 %36, 2, !dbg !1325\l  %38 = and i32 %37, 63, !dbg !1326\l  %39 = sext i32 %38 to i64, !dbg !1327\l  %40 = getelementptr inbounds [64 x i8], [64 x i8]* @b64c, i64 0, i64 %39,\l... !dbg !1327\l  %41 = load i8, i8* %40, align 1, !dbg !1327, !tbaa !1323\l  %42 = load i8*, i8** %7, align 8, !dbg !1328, !tbaa !1289\l  %43 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !1328\l  store i8* %43, i8** %7, align 8, !dbg !1328, !tbaa !1289\l  store i8 %41, i8* %42, align 1, !dbg !1329, !tbaa !1323\l  %44 = load i64, i64* %8, align 8, !dbg !1330, !tbaa !1294\l  %45 = add nsw i64 %44, -1, !dbg !1330\l  store i64 %45, i64* %8, align 8, !dbg !1330, !tbaa !1294\l  %46 = icmp ne i64 %45, 0, !dbg !1330\l  br i1 %46, label %48, label %47, !dbg !1332\l|{<s0>T|<s1>F}}"];
	Node0x1ff6130:s0 -> Node0x1ff61d0;
	Node0x1ff6130:s1 -> Node0x1ff6180;
	Node0x1ff6180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%47:\l47:                                               \l  br label %155, !dbg !1333\l}"];
	Node0x1ff6180 -> Node0x1ff6900;
	Node0x1ff61d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%48:\l48:                                               \l  %49 = load i8*, i8** %5, align 8, !dbg !1334, !tbaa !1289\l  %50 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !1334\l  %51 = load i8, i8* %50, align 1, !dbg !1334, !tbaa !1323\l  %52 = call zeroext i8 @to_uchar(i8 noundef signext %51), !dbg !1335\l  %53 = zext i8 %52 to i32, !dbg !1335\l  %54 = shl i32 %53, 4, !dbg !1336\l  %55 = load i64, i64* %6, align 8, !dbg !1337, !tbaa !1294\l  %56 = add nsw i64 %55, -1, !dbg !1337\l  store i64 %56, i64* %6, align 8, !dbg !1337, !tbaa !1294\l  %57 = icmp ne i64 %56, 0, !dbg !1337\l  br i1 %57, label %58, label %65, !dbg !1337\l|{<s0>T|<s1>F}}"];
	Node0x1ff61d0:s0 -> Node0x1ff6220;
	Node0x1ff61d0:s1 -> Node0x1ff6270;
	Node0x1ff6220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%58:\l58:                                               \l  %59 = load i8*, i8** %5, align 8, !dbg !1338, !tbaa !1289\l  %60 = getelementptr inbounds i8, i8* %59, i64 1, !dbg !1338\l  %61 = load i8, i8* %60, align 1, !dbg !1338, !tbaa !1323\l  %62 = call zeroext i8 @to_uchar(i8 noundef signext %61), !dbg !1339\l  %63 = zext i8 %62 to i32, !dbg !1339\l  %64 = ashr i32 %63, 4, !dbg !1340\l  br label %66, !dbg !1337\l}"];
	Node0x1ff6220 -> Node0x1ff62c0;
	Node0x1ff6270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%65:\l65:                                               \l  br label %66, !dbg !1337\l}"];
	Node0x1ff6270 -> Node0x1ff62c0;
	Node0x1ff62c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%66:\l66:                                               \l  %67 = phi i32 [ %64, %58 ], [ 0, %65 ], !dbg !1337\l  %68 = add nsw i32 %54, %67, !dbg !1341\l  %69 = and i32 %68, 63, !dbg !1342\l  %70 = sext i32 %69 to i64, !dbg !1343\l  %71 = getelementptr inbounds [64 x i8], [64 x i8]* @b64c, i64 0, i64 %70,\l... !dbg !1343\l  %72 = load i8, i8* %71, align 1, !dbg !1343, !tbaa !1323\l  %73 = load i8*, i8** %7, align 8, !dbg !1344, !tbaa !1289\l  %74 = getelementptr inbounds i8, i8* %73, i32 1, !dbg !1344\l  store i8* %74, i8** %7, align 8, !dbg !1344, !tbaa !1289\l  store i8 %72, i8* %73, align 1, !dbg !1345, !tbaa !1323\l  %75 = load i64, i64* %8, align 8, !dbg !1346, !tbaa !1294\l  %76 = add nsw i64 %75, -1, !dbg !1346\l  store i64 %76, i64* %8, align 8, !dbg !1346, !tbaa !1294\l  %77 = icmp ne i64 %76, 0, !dbg !1346\l  br i1 %77, label %79, label %78, !dbg !1348\l|{<s0>T|<s1>F}}"];
	Node0x1ff62c0:s0 -> Node0x1ff6360;
	Node0x1ff62c0:s1 -> Node0x1ff6310;
	Node0x1ff6310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%78:\l78:                                               \l  br label %155, !dbg !1349\l}"];
	Node0x1ff6310 -> Node0x1ff6900;
	Node0x1ff6360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%79:\l79:                                               \l  %80 = load i64, i64* %6, align 8, !dbg !1350, !tbaa !1294\l  %81 = icmp ne i64 %80, 0, !dbg !1350\l  br i1 %81, label %82, label %108, !dbg !1350\l|{<s0>T|<s1>F}}"];
	Node0x1ff6360:s0 -> Node0x1ff63b0;
	Node0x1ff6360:s1 -> Node0x1ff64f0;
	Node0x1ff63b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d8564670",label="{%82:\l82:                                               \l  %83 = load i8*, i8** %5, align 8, !dbg !1351, !tbaa !1289\l  %84 = getelementptr inbounds i8, i8* %83, i64 1, !dbg !1351\l  %85 = load i8, i8* %84, align 1, !dbg !1351, !tbaa !1323\l  %86 = call zeroext i8 @to_uchar(i8 noundef signext %85), !dbg !1352\l  %87 = zext i8 %86 to i32, !dbg !1352\l  %88 = shl i32 %87, 2, !dbg !1353\l  %89 = load i64, i64* %6, align 8, !dbg !1354, !tbaa !1294\l  %90 = add nsw i64 %89, -1, !dbg !1354\l  store i64 %90, i64* %6, align 8, !dbg !1354, !tbaa !1294\l  %91 = icmp ne i64 %90, 0, !dbg !1354\l  br i1 %91, label %92, label %99, !dbg !1354\l|{<s0>T|<s1>F}}"];
	Node0x1ff63b0:s0 -> Node0x1ff6400;
	Node0x1ff63b0:s1 -> Node0x1ff6450;
	Node0x1ff6400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%92:\l92:                                               \l  %93 = load i8*, i8** %5, align 8, !dbg !1355, !tbaa !1289\l  %94 = getelementptr inbounds i8, i8* %93, i64 2, !dbg !1355\l  %95 = load i8, i8* %94, align 1, !dbg !1355, !tbaa !1323\l  %96 = call zeroext i8 @to_uchar(i8 noundef signext %95), !dbg !1356\l  %97 = zext i8 %96 to i32, !dbg !1356\l  %98 = ashr i32 %97, 6, !dbg !1357\l  br label %100, !dbg !1354\l}"];
	Node0x1ff6400 -> Node0x1ff64a0;
	Node0x1ff6450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%99:\l99:                                               \l  br label %100, !dbg !1354\l}"];
	Node0x1ff6450 -> Node0x1ff64a0;
	Node0x1ff64a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d8564670",label="{%100:\l100:                                              \l  %101 = phi i32 [ %98, %92 ], [ 0, %99 ], !dbg !1354\l  %102 = add nsw i32 %88, %101, !dbg !1358\l  %103 = and i32 %102, 63, !dbg !1359\l  %104 = sext i32 %103 to i64, !dbg !1360\l  %105 = getelementptr inbounds [64 x i8], [64 x i8]* @b64c, i64 0, i64 %104,\l... !dbg !1360\l  %106 = load i8, i8* %105, align 1, !dbg !1360, !tbaa !1323\l  %107 = sext i8 %106 to i32, !dbg !1360\l  br label %109, !dbg !1350\l}"];
	Node0x1ff64a0 -> Node0x1ff6540;
	Node0x1ff64f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%108:\l108:                                              \l  br label %109, !dbg !1350\l}"];
	Node0x1ff64f0 -> Node0x1ff6540;
	Node0x1ff6540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%109:\l109:                                              \l  %110 = phi i32 [ %107, %100 ], [ 61, %108 ], !dbg !1350\l  %111 = trunc i32 %110 to i8, !dbg !1361\l  %112 = load i8*, i8** %7, align 8, !dbg !1362, !tbaa !1289\l  %113 = getelementptr inbounds i8, i8* %112, i32 1, !dbg !1362\l  store i8* %113, i8** %7, align 8, !dbg !1362, !tbaa !1289\l  store i8 %111, i8* %112, align 1, !dbg !1363, !tbaa !1323\l  %114 = load i64, i64* %8, align 8, !dbg !1364, !tbaa !1294\l  %115 = add nsw i64 %114, -1, !dbg !1364\l  store i64 %115, i64* %8, align 8, !dbg !1364, !tbaa !1294\l  %116 = icmp ne i64 %115, 0, !dbg !1364\l  br i1 %116, label %118, label %117, !dbg !1366\l|{<s0>T|<s1>F}}"];
	Node0x1ff6540:s0 -> Node0x1ff65e0;
	Node0x1ff6540:s1 -> Node0x1ff6590;
	Node0x1ff6590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%117:\l117:                                              \l  br label %155, !dbg !1367\l}"];
	Node0x1ff6590 -> Node0x1ff6900;
	Node0x1ff65e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%118:\l118:                                              \l  %119 = load i64, i64* %6, align 8, !dbg !1368, !tbaa !1294\l  %120 = icmp ne i64 %119, 0, !dbg !1368\l  br i1 %120, label %121, label %132, !dbg !1368\l|{<s0>T|<s1>F}}"];
	Node0x1ff65e0:s0 -> Node0x1ff6630;
	Node0x1ff65e0:s1 -> Node0x1ff6680;
	Node0x1ff6630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d8564670",label="{%121:\l121:                                              \l  %122 = load i8*, i8** %5, align 8, !dbg !1369, !tbaa !1289\l  %123 = getelementptr inbounds i8, i8* %122, i64 2, !dbg !1369\l  %124 = load i8, i8* %123, align 1, !dbg !1369, !tbaa !1323\l  %125 = call zeroext i8 @to_uchar(i8 noundef signext %124), !dbg !1370\l  %126 = zext i8 %125 to i32, !dbg !1370\l  %127 = and i32 %126, 63, !dbg !1371\l  %128 = sext i32 %127 to i64, !dbg !1372\l  %129 = getelementptr inbounds [64 x i8], [64 x i8]* @b64c, i64 0, i64 %128,\l... !dbg !1372\l  %130 = load i8, i8* %129, align 1, !dbg !1372, !tbaa !1323\l  %131 = sext i8 %130 to i32, !dbg !1372\l  br label %133, !dbg !1368\l}"];
	Node0x1ff6630 -> Node0x1ff66d0;
	Node0x1ff6680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%132:\l132:                                              \l  br label %133, !dbg !1368\l}"];
	Node0x1ff6680 -> Node0x1ff66d0;
	Node0x1ff66d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%133:\l133:                                              \l  %134 = phi i32 [ %131, %121 ], [ 61, %132 ], !dbg !1368\l  %135 = trunc i32 %134 to i8, !dbg !1368\l  %136 = load i8*, i8** %7, align 8, !dbg !1373, !tbaa !1289\l  %137 = getelementptr inbounds i8, i8* %136, i32 1, !dbg !1373\l  store i8* %137, i8** %7, align 8, !dbg !1373, !tbaa !1289\l  store i8 %135, i8* %136, align 1, !dbg !1374, !tbaa !1323\l  %138 = load i64, i64* %8, align 8, !dbg !1375, !tbaa !1294\l  %139 = add nsw i64 %138, -1, !dbg !1375\l  store i64 %139, i64* %8, align 8, !dbg !1375, !tbaa !1294\l  %140 = icmp ne i64 %139, 0, !dbg !1375\l  br i1 %140, label %142, label %141, !dbg !1377\l|{<s0>T|<s1>F}}"];
	Node0x1ff66d0:s0 -> Node0x1ff6770;
	Node0x1ff66d0:s1 -> Node0x1ff6720;
	Node0x1ff6720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%141:\l141:                                              \l  br label %155, !dbg !1378\l}"];
	Node0x1ff6720 -> Node0x1ff6900;
	Node0x1ff6770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%142:\l142:                                              \l  %143 = load i64, i64* %6, align 8, !dbg !1379, !tbaa !1294\l  %144 = icmp ne i64 %143, 0, !dbg !1379\l  br i1 %144, label %145, label %148, !dbg !1381\l|{<s0>T|<s1>F}}"];
	Node0x1ff6770:s0 -> Node0x1ff67c0;
	Node0x1ff6770:s1 -> Node0x1ff6810;
	Node0x1ff67c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#dc5d4a70",label="{%145:\l145:                                              \l  %146 = load i64, i64* %6, align 8, !dbg !1382, !tbaa !1294\l  %147 = add nsw i64 %146, -1, !dbg !1382\l  store i64 %147, i64* %6, align 8, !dbg !1382, !tbaa !1294\l  br label %148, !dbg !1383\l}"];
	Node0x1ff67c0 -> Node0x1ff6810;
	Node0x1ff6810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%148:\l148:                                              \l  %149 = load i64, i64* %6, align 8, !dbg !1384, !tbaa !1294\l  %150 = icmp ne i64 %149, 0, !dbg !1384\l  br i1 %150, label %151, label %154, !dbg !1386\l|{<s0>T|<s1>F}}"];
	Node0x1ff6810:s0 -> Node0x1ff6860;
	Node0x1ff6810:s1 -> Node0x1ff68b0;
	Node0x1ff6860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#dc5d4a70",label="{%151:\l151:                                              \l  %152 = load i8*, i8** %5, align 8, !dbg !1387, !tbaa !1289\l  %153 = getelementptr inbounds i8, i8* %152, i64 3, !dbg !1387\l  store i8* %153, i8** %5, align 8, !dbg !1387, !tbaa !1289\l  br label %154, !dbg !1388\l}"];
	Node0x1ff6860 -> Node0x1ff68b0;
	Node0x1ff68b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%154:\l154:                                              \l  br label %23, !dbg !1316, !llvm.loop !1389\l}"];
	Node0x1ff68b0 -> Node0x1ff6040;
	Node0x1ff6900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%155:\l155:                                              \l  %156 = load i64, i64* %8, align 8, !dbg !1393, !tbaa !1294\l  %157 = icmp ne i64 %156, 0, !dbg !1393\l  br i1 %157, label %158, label %160, !dbg !1395\l|{<s0>T|<s1>F}}"];
	Node0x1ff6900:s0 -> Node0x1ff6950;
	Node0x1ff6900:s1 -> Node0x1ff69a0;
	Node0x1ff6950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%158:\l158:                                              \l  %159 = load i8*, i8** %7, align 8, !dbg !1396, !tbaa !1289\l  store i8 0, i8* %159, align 1, !dbg !1397, !tbaa !1323\l  br label %160, !dbg !1398\l}"];
	Node0x1ff6950 -> Node0x1ff69a0;
	Node0x1ff69a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%160:\l160:                                              \l  ret void, !dbg !1399\l}"];
}
