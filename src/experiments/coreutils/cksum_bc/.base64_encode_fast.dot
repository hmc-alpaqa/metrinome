digraph "CFG for 'base64_encode_fast' function" {
	label="CFG for 'base64_encode_fast' function";

	Node0x2001730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i8*, align 8\l  store i8* %0, i8** %4, align 8, !tbaa !1288\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !1285, metadata\l... !DIExpression()), !dbg !1292\l  store i64 %1, i64* %5, align 8, !tbaa !1293\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !1286, metadata\l... !DIExpression()), !dbg !1295\l  store i8* %2, i8** %6, align 8, !tbaa !1288\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1287, metadata\l... !DIExpression()), !dbg !1296\l  br label %7, !dbg !1297\l}"];
	Node0x2001730 -> Node0x20017b0;
	Node0x20017b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l7:                                                \l  %8 = load i64, i64* %5, align 8, !dbg !1298, !tbaa !1293\l  %9 = icmp ne i64 %8, 0, !dbg !1297\l  br i1 %9, label %10, label %76, !dbg !1297\l|{<s0>T|<s1>F}}"];
	Node0x20017b0:s0 -> Node0x2001800;
	Node0x20017b0:s1 -> Node0x2001850;
	Node0x2001800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%10:\l10:                                               \l  %11 = load i8*, i8** %4, align 8, !dbg !1299, !tbaa !1288\l  %12 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !1299\l  %13 = load i8, i8* %12, align 1, !dbg !1299, !tbaa !1301\l  %14 = call zeroext i8 @to_uchar(i8 noundef signext %13), !dbg !1302\l  %15 = zext i8 %14 to i32, !dbg !1302\l  %16 = ashr i32 %15, 2, !dbg !1303\l  %17 = and i32 %16, 63, !dbg !1304\l  %18 = sext i32 %17 to i64, !dbg !1305\l  %19 = getelementptr inbounds [64 x i8], [64 x i8]* @b64c, i64 0, i64 %18,\l... !dbg !1305\l  %20 = load i8, i8* %19, align 1, !dbg !1305, !tbaa !1301\l  %21 = load i8*, i8** %6, align 8, !dbg !1306, !tbaa !1288\l  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !1306\l  store i8* %22, i8** %6, align 8, !dbg !1306, !tbaa !1288\l  store i8 %20, i8* %21, align 1, !dbg !1307, !tbaa !1301\l  %23 = load i8*, i8** %4, align 8, !dbg !1308, !tbaa !1288\l  %24 = getelementptr inbounds i8, i8* %23, i64 0, !dbg !1308\l  %25 = load i8, i8* %24, align 1, !dbg !1308, !tbaa !1301\l  %26 = call zeroext i8 @to_uchar(i8 noundef signext %25), !dbg !1309\l  %27 = zext i8 %26 to i32, !dbg !1309\l  %28 = shl i32 %27, 4, !dbg !1310\l  %29 = load i8*, i8** %4, align 8, !dbg !1311, !tbaa !1288\l  %30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !1311\l  %31 = load i8, i8* %30, align 1, !dbg !1311, !tbaa !1301\l  %32 = call zeroext i8 @to_uchar(i8 noundef signext %31), !dbg !1312\l  %33 = zext i8 %32 to i32, !dbg !1312\l  %34 = ashr i32 %33, 4, !dbg !1313\l  %35 = add nsw i32 %28, %34, !dbg !1314\l  %36 = and i32 %35, 63, !dbg !1315\l  %37 = sext i32 %36 to i64, !dbg !1316\l  %38 = getelementptr inbounds [64 x i8], [64 x i8]* @b64c, i64 0, i64 %37,\l... !dbg !1316\l  %39 = load i8, i8* %38, align 1, !dbg !1316, !tbaa !1301\l  %40 = load i8*, i8** %6, align 8, !dbg !1317, !tbaa !1288\l  %41 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !1317\l  store i8* %41, i8** %6, align 8, !dbg !1317, !tbaa !1288\l  store i8 %39, i8* %40, align 1, !dbg !1318, !tbaa !1301\l  %42 = load i8*, i8** %4, align 8, !dbg !1319, !tbaa !1288\l  %43 = getelementptr inbounds i8, i8* %42, i64 1, !dbg !1319\l  %44 = load i8, i8* %43, align 1, !dbg !1319, !tbaa !1301\l  %45 = call zeroext i8 @to_uchar(i8 noundef signext %44), !dbg !1320\l  %46 = zext i8 %45 to i32, !dbg !1320\l  %47 = shl i32 %46, 2, !dbg !1321\l  %48 = load i8*, i8** %4, align 8, !dbg !1322, !tbaa !1288\l  %49 = getelementptr inbounds i8, i8* %48, i64 2, !dbg !1322\l  %50 = load i8, i8* %49, align 1, !dbg !1322, !tbaa !1301\l  %51 = call zeroext i8 @to_uchar(i8 noundef signext %50), !dbg !1323\l  %52 = zext i8 %51 to i32, !dbg !1323\l  %53 = ashr i32 %52, 6, !dbg !1324\l  %54 = add nsw i32 %47, %53, !dbg !1325\l  %55 = and i32 %54, 63, !dbg !1326\l  %56 = sext i32 %55 to i64, !dbg !1327\l  %57 = getelementptr inbounds [64 x i8], [64 x i8]* @b64c, i64 0, i64 %56,\l... !dbg !1327\l  %58 = load i8, i8* %57, align 1, !dbg !1327, !tbaa !1301\l  %59 = load i8*, i8** %6, align 8, !dbg !1328, !tbaa !1288\l  %60 = getelementptr inbounds i8, i8* %59, i32 1, !dbg !1328\l  store i8* %60, i8** %6, align 8, !dbg !1328, !tbaa !1288\l  store i8 %58, i8* %59, align 1, !dbg !1329, !tbaa !1301\l  %61 = load i8*, i8** %4, align 8, !dbg !1330, !tbaa !1288\l  %62 = getelementptr inbounds i8, i8* %61, i64 2, !dbg !1330\l  %63 = load i8, i8* %62, align 1, !dbg !1330, !tbaa !1301\l  %64 = call zeroext i8 @to_uchar(i8 noundef signext %63), !dbg !1331\l  %65 = zext i8 %64 to i32, !dbg !1331\l  %66 = and i32 %65, 63, !dbg !1332\l  %67 = sext i32 %66 to i64, !dbg !1333\l  %68 = getelementptr inbounds [64 x i8], [64 x i8]* @b64c, i64 0, i64 %67,\l... !dbg !1333\l  %69 = load i8, i8* %68, align 1, !dbg !1333, !tbaa !1301\l  %70 = load i8*, i8** %6, align 8, !dbg !1334, !tbaa !1288\l  %71 = getelementptr inbounds i8, i8* %70, i32 1, !dbg !1334\l  store i8* %71, i8** %6, align 8, !dbg !1334, !tbaa !1288\l  store i8 %69, i8* %70, align 1, !dbg !1335, !tbaa !1301\l  %72 = load i64, i64* %5, align 8, !dbg !1336, !tbaa !1293\l  %73 = sub nsw i64 %72, 3, !dbg !1336\l  store i64 %73, i64* %5, align 8, !dbg !1336, !tbaa !1293\l  %74 = load i8*, i8** %4, align 8, !dbg !1337, !tbaa !1288\l  %75 = getelementptr inbounds i8, i8* %74, i64 3, !dbg !1337\l  store i8* %75, i8** %4, align 8, !dbg !1337, !tbaa !1288\l  br label %7, !dbg !1297, !llvm.loop !1338\l}"];
	Node0x2001800 -> Node0x20017b0;
	Node0x2001850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%76:\l76:                                               \l  ret void, !dbg !1342\l}"];
}
