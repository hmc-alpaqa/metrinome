digraph "CFG for 'base64_encode_alloc' function" {
	label="CFG for 'base64_encode_alloc' function";

	Node0x1e77a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca i64, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i8**, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i32, align 4\l  store i8* %0, i8** %5, align 8, !tbaa !1289\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !1284, metadata\l... !DIExpression()), !dbg !1293\l  store i64 %1, i64* %6, align 8, !tbaa !1294\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1285, metadata\l... !DIExpression()), !dbg !1296\l  store i8** %2, i8*** %7, align 8, !tbaa !1289\l  call void @llvm.dbg.declare(metadata i8*** %7, metadata !1286, metadata\l... !DIExpression()), !dbg !1297\l  %11 = bitcast i64* %8 to i8*, !dbg !1298\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #26, !dbg !1298\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1287, metadata\l... !DIExpression()), !dbg !1299\l  %12 = load i64, i64* %6, align 8, !dbg !1300, !tbaa !1294\l  %13 = sdiv i64 %12, 3, !dbg !1301\l  %14 = load i64, i64* %6, align 8, !dbg !1302, !tbaa !1294\l  %15 = srem i64 %14, 3, !dbg !1303\l  %16 = icmp ne i64 %15, 0, !dbg !1304\l  %17 = zext i1 %16 to i32, !dbg !1304\l  %18 = sext i32 %17 to i64, !dbg !1305\l  %19 = add nsw i64 %13, %18, !dbg !1306\l  store i64 %19, i64* %8, align 8, !dbg !1299, !tbaa !1294\l  %20 = bitcast i64* %9 to i8*, !dbg !1298\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #26, !dbg !1298\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1288, metadata\l... !DIExpression()), !dbg !1307\l  br i1 false, label %21, label %78, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e77a50:s0 -> Node0x1e78050;
	Node0x1e77a50:s1 -> Node0x1e788c0;
	Node0x1e78050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%21:\l21:                                               \l  br i1 false, label %22, label %52, !dbg !1310\l|{<s0>T|<s1>F}}"];
	Node0x1e78050:s0 -> Node0x1e780a0;
	Node0x1e78050:s1 -> Node0x1e784b0;
	Node0x1e780a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%22:\l22:                                               \l  %23 = load i64, i64* %8, align 8, !dbg !1308, !tbaa !1294\l  %24 = icmp slt i64 %23, 0, !dbg !1308\l  br i1 %24, label %25, label %33, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e780a0:s0 -> Node0x1e780f0;
	Node0x1e780a0:s1 -> Node0x1e781e0;
	Node0x1e780f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%25:\l25:                                               \l  br i1 true, label %26, label %29, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e780f0:s0 -> Node0x1e78140;
	Node0x1e780f0:s1 -> Node0x1e78190;
	Node0x1e78140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%26:\l26:                                               \l  %27 = load i64, i64* %8, align 8, !dbg !1308, !tbaa !1294\l  %28 = icmp slt i64 %27, 0, !dbg !1308\l  br i1 %28, label %73, label %78, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e78140:s0 -> Node0x1e78870;
	Node0x1e78140:s1 -> Node0x1e788c0;
	Node0x1e78190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%29:\l29:                                               \l  %30 = load i64, i64* %8, align 8, !dbg !1308, !tbaa !1294\l  %31 = sub nsw i64 -1, %30, !dbg !1308\l  %32 = icmp sle i64 0, %31, !dbg !1308\l  br i1 %32, label %73, label %78, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e78190:s0 -> Node0x1e78870;
	Node0x1e78190:s1 -> Node0x1e788c0;
	Node0x1e781e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%33:\l33:                                               \l  br i1 true, label %34, label %35, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e781e0:s0 -> Node0x1e78230;
	Node0x1e781e0:s1 -> Node0x1e78280;
	Node0x1e78230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%34:\l34:                                               \l  br i1 false, label %36, label %49, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e78230:s0 -> Node0x1e782d0;
	Node0x1e78230:s1 -> Node0x1e78460;
	Node0x1e78280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%35:\l35:                                               \l  br i1 false, label %36, label %49, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e78280:s0 -> Node0x1e782d0;
	Node0x1e78280:s1 -> Node0x1e78460;
	Node0x1e782d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%36:\l36:                                               \l  br i1 false, label %37, label %49, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e782d0:s0 -> Node0x1e78320;
	Node0x1e782d0:s1 -> Node0x1e78460;
	Node0x1e78320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%37:\l37:                                               \l  br i1 true, label %38, label %42, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e78320:s0 -> Node0x1e78370;
	Node0x1e78320:s1 -> Node0x1e783c0;
	Node0x1e78370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%38:\l38:                                               \l  %39 = load i64, i64* %8, align 8, !dbg !1308, !tbaa !1294\l  %40 = add nsw i64 %39, 0, !dbg !1308\l  %41 = icmp slt i64 0, %40, !dbg !1308\l  br i1 %41, label %73, label %78, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e78370:s0 -> Node0x1e78870;
	Node0x1e78370:s1 -> Node0x1e788c0;
	Node0x1e783c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%42:\l42:                                               \l  %43 = load i64, i64* %8, align 8, !dbg !1308, !tbaa !1294\l  %44 = icmp slt i64 0, %43, !dbg !1308\l  br i1 %44, label %45, label %78, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e783c0:s0 -> Node0x1e78410;
	Node0x1e783c0:s1 -> Node0x1e788c0;
	Node0x1e78410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%45:\l45:                                               \l  %46 = load i64, i64* %8, align 8, !dbg !1308, !tbaa !1294\l  %47 = sub nsw i64 %46, 1, !dbg !1308\l  %48 = icmp slt i64 -1, %47, !dbg !1308\l  br i1 %48, label %73, label %78, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e78410:s0 -> Node0x1e78870;
	Node0x1e78410:s1 -> Node0x1e788c0;
	Node0x1e78460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%49:\l49:                                               \l  %50 = load i64, i64* %8, align 8, !dbg !1308, !tbaa !1294\l  %51 = icmp slt i64 0, %50, !dbg !1308\l  br i1 %51, label %73, label %78, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e78460:s0 -> Node0x1e78870;
	Node0x1e78460:s1 -> Node0x1e788c0;
	Node0x1e784b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%52:\l52:                                               \l  br i1 false, label %53, label %54, !dbg !1310\l|{<s0>T|<s1>F}}"];
	Node0x1e784b0:s0 -> Node0x1e78500;
	Node0x1e784b0:s1 -> Node0x1e78550;
	Node0x1e78500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%53:\l53:                                               \l  br i1 false, label %73, label %78, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e78500:s0 -> Node0x1e78870;
	Node0x1e78500:s1 -> Node0x1e788c0;
	Node0x1e78550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%54:\l54:                                               \l  %55 = load i64, i64* %8, align 8, !dbg !1308, !tbaa !1294\l  %56 = icmp slt i64 %55, 0, !dbg !1308\l  br i1 %56, label %57, label %70, !dbg !1310\l|{<s0>T|<s1>F}}"];
	Node0x1e78550:s0 -> Node0x1e785a0;
	Node0x1e78550:s1 -> Node0x1e78820;
	Node0x1e785a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%57:\l57:                                               \l  br i1 true, label %58, label %59, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e785a0:s0 -> Node0x1e785f0;
	Node0x1e785a0:s1 -> Node0x1e78640;
	Node0x1e785f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%58:\l58:                                               \l  br i1 false, label %60, label %66, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e785f0:s0 -> Node0x1e78690;
	Node0x1e785f0:s1 -> Node0x1e787d0;
	Node0x1e78640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%59:\l59:                                               \l  br i1 false, label %60, label %66, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e78640:s0 -> Node0x1e78690;
	Node0x1e78640:s1 -> Node0x1e787d0;
	Node0x1e78690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%60:\l60:                                               \l  %61 = load i64, i64* %8, align 8, !dbg !1308, !tbaa !1294\l  %62 = icmp eq i64 %61, -1, !dbg !1308\l  br i1 %62, label %63, label %66, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e78690:s0 -> Node0x1e786e0;
	Node0x1e78690:s1 -> Node0x1e787d0;
	Node0x1e786e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%63:\l63:                                               \l  br i1 true, label %64, label %65, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e786e0:s0 -> Node0x1e78730;
	Node0x1e786e0:s1 -> Node0x1e78780;
	Node0x1e78730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%64:\l64:                                               \l  br i1 true, label %73, label %78, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e78730:s0 -> Node0x1e78870;
	Node0x1e78730:s1 -> Node0x1e788c0;
	Node0x1e78780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%65:\l65:                                               \l  br i1 true, label %73, label %78, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e78780:s0 -> Node0x1e78870;
	Node0x1e78780:s1 -> Node0x1e788c0;
	Node0x1e787d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%66:\l66:                                               \l  %67 = load i64, i64* %8, align 8, !dbg !1308, !tbaa !1294\l  %68 = sdiv i64 0, %67, !dbg !1308\l  %69 = icmp slt i64 %68, 4, !dbg !1308\l  br i1 %69, label %73, label %78, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e787d0:s0 -> Node0x1e78870;
	Node0x1e787d0:s1 -> Node0x1e788c0;
	Node0x1e78820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%70:\l70:                                               \l  %71 = load i64, i64* %8, align 8, !dbg !1308, !tbaa !1294\l  %72 = icmp slt i64 0, %71, !dbg !1308\l  br i1 %72, label %73, label %78, !dbg !1310\l|{<s0>T|<s1>F}}"];
	Node0x1e78820:s0 -> Node0x1e78870;
	Node0x1e78820:s1 -> Node0x1e788c0;
	Node0x1e78870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%73:\l73:                                               \l  %74 = load i64, i64* %8, align 8, !dbg !1308, !tbaa !1294\l  %75 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %74, i64 4), !dbg\l... !1308\l  %76 = extractvalue \{ i64, i1 \} %75, 1, !dbg !1308\l  %77 = extractvalue \{ i64, i1 \} %75, 0, !dbg !1308\l  store i64 %77, i64* %9, align 8, !dbg !1308\l  br i1 true, label %86, label %83, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e78870:s0 -> Node0x1e78960;
	Node0x1e78870:s1 -> Node0x1e78910;
	Node0x1e788c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%78:\l78:                                               \l  %79 = load i64, i64* %8, align 8, !dbg !1308, !tbaa !1294\l  %80 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %79, i64 4), !dbg\l... !1308\l  %81 = extractvalue \{ i64, i1 \} %80, 1, !dbg !1308\l  %82 = extractvalue \{ i64, i1 \} %80, 0, !dbg !1308\l  store i64 %82, i64* %9, align 8, !dbg !1308\l  br i1 %81, label %86, label %83, !dbg !1310\l|{<s0>T|<s1>F}}"];
	Node0x1e788c0:s0 -> Node0x1e78960;
	Node0x1e788c0:s1 -> Node0x1e78910;
	Node0x1e78910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%83:\l83:                                               \l  %84 = load i64, i64* %6, align 8, !dbg !1311, !tbaa !1294\l  %85 = icmp slt i64 %84, 0, !dbg !1312\l  br i1 %85, label %86, label %88, !dbg !1313\l|{<s0>T|<s1>F}}"];
	Node0x1e78910:s0 -> Node0x1e78960;
	Node0x1e78910:s1 -> Node0x1e789b0;
	Node0x1e78960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%86:\l86:                                               \l  %87 = load i8**, i8*** %7, align 8, !dbg !1314, !tbaa !1289\l  store i8* null, i8** %87, align 8, !dbg !1316, !tbaa !1289\l  store i64 0, i64* %4, align 8, !dbg !1317\l  store i32 1, i32* %10, align 4\l  br label %107, !dbg !1317\l}"];
	Node0x1e78960 -> Node0x1e78aa0;
	Node0x1e789b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%88:\l88:                                               \l  %89 = load i64, i64* %9, align 8, !dbg !1318, !tbaa !1294\l  %90 = add nsw i64 %89, 1, !dbg !1318\l  store i64 %90, i64* %9, align 8, !dbg !1318, !tbaa !1294\l  %91 = load i64, i64* %9, align 8, !dbg !1319, !tbaa !1294\l  %92 = call noalias i8* @imalloc(i64 noundef %91), !dbg !1320\l  %93 = load i8**, i8*** %7, align 8, !dbg !1321, !tbaa !1289\l  store i8* %92, i8** %93, align 8, !dbg !1322, !tbaa !1289\l  %94 = load i8**, i8*** %7, align 8, !dbg !1323, !tbaa !1289\l  %95 = load i8*, i8** %94, align 8, !dbg !1325, !tbaa !1289\l  %96 = icmp ne i8* %95, null, !dbg !1325\l  br i1 %96, label %99, label %97, !dbg !1326\l|{<s0>T|<s1>F}}"];
	Node0x1e789b0:s0 -> Node0x1e78a50;
	Node0x1e789b0:s1 -> Node0x1e78a00;
	Node0x1e78a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%97:\l97:                                               \l  %98 = load i64, i64* %9, align 8, !dbg !1327, !tbaa !1294\l  store i64 %98, i64* %4, align 8, !dbg !1328\l  store i32 1, i32* %10, align 4\l  br label %107, !dbg !1328\l}"];
	Node0x1e78a00 -> Node0x1e78aa0;
	Node0x1e78a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%99:\l99:                                               \l  %100 = load i8*, i8** %5, align 8, !dbg !1329, !tbaa !1289\l  %101 = load i64, i64* %6, align 8, !dbg !1330, !tbaa !1294\l  %102 = load i8**, i8*** %7, align 8, !dbg !1331, !tbaa !1289\l  %103 = load i8*, i8** %102, align 8, !dbg !1332, !tbaa !1289\l  %104 = load i64, i64* %9, align 8, !dbg !1333, !tbaa !1294\l  call void @base64_encode(i8* noundef %100, i64 noundef %101, i8* noundef\l... %103, i64 noundef %104), !dbg !1334\l  %105 = load i64, i64* %9, align 8, !dbg !1335, !tbaa !1294\l  %106 = sub nsw i64 %105, 1, !dbg !1336\l  store i64 %106, i64* %4, align 8, !dbg !1337\l  store i32 1, i32* %10, align 4\l  br label %107, !dbg !1337\l}"];
	Node0x1e78a50 -> Node0x1e78aa0;
	Node0x1e78aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  %108 = bitcast i64* %9 to i8*, !dbg !1338\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %108) #26, !dbg !1338\l  %109 = bitcast i64* %8 to i8*, !dbg !1338\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %109) #26, !dbg !1338\l  %110 = load i64, i64* %4, align 8, !dbg !1338\l  ret i64 %110, !dbg !1338\l}"];
}
