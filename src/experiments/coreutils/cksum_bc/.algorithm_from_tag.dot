digraph "CFG for 'algorithm_from_tag' function" {
	label="CFG for 'algorithm_from_tag' function";

	Node0x1e11d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%1:\l  %2 = alloca i64, align 8\l  %3 = alloca i8*, align 8\l  %4 = alloca i8**, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca i8, align 1\l  %9 = alloca i64, align 8\l  store i8* %0, i8** %3, align 8, !tbaa !1279\l  call void @llvm.dbg.declare(metadata i8** %3, metadata !151, metadata\l... !DIExpression()), !dbg !1283\l  %10 = load i64, i64* @algorithm_from_tag.max_tag_len, align 8, !dbg !1284,\l... !tbaa !1285\l  %11 = icmp ne i64 %10, 0, !dbg !1284\l  br i1 %11, label %36, label %12, !dbg !1287\l|{<s0>T|<s1>F}}"];
	Node0x1e11d10:s0 -> Node0x1e12040;
	Node0x1e11d10:s1 -> Node0x1e11e10;
	Node0x1e11e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%12:\l12:                                               \l  %13 = bitcast i8*** %4 to i8*, !dbg !1288\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #26, !dbg !1288\l  call void @llvm.dbg.declare(metadata i8*** %4, metadata !152, metadata\l... !DIExpression()), !dbg !1289\l  store i8** getelementptr inbounds ([12 x i8*], [12 x i8*]* @algorithm_tags,\l... i64 0, i64 0), i8*** %4, align 8, !dbg !1289, !tbaa !1279\l  br label %14, !dbg !1290\l}"];
	Node0x1e11e10 -> Node0x1e11e60;
	Node0x1e11e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%14:\l14:                                               \l  %15 = load i8**, i8*** %4, align 8, !dbg !1291, !tbaa !1279\l  %16 = load i8*, i8** %15, align 8, !dbg !1292, !tbaa !1279\l  %17 = icmp ne i8* %16, null, !dbg !1290\l  br i1 %17, label %18, label %34, !dbg !1290\l|{<s0>T|<s1>F}}"];
	Node0x1e11e60:s0 -> Node0x1e11eb0;
	Node0x1e11e60:s1 -> Node0x1e11ff0;
	Node0x1e11eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%18:\l18:                                               \l  %19 = bitcast i64* %5 to i8*, !dbg !1293\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #26, !dbg !1293\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !156, metadata\l... !DIExpression()), !dbg !1294\l  %20 = load i8**, i8*** %4, align 8, !dbg !1295, !tbaa !1279\l  %21 = getelementptr inbounds i8*, i8** %20, i32 1, !dbg !1295\l  store i8** %21, i8*** %4, align 8, !dbg !1295, !tbaa !1279\l  %22 = load i8*, i8** %20, align 8, !dbg !1296, !tbaa !1279\l  %23 = call i64 @strlen(i8* noundef %22) #27, !dbg !1297\l  store i64 %23, i64* %5, align 8, !dbg !1294, !tbaa !1285\l  %24 = load i64, i64* %5, align 8, !dbg !1298, !tbaa !1285\l  %25 = load i64, i64* @algorithm_from_tag.max_tag_len, align 8, !dbg !1298,\l... !tbaa !1285\l  %26 = icmp ugt i64 %24, %25, !dbg !1298\l  br i1 %26, label %27, label %29, !dbg !1298\l|{<s0>T|<s1>F}}"];
	Node0x1e11eb0:s0 -> Node0x1e11f00;
	Node0x1e11eb0:s1 -> Node0x1e11f50;
	Node0x1e11f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%27:\l27:                                               \l  %28 = load i64, i64* %5, align 8, !dbg !1298, !tbaa !1285\l  br label %31, !dbg !1298\l}"];
	Node0x1e11f00 -> Node0x1e11fa0;
	Node0x1e11f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%29:\l29:                                               \l  %30 = load i64, i64* @algorithm_from_tag.max_tag_len, align 8, !dbg !1298,\l... !tbaa !1285\l  br label %31, !dbg !1298\l}"];
	Node0x1e11f50 -> Node0x1e11fa0;
	Node0x1e11fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%31:\l31:                                               \l  %32 = phi i64 [ %28, %27 ], [ %30, %29 ], !dbg !1298\l  store i64 %32, i64* @algorithm_from_tag.max_tag_len, align 8, !dbg !1299,\l... !tbaa !1285\l  %33 = bitcast i64* %5 to i8*, !dbg !1300\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #26, !dbg !1300\l  br label %14, !dbg !1290, !llvm.loop !1301\l}"];
	Node0x1e11fa0 -> Node0x1e11e60;
	Node0x1e11ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%34:\l34:                                               \l  %35 = bitcast i8*** %4 to i8*, !dbg !1304\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #26, !dbg !1304\l  br label %36, !dbg !1305\l}"];
	Node0x1e11ff0 -> Node0x1e12040;
	Node0x1e12040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%36:\l36:                                               \l  %37 = bitcast i64* %6 to i8*, !dbg !1306\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #26, !dbg !1306\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !158, metadata\l... !DIExpression()), !dbg !1307\l  store i64 0, i64* %6, align 8, !dbg !1307, !tbaa !1285\l  br label %38, !dbg !1308\l}"];
	Node0x1e12040 -> Node0x1e12090;
	Node0x1e12090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = load i64, i64* %6, align 8, !dbg !1309, !tbaa !1285\l  %40 = load i64, i64* @algorithm_from_tag.max_tag_len, align 8, !dbg !1310,\l... !tbaa !1285\l  %41 = icmp ule i64 %39, %40, !dbg !1311\l  br i1 %41, label %42, label %77, !dbg !1312\l|{<s0>T|<s1>F}}"];
	Node0x1e12090:s0 -> Node0x1e120e0;
	Node0x1e12090:s1 -> Node0x1e12270;
	Node0x1e120e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%42:\l42:                                               \l  %43 = load i8*, i8** %3, align 8, !dbg !1313, !tbaa !1279\l  %44 = load i64, i64* %6, align 8, !dbg !1314, !tbaa !1285\l  %45 = getelementptr inbounds i8, i8* %43, i64 %44, !dbg !1313\l  %46 = load i8, i8* %45, align 1, !dbg !1313, !tbaa !1315\l  %47 = sext i8 %46 to i32, !dbg !1313\l  %48 = icmp ne i32 %47, 0, !dbg !1313\l  br i1 %48, label %49, label %77, !dbg !1316\l|{<s0>T|<s1>F}}"];
	Node0x1e120e0:s0 -> Node0x1e12130;
	Node0x1e120e0:s1 -> Node0x1e12270;
	Node0x1e12130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%49:\l49:                                               \l  %50 = load i8*, i8** %3, align 8, !dbg !1317, !tbaa !1279\l  %51 = load i64, i64* %6, align 8, !dbg !1317, !tbaa !1285\l  %52 = getelementptr inbounds i8, i8* %50, i64 %51, !dbg !1317\l  %53 = load i8, i8* %52, align 1, !dbg !1317, !tbaa !1315\l  %54 = sext i8 %53 to i32, !dbg !1317\l  %55 = icmp eq i32 %54, 32, !dbg !1317\l  br i1 %55, label %77, label %56, !dbg !1317\l|{<s0>T|<s1>F}}"];
	Node0x1e12130:s0 -> Node0x1e12270;
	Node0x1e12130:s1 -> Node0x1e12180;
	Node0x1e12180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%56:\l56:                                               \l  %57 = load i8*, i8** %3, align 8, !dbg !1317, !tbaa !1279\l  %58 = load i64, i64* %6, align 8, !dbg !1317, !tbaa !1285\l  %59 = getelementptr inbounds i8, i8* %57, i64 %58, !dbg !1317\l  %60 = load i8, i8* %59, align 1, !dbg !1317, !tbaa !1315\l  %61 = sext i8 %60 to i32, !dbg !1317\l  %62 = icmp eq i32 %61, 9, !dbg !1317\l  br i1 %62, label %77, label %63, !dbg !1318\l|{<s0>T|<s1>F}}"];
	Node0x1e12180:s0 -> Node0x1e12270;
	Node0x1e12180:s1 -> Node0x1e121d0;
	Node0x1e121d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%63:\l63:                                               \l  %64 = load i8*, i8** %3, align 8, !dbg !1319, !tbaa !1279\l  %65 = load i64, i64* %6, align 8, !dbg !1320, !tbaa !1285\l  %66 = getelementptr inbounds i8, i8* %64, i64 %65, !dbg !1319\l  %67 = load i8, i8* %66, align 1, !dbg !1319, !tbaa !1315\l  %68 = sext i8 %67 to i32, !dbg !1319\l  %69 = icmp ne i32 %68, 45, !dbg !1321\l  br i1 %69, label %70, label %77, !dbg !1322\l|{<s0>T|<s1>F}}"];
	Node0x1e121d0:s0 -> Node0x1e12220;
	Node0x1e121d0:s1 -> Node0x1e12270;
	Node0x1e12220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%70:\l70:                                               \l  %71 = load i8*, i8** %3, align 8, !dbg !1323, !tbaa !1279\l  %72 = load i64, i64* %6, align 8, !dbg !1324, !tbaa !1285\l  %73 = getelementptr inbounds i8, i8* %71, i64 %72, !dbg !1323\l  %74 = load i8, i8* %73, align 1, !dbg !1323, !tbaa !1315\l  %75 = sext i8 %74 to i32, !dbg !1323\l  %76 = icmp ne i32 %75, 40, !dbg !1325\l  br label %77\l}"];
	Node0x1e12220 -> Node0x1e12270;
	Node0x1e12270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi i1 [ false, %63 ], [ false, %56 ], [ false, %49 ], [ false, %42 ],\l... [ false, %38 ], [ %76, %70 ], !dbg !1326\l  br i1 %78, label %79, label %82, !dbg !1308\l|{<s0>T|<s1>F}}"];
	Node0x1e12270:s0 -> Node0x1e122c0;
	Node0x1e12270:s1 -> Node0x1e12310;
	Node0x1e122c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  %80 = load i64, i64* %6, align 8, !dbg !1327, !tbaa !1285\l  %81 = add i64 %80, 1, !dbg !1327\l  store i64 %81, i64* %6, align 8, !dbg !1327, !tbaa !1285\l  br label %38, !dbg !1308, !llvm.loop !1328\l}"];
	Node0x1e122c0 -> Node0x1e12090;
	Node0x1e12310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%82:\l82:                                               \l  %83 = load i64, i64* %6, align 8, !dbg !1330, !tbaa !1285\l  %84 = load i64, i64* @algorithm_from_tag.max_tag_len, align 8, !dbg !1332,\l... !tbaa !1285\l  %85 = icmp ugt i64 %83, %84, !dbg !1333\l  br i1 %85, label %86, label %87, !dbg !1334\l|{<s0>T|<s1>F}}"];
	Node0x1e12310:s0 -> Node0x1e12360;
	Node0x1e12310:s1 -> Node0x1e123b0;
	Node0x1e12360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%86:\l86:                                               \l  store i64 -1, i64* %2, align 8, !dbg !1335\l  store i32 1, i32* %7, align 4\l  br label %104, !dbg !1335\l}"];
	Node0x1e12360 -> Node0x1e12400;
	Node0x1e123b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%87:\l87:                                               \l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %8) #26, !dbg !1336\l  call void @llvm.dbg.declare(metadata i8* %8, metadata !159, metadata\l... !DIExpression()), !dbg !1337\l  %88 = load i8*, i8** %3, align 8, !dbg !1338, !tbaa !1279\l  %89 = load i64, i64* %6, align 8, !dbg !1339, !tbaa !1285\l  %90 = getelementptr inbounds i8, i8* %88, i64 %89, !dbg !1338\l  %91 = load i8, i8* %90, align 1, !dbg !1338, !tbaa !1315\l  store i8 %91, i8* %8, align 1, !dbg !1337, !tbaa !1315\l  %92 = load i8*, i8** %3, align 8, !dbg !1340, !tbaa !1279\l  %93 = load i64, i64* %6, align 8, !dbg !1341, !tbaa !1285\l  %94 = getelementptr inbounds i8, i8* %92, i64 %93, !dbg !1340\l  store i8 0, i8* %94, align 1, !dbg !1342, !tbaa !1315\l  %95 = bitcast i64* %9 to i8*, !dbg !1343\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %95) #26, !dbg !1343\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !160, metadata\l... !DIExpression()), !dbg !1344\l  %96 = load i8*, i8** %3, align 8, !dbg !1345, !tbaa !1279\l  %97 = call i64 @argmatch_exact(i8* noundef %96, i8** noundef getelementptr\l... inbounds ([12 x i8*], [12 x i8*]* @algorithm_tags, i64 0, i64 0)) #27, !dbg\l... !1346\l  store i64 %97, i64* %9, align 8, !dbg !1344, !tbaa !1285\l  %98 = load i8, i8* %8, align 1, !dbg !1347, !tbaa !1315\l  %99 = load i8*, i8** %3, align 8, !dbg !1348, !tbaa !1279\l  %100 = load i64, i64* %6, align 8, !dbg !1349, !tbaa !1285\l  %101 = getelementptr inbounds i8, i8* %99, i64 %100, !dbg !1348\l  store i8 %98, i8* %101, align 1, !dbg !1350, !tbaa !1315\l  %102 = load i64, i64* %9, align 8, !dbg !1351, !tbaa !1285\l  store i64 %102, i64* %2, align 8, !dbg !1352\l  store i32 1, i32* %7, align 4\l  %103 = bitcast i64* %9 to i8*, !dbg !1353\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #26, !dbg !1353\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %8) #26, !dbg !1353\l  br label %104\l}"];
	Node0x1e123b0 -> Node0x1e12400;
	Node0x1e12400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%104:\l104:                                              \l  %105 = bitcast i64* %6 to i8*, !dbg !1353\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %105) #26, !dbg !1353\l  %106 = load i64, i64* %2, align 8, !dbg !1353\l  ret i64 %106, !dbg !1353\l}"];
}
