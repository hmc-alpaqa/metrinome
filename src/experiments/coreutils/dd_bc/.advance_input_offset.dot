digraph "CFG for 'advance_input_offset' function" {
	label="CFG for 'advance_input_offset' function";

	Node0xfc8ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = alloca i64, align 8\l  store i64 %0, i64* %2, align 8, !tbaa !1318\l  call void @llvm.dbg.declare(metadata i64* %2, metadata !1317, metadata\l... !DIExpression()), !dbg !1322\l  %3 = load i64, i64* @input_offset, align 8, !dbg !1323, !tbaa !1318\l  %4 = icmp sle i64 0, %3, !dbg !1325\l  br i1 %4, label %5, label %12, !dbg !1326\l|{<s0>T|<s1>F}}"];
	Node0xfc8ce0:s0 -> Node0xfca920;
	Node0xfc8ce0:s1 -> Node0xfca9f0;
	Node0xfca920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%5:\l5:                                                \l  %6 = load i64, i64* @input_offset, align 8, !dbg !1327, !tbaa !1318\l  %7 = load i64, i64* %2, align 8, !dbg !1327, !tbaa !1318\l  %8 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %6, i64 %7), !dbg\l... !1327\l  %9 = extractvalue \{ i64, i1 \} %8, 1, !dbg !1327\l  %10 = extractvalue \{ i64, i1 \} %8, 0, !dbg !1327\l  store i64 %10, i64* @input_offset, align 8, !dbg !1327\l  br i1 %9, label %11, label %12, !dbg !1328\l|{<s0>T|<s1>F}}"];
	Node0xfca920:s0 -> Node0xfca9a0;
	Node0xfca920:s1 -> Node0xfca9f0;
	Node0xfca9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%11:\l11:                                               \l  store i64 -1, i64* @input_offset, align 8, !dbg !1329, !tbaa !1318\l  br label %12, !dbg !1330\l}"];
	Node0xfca9a0 -> Node0xfca9f0;
	Node0xfca9f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l12:                                               \l  ret void, !dbg !1331\l}"];
}
