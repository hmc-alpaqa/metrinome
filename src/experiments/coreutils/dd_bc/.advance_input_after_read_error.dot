digraph "CFG for 'advance_input_after_read_error' function" {
	label="CFG for 'advance_input_after_read_error' function";

	Node0xfcb7a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = alloca i1, align 1\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i64, align 8\l  store i64 %0, i64* %3, align 8, !tbaa !1324\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !1317, metadata\l... !DIExpression()), !dbg !1328\l  %7 = load i8, i8* @input_seekable, align 1, !dbg !1329, !tbaa !1330, !range\l... !1332\l  %8 = trunc i8 %7 to i1, !dbg !1329\l  br i1 %8, label %16, label %9, !dbg !1333\l|{<s0>T|<s1>F}}"];
	Node0xfcb7a0:s0 -> Node0xfcb9c0;
	Node0xfcb7a0:s1 -> Node0xfcb8d0;
	Node0xfcb8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%9:\l9:                                                \l  %10 = load i32, i32* @input_seek_errno, align 4, !dbg !1334, !tbaa !1337\l  %11 = icmp eq i32 %10, 29, !dbg !1339\l  br i1 %11, label %12, label %13, !dbg !1340\l|{<s0>T|<s1>F}}"];
	Node0xfcb8d0:s0 -> Node0xfcb920;
	Node0xfcb8d0:s1 -> Node0xfcb970;
	Node0xfcb920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%12:\l12:                                               \l  store i1 true, i1* %2, align 1, !dbg !1341\l  br label %73, !dbg !1341\l}"];
	Node0xfcb920 -> Node0xfcc000;
	Node0xfcb970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%13:\l13:                                               \l  %14 = load i32, i32* @input_seek_errno, align 4, !dbg !1342, !tbaa !1337\l  %15 = call i32* @__errno_location() #26, !dbg !1343\l  store i32 %14, i32* %15, align 4, !dbg !1344, !tbaa !1337\l  br label %68, !dbg !1345\l}"];
	Node0xfcb970 -> Node0xfcbfb0;
	Node0xfcb9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%16:\l16:                                               \l  %17 = bitcast i64* %4 to i8*, !dbg !1346\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #27, !dbg !1346\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !1318, metadata\l... !DIExpression()), !dbg !1347\l  %18 = load i64, i64* %3, align 8, !dbg !1348, !tbaa !1324\l  call void @advance_input_offset(i64 noundef %18), !dbg !1349\l  %19 = load i64, i64* @input_offset, align 8, !dbg !1350, !tbaa !1324\l  %20 = icmp slt i64 %19, 0, !dbg !1352\l  br i1 %20, label %21, label %24, !dbg !1353\l|{<s0>T|<s1>F}}"];
	Node0xfcb9c0:s0 -> Node0xfcba10;
	Node0xfcb9c0:s1 -> Node0xfcba60;
	Node0xfcba10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%21:\l21:                                               \l  %22 = load i8*, i8** @input_file, align 8, !dbg !1354, !tbaa !1356\l  %23 = call i8* @quotearg_style(i32 noundef 4, i8* noundef %22), !dbg !1354\l  call void (i32, i8*, ...) @diagnose(i32 noundef 0, i8* noundef getelementptr\l... inbounds ([38 x i8], [38 x i8]* @.str.109, i64 0, i64 0), i8* noundef %23),\l... !dbg !1358\l  store i1 false, i1* %2, align 1, !dbg !1359\l  store i32 1, i32* %5, align 4\l  br label %64, !dbg !1359\l}"];
	Node0xfcba10 -> Node0xfcbf10;
	Node0xfcba60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%24:\l24:                                               \l  %25 = call i64 @lseek(i32 noundef 0, i64 noundef 0, i32 noundef 1) #27, !dbg\l... !1360\l  store i64 %25, i64* %4, align 8, !dbg !1361, !tbaa !1324\l  %26 = load i64, i64* %4, align 8, !dbg !1362, !tbaa !1324\l  %27 = icmp sle i64 0, %26, !dbg !1363\l  br i1 %27, label %28, label %63, !dbg !1364\l|{<s0>T|<s1>F}}"];
	Node0xfcba60:s0 -> Node0xfcbab0;
	Node0xfcba60:s1 -> Node0xfcbec0;
	Node0xfcbab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%28:\l28:                                               \l  %29 = bitcast i64* %6 to i8*, !dbg !1365\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #27, !dbg !1365\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1321, metadata\l... !DIExpression()), !dbg !1366\l  %30 = load i64, i64* %4, align 8, !dbg !1367, !tbaa !1324\l  %31 = load i64, i64* @input_offset, align 8, !dbg !1369, !tbaa !1324\l  %32 = icmp eq i64 %30, %31, !dbg !1370\l  br i1 %32, label %33, label %34, !dbg !1371\l|{<s0>T|<s1>F}}"];
	Node0xfcbab0:s0 -> Node0xfcbb00;
	Node0xfcbab0:s1 -> Node0xfcbb50;
	Node0xfcbb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%33:\l33:                                               \l  store i1 true, i1* %2, align 1, !dbg !1372\l  store i32 1, i32* %5, align 4\l  br label %59, !dbg !1372\l}"];
	Node0xfcbb00 -> Node0xfcbe20;
	Node0xfcbb50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%34:\l34:                                               \l  %35 = load i64, i64* @input_offset, align 8, !dbg !1373, !tbaa !1324\l  %36 = load i64, i64* %4, align 8, !dbg !1374, !tbaa !1324\l  %37 = sub nsw i64 %35, %36, !dbg !1375\l  store i64 %37, i64* %6, align 8, !dbg !1376, !tbaa !1324\l  %38 = load i64, i64* %6, align 8, !dbg !1377, !tbaa !1324\l  %39 = icmp sle i64 0, %38, !dbg !1379\l  br i1 %39, label %40, label %44, !dbg !1380\l|{<s0>T|<s1>F}}"];
	Node0xfcbb50:s0 -> Node0xfcbba0;
	Node0xfcbb50:s1 -> Node0xfcbbf0;
	Node0xfcbba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%40:\l40:                                               \l  %41 = load i64, i64* %6, align 8, !dbg !1381, !tbaa !1324\l  %42 = load i64, i64* %3, align 8, !dbg !1382, !tbaa !1324\l  %43 = icmp sle i64 %41, %42, !dbg !1383\l  br i1 %43, label %48, label %44, !dbg !1384\l|{<s0>T|<s1>F}}"];
	Node0xfcbba0:s0 -> Node0xfcbc90;
	Node0xfcbba0:s1 -> Node0xfcbbf0;
	Node0xfcbbf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%44:\l44:                                               \l  %45 = load i32, i32* @status_level, align 4, !dbg !1385, !tbaa !1337\l  %46 = icmp ne i32 %45, 1, !dbg !1386\l  br i1 %46, label %47, label %48, !dbg !1387\l|{<s0>T|<s1>F}}"];
	Node0xfcbbf0:s0 -> Node0xfcbc40;
	Node0xfcbbf0:s1 -> Node0xfcbc90;
	Node0xfcbc40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%47:\l47:                                               \l  call void (i32, i8*, ...) @diagnose(i32 noundef 0, i8* noundef getelementptr\l... inbounds ([47 x i8], [47 x i8]* @.str.110, i64 0, i64 0)), !dbg !1388\l  br label %48, !dbg !1388\l}"];
	Node0xfcbc40 -> Node0xfcbc90;
	Node0xfcbc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%48:\l48:                                               \l  %49 = load i64, i64* %6, align 8, !dbg !1389, !tbaa !1324\l  %50 = call i64 @lseek(i32 noundef 0, i64 noundef %49, i32 noundef 1) #27,\l... !dbg !1391\l  %51 = icmp sle i64 0, %50, !dbg !1392\l  br i1 %51, label %52, label %53, !dbg !1393\l|{<s0>T|<s1>F}}"];
	Node0xfcbc90:s0 -> Node0xfcbce0;
	Node0xfcbc90:s1 -> Node0xfcbd30;
	Node0xfcbce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%52:\l52:                                               \l  store i1 true, i1* %2, align 1, !dbg !1394\l  store i32 1, i32* %5, align 4\l  br label %59, !dbg !1394\l}"];
	Node0xfcbce0 -> Node0xfcbe20;
	Node0xfcbd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%53:\l53:                                               \l  %54 = call i32* @__errno_location() #26, !dbg !1395\l  %55 = load i32, i32* %54, align 4, !dbg !1395, !tbaa !1337\l  %56 = icmp eq i32 %55, 0, !dbg !1397\l  br i1 %56, label %57, label %58, !dbg !1398\l|{<s0>T|<s1>F}}"];
	Node0xfcbd30:s0 -> Node0xfcbd80;
	Node0xfcbd30:s1 -> Node0xfcbdd0;
	Node0xfcbd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%57:\l57:                                               \l  call void (i32, i8*, ...) @diagnose(i32 noundef 0, i8* noundef getelementptr\l... inbounds ([40 x i8], [40 x i8]* @.str.111, i64 0, i64 0)), !dbg !1399\l  br label %58, !dbg !1399\l}"];
	Node0xfcbd80 -> Node0xfcbdd0;
	Node0xfcbdd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%58:\l58:                                               \l  store i32 0, i32* %5, align 4, !dbg !1400\l  br label %59, !dbg !1400\l}"];
	Node0xfcbdd0 -> Node0xfcbe20;
	Node0xfcbe20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%59:\l59:                                               \l  %60 = bitcast i64* %6 to i8*, !dbg !1400\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %60) #27, !dbg !1400\l  %61 = load i32, i32* %5, align 4\l  switch i32 %61, label %64 [\l    i32 0, label %62\l  ]\l|{<s0>def|<s1>0}}"];
	Node0xfcbe20:s0 -> Node0xfcbf10;
	Node0xfcbe20:s1 -> Node0xfcbe70;
	Node0xfcbe70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%62:\l62:                                               \l  br label %63, !dbg !1401\l}"];
	Node0xfcbe70 -> Node0xfcbec0;
	Node0xfcbec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%63:\l63:                                               \l  store i32 0, i32* %5, align 4, !dbg !1402\l  br label %64, !dbg !1402\l}"];
	Node0xfcbec0 -> Node0xfcbf10;
	Node0xfcbf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%64:\l64:                                               \l  %65 = bitcast i64* %4 to i8*, !dbg !1402\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %65) #27, !dbg !1402\l  %66 = load i32, i32* %5, align 4\l  switch i32 %66, label %75 [\l    i32 0, label %67\l    i32 1, label %73\l  ]\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0xfcbf10:s0 -> Node0xfcc050;
	Node0xfcbf10:s1 -> Node0xfcbf60;
	Node0xfcbf10:s2 -> Node0xfcc000;
	Node0xfcbf60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%67:\l67:                                               \l  br label %68\l}"];
	Node0xfcbf60 -> Node0xfcbfb0;
	Node0xfcbfb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%68:\l68:                                               \l  %69 = call i32* @__errno_location() #26, !dbg !1403\l  %70 = load i32, i32* %69, align 4, !dbg !1403, !tbaa !1337\l  %71 = load i8*, i8** @input_file, align 8, !dbg !1404, !tbaa !1356\l  %72 = call i8* @quotearg_n_style_colon(i32 noundef 0, i32 noundef 3, i8*\l... noundef %71), !dbg !1404\l  call void (i32, i8*, ...) @diagnose(i32 noundef %70, i8* noundef\l... getelementptr inbounds ([16 x i8], [16 x i8]* @.str.105, i64 0, i64 0), i8*\l... noundef %72), !dbg !1405\l  store i1 false, i1* %2, align 1, !dbg !1406\l  br label %73, !dbg !1406\l}"];
	Node0xfcbfb0 -> Node0xfcc000;
	Node0xfcc000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  %74 = load i1, i1* %2, align 1, !dbg !1407\l  ret i1 %74, !dbg !1407\l}"];
	Node0xfcc050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%75:\l75:                                               \l  unreachable\l}"];
}
