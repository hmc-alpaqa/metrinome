digraph "CFG for 'parse_integer' function" {
	label="CFG for 'parse_integer' function";

	Node0xff8b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca i32*, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i64, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i64, align 8\l  %10 = alloca i32, align 4\l  %11 = alloca i64, align 8\l  store i8* %0, i8** %3, align 8, !tbaa !1313\l  call void @llvm.dbg.declare(metadata i8** %3, metadata !202, metadata\l... !DIExpression()), !dbg !1317\l  store i32* %1, i32** %4, align 8, !tbaa !1313\l  call void @llvm.dbg.declare(metadata i32** %4, metadata !203, metadata\l... !DIExpression()), !dbg !1318\l  %12 = bitcast i32* %5 to i8*, !dbg !1319\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #26, !dbg !1319\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !204, metadata\l... !DIExpression()), !dbg !1320\l  store i32 0, i32* %5, align 4, !dbg !1320, !tbaa !1321\l  %13 = bitcast i64* %6 to i8*, !dbg !1323\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #26, !dbg !1323\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !205, metadata\l... !DIExpression()), !dbg !1324\l  %14 = load i32, i32* %5, align 4, !dbg !1325, !tbaa !1321\l  %15 = sext i32 %14 to i64, !dbg !1325\l  store i64 %15, i64* %6, align 8, !dbg !1324, !tbaa !1326\l  %16 = bitcast i8** %7 to i8*, !dbg !1328\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #26, !dbg !1328\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !206, metadata\l... !DIExpression()), !dbg !1329\l  %17 = bitcast i32* %8 to i8*, !dbg !1330\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #26, !dbg !1330\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !208, metadata\l... !DIExpression()), !dbg !1331\l  %18 = load i8*, i8** %3, align 8, !dbg !1332, !tbaa !1313\l  %19 = call i32 @xstrtoumax(i8* noundef %18, i8** noundef %7, i32 noundef 10,\l... i64* noundef %6, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]*\l... @parse_integer.suffixes, i64 0, i64 0)), !dbg !1333\l  store i32 %19, i32* %8, align 4, !dbg !1331, !tbaa !1334\l  %20 = bitcast i64* %9 to i8*, !dbg !1335\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #26, !dbg !1335\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !209, metadata\l... !DIExpression()), !dbg !1336\l  %21 = load i32, i32* %8, align 4, !dbg !1337, !tbaa !1334\l  %22 = and i32 %21, -2, !dbg !1339\l  %23 = icmp eq i32 %22, 2, !dbg !1340\l  br i1 %23, label %24, label %49, !dbg !1341\l|{<s0>T|<s1>F}}"];
	Node0xff8b90:s0 -> Node0xf7d430;
	Node0xff8b90:s1 -> Node0xf7d610;
	Node0xf7d430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%24:\l24:                                               \l  %25 = load i8*, i8** %7, align 8, !dbg !1342, !tbaa !1313\l  %26 = load i8, i8* %25, align 1, !dbg !1343, !tbaa !1334\l  %27 = sext i8 %26 to i32, !dbg !1343\l  %28 = icmp eq i32 %27, 66, !dbg !1344\l  br i1 %28, label %29, label %49, !dbg !1345\l|{<s0>T|<s1>F}}"];
	Node0xf7d430:s0 -> Node0xf7d480;
	Node0xf7d430:s1 -> Node0xf7d610;
	Node0xf7d480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%29:\l29:                                               \l  %30 = load i8*, i8** %3, align 8, !dbg !1346, !tbaa !1313\l  %31 = load i8*, i8** %7, align 8, !dbg !1347, !tbaa !1313\l  %32 = icmp ult i8* %30, %31, !dbg !1348\l  br i1 %32, label %33, label %49, !dbg !1349\l|{<s0>T|<s1>F}}"];
	Node0xf7d480:s0 -> Node0xf7d4d0;
	Node0xf7d480:s1 -> Node0xf7d610;
	Node0xf7d4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%33:\l33:                                               \l  %34 = load i8*, i8** %7, align 8, !dbg !1350, !tbaa !1313\l  %35 = getelementptr inbounds i8, i8* %34, i64 -1, !dbg !1350\l  %36 = load i8, i8* %35, align 1, !dbg !1350, !tbaa !1334\l  %37 = sext i8 %36 to i32, !dbg !1350\l  %38 = icmp ne i32 %37, 66, !dbg !1351\l  br i1 %38, label %39, label %49, !dbg !1352\l|{<s0>T|<s1>F}}"];
	Node0xf7d4d0:s0 -> Node0xf7d520;
	Node0xf7d4d0:s1 -> Node0xf7d610;
	Node0xf7d520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%39:\l39:                                               \l  %40 = load i8*, i8** %7, align 8, !dbg !1353, !tbaa !1313\l  %41 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !1353\l  store i8* %41, i8** %7, align 8, !dbg !1353, !tbaa !1313\l  %42 = load i8*, i8** %7, align 8, !dbg !1355, !tbaa !1313\l  %43 = load i8, i8* %42, align 1, !dbg !1357, !tbaa !1334\l  %44 = icmp ne i8 %43, 0, !dbg !1357\l  br i1 %44, label %48, label %45, !dbg !1358\l|{<s0>T|<s1>F}}"];
	Node0xf7d520:s0 -> Node0xf7d5c0;
	Node0xf7d520:s1 -> Node0xf7d570;
	Node0xf7d570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%45:\l45:                                               \l  %46 = load i32, i32* %8, align 4, !dbg !1359, !tbaa !1334\l  %47 = and i32 %46, -3, !dbg !1359\l  store i32 %47, i32* %8, align 4, !dbg !1359, !tbaa !1334\l  br label %48, !dbg !1360\l}"];
	Node0xf7d570 -> Node0xf7d5c0;
	Node0xf7d5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%48:\l48:                                               \l  br label %49, !dbg !1361\l}"];
	Node0xf7d5c0 -> Node0xf7d610;
	Node0xf7d610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = load i32, i32* %8, align 4, !dbg !1362, !tbaa !1334\l  %51 = and i32 %50, -2, !dbg !1363\l  %52 = icmp eq i32 %51, 2, !dbg !1364\l  br i1 %52, label %53, label %111, !dbg !1365\l|{<s0>T|<s1>F}}"];
	Node0xf7d610:s0 -> Node0xf7d660;
	Node0xf7d610:s1 -> Node0xf7da70;
	Node0xf7d660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%53:\l53:                                               \l  %54 = load i8*, i8** %7, align 8, !dbg !1366, !tbaa !1313\l  %55 = load i8, i8* %54, align 1, !dbg !1367, !tbaa !1334\l  %56 = sext i8 %55 to i32, !dbg !1367\l  %57 = icmp eq i32 %56, 120, !dbg !1368\l  br i1 %57, label %58, label %111, !dbg !1369\l|{<s0>T|<s1>F}}"];
	Node0xf7d660:s0 -> Node0xf7d6b0;
	Node0xf7d660:s1 -> Node0xf7da70;
	Node0xf7d6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%58:\l58:                                               \l  %59 = bitcast i32* %10 to i8*, !dbg !1370\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %59) #26, !dbg !1370\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !210, metadata\l... !DIExpression()), !dbg !1371\l  store i32 0, i32* %10, align 4, !dbg !1371, !tbaa !1334\l  %60 = bitcast i64* %11 to i8*, !dbg !1372\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %60) #26, !dbg !1372\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !213, metadata\l... !DIExpression()), !dbg !1373\l  %61 = load i8*, i8** %7, align 8, !dbg !1374, !tbaa !1313\l  %62 = getelementptr inbounds i8, i8* %61, i64 1, !dbg !1375\l  %63 = call i64 @parse_integer(i8* noundef %62, i32* noundef %10), !dbg !1376\l  store i64 %63, i64* %11, align 8, !dbg !1373, !tbaa !1326\l  %64 = load i32, i32* %10, align 4, !dbg !1377, !tbaa !1334\l  %65 = and i32 %64, -2, !dbg !1379\l  %66 = icmp ne i32 %65, 0, !dbg !1380\l  br i1 %66, label %67, label %71, !dbg !1381\l|{<s0>T|<s1>F}}"];
	Node0xf7d6b0:s0 -> Node0xf7d700;
	Node0xf7d6b0:s1 -> Node0xf7d750;
	Node0xf7d700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%67:\l67:                                               \l  %68 = load i32, i32* %10, align 4, !dbg !1382, !tbaa !1334\l  store i32 %68, i32* %8, align 4, !dbg !1384, !tbaa !1334\l  %69 = load i32, i32* %5, align 4, !dbg !1385, !tbaa !1321\l  %70 = sext i32 %69 to i64, !dbg !1385\l  store i64 %70, i64* %9, align 8, !dbg !1386, !tbaa !1326\l  br label %108, !dbg !1387\l}"];
	Node0xf7d700 -> Node0xf7da20;
	Node0xf7d750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%71:\l71:                                               \l  %72 = load i64, i64* %11, align 8, !dbg !1388, !tbaa !1326\l  %73 = load i64, i64* %6, align 8, !dbg !1388, !tbaa !1326\l  %74 = icmp slt i64 %72, 0, !dbg !1388\l  %75 = sub i64 0, %72, !dbg !1388\l  %76 = select i1 %74, i64 %75, i64 %72, !dbg !1388\l  %77 = call \{ i64, i1 \} @llvm.umul.with.overflow.i64(i64 %76, i64 %73), !dbg\l... !1388\l  %78 = extractvalue \{ i64, i1 \} %77, 1, !dbg !1388\l  %79 = extractvalue \{ i64, i1 \} %77, 0, !dbg !1388\l  %80 = zext i1 %74 to i64, !dbg !1388\l  %81 = add i64 9223372036854775807, %80, !dbg !1388\l  %82 = icmp ugt i64 %79, %81, !dbg !1388\l  %83 = or i1 %78, %82, !dbg !1388\l  %84 = sub i64 0, %79, !dbg !1388\l  %85 = select i1 %74, i64 %84, i64 %79, !dbg !1388\l  store i64 %85, i64* %9, align 8, !dbg !1388\l  br i1 %83, label %95, label %86, !dbg !1390\l|{<s0>T|<s1>F}}"];
	Node0xf7d750:s0 -> Node0xf7d840;
	Node0xf7d750:s1 -> Node0xf7d7a0;
	Node0xf7d7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%86:\l86:                                               \l  %87 = load i64, i64* %9, align 8, !dbg !1391, !tbaa !1326\l  %88 = icmp ne i64 %87, 0, !dbg !1392\l  br i1 %88, label %89, label %96, !dbg !1393\l|{<s0>T|<s1>F}}"];
	Node0xf7d7a0:s0 -> Node0xf7d7f0;
	Node0xf7d7a0:s1 -> Node0xf7d890;
	Node0xf7d7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%89:\l89:                                               \l  %90 = load i32, i32* %8, align 4, !dbg !1394, !tbaa !1334\l  %91 = load i32, i32* %10, align 4, !dbg !1395, !tbaa !1334\l  %92 = or i32 %90, %91, !dbg !1396\l  %93 = and i32 %92, 1, !dbg !1397\l  %94 = icmp ne i32 %93, 0, !dbg !1397\l  br i1 %94, label %95, label %96, !dbg !1398\l|{<s0>T|<s1>F}}"];
	Node0xf7d7f0:s0 -> Node0xf7d840;
	Node0xf7d7f0:s1 -> Node0xf7d890;
	Node0xf7d840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%95:\l95:                                               \l  store i32 1, i32* %8, align 4, !dbg !1399, !tbaa !1334\l  store i64 9223372036854775807, i64* %9, align 8, !dbg !1401, !tbaa !1326\l  br label %107, !dbg !1402\l}"];
	Node0xf7d840 -> Node0xf7d9d0;
	Node0xf7d890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%96:\l96:                                               \l  %97 = load i64, i64* %9, align 8, !dbg !1403, !tbaa !1326\l  %98 = icmp eq i64 %97, 0, !dbg !1406\l  br i1 %98, label %99, label %106, !dbg !1407\l|{<s0>T|<s1>F}}"];
	Node0xf7d890:s0 -> Node0xf7d8e0;
	Node0xf7d890:s1 -> Node0xf7d980;
	Node0xf7d8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%99:\l99:                                               \l  %100 = load i8*, i8** %3, align 8, !dbg !1408, !tbaa !1313\l  %101 = call i32 @strncmp(i8* noundef %100, i8* noundef getelementptr\l... inbounds ([3 x i8], [3 x i8]* @.str.80, i64 0, i64 0), i64 noundef 2) #27,\l... !dbg !1408\l  %102 = icmp eq i32 %101, 0, !dbg !1408\l  br i1 %102, label %103, label %106, !dbg !1409\l|{<s0>T|<s1>F}}"];
	Node0xf7d8e0:s0 -> Node0xf7d930;
	Node0xf7d8e0:s1 -> Node0xf7d980;
	Node0xf7d930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%103:\l103:                                              \l  %104 = call i8* @quote_n(i32 noundef 0, i8* noundef getelementptr inbounds\l... ([3 x i8], [3 x i8]* @.str.80, i64 0, i64 0)), !dbg !1410\l  %105 = call i8* @quote_n(i32 noundef 1, i8* noundef getelementptr inbounds\l... ([4 x i8], [4 x i8]* @.str.82, i64 0, i64 0)), !dbg !1411\l  call void (i32, i8*, ...) @diagnose(i32 noundef 0, i8* noundef getelementptr\l... inbounds ([61 x i8], [61 x i8]* @.str.81, i64 0, i64 0), i8* noundef %104,\l... i8* noundef %105), !dbg !1412\l  br label %106, !dbg !1412\l}"];
	Node0xf7d930 -> Node0xf7d980;
	Node0xf7d980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%106:\l106:                                              \l  store i32 0, i32* %8, align 4, !dbg !1413, !tbaa !1334\l  br label %107\l}"];
	Node0xf7d980 -> Node0xf7d9d0;
	Node0xf7d9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%107:\l107:                                              \l  br label %108\l}"];
	Node0xf7d9d0 -> Node0xf7da20;
	Node0xf7da20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%108:\l108:                                              \l  %109 = bitcast i64* %11 to i8*, !dbg !1414\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %109) #26, !dbg !1414\l  %110 = bitcast i32* %10 to i8*, !dbg !1414\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %110) #26, !dbg !1414\l  br label %118, !dbg !1415\l}"];
	Node0xf7da20 -> Node0xf7dbb0;
	Node0xf7da70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%111:\l111:                                              \l  %112 = load i64, i64* %6, align 8, !dbg !1416, !tbaa !1326\l  %113 = icmp ule i64 %112, 9223372036854775807, !dbg !1418\l  br i1 %113, label %114, label %116, !dbg !1419\l|{<s0>T|<s1>F}}"];
	Node0xf7da70:s0 -> Node0xf7dac0;
	Node0xf7da70:s1 -> Node0xf7db10;
	Node0xf7dac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%114:\l114:                                              \l  %115 = load i64, i64* %6, align 8, !dbg !1420, !tbaa !1326\l  store i64 %115, i64* %9, align 8, !dbg !1421, !tbaa !1326\l  br label %117, !dbg !1422\l}"];
	Node0xf7dac0 -> Node0xf7db60;
	Node0xf7db10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%116:\l116:                                              \l  store i32 1, i32* %8, align 4, !dbg !1423, !tbaa !1334\l  store i64 9223372036854775807, i64* %9, align 8, !dbg !1425, !tbaa !1326\l  br label %117\l}"];
	Node0xf7db10 -> Node0xf7db60;
	Node0xf7db60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%117:\l117:                                              \l  br label %118\l}"];
	Node0xf7db60 -> Node0xf7dbb0;
	Node0xf7dbb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%118:\l118:                                              \l  %119 = load i32, i32* %8, align 4, !dbg !1426, !tbaa !1334\l  %120 = load i32*, i32** %4, align 8, !dbg !1427, !tbaa !1313\l  store i32 %119, i32* %120, align 4, !dbg !1428, !tbaa !1334\l  %121 = load i64, i64* %9, align 8, !dbg !1429, !tbaa !1326\l  %122 = bitcast i64* %9 to i8*, !dbg !1430\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %122) #26, !dbg !1430\l  %123 = bitcast i32* %8 to i8*, !dbg !1430\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %123) #26, !dbg !1430\l  %124 = bitcast i8** %7 to i8*, !dbg !1430\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %124) #26, !dbg !1430\l  %125 = bitcast i64* %6 to i8*, !dbg !1430\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #26, !dbg !1430\l  %126 = bitcast i32* %5 to i8*, !dbg !1430\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %126) #26, !dbg !1430\l  ret i64 %121, !dbg !1431\l}"];
}
