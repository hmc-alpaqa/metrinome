digraph "CFG for 'xpalloc' function" {
	label="CFG for 'xpalloc' function";

	Node0xe8d770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = alloca i8*, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  store i8* %0, i8** %6, align 8, !tbaa !1313\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !800, metadata\l... !DIExpression()), !dbg !1317\l  store i64* %1, i64** %7, align 8, !tbaa !1313\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !801, metadata\l... !DIExpression()), !dbg !1318\l  store i64 %2, i64* %8, align 8, !tbaa !1319\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !802, metadata\l... !DIExpression()), !dbg !1321\l  store i64 %3, i64* %9, align 8, !tbaa !1319\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !803, metadata\l... !DIExpression()), !dbg !1322\l  store i64 %4, i64* %10, align 8, !tbaa !1319\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !804, metadata\l... !DIExpression()), !dbg !1323\l  %15 = bitcast i64* %11 to i8*, !dbg !1324\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #26, !dbg !1324\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !805, metadata\l... !DIExpression()), !dbg !1325\l  %16 = load i64*, i64** %7, align 8, !dbg !1326, !tbaa !1313\l  %17 = load i64, i64* %16, align 8, !dbg !1327, !tbaa !1319\l  store i64 %17, i64* %11, align 8, !dbg !1325, !tbaa !1319\l  %18 = bitcast i64* %12 to i8*, !dbg !1328\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #26, !dbg !1328\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !806, metadata\l... !DIExpression()), !dbg !1329\l  %19 = load i64, i64* %11, align 8, !dbg !1330, !tbaa !1319\l  %20 = load i64, i64* %11, align 8, !dbg !1330, !tbaa !1319\l  %21 = ashr i64 %20, 1, !dbg !1330\l  %22 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %19, i64 %21), !dbg\l... !1330\l  %23 = extractvalue \{ i64, i1 \} %22, 1, !dbg !1330\l  %24 = extractvalue \{ i64, i1 \} %22, 0, !dbg !1330\l  store i64 %24, i64* %12, align 8, !dbg !1330\l  br i1 %23, label %25, label %26, !dbg !1332\l|{<s0>T|<s1>F}}"];
	Node0xe8d770:s0 -> Node0xe910b0;
	Node0xe8d770:s1 -> Node0xe911a0;
	Node0xe910b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%25:\l25:                                               \l  store i64 9223372036854775807, i64* %12, align 8, !dbg !1333, !tbaa !1319\l  br label %26, !dbg !1334\l}"];
	Node0xe910b0 -> Node0xe911a0;
	Node0xe911a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i64, i64* %9, align 8, !dbg !1335, !tbaa !1319\l  %28 = icmp sle i64 0, %27, !dbg !1337\l  br i1 %28, label %29, label %35, !dbg !1338\l|{<s0>T|<s1>F}}"];
	Node0xe911a0:s0 -> Node0xe911f0;
	Node0xe911a0:s1 -> Node0xe91290;
	Node0xe911f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%29:\l29:                                               \l  %30 = load i64, i64* %9, align 8, !dbg !1339, !tbaa !1319\l  %31 = load i64, i64* %12, align 8, !dbg !1340, !tbaa !1319\l  %32 = icmp slt i64 %30, %31, !dbg !1341\l  br i1 %32, label %33, label %35, !dbg !1342\l|{<s0>T|<s1>F}}"];
	Node0xe911f0:s0 -> Node0xe91240;
	Node0xe911f0:s1 -> Node0xe91290;
	Node0xe91240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%33:\l33:                                               \l  %34 = load i64, i64* %9, align 8, !dbg !1343, !tbaa !1319\l  store i64 %34, i64* %12, align 8, !dbg !1344, !tbaa !1319\l  br label %35, !dbg !1345\l}"];
	Node0xe91240 -> Node0xe91290;
	Node0xe91290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = bitcast i64* %13 to i8*, !dbg !1346\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #26, !dbg !1346\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !807, metadata\l... !DIExpression()), !dbg !1347\l  %37 = bitcast i64* %14 to i8*, !dbg !1348\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #26, !dbg !1348\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !808, metadata\l... !DIExpression()), !dbg !1349\l  %38 = load i64, i64* %12, align 8, !dbg !1350, !tbaa !1319\l  %39 = load i64, i64* %10, align 8, !dbg !1350, !tbaa !1319\l  %40 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %38, i64 %39), !dbg\l... !1350\l  %41 = extractvalue \{ i64, i1 \} %40, 1, !dbg !1350\l  %42 = extractvalue \{ i64, i1 \} %40, 0, !dbg !1350\l  store i64 %42, i64* %13, align 8, !dbg !1350\l  br i1 %41, label %43, label %44, !dbg !1350\l|{<s0>T|<s1>F}}"];
	Node0xe91290:s0 -> Node0xe912e0;
	Node0xe91290:s1 -> Node0xe91330;
	Node0xe912e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%43:\l43:                                               \l  br label %50, !dbg !1350\l}"];
	Node0xe912e0 -> Node0xe91380;
	Node0xe91330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%44:\l44:                                               \l  %45 = load i64, i64* %13, align 8, !dbg !1351, !tbaa !1319\l  %46 = icmp slt i64 %45, 128, !dbg !1352\l  %47 = zext i1 %46 to i64, !dbg !1351\l  %48 = select i1 %46, i32 128, i32 0, !dbg !1351\l  %49 = sext i32 %48 to i64, !dbg !1351\l  br label %50, !dbg !1350\l}"];
	Node0xe91330 -> Node0xe91380;
	Node0xe91380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i64 [ 9223372036854775807, %43 ], [ %49, %44 ], !dbg !1350\l  store i64 %51, i64* %14, align 8, !dbg !1349, !tbaa !1319\l  %52 = load i64, i64* %14, align 8, !dbg !1353, !tbaa !1319\l  %53 = icmp ne i64 %52, 0, !dbg !1353\l  br i1 %53, label %54, label %63, !dbg !1355\l|{<s0>T|<s1>F}}"];
	Node0xe91380:s0 -> Node0xe913d0;
	Node0xe91380:s1 -> Node0xe91420;
	Node0xe913d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%54:\l54:                                               \l  %55 = load i64, i64* %14, align 8, !dbg !1356, !tbaa !1319\l  %56 = load i64, i64* %10, align 8, !dbg !1358, !tbaa !1319\l  %57 = sdiv i64 %55, %56, !dbg !1359\l  store i64 %57, i64* %12, align 8, !dbg !1360, !tbaa !1319\l  %58 = load i64, i64* %14, align 8, !dbg !1361, !tbaa !1319\l  %59 = load i64, i64* %14, align 8, !dbg !1362, !tbaa !1319\l  %60 = load i64, i64* %10, align 8, !dbg !1363, !tbaa !1319\l  %61 = srem i64 %59, %60, !dbg !1364\l  %62 = sub nsw i64 %58, %61, !dbg !1365\l  store i64 %62, i64* %13, align 8, !dbg !1366, !tbaa !1319\l  br label %63, !dbg !1367\l}"];
	Node0xe913d0 -> Node0xe91420;
	Node0xe91420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = load i8*, i8** %6, align 8, !dbg !1368, !tbaa !1313\l  %65 = icmp ne i8* %64, null, !dbg !1368\l  br i1 %65, label %68, label %66, !dbg !1370\l|{<s0>T|<s1>F}}"];
	Node0xe91420:s0 -> Node0xe914c0;
	Node0xe91420:s1 -> Node0xe91470;
	Node0xe91470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%66:\l66:                                               \l  %67 = load i64*, i64** %7, align 8, !dbg !1371, !tbaa !1313\l  store i64 0, i64* %67, align 8, !dbg !1372, !tbaa !1319\l  br label %68, !dbg !1373\l}"];
	Node0xe91470 -> Node0xe914c0;
	Node0xe914c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = load i64, i64* %12, align 8, !dbg !1374, !tbaa !1319\l  %70 = load i64, i64* %11, align 8, !dbg !1376, !tbaa !1319\l  %71 = sub nsw i64 %69, %70, !dbg !1377\l  %72 = load i64, i64* %8, align 8, !dbg !1378, !tbaa !1319\l  %73 = icmp slt i64 %71, %72, !dbg !1379\l  br i1 %73, label %74, label %94, !dbg !1380\l|{<s0>T|<s1>F}}"];
	Node0xe914c0:s0 -> Node0xe91510;
	Node0xe914c0:s1 -> Node0xe916a0;
	Node0xe91510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%74:\l74:                                               \l  %75 = load i64, i64* %11, align 8, !dbg !1381, !tbaa !1319\l  %76 = load i64, i64* %8, align 8, !dbg !1381, !tbaa !1319\l  %77 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %75, i64 %76), !dbg\l... !1381\l  %78 = extractvalue \{ i64, i1 \} %77, 1, !dbg !1381\l  %79 = extractvalue \{ i64, i1 \} %77, 0, !dbg !1381\l  store i64 %79, i64* %12, align 8, !dbg !1381\l  br i1 %78, label %93, label %80, !dbg !1382\l|{<s0>T|<s1>F}}"];
	Node0xe91510:s0 -> Node0xe91650;
	Node0xe91510:s1 -> Node0xe91560;
	Node0xe91560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%80:\l80:                                               \l  %81 = load i64, i64* %9, align 8, !dbg !1383, !tbaa !1319\l  %82 = icmp sle i64 0, %81, !dbg !1384\l  br i1 %82, label %83, label %87, !dbg !1385\l|{<s0>T|<s1>F}}"];
	Node0xe91560:s0 -> Node0xe915b0;
	Node0xe91560:s1 -> Node0xe91600;
	Node0xe915b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%83:\l83:                                               \l  %84 = load i64, i64* %9, align 8, !dbg !1386, !tbaa !1319\l  %85 = load i64, i64* %12, align 8, !dbg !1387, !tbaa !1319\l  %86 = icmp slt i64 %84, %85, !dbg !1388\l  br i1 %86, label %93, label %87, !dbg !1389\l|{<s0>T|<s1>F}}"];
	Node0xe915b0:s0 -> Node0xe91650;
	Node0xe915b0:s1 -> Node0xe91600;
	Node0xe91600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%87:\l87:                                               \l  %88 = load i64, i64* %12, align 8, !dbg !1390, !tbaa !1319\l  %89 = load i64, i64* %10, align 8, !dbg !1390, !tbaa !1319\l  %90 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %88, i64 %89), !dbg\l... !1390\l  %91 = extractvalue \{ i64, i1 \} %90, 1, !dbg !1390\l  %92 = extractvalue \{ i64, i1 \} %90, 0, !dbg !1390\l  store i64 %92, i64* %13, align 8, !dbg !1390\l  br i1 %91, label %93, label %94, !dbg !1391\l|{<s0>T|<s1>F}}"];
	Node0xe91600:s0 -> Node0xe91650;
	Node0xe91600:s1 -> Node0xe916a0;
	Node0xe91650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%93:\l93:                                               \l  call void @xalloc_die() #27, !dbg !1392\l  unreachable, !dbg !1392\l}"];
	Node0xe916a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  %95 = load i8*, i8** %6, align 8, !dbg !1393, !tbaa !1313\l  %96 = load i64, i64* %13, align 8, !dbg !1394, !tbaa !1319\l  %97 = call i8* @xrealloc(i8* noundef %95, i64 noundef %96) #28, !dbg !1395\l  store i8* %97, i8** %6, align 8, !dbg !1396, !tbaa !1313\l  %98 = load i64, i64* %12, align 8, !dbg !1397, !tbaa !1319\l  %99 = load i64*, i64** %7, align 8, !dbg !1398, !tbaa !1313\l  store i64 %98, i64* %99, align 8, !dbg !1399, !tbaa !1319\l  %100 = load i8*, i8** %6, align 8, !dbg !1400, !tbaa !1313\l  %101 = bitcast i64* %14 to i8*, !dbg !1401\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #26, !dbg !1401\l  %102 = bitcast i64* %13 to i8*, !dbg !1401\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #26, !dbg !1401\l  %103 = bitcast i64* %12 to i8*, !dbg !1401\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #26, !dbg !1401\l  %104 = bitcast i64* %11 to i8*, !dbg !1401\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %104) #26, !dbg !1401\l  ret i8* %100, !dbg !1402\l}"];
}
