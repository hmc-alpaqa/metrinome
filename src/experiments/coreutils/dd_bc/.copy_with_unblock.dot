digraph "CFG for 'copy_with_unblock' function" {
	label="CFG for 'copy_with_unblock' function";

	Node0xfde9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i8, align 1\l  store i8* %0, i8** %3, align 8, !tbaa !1313\l  call void @llvm.dbg.declare(metadata i8** %3, metadata !334, metadata\l... !DIExpression()), !dbg !1317\l  store i64 %1, i64* %4, align 8, !tbaa !1318\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !335, metadata\l... !DIExpression()), !dbg !1320\l  %7 = bitcast i64* %5 to i8*, !dbg !1321\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #26, !dbg !1321\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !336, metadata\l... !DIExpression()), !dbg !1322\l  store i64 0, i64* %5, align 8, !dbg !1322, !tbaa !1318\l  br label %8, !dbg !1321\l}"];
	Node0xfde9e0 -> Node0xfdea30;
	Node0xfdea30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%8:\l8:                                                \l  %9 = load i64, i64* %5, align 8, !dbg !1323, !tbaa !1318\l  %10 = load i64, i64* %4, align 8, !dbg !1324, !tbaa !1318\l  %11 = icmp slt i64 %9, %10, !dbg !1325\l  br i1 %11, label %14, label %12, !dbg !1326\l|{<s0>T|<s1>F}}"];
	Node0xfdea30:s0 -> Node0xfdead0;
	Node0xfdea30:s1 -> Node0xfdea80;
	Node0xfdea80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%12:\l12:                                               \l  %13 = bitcast i64* %5 to i8*, !dbg !1327\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #26, !dbg !1327\l  br label %87\l}"];
	Node0xfdea80 -> Node0xfdf2f0;
	Node0xfdead0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%14:\l14:                                               \l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %6) #26, !dbg !1328\l  call void @llvm.dbg.declare(metadata i8* %6, metadata !338, metadata\l... !DIExpression()), !dbg !1329\l  %15 = load i8*, i8** %3, align 8, !dbg !1330, !tbaa !1313\l  %16 = load i64, i64* %5, align 8, !dbg !1331, !tbaa !1318\l  %17 = getelementptr inbounds i8, i8* %15, i64 %16, !dbg !1330\l  %18 = load i8, i8* %17, align 1, !dbg !1330, !tbaa !1332\l  store i8 %18, i8* %6, align 1, !dbg !1329, !tbaa !1332\l  %19 = load i64, i64* @col, align 8, !dbg !1333, !tbaa !1318\l  %20 = add nsw i64 %19, 1, !dbg !1333\l  store i64 %20, i64* @col, align 8, !dbg !1333, !tbaa !1318\l  %21 = load i64, i64* @conversion_blocksize, align 8, !dbg !1335, !tbaa !1318\l  %22 = icmp sge i64 %19, %21, !dbg !1336\l  br i1 %22, label %23, label %39, !dbg !1337\l|{<s0>T|<s1>F}}"];
	Node0xfdead0:s0 -> Node0xfdeb20;
	Node0xfdead0:s1 -> Node0xfded00;
	Node0xfdeb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%23:\l23:                                               \l  store i64 0, i64* @copy_with_unblock.pending_spaces, align 8, !dbg !1338,\l... !tbaa !1318\l  store i64 0, i64* @col, align 8, !dbg !1340, !tbaa !1318\l  %24 = load i64, i64* %5, align 8, !dbg !1341, !tbaa !1318\l  %25 = add nsw i64 %24, -1, !dbg !1341\l  store i64 %25, i64* %5, align 8, !dbg !1341, !tbaa !1318\l  br label %26, !dbg !1342\l}"];
	Node0xfdeb20 -> Node0xfdeb70;
	Node0xfdeb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%26:\l26:                                               \l  %27 = load i8, i8* @newline_character, align 1, !dbg !1343, !tbaa !1332\l  %28 = load i8*, i8** @obuf, align 8, !dbg !1343, !tbaa !1313\l  %29 = load i64, i64* @oc, align 8, !dbg !1343, !tbaa !1318\l  %30 = add nsw i64 %29, 1, !dbg !1343\l  store i64 %30, i64* @oc, align 8, !dbg !1343, !tbaa !1318\l  %31 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !1343\l  store i8 %27, i8* %31, align 1, !dbg !1343, !tbaa !1332\l  %32 = load i64, i64* @oc, align 8, !dbg !1345, !tbaa !1318\l  %33 = load i64, i64* @output_blocksize, align 8, !dbg !1345, !tbaa !1318\l  %34 = icmp sge i64 %32, %33, !dbg !1345\l  br i1 %34, label %35, label %36, !dbg !1343\l|{<s0>T|<s1>F}}"];
	Node0xfdeb70:s0 -> Node0xfdebc0;
	Node0xfdeb70:s1 -> Node0xfdec10;
	Node0xfdebc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%35:\l35:                                               \l  call void @write_output(), !dbg !1345\l  br label %36, !dbg !1345\l}"];
	Node0xfdebc0 -> Node0xfdec10;
	Node0xfdec10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%36:\l36:                                               \l  br label %37, !dbg !1343\l}"];
	Node0xfdec10 -> Node0xfdec60;
	Node0xfdec60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%37:\l37:                                               \l  br label %38, !dbg !1343\l}"];
	Node0xfdec60 -> Node0xfdecb0;
	Node0xfdecb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%38:\l38:                                               \l  br label %83, !dbg !1347\l}"];
	Node0xfdecb0 -> Node0xfdf250;
	Node0xfded00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%39:\l39:                                               \l  %40 = load i8, i8* %6, align 1, !dbg !1348, !tbaa !1332\l  %41 = sext i8 %40 to i32, !dbg !1348\l  %42 = load i8, i8* @space_character, align 1, !dbg !1350, !tbaa !1332\l  %43 = sext i8 %42 to i32, !dbg !1350\l  %44 = icmp eq i32 %41, %43, !dbg !1351\l  br i1 %44, label %45, label %48, !dbg !1352\l|{<s0>T|<s1>F}}"];
	Node0xfded00:s0 -> Node0xfded50;
	Node0xfded00:s1 -> Node0xfdeda0;
	Node0xfded50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%45:\l45:                                               \l  %46 = load i64, i64* @copy_with_unblock.pending_spaces, align 8, !dbg !1353,\l... !tbaa !1318\l  %47 = add nsw i64 %46, 1, !dbg !1353\l  store i64 %47, i64* @copy_with_unblock.pending_spaces, align 8, !dbg !1353,\l... !tbaa !1318\l  br label %82, !dbg !1354\l}"];
	Node0xfded50 -> Node0xfdf200;
	Node0xfdeda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%48:\l48:                                               \l  br label %49, !dbg !1355\l}"];
	Node0xfdeda0 -> Node0xfdedf0;
	Node0xfdedf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = load i64, i64* @copy_with_unblock.pending_spaces, align 8, !dbg !1357,\l... !tbaa !1318\l  %51 = icmp ne i64 %50, 0, !dbg !1355\l  br i1 %51, label %52, label %68, !dbg !1355\l|{<s0>T|<s1>F}}"];
	Node0xfdedf0:s0 -> Node0xfdee40;
	Node0xfdedf0:s1 -> Node0xfdf020;
	Node0xfdee40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  br label %53, !dbg !1358\l}"];
	Node0xfdee40 -> Node0xfdee90;
	Node0xfdee90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = load i8, i8* @space_character, align 1, !dbg !1360, !tbaa !1332\l  %55 = load i8*, i8** @obuf, align 8, !dbg !1360, !tbaa !1313\l  %56 = load i64, i64* @oc, align 8, !dbg !1360, !tbaa !1318\l  %57 = add nsw i64 %56, 1, !dbg !1360\l  store i64 %57, i64* @oc, align 8, !dbg !1360, !tbaa !1318\l  %58 = getelementptr inbounds i8, i8* %55, i64 %56, !dbg !1360\l  store i8 %54, i8* %58, align 1, !dbg !1360, !tbaa !1332\l  %59 = load i64, i64* @oc, align 8, !dbg !1362, !tbaa !1318\l  %60 = load i64, i64* @output_blocksize, align 8, !dbg !1362, !tbaa !1318\l  %61 = icmp sge i64 %59, %60, !dbg !1362\l  br i1 %61, label %62, label %63, !dbg !1360\l|{<s0>T|<s1>F}}"];
	Node0xfdee90:s0 -> Node0xfdeee0;
	Node0xfdee90:s1 -> Node0xfdef30;
	Node0xfdeee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%62:\l62:                                               \l  call void @write_output(), !dbg !1362\l  br label %63, !dbg !1362\l}"];
	Node0xfdeee0 -> Node0xfdef30;
	Node0xfdef30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  br label %64, !dbg !1360\l}"];
	Node0xfdef30 -> Node0xfdef80;
	Node0xfdef80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  br label %65, !dbg !1360\l}"];
	Node0xfdef80 -> Node0xfdefd0;
	Node0xfdefd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = load i64, i64* @copy_with_unblock.pending_spaces, align 8, !dbg !1364,\l... !tbaa !1318\l  %67 = add nsw i64 %66, -1, !dbg !1364\l  store i64 %67, i64* @copy_with_unblock.pending_spaces, align 8, !dbg !1364,\l... !tbaa !1318\l  br label %49, !dbg !1355, !llvm.loop !1365\l}"];
	Node0xfdefd0 -> Node0xfdedf0;
	Node0xfdf020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%68:\l68:                                               \l  br label %69, !dbg !1369\l}"];
	Node0xfdf020 -> Node0xfdf070;
	Node0xfdf070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%69:\l69:                                               \l  %70 = load i8, i8* %6, align 1, !dbg !1370, !tbaa !1332\l  %71 = load i8*, i8** @obuf, align 8, !dbg !1370, !tbaa !1313\l  %72 = load i64, i64* @oc, align 8, !dbg !1370, !tbaa !1318\l  %73 = add nsw i64 %72, 1, !dbg !1370\l  store i64 %73, i64* @oc, align 8, !dbg !1370, !tbaa !1318\l  %74 = getelementptr inbounds i8, i8* %71, i64 %72, !dbg !1370\l  store i8 %70, i8* %74, align 1, !dbg !1370, !tbaa !1332\l  %75 = load i64, i64* @oc, align 8, !dbg !1372, !tbaa !1318\l  %76 = load i64, i64* @output_blocksize, align 8, !dbg !1372, !tbaa !1318\l  %77 = icmp sge i64 %75, %76, !dbg !1372\l  br i1 %77, label %78, label %79, !dbg !1370\l|{<s0>T|<s1>F}}"];
	Node0xfdf070:s0 -> Node0xfdf0c0;
	Node0xfdf070:s1 -> Node0xfdf110;
	Node0xfdf0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%78:\l78:                                               \l  call void @write_output(), !dbg !1372\l  br label %79, !dbg !1372\l}"];
	Node0xfdf0c0 -> Node0xfdf110;
	Node0xfdf110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%79:\l79:                                               \l  br label %80, !dbg !1370\l}"];
	Node0xfdf110 -> Node0xfdf160;
	Node0xfdf160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%80:\l80:                                               \l  br label %81, !dbg !1370\l}"];
	Node0xfdf160 -> Node0xfdf1b0;
	Node0xfdf1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%81:\l81:                                               \l  br label %82\l}"];
	Node0xfdf1b0 -> Node0xfdf200;
	Node0xfdf200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%82:\l82:                                               \l  br label %83\l}"];
	Node0xfdf200 -> Node0xfdf250;
	Node0xfdf250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%83:\l83:                                               \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #26, !dbg !1374\l  br label %84, !dbg !1375\l}"];
	Node0xfdf250 -> Node0xfdf2a0;
	Node0xfdf2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%84:\l84:                                               \l  %85 = load i64, i64* %5, align 8, !dbg !1376, !tbaa !1318\l  %86 = add nsw i64 %85, 1, !dbg !1376\l  store i64 %86, i64* %5, align 8, !dbg !1376, !tbaa !1318\l  br label %8, !dbg !1327, !llvm.loop !1377\l}"];
	Node0xfdf2a0 -> Node0xfdea30;
	Node0xfdf2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%87:\l87:                                               \l  ret void, !dbg !1379\l}"];
}
