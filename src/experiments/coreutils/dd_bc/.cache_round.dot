digraph "CFG for 'cache_round' function" {
	label="CFG for 'cache_round' function";

	Node0xfaa630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i64, align 8\l  %5 = alloca i64*, align 8\l  %6 = alloca i64, align 8\l  store i32 %0, i32* %3, align 4, !tbaa !1313\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !370, metadata\l... !DIExpression()), !dbg !1317\l  store i64 %1, i64* %4, align 8, !tbaa !1318\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !371, metadata\l... !DIExpression()), !dbg !1320\l  %7 = bitcast i64** %5 to i8*, !dbg !1321\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #26, !dbg !1321\l  call void @llvm.dbg.declare(metadata i64** %5, metadata !372, metadata\l... !DIExpression()), !dbg !1322\l  %8 = load i32, i32* %3, align 4, !dbg !1323, !tbaa !1313\l  %9 = icmp eq i32 %8, 0, !dbg !1324\l  %10 = zext i1 %9 to i64, !dbg !1323\l  %11 = select i1 %9, i64* @cache_round.i_pending, i64*\l... @cache_round.o_pending, !dbg !1323\l  store i64* %11, i64** %5, align 8, !dbg !1322, !tbaa !1325\l  %12 = load i64, i64* %4, align 8, !dbg !1327, !tbaa !1318\l  %13 = icmp ne i64 %12, 0, !dbg !1327\l  br i1 %13, label %14, label %39, !dbg !1328\l|{<s0>T|<s1>F}}"];
	Node0xfaa630:s0 -> Node0xfaa680;
	Node0xfaa630:s1 -> Node0xfaa860;
	Node0xfaa680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%14:\l14:                                               \l  %15 = bitcast i64* %6 to i8*, !dbg !1329\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #26, !dbg !1329\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !374, metadata\l... !DIExpression()), !dbg !1330\l  %16 = load i64*, i64** %5, align 8, !dbg !1331, !tbaa !1325\l  %17 = load i64, i64* %16, align 8, !dbg !1331, !tbaa !1318\l  %18 = load i64, i64* %4, align 8, !dbg !1331, !tbaa !1318\l  %19 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %17, i64 %18), !dbg\l... !1331\l  %20 = extractvalue \{ i64, i1 \} %19, 1, !dbg !1331\l  %21 = extractvalue \{ i64, i1 \} %19, 0, !dbg !1331\l  store i64 %21, i64* %6, align 8, !dbg !1331\l  br i1 %20, label %22, label %23, !dbg !1333\l|{<s0>T|<s1>F}}"];
	Node0xfaa680:s0 -> Node0xfaa6d0;
	Node0xfaa680:s1 -> Node0xfaa720;
	Node0xfaa6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%22:\l22:                                               \l  store i64 9223372036854775807, i64* %6, align 8, !dbg !1334, !tbaa !1318\l  br label %23, !dbg !1335\l}"];
	Node0xfaa6d0 -> Node0xfaa720;
	Node0xfaa720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%23:\l23:                                               \l  %24 = load i64, i64* %6, align 8, !dbg !1336, !tbaa !1318\l  %25 = srem i64 %24, 131072, !dbg !1337\l  %26 = load i64*, i64** %5, align 8, !dbg !1338, !tbaa !1325\l  store i64 %25, i64* %26, align 8, !dbg !1339, !tbaa !1318\l  %27 = load i64, i64* %6, align 8, !dbg !1340, !tbaa !1318\l  %28 = load i64*, i64** %5, align 8, !dbg !1342, !tbaa !1325\l  %29 = load i64, i64* %28, align 8, !dbg !1343, !tbaa !1318\l  %30 = icmp sgt i64 %27, %29, !dbg !1344\l  br i1 %30, label %31, label %36, !dbg !1345\l|{<s0>T|<s1>F}}"];
	Node0xfaa720:s0 -> Node0xfaa770;
	Node0xfaa720:s1 -> Node0xfaa7c0;
	Node0xfaa770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%31:\l31:                                               \l  %32 = load i64, i64* %6, align 8, !dbg !1346, !tbaa !1318\l  %33 = load i64*, i64** %5, align 8, !dbg !1347, !tbaa !1325\l  %34 = load i64, i64* %33, align 8, !dbg !1348, !tbaa !1318\l  %35 = sub nsw i64 %32, %34, !dbg !1349\l  store i64 %35, i64* %4, align 8, !dbg !1350, !tbaa !1318\l  br label %37, !dbg !1351\l}"];
	Node0xfaa770 -> Node0xfaa810;
	Node0xfaa7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%36:\l36:                                               \l  store i64 0, i64* %4, align 8, !dbg !1352, !tbaa !1318\l  br label %37\l}"];
	Node0xfaa7c0 -> Node0xfaa810;
	Node0xfaa810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%37:\l37:                                               \l  %38 = bitcast i64* %6 to i8*, !dbg !1353\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #26, !dbg !1353\l  br label %42, !dbg !1354\l}"];
	Node0xfaa810 -> Node0xfaa8b0;
	Node0xfaa860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%39:\l39:                                               \l  %40 = load i64*, i64** %5, align 8, !dbg !1355, !tbaa !1325\l  %41 = load i64, i64* %40, align 8, !dbg !1356, !tbaa !1318\l  store i64 %41, i64* %4, align 8, !dbg !1357, !tbaa !1318\l  br label %42\l}"];
	Node0xfaa860 -> Node0xfaa8b0;
	Node0xfaa8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = load i64, i64* %4, align 8, !dbg !1358, !tbaa !1318\l  %44 = bitcast i64** %5 to i8*, !dbg !1359\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44) #26, !dbg !1359\l  ret i64 %43, !dbg !1360\l}"];
}
