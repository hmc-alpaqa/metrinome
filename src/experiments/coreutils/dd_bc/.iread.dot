digraph "CFG for 'iread' function" {
	label="CFG for 'iread' function";

	Node0xf8b1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  store i32 %0, i32* %4, align 4, !tbaa !1313\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !236, metadata\l... !DIExpression()), !dbg !1317\l  store i8* %1, i8** %5, align 8, !tbaa !1318\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !237, metadata\l... !DIExpression()), !dbg !1320\l  store i64 %2, i64* %6, align 8, !tbaa !1321\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !238, metadata\l... !DIExpression()), !dbg !1323\l  %9 = bitcast i64* %7 to i8*, !dbg !1324\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #26, !dbg !1324\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !239, metadata\l... !DIExpression()), !dbg !1325\l  br label %10, !dbg !1326\l}"];
	Node0xf8b1c0 -> Node0xf8b2d0;
	Node0xf8b2d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l10:                                               \l  call void @process_signals(), !dbg !1327\l  %11 = load i32, i32* %4, align 4, !dbg !1329, !tbaa !1313\l  %12 = load i8*, i8** %5, align 8, !dbg !1330, !tbaa !1318\l  %13 = load i64, i64* %6, align 8, !dbg !1331, !tbaa !1321\l  %14 = call i64 @read(i32 noundef %11, i8* noundef %12, i64 noundef %13),\l... !dbg !1332\l  store i64 %14, i64* %7, align 8, !dbg !1333, !tbaa !1321\l  %15 = load i64, i64* %7, align 8, !dbg !1334, !tbaa !1321\l  %16 = icmp eq i64 %15, -1, !dbg !1336\l  br i1 %16, label %17, label %34, !dbg !1337\l|{<s0>T|<s1>F}}"];
	Node0xf8b2d0:s0 -> Node0xf8b320;
	Node0xf8b2d0:s1 -> Node0xf8b4b0;
	Node0xf8b320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%17:\l17:                                               \l  %18 = call i32* @__errno_location() #27, !dbg !1338\l  %19 = load i32, i32* %18, align 4, !dbg !1338, !tbaa !1313\l  %20 = icmp eq i32 %19, 22, !dbg !1339\l  br i1 %20, label %21, label %34, !dbg !1340\l|{<s0>T|<s1>F}}"];
	Node0xf8b320:s0 -> Node0xf8b370;
	Node0xf8b320:s1 -> Node0xf8b4b0;
	Node0xf8b370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%21:\l21:                                               \l  %22 = load i64, i64* @iread.prev_nread, align 8, !dbg !1341, !tbaa !1321\l  %23 = icmp slt i64 0, %22, !dbg !1342\l  br i1 %23, label %24, label %34, !dbg !1343\l|{<s0>T|<s1>F}}"];
	Node0xf8b370:s0 -> Node0xf8b3c0;
	Node0xf8b370:s1 -> Node0xf8b4b0;
	Node0xf8b3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%24:\l24:                                               \l  %25 = load i64, i64* @iread.prev_nread, align 8, !dbg !1344, !tbaa !1321\l  %26 = load i64, i64* %6, align 8, !dbg !1345, !tbaa !1321\l  %27 = icmp slt i64 %25, %26, !dbg !1346\l  br i1 %27, label %28, label %34, !dbg !1347\l|{<s0>T|<s1>F}}"];
	Node0xf8b3c0:s0 -> Node0xf8b410;
	Node0xf8b3c0:s1 -> Node0xf8b4b0;
	Node0xf8b410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%28:\l28:                                               \l  %29 = load i32, i32* @input_flags, align 4, !dbg !1348, !tbaa !1313\l  %30 = and i32 %29, 16384, !dbg !1349\l  %31 = icmp ne i32 %30, 0, !dbg !1349\l  br i1 %31, label %32, label %34, !dbg !1350\l|{<s0>T|<s1>F}}"];
	Node0xf8b410:s0 -> Node0xf8b460;
	Node0xf8b410:s1 -> Node0xf8b4b0;
	Node0xf8b460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%32:\l32:                                               \l  %33 = call i32* @__errno_location() #27, !dbg !1351\l  store i32 0, i32* %33, align 4, !dbg !1353, !tbaa !1313\l  store i64 0, i64* %7, align 8, !dbg !1354, !tbaa !1321\l  br label %34, !dbg !1355\l}"];
	Node0xf8b460 -> Node0xf8b4b0;
	Node0xf8b4b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  br label %35, !dbg !1356\l}"];
	Node0xf8b4b0 -> Node0xf8b500;
	Node0xf8b500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = load i64, i64* %7, align 8, !dbg !1357, !tbaa !1321\l  %37 = icmp slt i64 %36, 0, !dbg !1358\l  br i1 %37, label %38, label %42, !dbg !1359\l|{<s0>T|<s1>F}}"];
	Node0xf8b500:s0 -> Node0xf8b550;
	Node0xf8b500:s1 -> Node0xf8b5a0;
	Node0xf8b550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%38:\l38:                                               \l  %39 = call i32* @__errno_location() #27, !dbg !1360\l  %40 = load i32, i32* %39, align 4, !dbg !1360, !tbaa !1313\l  %41 = icmp eq i32 %40, 4, !dbg !1361\l  br label %42\l}"];
	Node0xf8b550 -> Node0xf8b5a0;
	Node0xf8b5a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = phi i1 [ false, %35 ], [ %41, %38 ], !dbg !1362\l  br i1 %43, label %10, label %44, !dbg !1356, !llvm.loop !1363\l|{<s0>T|<s1>F}}"];
	Node0xf8b5a0:s0 -> Node0xf8b2d0;
	Node0xf8b5a0:s1 -> Node0xf8b5f0;
	Node0xf8b5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%44:\l44:                                               \l  %45 = load i64, i64* %7, align 8, !dbg !1367, !tbaa !1321\l  %46 = icmp slt i64 0, %45, !dbg !1369\l  br i1 %46, label %47, label %52, !dbg !1370\l|{<s0>T|<s1>F}}"];
	Node0xf8b5f0:s0 -> Node0xf8b640;
	Node0xf8b5f0:s1 -> Node0xf8b6e0;
	Node0xf8b640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%47:\l47:                                               \l  %48 = load i64, i64* %7, align 8, !dbg !1371, !tbaa !1321\l  %49 = load i64, i64* %6, align 8, !dbg !1372, !tbaa !1321\l  %50 = icmp slt i64 %48, %49, !dbg !1373\l  br i1 %50, label %51, label %52, !dbg !1374\l|{<s0>T|<s1>F}}"];
	Node0xf8b640:s0 -> Node0xf8b690;
	Node0xf8b640:s1 -> Node0xf8b6e0;
	Node0xf8b690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%51:\l51:                                               \l  call void @process_signals(), !dbg !1375\l  br label %52, !dbg !1375\l}"];
	Node0xf8b690 -> Node0xf8b6e0;
	Node0xf8b6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%52:\l52:                                               \l  %53 = load i64, i64* %7, align 8, !dbg !1376, !tbaa !1321\l  %54 = icmp slt i64 0, %53, !dbg !1377\l  br i1 %54, label %55, label %80, !dbg !1378\l|{<s0>T|<s1>F}}"];
	Node0xf8b6e0:s0 -> Node0xf8b730;
	Node0xf8b6e0:s1 -> Node0xf8b960;
	Node0xf8b730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%55:\l55:                                               \l  %56 = load i8, i8* @warn_partial_read, align 1, !dbg !1379, !tbaa !1380,\l... !range !1382\l  %57 = trunc i8 %56 to i1, !dbg !1379\l  br i1 %57, label %58, label %80, !dbg !1383\l|{<s0>T|<s1>F}}"];
	Node0xf8b730:s0 -> Node0xf8b780;
	Node0xf8b730:s1 -> Node0xf8b960;
	Node0xf8b780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%58:\l58:                                               \l  %59 = load i64, i64* @iread.prev_nread, align 8, !dbg !1384, !tbaa !1321\l  %60 = icmp slt i64 0, %59, !dbg !1385\l  br i1 %60, label %61, label %79, !dbg !1386\l|{<s0>T|<s1>F}}"];
	Node0xf8b780:s0 -> Node0xf8b7d0;
	Node0xf8b780:s1 -> Node0xf8b910;
	Node0xf8b7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%61:\l61:                                               \l  %62 = load i64, i64* @iread.prev_nread, align 8, !dbg !1387, !tbaa !1321\l  %63 = load i64, i64* %6, align 8, !dbg !1388, !tbaa !1321\l  %64 = icmp slt i64 %62, %63, !dbg !1389\l  br i1 %64, label %65, label %79, !dbg !1390\l|{<s0>T|<s1>F}}"];
	Node0xf8b7d0:s0 -> Node0xf8b820;
	Node0xf8b7d0:s1 -> Node0xf8b910;
	Node0xf8b820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%65:\l65:                                               \l  %66 = bitcast i64* %8 to i8*, !dbg !1391\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %66) #26, !dbg !1391\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !240, metadata\l... !DIExpression()), !dbg !1392\l  %67 = load i64, i64* @iread.prev_nread, align 8, !dbg !1393, !tbaa !1321\l  store i64 %67, i64* %8, align 8, !dbg !1392, !tbaa !1321\l  %68 = load i32, i32* @status_level, align 4, !dbg !1394, !tbaa !1313\l  %69 = icmp ne i32 %68, 1, !dbg !1396\l  br i1 %69, label %70, label %77, !dbg !1397\l|{<s0>T|<s1>F}}"];
	Node0xf8b820:s0 -> Node0xf8b870;
	Node0xf8b820:s1 -> Node0xf8b8c0;
	Node0xf8b870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%70:\l70:                                               \l  %71 = load i64, i64* %8, align 8, !dbg !1398, !tbaa !1321\l  %72 = call i64 @select_plural(i64 noundef %71), !dbg !1398\l  %73 = icmp eq i64 %72, 1, !dbg !1398\l  %74 = zext i1 %73 to i64, !dbg !1398\l  %75 = select i1 %73, i8* getelementptr inbounds ([58 x i8], [58 x i8]*\l... @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]*\l... @.str.83, i64 0, i64 0), !dbg !1398\l  %76 = load i64, i64* %8, align 8, !dbg !1399, !tbaa !1321\l  call void (i32, i8*, ...) @diagnose(i32 noundef 0, i8* noundef %75, i64\l... noundef %76), !dbg !1400\l  br label %77, !dbg !1400\l}"];
	Node0xf8b870 -> Node0xf8b8c0;
	Node0xf8b8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%77:\l77:                                               \l  store i8 0, i8* @warn_partial_read, align 1, !dbg !1401, !tbaa !1380\l  %78 = bitcast i64* %8 to i8*, !dbg !1402\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %78) #26, !dbg !1402\l  br label %79, !dbg !1403\l}"];
	Node0xf8b8c0 -> Node0xf8b910;
	Node0xf8b910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%79:\l79:                                               \l  br label %80, !dbg !1404\l}"];
	Node0xf8b910 -> Node0xf8b960;
	Node0xf8b960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%80:\l80:                                               \l  %81 = load i64, i64* %7, align 8, !dbg !1405, !tbaa !1321\l  store i64 %81, i64* @iread.prev_nread, align 8, !dbg !1406, !tbaa !1321\l  %82 = load i64, i64* %7, align 8, !dbg !1407, !tbaa !1321\l  %83 = bitcast i64* %7 to i8*, !dbg !1408\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #26, !dbg !1408\l  ret i64 %82, !dbg !1409\l}"];
}
