digraph "CFG for 'apply_translations' function" {
	label="CFG for 'apply_translations' function";

	Node0xf37390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%0:\l  %1 = alloca i32, align 4\l  %2 = bitcast i32* %1 to i8*, !dbg !1316\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #26, !dbg !1316\l  call void @llvm.dbg.declare(metadata i32* %1, metadata !1315, metadata\l... !DIExpression()), !dbg !1317\l  %3 = load i32, i32* @conversions_mask, align 4, !dbg !1318, !tbaa !1320\l  %4 = and i32 %3, 1, !dbg !1324\l  %5 = icmp ne i32 %4, 0, !dbg !1324\l  br i1 %5, label %6, label %7, !dbg !1325\l|{<s0>T|<s1>F}}"];
	Node0xf37390:s0 -> Node0xf0d4d0;
	Node0xf37390:s1 -> Node0xf0d520;
	Node0xf0d4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%6:\l6:                                                \l  call void @translate_charset(i8* noundef getelementptr inbounds ([256 x i8],\l... [256 x i8]* @ebcdic_to_ascii, i64 0, i64 0)), !dbg !1326\l  br label %7, !dbg !1326\l}"];
	Node0xf0d4d0 -> Node0xf0d520;
	Node0xf0d520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%7:\l7:                                                \l  %8 = load i32, i32* @conversions_mask, align 4, !dbg !1327, !tbaa !1320\l  %9 = and i32 %8, 64, !dbg !1329\l  %10 = icmp ne i32 %9, 0, !dbg !1329\l  br i1 %10, label %11, label %30, !dbg !1330\l|{<s0>T|<s1>F}}"];
	Node0xf0d520:s0 -> Node0xf0d570;
	Node0xf0d520:s1 -> Node0xf0d700;
	Node0xf0d570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%11:\l11:                                               \l  store i32 0, i32* %1, align 4, !dbg !1331, !tbaa !1320\l  br label %12, !dbg !1334\l}"];
	Node0xf0d570 -> Node0xf0d5c0;
	Node0xf0d5c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l12:                                               \l  %13 = load i32, i32* %1, align 4, !dbg !1335, !tbaa !1320\l  %14 = icmp slt i32 %13, 256, !dbg !1337\l  br i1 %14, label %15, label %29, !dbg !1338\l|{<s0>T|<s1>F}}"];
	Node0xf0d5c0:s0 -> Node0xf0d610;
	Node0xf0d5c0:s1 -> Node0xf0d6b0;
	Node0xf0d610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%15:\l15:                                               \l  %16 = load i32, i32* %1, align 4, !dbg !1339, !tbaa !1320\l  %17 = sext i32 %16 to i64, !dbg !1340\l  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @trans_table, i64 0,\l... i64 %17, !dbg !1340\l  %19 = load i8, i8* %18, align 1, !dbg !1340, !tbaa !1341\l  %20 = zext i8 %19 to i32, !dbg !1340\l  %21 = call i32 @toupper(i32 noundef %20) #27, !dbg !1342\l  %22 = trunc i32 %21 to i8, !dbg !1342\l  %23 = load i32, i32* %1, align 4, !dbg !1343, !tbaa !1320\l  %24 = sext i32 %23 to i64, !dbg !1344\l  %25 = getelementptr inbounds [256 x i8], [256 x i8]* @trans_table, i64 0,\l... i64 %24, !dbg !1344\l  store i8 %22, i8* %25, align 1, !dbg !1345, !tbaa !1341\l  br label %26, !dbg !1344\l}"];
	Node0xf0d610 -> Node0xf0d660;
	Node0xf0d660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%26:\l26:                                               \l  %27 = load i32, i32* %1, align 4, !dbg !1346, !tbaa !1320\l  %28 = add nsw i32 %27, 1, !dbg !1346\l  store i32 %28, i32* %1, align 4, !dbg !1346, !tbaa !1320\l  br label %12, !dbg !1347, !llvm.loop !1348\l}"];
	Node0xf0d660 -> Node0xf0d5c0;
	Node0xf0d6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%29:\l29:                                               \l  store i8 1, i8* @translation_needed, align 1, !dbg !1352, !tbaa !1353\l  br label %54, !dbg !1355\l}"];
	Node0xf0d6b0 -> Node0xf0d930;
	Node0xf0d700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%30:\l30:                                               \l  %31 = load i32, i32* @conversions_mask, align 4, !dbg !1356, !tbaa !1320\l  %32 = and i32 %31, 32, !dbg !1358\l  %33 = icmp ne i32 %32, 0, !dbg !1358\l  br i1 %33, label %34, label %53, !dbg !1359\l|{<s0>T|<s1>F}}"];
	Node0xf0d700:s0 -> Node0xf0d750;
	Node0xf0d700:s1 -> Node0xf0d8e0;
	Node0xf0d750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%34:\l34:                                               \l  store i32 0, i32* %1, align 4, !dbg !1360, !tbaa !1320\l  br label %35, !dbg !1363\l}"];
	Node0xf0d750 -> Node0xf0d7a0;
	Node0xf0d7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%35:\l35:                                               \l  %36 = load i32, i32* %1, align 4, !dbg !1364, !tbaa !1320\l  %37 = icmp slt i32 %36, 256, !dbg !1366\l  br i1 %37, label %38, label %52, !dbg !1367\l|{<s0>T|<s1>F}}"];
	Node0xf0d7a0:s0 -> Node0xf0d7f0;
	Node0xf0d7a0:s1 -> Node0xf0d890;
	Node0xf0d7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%38:\l38:                                               \l  %39 = load i32, i32* %1, align 4, !dbg !1368, !tbaa !1320\l  %40 = sext i32 %39 to i64, !dbg !1369\l  %41 = getelementptr inbounds [256 x i8], [256 x i8]* @trans_table, i64 0,\l... i64 %40, !dbg !1369\l  %42 = load i8, i8* %41, align 1, !dbg !1369, !tbaa !1341\l  %43 = zext i8 %42 to i32, !dbg !1369\l  %44 = call i32 @tolower(i32 noundef %43) #27, !dbg !1370\l  %45 = trunc i32 %44 to i8, !dbg !1370\l  %46 = load i32, i32* %1, align 4, !dbg !1371, !tbaa !1320\l  %47 = sext i32 %46 to i64, !dbg !1372\l  %48 = getelementptr inbounds [256 x i8], [256 x i8]* @trans_table, i64 0,\l... i64 %47, !dbg !1372\l  store i8 %45, i8* %48, align 1, !dbg !1373, !tbaa !1341\l  br label %49, !dbg !1372\l}"];
	Node0xf0d7f0 -> Node0xf0d840;
	Node0xf0d840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%49:\l49:                                               \l  %50 = load i32, i32* %1, align 4, !dbg !1374, !tbaa !1320\l  %51 = add nsw i32 %50, 1, !dbg !1374\l  store i32 %51, i32* %1, align 4, !dbg !1374, !tbaa !1320\l  br label %35, !dbg !1375, !llvm.loop !1376\l}"];
	Node0xf0d840 -> Node0xf0d7a0;
	Node0xf0d890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%52:\l52:                                               \l  store i8 1, i8* @translation_needed, align 1, !dbg !1378, !tbaa !1353\l  br label %53, !dbg !1379\l}"];
	Node0xf0d890 -> Node0xf0d8e0;
	Node0xf0d8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%53:\l53:                                               \l  br label %54\l}"];
	Node0xf0d8e0 -> Node0xf0d930;
	Node0xf0d930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%54:\l54:                                               \l  %55 = load i32, i32* @conversions_mask, align 4, !dbg !1380, !tbaa !1320\l  %56 = and i32 %55, 2, !dbg !1382\l  %57 = icmp ne i32 %56, 0, !dbg !1382\l  br i1 %57, label %58, label %61, !dbg !1383\l|{<s0>T|<s1>F}}"];
	Node0xf0d930:s0 -> Node0xf0d980;
	Node0xf0d930:s1 -> Node0xf0d9d0;
	Node0xf0d980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%58:\l58:                                               \l  call void @translate_charset(i8* noundef getelementptr inbounds ([256 x i8],\l... [256 x i8]* @ascii_to_ebcdic, i64 0, i64 0)), !dbg !1384\l  %59 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]*\l... @ascii_to_ebcdic, i64 0, i64 10), align 2, !dbg !1386, !tbaa !1341\l  store i8 %59, i8* @newline_character, align 1, !dbg !1387, !tbaa !1341\l  %60 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]*\l... @ascii_to_ebcdic, i64 0, i64 32), align 16, !dbg !1388, !tbaa !1341\l  store i8 %60, i8* @space_character, align 1, !dbg !1389, !tbaa !1341\l  br label %69, !dbg !1390\l}"];
	Node0xf0d980 -> Node0xf0dac0;
	Node0xf0d9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%61:\l61:                                               \l  %62 = load i32, i32* @conversions_mask, align 4, !dbg !1391, !tbaa !1320\l  %63 = and i32 %62, 4, !dbg !1393\l  %64 = icmp ne i32 %63, 0, !dbg !1393\l  br i1 %64, label %65, label %68, !dbg !1394\l|{<s0>T|<s1>F}}"];
	Node0xf0d9d0:s0 -> Node0xf0da20;
	Node0xf0d9d0:s1 -> Node0xf0da70;
	Node0xf0da20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%65:\l65:                                               \l  call void @translate_charset(i8* noundef getelementptr inbounds ([256 x i8],\l... [256 x i8]* @ascii_to_ibm, i64 0, i64 0)), !dbg !1395\l  %66 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]*\l... @ascii_to_ibm, i64 0, i64 10), align 2, !dbg !1397, !tbaa !1341\l  store i8 %66, i8* @newline_character, align 1, !dbg !1398, !tbaa !1341\l  %67 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]*\l... @ascii_to_ibm, i64 0, i64 32), align 16, !dbg !1399, !tbaa !1341\l  store i8 %67, i8* @space_character, align 1, !dbg !1400, !tbaa !1341\l  br label %68, !dbg !1401\l}"];
	Node0xf0da20 -> Node0xf0da70;
	Node0xf0da70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%68:\l68:                                               \l  br label %69\l}"];
	Node0xf0da70 -> Node0xf0dac0;
	Node0xf0dac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%69:\l69:                                               \l  %70 = bitcast i32* %1 to i8*, !dbg !1402\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %70) #26, !dbg !1402\l  ret void, !dbg !1402\l}"];
}
