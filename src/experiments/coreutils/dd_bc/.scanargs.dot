digraph "CFG for 'scanargs' function" {
	label="CFG for 'scanargs' function";

	Node0xf153e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i8**, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i8, align 1\l  %10 = alloca i8, align 1\l  %11 = alloca i8, align 1\l  %12 = alloca i32, align 4\l  %13 = alloca i8*, align 8\l  %14 = alloca i8*, align 8\l  %15 = alloca i32, align 4\l  %16 = alloca i64, align 8\l  %17 = alloca i8, align 1\l  %18 = alloca i64, align 8\l  %19 = alloca i64, align 8\l  %20 = alloca i64*, align 8\l  %21 = alloca i64, align 8\l  store i32 %0, i32* %3, align 4, !tbaa !1348\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !1319, metadata\l... !DIExpression()), !dbg !1352\l  store i8** %1, i8*** %4, align 8, !tbaa !1353\l  call void @llvm.dbg.declare(metadata i8*** %4, metadata !1320, metadata\l... !DIExpression()), !dbg !1355\l  %22 = bitcast i64* %5 to i8*, !dbg !1356\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #26, !dbg !1356\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !1321, metadata\l... !DIExpression()), !dbg !1357\l  store i64 0, i64* %5, align 8, !dbg !1357, !tbaa !1358\l  %23 = bitcast i64* %6 to i8*, !dbg !1360\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #26, !dbg !1360\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1322, metadata\l... !DIExpression()), !dbg !1361\l  store i64 9223372036854775807, i64* %6, align 8, !dbg !1361, !tbaa !1358\l  %24 = bitcast i64* %7 to i8*, !dbg !1362\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #26, !dbg !1362\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1323, metadata\l... !DIExpression()), !dbg !1363\l  store i64 0, i64* %7, align 8, !dbg !1363, !tbaa !1358\l  %25 = bitcast i64* %8 to i8*, !dbg !1364\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #26, !dbg !1364\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1324, metadata\l... !DIExpression()), !dbg !1365\l  store i64 0, i64* %8, align 8, !dbg !1365, !tbaa !1358\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %9) #26, !dbg !1366\l  call void @llvm.dbg.declare(metadata i8* %9, metadata !1325, metadata\l... !DIExpression()), !dbg !1367\l  store i8 0, i8* %9, align 1, !dbg !1367, !tbaa !1368\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %10) #26, !dbg !1366\l  call void @llvm.dbg.declare(metadata i8* %10, metadata !1326, metadata\l... !DIExpression()), !dbg !1370\l  store i8 0, i8* %10, align 1, !dbg !1370, !tbaa !1368\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %11) #26, !dbg !1366\l  call void @llvm.dbg.declare(metadata i8* %11, metadata !1327, metadata\l... !DIExpression()), !dbg !1371\l  store i8 0, i8* %11, align 1, !dbg !1371, !tbaa !1368\l  %26 = bitcast i32* %12 to i8*, !dbg !1372\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #26, !dbg !1372\l  call void @llvm.dbg.declare(metadata i32* %12, metadata !1328, metadata\l... !DIExpression()), !dbg !1373\l  %27 = load i32, i32* @optind, align 4, !dbg !1374, !tbaa !1348\l  store i32 %27, i32* %12, align 4, !dbg !1373, !tbaa !1348\l  br label %28, !dbg !1372\l}"];
	Node0xf153e0 -> Node0xf15840;
	Node0xf15840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = load i32, i32* %12, align 4, !dbg !1375, !tbaa !1348\l  %30 = load i32, i32* %3, align 4, !dbg !1376, !tbaa !1348\l  %31 = icmp slt i32 %29, %30, !dbg !1377\l  br i1 %31, label %34, label %32, !dbg !1378\l|{<s0>T|<s1>F}}"];
	Node0xf15840:s0 -> Node0xf158e0;
	Node0xf15840:s1 -> Node0xf15890;
	Node0xf15890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%32:\l32:                                               \l  %33 = bitcast i32* %12 to i8*, !dbg !1379\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %33) #26, !dbg !1379\l  br label %213\l}"];
	Node0xf15890 -> Node0xf169c0;
	Node0xf158e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = bitcast i8** %13 to i8*, !dbg !1380\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #26, !dbg !1380\l  call void @llvm.dbg.declare(metadata i8** %13, metadata !1330, metadata\l... !DIExpression()), !dbg !1381\l  %36 = load i8**, i8*** %4, align 8, !dbg !1382, !tbaa !1353\l  %37 = load i32, i32* %12, align 4, !dbg !1383, !tbaa !1348\l  %38 = sext i32 %37 to i64, !dbg !1382\l  %39 = getelementptr inbounds i8*, i8** %36, i64 %38, !dbg !1382\l  %40 = load i8*, i8** %39, align 8, !dbg !1382, !tbaa !1353\l  store i8* %40, i8** %13, align 8, !dbg !1381, !tbaa !1353\l  %41 = bitcast i8** %14 to i8*, !dbg !1384\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #26, !dbg !1384\l  call void @llvm.dbg.declare(metadata i8** %14, metadata !1333, metadata\l... !DIExpression()), !dbg !1385\l  %42 = load i8*, i8** %13, align 8, !dbg !1386, !tbaa !1353\l  %43 = call i8* @strchr(i8* noundef %42, i32 noundef 61) #27, !dbg !1387\l  store i8* %43, i8** %14, align 8, !dbg !1385, !tbaa !1353\l  %44 = load i8*, i8** %14, align 8, !dbg !1388, !tbaa !1353\l  %45 = icmp eq i8* %44, null, !dbg !1390\l  br i1 %45, label %46, label %49, !dbg !1391\l|{<s0>T|<s1>F}}"];
	Node0xf158e0:s0 -> Node0xf15930;
	Node0xf158e0:s1 -> Node0xf15980;
	Node0xf15930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%46:\l46:                                               \l  %47 = load i8*, i8** %13, align 8, !dbg !1392, !tbaa !1353\l  %48 = call i8* @quotearg_style(i32 noundef 4, i8* noundef %47), !dbg !1392\l  call void (i32, i8*, ...) @diagnose(i32 noundef 0, i8* noundef getelementptr\l... inbounds ([24 x i8], [24 x i8]* @.str.53, i64 0, i64 0), i8* noundef %48),\l... !dbg !1394\l  call void @usage(i32 noundef 1) #28, !dbg !1395\l  unreachable, !dbg !1395\l}"];
	Node0xf15980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = load i8*, i8** %14, align 8, !dbg !1396, !tbaa !1353\l  %51 = getelementptr inbounds i8, i8* %50, i32 1, !dbg !1396\l  store i8* %51, i8** %14, align 8, !dbg !1396, !tbaa !1353\l  %52 = load i8*, i8** %13, align 8, !dbg !1397, !tbaa !1353\l  %53 = call zeroext i1 @operand_is(i8* noundef %52, i8* noundef getelementptr\l... inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0)) #27, !dbg !1398\l  br i1 %53, label %54, label %56, !dbg !1399\l|{<s0>T|<s1>F}}"];
	Node0xf15980:s0 -> Node0xf159d0;
	Node0xf15980:s1 -> Node0xf15a20;
	Node0xf159d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%54:\l54:                                               \l  %55 = load i8*, i8** %14, align 8, !dbg !1400, !tbaa !1353\l  store i8* %55, i8** @input_file, align 8, !dbg !1401, !tbaa !1353\l  br label %207, !dbg !1402\l}"];
	Node0xf159d0 -> Node0xf16920;
	Node0xf15a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%56:\l56:                                               \l  %57 = load i8*, i8** %13, align 8, !dbg !1403, !tbaa !1353\l  %58 = call zeroext i1 @operand_is(i8* noundef %57, i8* noundef getelementptr\l... inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #27, !dbg !1404\l  br i1 %58, label %59, label %61, !dbg !1405\l|{<s0>T|<s1>F}}"];
	Node0xf15a20:s0 -> Node0xf15a70;
	Node0xf15a20:s1 -> Node0xf15ac0;
	Node0xf15a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%59:\l59:                                               \l  %60 = load i8*, i8** %14, align 8, !dbg !1406, !tbaa !1353\l  store i8* %60, i8** @output_file, align 8, !dbg !1407, !tbaa !1353\l  br label %206, !dbg !1408\l}"];
	Node0xf15a70 -> Node0xf168d0;
	Node0xf15ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%61:\l61:                                               \l  %62 = load i8*, i8** %13, align 8, !dbg !1409, !tbaa !1353\l  %63 = call zeroext i1 @operand_is(i8* noundef %62, i8* noundef getelementptr\l... inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0)) #27, !dbg !1410\l  br i1 %63, label %64, label %69, !dbg !1411\l|{<s0>T|<s1>F}}"];
	Node0xf15ac0:s0 -> Node0xf15b10;
	Node0xf15ac0:s1 -> Node0xf15b60;
	Node0xf15b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%64:\l64:                                               \l  %65 = load i8*, i8** %14, align 8, !dbg !1412, !tbaa !1353\l  %66 = call i32 @parse_symbols(i8* noundef %65, %struct.symbol_value* noundef\l... getelementptr inbounds ([17 x %struct.symbol_value], [17 x\l... %struct.symbol_value]* @conversions, i64 0, i64 0), i1 noundef zeroext false,\l... i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.57, i64 0,\l... i64 0)), !dbg !1413\l  %67 = load i32, i32* @conversions_mask, align 4, !dbg !1414, !tbaa !1348\l  %68 = or i32 %67, %66, !dbg !1414\l  store i32 %68, i32* @conversions_mask, align 4, !dbg !1414, !tbaa !1348\l  br label %205, !dbg !1415\l}"];
	Node0xf15b10 -> Node0xf16880;
	Node0xf15b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%69:\l69:                                               \l  %70 = load i8*, i8** %13, align 8, !dbg !1416, !tbaa !1353\l  %71 = call zeroext i1 @operand_is(i8* noundef %70, i8* noundef getelementptr\l... inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0)) #27, !dbg !1417\l  br i1 %71, label %72, label %77, !dbg !1418\l|{<s0>T|<s1>F}}"];
	Node0xf15b60:s0 -> Node0xf15bb0;
	Node0xf15b60:s1 -> Node0xf15c00;
	Node0xf15bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%72:\l72:                                               \l  %73 = load i8*, i8** %14, align 8, !dbg !1419, !tbaa !1353\l  %74 = call i32 @parse_symbols(i8* noundef %73, %struct.symbol_value* noundef\l... getelementptr inbounds ([19 x %struct.symbol_value], [19 x\l... %struct.symbol_value]* @flags, i64 0, i64 0), i1 noundef zeroext false, i8*\l... noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.59, i64 0, i64\l... 0)), !dbg !1420\l  %75 = load i32, i32* @input_flags, align 4, !dbg !1421, !tbaa !1348\l  %76 = or i32 %75, %74, !dbg !1421\l  store i32 %76, i32* @input_flags, align 4, !dbg !1421, !tbaa !1348\l  br label %204, !dbg !1422\l}"];
	Node0xf15bb0 -> Node0xf16830;
	Node0xf15c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%77:\l77:                                               \l  %78 = load i8*, i8** %13, align 8, !dbg !1423, !tbaa !1353\l  %79 = call zeroext i1 @operand_is(i8* noundef %78, i8* noundef getelementptr\l... inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0)) #27, !dbg !1424\l  br i1 %79, label %80, label %85, !dbg !1425\l|{<s0>T|<s1>F}}"];
	Node0xf15c00:s0 -> Node0xf15c50;
	Node0xf15c00:s1 -> Node0xf15ca0;
	Node0xf15c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%80:\l80:                                               \l  %81 = load i8*, i8** %14, align 8, !dbg !1426, !tbaa !1353\l  %82 = call i32 @parse_symbols(i8* noundef %81, %struct.symbol_value* noundef\l... getelementptr inbounds ([19 x %struct.symbol_value], [19 x\l... %struct.symbol_value]* @flags, i64 0, i64 0), i1 noundef zeroext false, i8*\l... noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.61, i64 0, i64\l... 0)), !dbg !1427\l  %83 = load i32, i32* @output_flags, align 4, !dbg !1428, !tbaa !1348\l  %84 = or i32 %83, %82, !dbg !1428\l  store i32 %84, i32* @output_flags, align 4, !dbg !1428, !tbaa !1348\l  br label %203, !dbg !1429\l}"];
	Node0xf15c50 -> Node0xf167e0;
	Node0xf15ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%85:\l85:                                               \l  %86 = load i8*, i8** %13, align 8, !dbg !1430, !tbaa !1353\l  %87 = call zeroext i1 @operand_is(i8* noundef %86, i8* noundef getelementptr\l... inbounds ([7 x i8], [7 x i8]* @.str.62, i64 0, i64 0)) #27, !dbg !1431\l  br i1 %87, label %88, label %91, !dbg !1432\l|{<s0>T|<s1>F}}"];
	Node0xf15ca0:s0 -> Node0xf15cf0;
	Node0xf15ca0:s1 -> Node0xf15d40;
	Node0xf15cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%88:\l88:                                               \l  %89 = load i8*, i8** %14, align 8, !dbg !1433, !tbaa !1353\l  %90 = call i32 @parse_symbols(i8* noundef %89, %struct.symbol_value* noundef\l... getelementptr inbounds ([4 x %struct.symbol_value], [4 x\l... %struct.symbol_value]* @statuses, i64 0, i64 0), i1 noundef zeroext true, i8*\l... noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.63, i64 0, i64\l... 0)), !dbg !1434\l  store i32 %90, i32* @status_level, align 4, !dbg !1435, !tbaa !1348\l  br label %202, !dbg !1436\l}"];
	Node0xf15cf0 -> Node0xf16790;
	Node0xf15d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%91:\l91:                                               \l  %92 = bitcast i32* %15 to i8*, !dbg !1437\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %92) #26, !dbg !1437\l  call void @llvm.dbg.declare(metadata i32* %15, metadata !1334, metadata\l... !DIExpression()), !dbg !1438\l  store i32 0, i32* %15, align 4, !dbg !1438, !tbaa !1439\l  %93 = bitcast i64* %16 to i8*, !dbg !1440\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %93) #26, !dbg !1440\l  call void @llvm.dbg.declare(metadata i64* %16, metadata !1342, metadata\l... !DIExpression()), !dbg !1441\l  %94 = load i8*, i8** %14, align 8, !dbg !1442, !tbaa !1353\l  %95 = call i64 @parse_integer(i8* noundef %94, i32* noundef %15), !dbg !1443\l  store i64 %95, i64* %16, align 8, !dbg !1441, !tbaa !1358\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #26, !dbg !1444\l  call void @llvm.dbg.declare(metadata i8* %17, metadata !1343, metadata\l... !DIExpression()), !dbg !1445\l  %96 = load i8*, i8** %14, align 8, !dbg !1446, !tbaa !1353\l  %97 = call i8* @strchr(i8* noundef %96, i32 noundef 66) #27, !dbg !1447\l  %98 = icmp ne i8* %97, null, !dbg !1448\l  %99 = xor i1 %98, true, !dbg !1448\l  %100 = xor i1 %99, true, !dbg !1449\l  %101 = zext i1 %100 to i8, !dbg !1445\l  store i8 %101, i8* %17, align 1, !dbg !1445, !tbaa !1368\l  %102 = bitcast i64* %18 to i8*, !dbg !1450\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %102) #26, !dbg !1450\l  call void @llvm.dbg.declare(metadata i64* %18, metadata !1344, metadata\l... !DIExpression()), !dbg !1451\l  store i64 0, i64* %18, align 8, !dbg !1451, !tbaa !1358\l  %103 = bitcast i64* %19 to i8*, !dbg !1452\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %103) #26, !dbg !1452\l  call void @llvm.dbg.declare(metadata i64* %19, metadata !1345, metadata\l... !DIExpression()), !dbg !1453\l  store i64 9223372036854775807, i64* %19, align 8, !dbg !1453, !tbaa !1358\l  %104 = bitcast i64** %20 to i8*, !dbg !1454\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %104) #26, !dbg !1454\l  call void @llvm.dbg.declare(metadata i64** %20, metadata !1346, metadata\l... !DIExpression()), !dbg !1455\l  store i64* null, i64** %20, align 8, !dbg !1455, !tbaa !1353\l  %105 = bitcast i64* %21 to i8*, !dbg !1456\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %105) #26, !dbg !1456\l  call void @llvm.dbg.declare(metadata i64* %21, metadata !1347, metadata\l... !DIExpression()), !dbg !1457\l  store i64 9223372036854775806, i64* %21, align 8, !dbg !1457, !tbaa !1358\l  %106 = load i8*, i8** %13, align 8, !dbg !1458, !tbaa !1353\l  %107 = call zeroext i1 @operand_is(i8* noundef %106, i8* noundef\l... getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i64 0, i64 0)) #27,\l... !dbg !1460\l  br i1 %107, label %108, label %110, !dbg !1461\l|{<s0>T|<s1>F}}"];
	Node0xf15d40:s0 -> Node0xf15d90;
	Node0xf15d40:s1 -> Node0xf15de0;
	Node0xf15d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%108:\l108:                                              \l  store i64 1, i64* %18, align 8, !dbg !1462, !tbaa !1358\l  %109 = load i64, i64* %21, align 8, !dbg !1464, !tbaa !1358\l  store i64 %109, i64* %19, align 8, !dbg !1465, !tbaa !1358\l  store i64* @input_blocksize, i64** %20, align 8, !dbg !1466, !tbaa !1353\l  br label %167, !dbg !1467\l}"];
	Node0xf15d90 -> Node0xf16420;
	Node0xf15de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%110:\l110:                                              \l  %111 = load i8*, i8** %13, align 8, !dbg !1468, !tbaa !1353\l  %112 = call zeroext i1 @operand_is(i8* noundef %111, i8* noundef\l... getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i64 0, i64 0)) #27,\l... !dbg !1470\l  br i1 %112, label %113, label %115, !dbg !1471\l|{<s0>T|<s1>F}}"];
	Node0xf15de0:s0 -> Node0xf15e30;
	Node0xf15de0:s1 -> Node0xf15e80;
	Node0xf15e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%113:\l113:                                              \l  store i64 1, i64* %18, align 8, !dbg !1472, !tbaa !1358\l  %114 = load i64, i64* %21, align 8, !dbg !1474, !tbaa !1358\l  store i64 %114, i64* %19, align 8, !dbg !1475, !tbaa !1358\l  store i64* @output_blocksize, i64** %20, align 8, !dbg !1476, !tbaa !1353\l  br label %166, !dbg !1477\l}"];
	Node0xf15e30 -> Node0xf163d0;
	Node0xf15e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%115:\l115:                                              \l  %116 = load i8*, i8** %13, align 8, !dbg !1478, !tbaa !1353\l  %117 = call zeroext i1 @operand_is(i8* noundef %116, i8* noundef\l... getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0)) #27,\l... !dbg !1480\l  br i1 %117, label %118, label %120, !dbg !1481\l|{<s0>T|<s1>F}}"];
	Node0xf15e80:s0 -> Node0xf15ed0;
	Node0xf15e80:s1 -> Node0xf15f20;
	Node0xf15ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%118:\l118:                                              \l  store i64 1, i64* %18, align 8, !dbg !1482, !tbaa !1358\l  %119 = load i64, i64* %21, align 8, !dbg !1484, !tbaa !1358\l  store i64 %119, i64* %19, align 8, !dbg !1485, !tbaa !1358\l  store i64* %5, i64** %20, align 8, !dbg !1486, !tbaa !1353\l  br label %165, !dbg !1487\l}"];
	Node0xf15ed0 -> Node0xf16380;
	Node0xf15f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%120:\l120:                                              \l  %121 = load i8*, i8** %13, align 8, !dbg !1488, !tbaa !1353\l  %122 = call zeroext i1 @operand_is(i8* noundef %121, i8* noundef\l... getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i64 0, i64 0)) #27,\l... !dbg !1490\l  br i1 %122, label %123, label %124, !dbg !1491\l|{<s0>T|<s1>F}}"];
	Node0xf15f20:s0 -> Node0xf15f70;
	Node0xf15f20:s1 -> Node0xf15fc0;
	Node0xf15f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%123:\l123:                                              \l  store i64 1, i64* %18, align 8, !dbg !1492, !tbaa !1358\l  store i64 9223372036854775807, i64* %19, align 8, !dbg !1494, !tbaa !1358\l  store i64* @conversion_blocksize, i64** %20, align 8, !dbg !1495, !tbaa !1353\l  br label %164, !dbg !1496\l}"];
	Node0xf15f70 -> Node0xf16330;
	Node0xf15fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%124:\l124:                                              \l  %125 = load i8*, i8** %13, align 8, !dbg !1497, !tbaa !1353\l  %126 = call zeroext i1 @operand_is(i8* noundef %125, i8* noundef\l... getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0)) #27,\l... !dbg !1499\l  br i1 %126, label %130, label %127, !dbg !1500\l|{<s0>T|<s1>F}}"];
	Node0xf15fc0:s0 -> Node0xf16060;
	Node0xf15fc0:s1 -> Node0xf16010;
	Node0xf16010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%127:\l127:                                              \l  %128 = load i8*, i8** %13, align 8, !dbg !1501, !tbaa !1353\l  %129 = call zeroext i1 @operand_is(i8* noundef %128, i8* noundef\l... getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0)) #27,\l... !dbg !1502\l  br i1 %129, label %130, label %135, !dbg !1503\l|{<s0>T|<s1>F}}"];
	Node0xf16010:s0 -> Node0xf16060;
	Node0xf16010:s1 -> Node0xf160b0;
	Node0xf16060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%130:\l130:                                              \l  %131 = load i64, i64* %16, align 8, !dbg !1504, !tbaa !1358\l  store i64 %131, i64* %7, align 8, !dbg !1506, !tbaa !1358\l  %132 = load i8, i8* %17, align 1, !dbg !1507, !tbaa !1368, !range !1508\l  %133 = trunc i8 %132 to i1, !dbg !1507\l  %134 = zext i1 %133 to i8, !dbg !1509\l  store i8 %134, i8* %10, align 1, !dbg !1509, !tbaa !1368\l  br label %163, !dbg !1510\l}"];
	Node0xf16060 -> Node0xf162e0;
	Node0xf160b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%135:\l135:                                              \l  %136 = load i8*, i8** %13, align 8, !dbg !1511, !tbaa !1353\l  %137 = load i8*, i8** %13, align 8, !dbg !1513, !tbaa !1353\l  %138 = load i8, i8* %137, align 1, !dbg !1514, !tbaa !1439\l  %139 = sext i8 %138 to i32, !dbg !1514\l  %140 = icmp eq i32 %139, 111, !dbg !1515\l  %141 = zext i1 %140 to i32, !dbg !1515\l  %142 = sext i32 %141 to i64, !dbg !1516\l  %143 = getelementptr inbounds i8, i8* %136, i64 %142, !dbg !1516\l  %144 = call zeroext i1 @operand_is(i8* noundef %143, i8* noundef\l... getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i64 0, i64 0)) #27,\l... !dbg !1517\l  br i1 %144, label %145, label %150, !dbg !1518\l|{<s0>T|<s1>F}}"];
	Node0xf160b0:s0 -> Node0xf16100;
	Node0xf160b0:s1 -> Node0xf16150;
	Node0xf16100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%145:\l145:                                              \l  %146 = load i64, i64* %16, align 8, !dbg !1519, !tbaa !1358\l  store i64 %146, i64* %8, align 8, !dbg !1521, !tbaa !1358\l  %147 = load i8, i8* %17, align 1, !dbg !1522, !tbaa !1368, !range !1508\l  %148 = trunc i8 %147 to i1, !dbg !1522\l  %149 = zext i1 %148 to i8, !dbg !1523\l  store i8 %149, i8* %11, align 1, !dbg !1523, !tbaa !1368\l  br label %162, !dbg !1524\l}"];
	Node0xf16100 -> Node0xf16290;
	Node0xf16150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%150:\l150:                                              \l  %151 = load i8*, i8** %13, align 8, !dbg !1525, !tbaa !1353\l  %152 = call zeroext i1 @operand_is(i8* noundef %151, i8* noundef\l... getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i64 0, i64 0)) #27,\l... !dbg !1527\l  br i1 %152, label %153, label %158, !dbg !1528\l|{<s0>T|<s1>F}}"];
	Node0xf16150:s0 -> Node0xf161a0;
	Node0xf16150:s1 -> Node0xf161f0;
	Node0xf161a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%153:\l153:                                              \l  %154 = load i64, i64* %16, align 8, !dbg !1529, !tbaa !1358\l  store i64 %154, i64* %6, align 8, !dbg !1531, !tbaa !1358\l  %155 = load i8, i8* %17, align 1, !dbg !1532, !tbaa !1368, !range !1508\l  %156 = trunc i8 %155 to i1, !dbg !1532\l  %157 = zext i1 %156 to i8, !dbg !1533\l  store i8 %157, i8* %9, align 1, !dbg !1533, !tbaa !1368\l  br label %161, !dbg !1534\l}"];
	Node0xf161a0 -> Node0xf16240;
	Node0xf161f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%158:\l158:                                              \l  %159 = load i8*, i8** %13, align 8, !dbg !1535, !tbaa !1353\l  %160 = call i8* @quotearg_style(i32 noundef 4, i8* noundef %159), !dbg !1535\l  call void (i32, i8*, ...) @diagnose(i32 noundef 0, i8* noundef getelementptr\l... inbounds ([24 x i8], [24 x i8]* @.str.53, i64 0, i64 0), i8* noundef %160),\l... !dbg !1537\l  call void @usage(i32 noundef 1) #28, !dbg !1538\l  unreachable, !dbg !1538\l}"];
	Node0xf16240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%161:\l161:                                              \l  br label %162\l}"];
	Node0xf16240 -> Node0xf16290;
	Node0xf16290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%162:\l162:                                              \l  br label %163\l}"];
	Node0xf16290 -> Node0xf162e0;
	Node0xf162e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%163:\l163:                                              \l  br label %164\l}"];
	Node0xf162e0 -> Node0xf16330;
	Node0xf16330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%164:\l164:                                              \l  br label %165\l}"];
	Node0xf16330 -> Node0xf16380;
	Node0xf16380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%165:\l165:                                              \l  br label %166\l}"];
	Node0xf16380 -> Node0xf163d0;
	Node0xf163d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%166:\l166:                                              \l  br label %167\l}"];
	Node0xf163d0 -> Node0xf16420;
	Node0xf16420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%167:\l167:                                              \l  %168 = load i64, i64* %16, align 8, !dbg !1539, !tbaa !1358\l  %169 = load i64, i64* %18, align 8, !dbg !1541, !tbaa !1358\l  %170 = icmp slt i64 %168, %169, !dbg !1542\l  br i1 %170, label %171, label %172, !dbg !1543\l|{<s0>T|<s1>F}}"];
	Node0xf16420:s0 -> Node0xf16470;
	Node0xf16420:s1 -> Node0xf164c0;
	Node0xf16470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%171:\l171:                                              \l  store i32 4, i32* %15, align 4, !dbg !1544, !tbaa !1439\l  br label %178, !dbg !1545\l}"];
	Node0xf16470 -> Node0xf165b0;
	Node0xf164c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%172:\l172:                                              \l  %173 = load i64, i64* %19, align 8, !dbg !1546, !tbaa !1358\l  %174 = load i64, i64* %16, align 8, !dbg !1548, !tbaa !1358\l  %175 = icmp slt i64 %173, %174, !dbg !1549\l  br i1 %175, label %176, label %177, !dbg !1550\l|{<s0>T|<s1>F}}"];
	Node0xf164c0:s0 -> Node0xf16510;
	Node0xf164c0:s1 -> Node0xf16560;
	Node0xf16510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%176:\l176:                                              \l  store i32 1, i32* %15, align 4, !dbg !1551, !tbaa !1439\l  br label %177, !dbg !1552\l}"];
	Node0xf16510 -> Node0xf16560;
	Node0xf16560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%177:\l177:                                              \l  br label %178\l}"];
	Node0xf16560 -> Node0xf165b0;
	Node0xf165b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%178:\l178:                                              \l  %179 = load i32, i32* %15, align 4, !dbg !1553, !tbaa !1439\l  %180 = icmp ne i32 %179, 0, !dbg !1555\l  br i1 %180, label %181, label %188, !dbg !1556\l|{<s0>T|<s1>F}}"];
	Node0xf165b0:s0 -> Node0xf16600;
	Node0xf165b0:s1 -> Node0xf16650;
	Node0xf16600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%181:\l181:                                              \l  %182 = load i32, i32* %15, align 4, !dbg !1557, !tbaa !1439\l  %183 = icmp eq i32 %182, 1, !dbg !1557\l  %184 = zext i1 %183 to i64, !dbg !1557\l  %185 = select i1 %183, i32 75, i32 0, !dbg !1557\l  %186 = load i8*, i8** %14, align 8, !dbg !1557, !tbaa !1353\l  %187 = call i8* @quotearg_style(i32 noundef 4, i8* noundef %186), !dbg !1557\l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef %185, i8*\l... noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0),\l... i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.73, i64 0,\l... i64 0), i8* noundef %187), !dbg !1557\l  unreachable, !dbg !1557\l}"];
	Node0xf16650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%188:\l188:                                              \l  %189 = load i64*, i64** %20, align 8, !dbg !1558, !tbaa !1353\l  %190 = icmp ne i64* %189, null, !dbg !1558\l  br i1 %190, label %191, label %194, !dbg !1560\l|{<s0>T|<s1>F}}"];
	Node0xf16650:s0 -> Node0xf166a0;
	Node0xf16650:s1 -> Node0xf166f0;
	Node0xf166a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%191:\l191:                                              \l  %192 = load i64, i64* %16, align 8, !dbg !1561, !tbaa !1358\l  %193 = load i64*, i64** %20, align 8, !dbg !1562, !tbaa !1353\l  store i64 %192, i64* %193, align 8, !dbg !1563, !tbaa !1358\l  br label %194, !dbg !1564\l}"];
	Node0xf166a0 -> Node0xf166f0;
	Node0xf166f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%194:\l194:                                              \l  br label %195\l}"];
	Node0xf166f0 -> Node0xf16740;
	Node0xf16740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%195:\l195:                                              \l  %196 = bitcast i64* %21 to i8*, !dbg !1565\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #26, !dbg !1565\l  %197 = bitcast i64** %20 to i8*, !dbg !1565\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #26, !dbg !1565\l  %198 = bitcast i64* %19 to i8*, !dbg !1565\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #26, !dbg !1565\l  %199 = bitcast i64* %18 to i8*, !dbg !1565\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #26, !dbg !1565\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #26, !dbg !1565\l  %200 = bitcast i64* %16 to i8*, !dbg !1565\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %200) #26, !dbg !1565\l  %201 = bitcast i32* %15 to i8*, !dbg !1565\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #26, !dbg !1565\l  br label %202\l}"];
	Node0xf16740 -> Node0xf16790;
	Node0xf16790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%202:\l202:                                              \l  br label %203\l}"];
	Node0xf16790 -> Node0xf167e0;
	Node0xf167e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%203:\l203:                                              \l  br label %204\l}"];
	Node0xf167e0 -> Node0xf16830;
	Node0xf16830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%204:\l204:                                              \l  br label %205\l}"];
	Node0xf16830 -> Node0xf16880;
	Node0xf16880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%205:\l205:                                              \l  br label %206\l}"];
	Node0xf16880 -> Node0xf168d0;
	Node0xf168d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%206:\l206:                                              \l  br label %207\l}"];
	Node0xf168d0 -> Node0xf16920;
	Node0xf16920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%207:\l207:                                              \l  %208 = bitcast i8** %14 to i8*, !dbg !1566\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %208) #26, !dbg !1566\l  %209 = bitcast i8** %13 to i8*, !dbg !1566\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %209) #26, !dbg !1566\l  br label %210, !dbg !1567\l}"];
	Node0xf16920 -> Node0xf16970;
	Node0xf16970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%210:\l210:                                              \l  %211 = load i32, i32* %12, align 4, !dbg !1568, !tbaa !1348\l  %212 = add nsw i32 %211, 1, !dbg !1568\l  store i32 %212, i32* %12, align 4, !dbg !1568, !tbaa !1348\l  br label %28, !dbg !1379, !llvm.loop !1569\l}"];
	Node0xf16970 -> Node0xf15840;
	Node0xf169c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%213:\l213:                                              \l  %214 = load i64, i64* %5, align 8, !dbg !1573, !tbaa !1358\l  %215 = icmp ne i64 %214, 0, !dbg !1573\l  br i1 %215, label %216, label %218, !dbg !1575\l|{<s0>T|<s1>F}}"];
	Node0xf169c0:s0 -> Node0xf16a10;
	Node0xf169c0:s1 -> Node0xf16a60;
	Node0xf16a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%216:\l216:                                              \l  %217 = load i64, i64* %5, align 8, !dbg !1576, !tbaa !1358\l  store i64 %217, i64* @output_blocksize, align 8, !dbg !1577, !tbaa !1358\l  store i64 %217, i64* @input_blocksize, align 8, !dbg !1578, !tbaa !1358\l  br label %221, !dbg !1579\l}"];
	Node0xf16a10 -> Node0xf16ab0;
	Node0xf16a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%218:\l218:                                              \l  %219 = load i32, i32* @conversions_mask, align 4, !dbg !1580, !tbaa !1348\l  %220 = or i32 %219, 2048, !dbg !1580\l  store i32 %220, i32* @conversions_mask, align 4, !dbg !1580, !tbaa !1348\l  br label %221\l}"];
	Node0xf16a60 -> Node0xf16ab0;
	Node0xf16ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%221:\l221:                                              \l  %222 = load i64, i64* @input_blocksize, align 8, !dbg !1582, !tbaa !1358\l  %223 = icmp eq i64 %222, 0, !dbg !1584\l  br i1 %223, label %224, label %225, !dbg !1585\l|{<s0>T|<s1>F}}"];
	Node0xf16ab0:s0 -> Node0xf16b00;
	Node0xf16ab0:s1 -> Node0xf16b50;
	Node0xf16b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%224:\l224:                                              \l  store i64 512, i64* @input_blocksize, align 8, !dbg !1586, !tbaa !1358\l  br label %225, !dbg !1587\l}"];
	Node0xf16b00 -> Node0xf16b50;
	Node0xf16b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%225:\l225:                                              \l  %226 = load i64, i64* @output_blocksize, align 8, !dbg !1588, !tbaa !1358\l  %227 = icmp eq i64 %226, 0, !dbg !1590\l  br i1 %227, label %228, label %229, !dbg !1591\l|{<s0>T|<s1>F}}"];
	Node0xf16b50:s0 -> Node0xf16ba0;
	Node0xf16b50:s1 -> Node0xf16bf0;
	Node0xf16ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%228:\l228:                                              \l  store i64 512, i64* @output_blocksize, align 8, !dbg !1592, !tbaa !1358\l  br label %229, !dbg !1593\l}"];
	Node0xf16ba0 -> Node0xf16bf0;
	Node0xf16bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%229:\l229:                                              \l  %230 = load i64, i64* @conversion_blocksize, align 8, !dbg !1594, !tbaa !1358\l  %231 = icmp eq i64 %230, 0, !dbg !1596\l  br i1 %231, label %232, label %235, !dbg !1597\l|{<s0>T|<s1>F}}"];
	Node0xf16bf0:s0 -> Node0xf16c40;
	Node0xf16bf0:s1 -> Node0xf16c90;
	Node0xf16c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%232:\l232:                                              \l  %233 = load i32, i32* @conversions_mask, align 4, !dbg !1598, !tbaa !1348\l  %234 = and i32 %233, -25, !dbg !1598\l  store i32 %234, i32* @conversions_mask, align 4, !dbg !1598, !tbaa !1348\l  br label %235, !dbg !1599\l}"];
	Node0xf16c40 -> Node0xf16c90;
	Node0xf16c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%235:\l235:                                              \l  %236 = load i32, i32* @input_flags, align 4, !dbg !1600, !tbaa !1348\l  %237 = and i32 %236, 1052672, !dbg !1602\l  %238 = icmp ne i32 %237, 0, !dbg !1602\l  br i1 %238, label %239, label %242, !dbg !1603\l|{<s0>T|<s1>F}}"];
	Node0xf16c90:s0 -> Node0xf16ce0;
	Node0xf16c90:s1 -> Node0xf16d30;
	Node0xf16ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%239:\l239:                                              \l  %240 = load i32, i32* @input_flags, align 4, !dbg !1604, !tbaa !1348\l  %241 = or i32 %240, 1052672, !dbg !1604\l  store i32 %241, i32* @input_flags, align 4, !dbg !1604, !tbaa !1348\l  br label %242, !dbg !1605\l}"];
	Node0xf16ce0 -> Node0xf16d30;
	Node0xf16d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%242:\l242:                                              \l  %243 = load i32, i32* @output_flags, align 4, !dbg !1606, !tbaa !1348\l  %244 = and i32 %243, 1, !dbg !1608\l  %245 = icmp ne i32 %244, 0, !dbg !1608\l  br i1 %245, label %246, label %248, !dbg !1609\l|{<s0>T|<s1>F}}"];
	Node0xf16d30:s0 -> Node0xf16d80;
	Node0xf16d30:s1 -> Node0xf16dd0;
	Node0xf16d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%246:\l246:                                              \l  %247 = call i8* @quote(i8* noundef getelementptr inbounds ([10 x i8], [10 x\l... i8]* @.str.74, i64 0, i64 0)), !dbg !1610\l  call void (i32, i8*, ...) @diagnose(i32 noundef 0, i8* noundef getelementptr\l... inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* noundef\l... getelementptr inbounds ([20 x i8], [20 x i8]* @.str.61, i64 0, i64 0), i8*\l... noundef %247), !dbg !1612\l  call void @usage(i32 noundef 1) #28, !dbg !1613\l  unreachable, !dbg !1613\l}"];
	Node0xf16dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%248:\l248:                                              \l  %249 = load i8, i8* %10, align 1, !dbg !1614, !tbaa !1368, !range !1508\l  %250 = trunc i8 %249 to i1, !dbg !1614\l  br i1 %250, label %251, label %254, !dbg !1616\l|{<s0>T|<s1>F}}"];
	Node0xf16dd0:s0 -> Node0xf16e20;
	Node0xf16dd0:s1 -> Node0xf16e70;
	Node0xf16e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%251:\l251:                                              \l  %252 = load i32, i32* @input_flags, align 4, !dbg !1617, !tbaa !1348\l  %253 = or i32 %252, 8, !dbg !1617\l  store i32 %253, i32* @input_flags, align 4, !dbg !1617, !tbaa !1348\l  br label %254, !dbg !1618\l}"];
	Node0xf16e20 -> Node0xf16e70;
	Node0xf16e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%254:\l254:                                              \l  %255 = load i32, i32* @input_flags, align 4, !dbg !1619, !tbaa !1348\l  %256 = and i32 %255, 8, !dbg !1621\l  %257 = icmp ne i32 %256, 0, !dbg !1621\l  br i1 %257, label %258, label %268, !dbg !1622\l|{<s0>T|<s1>F}}"];
	Node0xf16e70:s0 -> Node0xf16ec0;
	Node0xf16e70:s1 -> Node0xf16f60;
	Node0xf16ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%258:\l258:                                              \l  %259 = load i64, i64* %7, align 8, !dbg !1623, !tbaa !1358\l  %260 = icmp ne i64 %259, 0, !dbg !1624\l  br i1 %260, label %261, label %268, !dbg !1625\l|{<s0>T|<s1>F}}"];
	Node0xf16ec0:s0 -> Node0xf16f10;
	Node0xf16ec0:s1 -> Node0xf16f60;
	Node0xf16f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%261:\l261:                                              \l  %262 = load i64, i64* %7, align 8, !dbg !1626, !tbaa !1358\l  %263 = load i64, i64* @input_blocksize, align 8, !dbg !1628, !tbaa !1358\l  %264 = sdiv i64 %262, %263, !dbg !1629\l  store i64 %264, i64* @skip_records, align 8, !dbg !1630, !tbaa !1358\l  %265 = load i64, i64* %7, align 8, !dbg !1631, !tbaa !1358\l  %266 = load i64, i64* @input_blocksize, align 8, !dbg !1632, !tbaa !1358\l  %267 = srem i64 %265, %266, !dbg !1633\l  store i64 %267, i64* @skip_bytes, align 8, !dbg !1634, !tbaa !1358\l  br label %274, !dbg !1635\l}"];
	Node0xf16f10 -> Node0xf17050;
	Node0xf16f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%268:\l268:                                              \l  %269 = load i64, i64* %7, align 8, !dbg !1636, !tbaa !1358\l  %270 = icmp ne i64 %269, 0, !dbg !1638\l  br i1 %270, label %271, label %273, !dbg !1639\l|{<s0>T|<s1>F}}"];
	Node0xf16f60:s0 -> Node0xf16fb0;
	Node0xf16f60:s1 -> Node0xf17000;
	Node0xf16fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%271:\l271:                                              \l  %272 = load i64, i64* %7, align 8, !dbg !1640, !tbaa !1358\l  store i64 %272, i64* @skip_records, align 8, !dbg !1641, !tbaa !1358\l  br label %273, !dbg !1642\l}"];
	Node0xf16fb0 -> Node0xf17000;
	Node0xf17000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%273:\l273:                                              \l  br label %274\l}"];
	Node0xf17000 -> Node0xf17050;
	Node0xf17050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%274:\l274:                                              \l  %275 = load i8, i8* %9, align 1, !dbg !1643, !tbaa !1368, !range !1508\l  %276 = trunc i8 %275 to i1, !dbg !1643\l  br i1 %276, label %277, label %280, !dbg !1645\l|{<s0>T|<s1>F}}"];
	Node0xf17050:s0 -> Node0xf170a0;
	Node0xf17050:s1 -> Node0xf170f0;
	Node0xf170a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%277:\l277:                                              \l  %278 = load i32, i32* @input_flags, align 4, !dbg !1646, !tbaa !1348\l  %279 = or i32 %278, 4, !dbg !1646\l  store i32 %279, i32* @input_flags, align 4, !dbg !1646, !tbaa !1348\l  br label %280, !dbg !1647\l}"];
	Node0xf170a0 -> Node0xf170f0;
	Node0xf170f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%280:\l280:                                              \l  %281 = load i32, i32* @input_flags, align 4, !dbg !1648, !tbaa !1348\l  %282 = and i32 %281, 4, !dbg !1650\l  %283 = icmp ne i32 %282, 0, !dbg !1650\l  br i1 %283, label %284, label %294, !dbg !1651\l|{<s0>T|<s1>F}}"];
	Node0xf170f0:s0 -> Node0xf17140;
	Node0xf170f0:s1 -> Node0xf171e0;
	Node0xf17140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%284:\l284:                                              \l  %285 = load i64, i64* %6, align 8, !dbg !1652, !tbaa !1358\l  %286 = icmp ne i64 %285, 9223372036854775807, !dbg !1653\l  br i1 %286, label %287, label %294, !dbg !1654\l|{<s0>T|<s1>F}}"];
	Node0xf17140:s0 -> Node0xf17190;
	Node0xf17140:s1 -> Node0xf171e0;
	Node0xf17190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%287:\l287:                                              \l  %288 = load i64, i64* %6, align 8, !dbg !1655, !tbaa !1358\l  %289 = load i64, i64* @input_blocksize, align 8, !dbg !1657, !tbaa !1358\l  %290 = sdiv i64 %288, %289, !dbg !1658\l  store i64 %290, i64* @max_records, align 8, !dbg !1659, !tbaa !1358\l  %291 = load i64, i64* %6, align 8, !dbg !1660, !tbaa !1358\l  %292 = load i64, i64* @input_blocksize, align 8, !dbg !1661, !tbaa !1358\l  %293 = srem i64 %291, %292, !dbg !1662\l  store i64 %293, i64* @max_bytes, align 8, !dbg !1663, !tbaa !1358\l  br label %300, !dbg !1664\l}"];
	Node0xf17190 -> Node0xf172d0;
	Node0xf171e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%294:\l294:                                              \l  %295 = load i64, i64* %6, align 8, !dbg !1665, !tbaa !1358\l  %296 = icmp ne i64 %295, 9223372036854775807, !dbg !1667\l  br i1 %296, label %297, label %299, !dbg !1668\l|{<s0>T|<s1>F}}"];
	Node0xf171e0:s0 -> Node0xf17230;
	Node0xf171e0:s1 -> Node0xf17280;
	Node0xf17230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%297:\l297:                                              \l  %298 = load i64, i64* %6, align 8, !dbg !1669, !tbaa !1358\l  store i64 %298, i64* @max_records, align 8, !dbg !1670, !tbaa !1358\l  br label %299, !dbg !1671\l}"];
	Node0xf17230 -> Node0xf17280;
	Node0xf17280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%299:\l299:                                              \l  br label %300\l}"];
	Node0xf17280 -> Node0xf172d0;
	Node0xf172d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%300:\l300:                                              \l  %301 = load i8, i8* %11, align 1, !dbg !1672, !tbaa !1368, !range !1508\l  %302 = trunc i8 %301 to i1, !dbg !1672\l  br i1 %302, label %303, label %306, !dbg !1674\l|{<s0>T|<s1>F}}"];
	Node0xf172d0:s0 -> Node0xf17320;
	Node0xf172d0:s1 -> Node0xf17370;
	Node0xf17320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%303:\l303:                                              \l  %304 = load i32, i32* @output_flags, align 4, !dbg !1675, !tbaa !1348\l  %305 = or i32 %304, 16, !dbg !1675\l  store i32 %305, i32* @output_flags, align 4, !dbg !1675, !tbaa !1348\l  br label %306, !dbg !1676\l}"];
	Node0xf17320 -> Node0xf17370;
	Node0xf17370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%306:\l306:                                              \l  %307 = load i32, i32* @output_flags, align 4, !dbg !1677, !tbaa !1348\l  %308 = and i32 %307, 16, !dbg !1679\l  %309 = icmp ne i32 %308, 0, !dbg !1679\l  br i1 %309, label %310, label %320, !dbg !1680\l|{<s0>T|<s1>F}}"];
	Node0xf17370:s0 -> Node0xf173c0;
	Node0xf17370:s1 -> Node0xf17460;
	Node0xf173c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%310:\l310:                                              \l  %311 = load i64, i64* %8, align 8, !dbg !1681, !tbaa !1358\l  %312 = icmp ne i64 %311, 0, !dbg !1682\l  br i1 %312, label %313, label %320, !dbg !1683\l|{<s0>T|<s1>F}}"];
	Node0xf173c0:s0 -> Node0xf17410;
	Node0xf173c0:s1 -> Node0xf17460;
	Node0xf17410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%313:\l313:                                              \l  %314 = load i64, i64* %8, align 8, !dbg !1684, !tbaa !1358\l  %315 = load i64, i64* @output_blocksize, align 8, !dbg !1686, !tbaa !1358\l  %316 = sdiv i64 %314, %315, !dbg !1687\l  store i64 %316, i64* @seek_records, align 8, !dbg !1688, !tbaa !1358\l  %317 = load i64, i64* %8, align 8, !dbg !1689, !tbaa !1358\l  %318 = load i64, i64* @output_blocksize, align 8, !dbg !1690, !tbaa !1358\l  %319 = srem i64 %317, %318, !dbg !1691\l  store i64 %319, i64* @seek_bytes, align 8, !dbg !1692, !tbaa !1358\l  br label %326, !dbg !1693\l}"];
	Node0xf17410 -> Node0xf17550;
	Node0xf17460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%320:\l320:                                              \l  %321 = load i64, i64* %8, align 8, !dbg !1694, !tbaa !1358\l  %322 = icmp ne i64 %321, 0, !dbg !1696\l  br i1 %322, label %323, label %325, !dbg !1697\l|{<s0>T|<s1>F}}"];
	Node0xf17460:s0 -> Node0xf174b0;
	Node0xf17460:s1 -> Node0xf17500;
	Node0xf174b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%323:\l323:                                              \l  %324 = load i64, i64* %8, align 8, !dbg !1698, !tbaa !1358\l  store i64 %324, i64* @seek_records, align 8, !dbg !1699, !tbaa !1358\l  br label %325, !dbg !1700\l}"];
	Node0xf174b0 -> Node0xf17500;
	Node0xf17500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%325:\l325:                                              \l  br label %326\l}"];
	Node0xf17500 -> Node0xf17550;
	Node0xf17550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%326:\l326:                                              \l  %327 = load i32, i32* @conversions_mask, align 4, !dbg !1701, !tbaa !1348\l  %328 = and i32 %327, 2048, !dbg !1702\l  %329 = icmp ne i32 %328, 0, !dbg !1702\l  br i1 %329, label %351, label %330, !dbg !1703\l|{<s0>T|<s1>F}}"];
	Node0xf17550:s0 -> Node0xf17780;
	Node0xf17550:s1 -> Node0xf175a0;
	Node0xf175a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%330:\l330:                                              \l  %331 = load i32, i32* @input_flags, align 4, !dbg !1704, !tbaa !1348\l  %332 = and i32 %331, 1, !dbg !1705\l  %333 = icmp ne i32 %332, 0, !dbg !1705\l  br i1 %333, label %351, label %334, !dbg !1706\l|{<s0>T|<s1>F}}"];
	Node0xf175a0:s0 -> Node0xf17780;
	Node0xf175a0:s1 -> Node0xf175f0;
	Node0xf175f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%334:\l334:                                              \l  %335 = load i64, i64* @skip_records, align 8, !dbg !1707, !tbaa !1358\l  %336 = icmp ne i64 %335, 0, !dbg !1707\l  br i1 %336, label %349, label %337, !dbg !1708\l|{<s0>T|<s1>F}}"];
	Node0xf175f0:s0 -> Node0xf17730;
	Node0xf175f0:s1 -> Node0xf17640;
	Node0xf17640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%337:\l337:                                              \l  %338 = load i64, i64* @max_records, align 8, !dbg !1709, !tbaa !1358\l  %339 = icmp slt i64 0, %338, !dbg !1710\l  br i1 %339, label %340, label %343, !dbg !1711\l|{<s0>T|<s1>F}}"];
	Node0xf17640:s0 -> Node0xf17690;
	Node0xf17640:s1 -> Node0xf176e0;
	Node0xf17690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%340:\l340:                                              \l  %341 = load i64, i64* @max_records, align 8, !dbg !1712, !tbaa !1358\l  %342 = icmp slt i64 %341, 9223372036854775807, !dbg !1713\l  br i1 %342, label %349, label %343, !dbg !1714\l|{<s0>T|<s1>F}}"];
	Node0xf17690:s0 -> Node0xf17730;
	Node0xf17690:s1 -> Node0xf176e0;
	Node0xf176e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%343:\l343:                                              \l  %344 = load i32, i32* @input_flags, align 4, !dbg !1715, !tbaa !1348\l  %345 = load i32, i32* @output_flags, align 4, !dbg !1716, !tbaa !1348\l  %346 = or i32 %344, %345, !dbg !1717\l  %347 = and i32 %346, 16384, !dbg !1718\l  %348 = icmp ne i32 %347, 0, !dbg !1714\l  br label %349, !dbg !1714\l}"];
	Node0xf176e0 -> Node0xf17730;
	Node0xf17730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%349:\l349:                                              \l  %350 = phi i1 [ true, %340 ], [ true, %334 ], [ %348, %343 ]\l  br label %351\l}"];
	Node0xf17730 -> Node0xf17780;
	Node0xf17780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%351:\l351:                                              \l  %352 = phi i1 [ false, %330 ], [ false, %326 ], [ %350, %349 ], !dbg !1719\l  %353 = zext i1 %352 to i8, !dbg !1720\l  store i8 %353, i8* @warn_partial_read, align 1, !dbg !1720, !tbaa !1368\l  %354 = load i32, i32* @input_flags, align 4, !dbg !1721, !tbaa !1348\l  %355 = and i32 %354, 1, !dbg !1722\l  %356 = icmp ne i32 %355, 0, !dbg !1723\l  %357 = zext i1 %356 to i64, !dbg !1723\l  %358 = select i1 %356, i64 (i32, i8*, i64)* @iread_fullblock, i64 (i32, i8*,\l... i64)* @iread, !dbg !1723\l  store i64 (i32, i8*, i64)* %358, i64 (i32, i8*, i64)** @iread_fnc, align 8,\l... !dbg !1724, !tbaa !1353\l  %359 = load i32, i32* @input_flags, align 4, !dbg !1725, !tbaa !1348\l  %360 = and i32 %359, -2, !dbg !1725\l  store i32 %360, i32* @input_flags, align 4, !dbg !1725, !tbaa !1348\l  %361 = load i32, i32* @conversions_mask, align 4, !dbg !1726, !tbaa !1348\l  %362 = and i32 %361, 7, !dbg !1728\l  %363 = call zeroext i1 @multiple_bits_set(i32 noundef %362), !dbg !1729\l  br i1 %363, label %364, label %365, !dbg !1730\l|{<s0>T|<s1>F}}"];
	Node0xf17780:s0 -> Node0xf177d0;
	Node0xf17780:s1 -> Node0xf17820;
	Node0xf177d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%364:\l364:                                              \l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.75, i64 0, i64\l... 0)), !dbg !1731\l  unreachable, !dbg !1731\l}"];
	Node0xf17820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%365:\l365:                                              \l  %366 = load i32, i32* @conversions_mask, align 4, !dbg !1732, !tbaa !1348\l  %367 = and i32 %366, 24, !dbg !1734\l  %368 = call zeroext i1 @multiple_bits_set(i32 noundef %367), !dbg !1735\l  br i1 %368, label %369, label %370, !dbg !1736\l|{<s0>T|<s1>F}}"];
	Node0xf17820:s0 -> Node0xf17870;
	Node0xf17820:s1 -> Node0xf178c0;
	Node0xf17870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%369:\l369:                                              \l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.76, i64 0, i64\l... 0)), !dbg !1737\l  unreachable, !dbg !1737\l}"];
	Node0xf178c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%370:\l370:                                              \l  %371 = load i32, i32* @conversions_mask, align 4, !dbg !1738, !tbaa !1348\l  %372 = and i32 %371, 96, !dbg !1740\l  %373 = call zeroext i1 @multiple_bits_set(i32 noundef %372), !dbg !1741\l  br i1 %373, label %374, label %375, !dbg !1742\l|{<s0>T|<s1>F}}"];
	Node0xf178c0:s0 -> Node0xf17910;
	Node0xf178c0:s1 -> Node0xf17960;
	Node0xf17910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%374:\l374:                                              \l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.77, i64 0, i64\l... 0)), !dbg !1743\l  unreachable, !dbg !1743\l}"];
	Node0xf17960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%375:\l375:                                              \l  %376 = load i32, i32* @conversions_mask, align 4, !dbg !1744, !tbaa !1348\l  %377 = and i32 %376, 12288, !dbg !1746\l  %378 = call zeroext i1 @multiple_bits_set(i32 noundef %377), !dbg !1747\l  br i1 %378, label %379, label %380, !dbg !1748\l|{<s0>T|<s1>F}}"];
	Node0xf17960:s0 -> Node0xf179b0;
	Node0xf17960:s1 -> Node0xf17a00;
	Node0xf179b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%379:\l379:                                              \l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.78, i64 0, i64\l... 0)), !dbg !1749\l  unreachable, !dbg !1749\l}"];
	Node0xf17a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%380:\l380:                                              \l  %381 = load i32, i32* @input_flags, align 4, !dbg !1750, !tbaa !1348\l  %382 = and i32 %381, 16386, !dbg !1752\l  %383 = call zeroext i1 @multiple_bits_set(i32 noundef %382), !dbg !1753\l  br i1 %383, label %388, label %384, !dbg !1754\l|{<s0>T|<s1>F}}"];
	Node0xf17a00:s0 -> Node0xf17aa0;
	Node0xf17a00:s1 -> Node0xf17a50;
	Node0xf17a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%384:\l384:                                              \l  %385 = load i32, i32* @output_flags, align 4, !dbg !1755, !tbaa !1348\l  %386 = and i32 %385, 16386, !dbg !1756\l  %387 = call zeroext i1 @multiple_bits_set(i32 noundef %386), !dbg !1757\l  br i1 %387, label %388, label %389, !dbg !1758\l|{<s0>T|<s1>F}}"];
	Node0xf17a50:s0 -> Node0xf17aa0;
	Node0xf17a50:s1 -> Node0xf17af0;
	Node0xf17aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%388:\l388:                                              \l  call void (i32, i32, i8*, ...) @error(i32 noundef 1, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.79, i64 0, i64\l... 0)), !dbg !1759\l  unreachable, !dbg !1759\l}"];
	Node0xf17af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%389:\l389:                                              \l  %390 = load i32, i32* @input_flags, align 4, !dbg !1760, !tbaa !1348\l  %391 = and i32 %390, 2, !dbg !1762\l  %392 = icmp ne i32 %391, 0, !dbg !1762\l  br i1 %392, label %393, label %404, !dbg !1763\l|{<s0>T|<s1>F}}"];
	Node0xf17af0:s0 -> Node0xf17b40;
	Node0xf17af0:s1 -> Node0xf17c30;
	Node0xf17b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%393:\l393:                                              \l  store i8 1, i8* @i_nocache, align 1, !dbg !1764, !tbaa !1368\l  %394 = load i64, i64* @max_records, align 8, !dbg !1766, !tbaa !1358\l  %395 = icmp eq i64 %394, 0, !dbg !1767\l  br i1 %395, label %396, label %399, !dbg !1768\l|{<s0>T|<s1>F}}"];
	Node0xf17b40:s0 -> Node0xf17b90;
	Node0xf17b40:s1 -> Node0xf17be0;
	Node0xf17b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%396:\l396:                                              \l  %397 = load i64, i64* @max_bytes, align 8, !dbg !1769, !tbaa !1358\l  %398 = icmp eq i64 %397, 0, !dbg !1770\l  br label %399\l}"];
	Node0xf17b90 -> Node0xf17be0;
	Node0xf17be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%399:\l399:                                              \l  %400 = phi i1 [ false, %393 ], [ %398, %396 ], !dbg !1771\l  %401 = zext i1 %400 to i8, !dbg !1772\l  store i8 %401, i8* @i_nocache_eof, align 1, !dbg !1772, !tbaa !1368\l  %402 = load i32, i32* @input_flags, align 4, !dbg !1773, !tbaa !1348\l  %403 = and i32 %402, -3, !dbg !1773\l  store i32 %403, i32* @input_flags, align 4, !dbg !1773, !tbaa !1348\l  br label %404, !dbg !1774\l}"];
	Node0xf17be0 -> Node0xf17c30;
	Node0xf17c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%404:\l404:                                              \l  %405 = load i32, i32* @output_flags, align 4, !dbg !1775, !tbaa !1348\l  %406 = and i32 %405, 2, !dbg !1777\l  %407 = icmp ne i32 %406, 0, !dbg !1777\l  br i1 %407, label %408, label %419, !dbg !1778\l|{<s0>T|<s1>F}}"];
	Node0xf17c30:s0 -> Node0xf17c80;
	Node0xf17c30:s1 -> Node0xf17d70;
	Node0xf17c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%408:\l408:                                              \l  store i8 1, i8* @o_nocache, align 1, !dbg !1779, !tbaa !1368\l  %409 = load i64, i64* @max_records, align 8, !dbg !1781, !tbaa !1358\l  %410 = icmp eq i64 %409, 0, !dbg !1782\l  br i1 %410, label %411, label %414, !dbg !1783\l|{<s0>T|<s1>F}}"];
	Node0xf17c80:s0 -> Node0xf17cd0;
	Node0xf17c80:s1 -> Node0xf17d20;
	Node0xf17cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%411:\l411:                                              \l  %412 = load i64, i64* @max_bytes, align 8, !dbg !1784, !tbaa !1358\l  %413 = icmp eq i64 %412, 0, !dbg !1785\l  br label %414\l}"];
	Node0xf17cd0 -> Node0xf17d20;
	Node0xf17d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%414:\l414:                                              \l  %415 = phi i1 [ false, %408 ], [ %413, %411 ], !dbg !1786\l  %416 = zext i1 %415 to i8, !dbg !1787\l  store i8 %416, i8* @o_nocache_eof, align 1, !dbg !1787, !tbaa !1368\l  %417 = load i32, i32* @output_flags, align 4, !dbg !1788, !tbaa !1348\l  %418 = and i32 %417, -3, !dbg !1788\l  store i32 %418, i32* @output_flags, align 4, !dbg !1788, !tbaa !1348\l  br label %419, !dbg !1789\l}"];
	Node0xf17d20 -> Node0xf17d70;
	Node0xf17d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%419:\l419:                                              \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #26, !dbg !1790\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #26, !dbg !1790\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #26, !dbg !1790\l  %420 = bitcast i64* %8 to i8*, !dbg !1790\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %420) #26, !dbg !1790\l  %421 = bitcast i64* %7 to i8*, !dbg !1790\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %421) #26, !dbg !1790\l  %422 = bitcast i64* %6 to i8*, !dbg !1790\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %422) #26, !dbg !1790\l  %423 = bitcast i64* %5 to i8*, !dbg !1790\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %423) #26, !dbg !1790\l  ret void, !dbg !1790\l}"];
}
