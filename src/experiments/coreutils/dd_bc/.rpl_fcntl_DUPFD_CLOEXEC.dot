digraph "CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function" {
	label="CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function";

	Node0x100fc30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4, !tbaa !1313\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !401, metadata\l... !DIExpression()), !dbg !1317\l  store i32 %1, i32* %4, align 4, !tbaa !1313\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !402, metadata\l... !DIExpression()), !dbg !1318\l  %8 = bitcast i32* %5 to i8*, !dbg !1319\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #26, !dbg !1319\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !403, metadata\l... !DIExpression()), !dbg !1320\l  %9 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1321, !tbaa !1313\l  %10 = icmp sle i32 0, %9, !dbg !1323\l  br i1 %10, label %11, label %31, !dbg !1324\l|{<s0>T|<s1>F}}"];
	Node0x100fc30:s0 -> Node0x1010e70;
	Node0x100fc30:s1 -> Node0x10110a0;
	Node0x1010e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%11:\l11:                                               \l  %12 = load i32, i32* %3, align 4, !dbg !1325, !tbaa !1313\l  %13 = load i32, i32* %4, align 4, !dbg !1327, !tbaa !1313\l  %14 = call i32 (i32, i32, ...) @fcntl(i32 noundef %12, i32 noundef 1030, i32\l... noundef %13), !dbg !1328\l  store i32 %14, i32* %5, align 4, !dbg !1329, !tbaa !1313\l  %15 = load i32, i32* %5, align 4, !dbg !1330, !tbaa !1313\l  %16 = icmp sle i32 0, %15, !dbg !1332\l  br i1 %16, label %21, label %17, !dbg !1333\l|{<s0>T|<s1>F}}"];
	Node0x1010e70:s0 -> Node0x1010f10;
	Node0x1010e70:s1 -> Node0x1010ec0;
	Node0x1010ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%17:\l17:                                               \l  %18 = call i32* @__errno_location() #27, !dbg !1334\l  %19 = load i32, i32* %18, align 4, !dbg !1334, !tbaa !1313\l  %20 = icmp ne i32 %19, 22, !dbg !1335\l  br i1 %20, label %21, label %22, !dbg !1336\l|{<s0>T|<s1>F}}"];
	Node0x1010ec0:s0 -> Node0x1010f10;
	Node0x1010ec0:s1 -> Node0x1010f60;
	Node0x1010f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%21:\l21:                                               \l  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg\l... !1337, !tbaa !1313\l  br label %30, !dbg !1339\l}"];
	Node0x1010f10 -> Node0x1011050;
	Node0x1010f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%22:\l22:                                               \l  %23 = load i32, i32* %3, align 4, !dbg !1340, !tbaa !1313\l  %24 = load i32, i32* %4, align 4, !dbg !1342, !tbaa !1313\l  %25 = call i32 @rpl_fcntl_DUPFD(i32 noundef %23, i32 noundef %24), !dbg !1343\l  store i32 %25, i32* %5, align 4, !dbg !1344, !tbaa !1313\l  %26 = load i32, i32* %5, align 4, !dbg !1345, !tbaa !1313\l  %27 = icmp sge i32 %26, 0, !dbg !1347\l  br i1 %27, label %28, label %29, !dbg !1348\l|{<s0>T|<s1>F}}"];
	Node0x1010f60:s0 -> Node0x1010fb0;
	Node0x1010f60:s1 -> Node0x1011000;
	Node0x1010fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%28:\l28:                                               \l  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1349, !tbaa !1313\l  br label %29, !dbg !1350\l}"];
	Node0x1010fb0 -> Node0x1011000;
	Node0x1011000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%29:\l29:                                               \l  br label %30\l}"];
	Node0x1011000 -> Node0x1011050;
	Node0x1011050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%30:\l30:                                               \l  br label %35, !dbg !1351\l}"];
	Node0x1011050 -> Node0x10110f0;
	Node0x10110a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%31:\l31:                                               \l  %32 = load i32, i32* %3, align 4, !dbg !1352, !tbaa !1313\l  %33 = load i32, i32* %4, align 4, !dbg !1353, !tbaa !1313\l  %34 = call i32 @rpl_fcntl_DUPFD(i32 noundef %32, i32 noundef %33), !dbg !1354\l  store i32 %34, i32* %5, align 4, !dbg !1355, !tbaa !1313\l  br label %35\l}"];
	Node0x10110a0 -> Node0x10110f0;
	Node0x10110f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = load i32, i32* %5, align 4, !dbg !1356, !tbaa !1313\l  %37 = icmp sle i32 0, %36, !dbg !1357\l  br i1 %37, label %38, label %64, !dbg !1358\l|{<s0>T|<s1>F}}"];
	Node0x10110f0:s0 -> Node0x1011140;
	Node0x10110f0:s1 -> Node0x10112d0;
	Node0x1011140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%38:\l38:                                               \l  %39 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1359, !tbaa !1313\l  %40 = icmp eq i32 %39, -1, !dbg !1360\l  br i1 %40, label %41, label %64, !dbg !1361\l|{<s0>T|<s1>F}}"];
	Node0x1011140:s0 -> Node0x1011190;
	Node0x1011140:s1 -> Node0x10112d0;
	Node0x1011190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = bitcast i32* %6 to i8*, !dbg !1362\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #26, !dbg !1362\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !404, metadata\l... !DIExpression()), !dbg !1363\l  %43 = load i32, i32* %5, align 4, !dbg !1364, !tbaa !1313\l  %44 = call i32 (i32, i32, ...) @fcntl(i32 noundef %43, i32 noundef 1), !dbg\l... !1365\l  store i32 %44, i32* %6, align 4, !dbg !1363, !tbaa !1313\l  %45 = load i32, i32* %6, align 4, !dbg !1366, !tbaa !1313\l  %46 = icmp slt i32 %45, 0, !dbg !1367\l  br i1 %46, label %53, label %47, !dbg !1368\l|{<s0>T|<s1>F}}"];
	Node0x1011190:s0 -> Node0x1011230;
	Node0x1011190:s1 -> Node0x10111e0;
	Node0x10111e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%47:\l47:                                               \l  %48 = load i32, i32* %5, align 4, !dbg !1369, !tbaa !1313\l  %49 = load i32, i32* %6, align 4, !dbg !1370, !tbaa !1313\l  %50 = or i32 %49, 1, !dbg !1371\l  %51 = call i32 (i32, i32, ...) @fcntl(i32 noundef %48, i32 noundef 2, i32\l... noundef %50), !dbg !1372\l  %52 = icmp eq i32 %51, -1, !dbg !1373\l  br i1 %52, label %53, label %62, !dbg !1374\l|{<s0>T|<s1>F}}"];
	Node0x10111e0:s0 -> Node0x1011230;
	Node0x10111e0:s1 -> Node0x1011280;
	Node0x1011230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%53:\l53:                                               \l  %54 = bitcast i32* %7 to i8*, !dbg !1375\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #26, !dbg !1375\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !407, metadata\l... !DIExpression()), !dbg !1376\l  %55 = call i32* @__errno_location() #27, !dbg !1377\l  %56 = load i32, i32* %55, align 4, !dbg !1377, !tbaa !1313\l  store i32 %56, i32* %7, align 4, !dbg !1376, !tbaa !1313\l  %57 = load i32, i32* %5, align 4, !dbg !1378, !tbaa !1313\l  %58 = call i32 @close(i32 noundef %57), !dbg !1379\l  %59 = load i32, i32* %7, align 4, !dbg !1380, !tbaa !1313\l  %60 = call i32* @__errno_location() #27, !dbg !1381\l  store i32 %59, i32* %60, align 4, !dbg !1382, !tbaa !1313\l  store i32 -1, i32* %5, align 4, !dbg !1383, !tbaa !1313\l  %61 = bitcast i32* %7 to i8*, !dbg !1384\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #26, !dbg !1384\l  br label %62, !dbg !1385\l}"];
	Node0x1011230 -> Node0x1011280;
	Node0x1011280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%62:\l62:                                               \l  %63 = bitcast i32* %6 to i8*, !dbg !1386\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %63) #26, !dbg !1386\l  br label %64, !dbg !1387\l}"];
	Node0x1011280 -> Node0x10112d0;
	Node0x10112d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = load i32, i32* %5, align 4, !dbg !1388, !tbaa !1313\l  %66 = bitcast i32* %5 to i8*, !dbg !1389\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #26, !dbg !1389\l  ret i32 %65, !dbg !1390\l}"];
}
