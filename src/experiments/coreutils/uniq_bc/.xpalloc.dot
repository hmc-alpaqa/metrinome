digraph "CFG for 'xpalloc' function" {
	label="CFG for 'xpalloc' function";

	Node0x18c9a90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = alloca i8*, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  store i8* %0, i8** %6, align 8, !tbaa !746\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !311, metadata\l... !DIExpression()), !dbg !750\l  store i64* %1, i64** %7, align 8, !tbaa !746\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !312, metadata\l... !DIExpression()), !dbg !751\l  store i64 %2, i64* %8, align 8, !tbaa !752\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !313, metadata\l... !DIExpression()), !dbg !754\l  store i64 %3, i64* %9, align 8, !tbaa !752\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !314, metadata\l... !DIExpression()), !dbg !755\l  store i64 %4, i64* %10, align 8, !tbaa !752\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !315, metadata\l... !DIExpression()), !dbg !756\l  %15 = bitcast i64* %11 to i8*, !dbg !757\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #21, !dbg !757\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !316, metadata\l... !DIExpression()), !dbg !758\l  %16 = load i64*, i64** %7, align 8, !dbg !759, !tbaa !746\l  %17 = load i64, i64* %16, align 8, !dbg !760, !tbaa !752\l  store i64 %17, i64* %11, align 8, !dbg !758, !tbaa !752\l  %18 = bitcast i64* %12 to i8*, !dbg !761\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #21, !dbg !761\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !317, metadata\l... !DIExpression()), !dbg !762\l  %19 = load i64, i64* %11, align 8, !dbg !763, !tbaa !752\l  %20 = load i64, i64* %11, align 8, !dbg !763, !tbaa !752\l  %21 = ashr i64 %20, 1, !dbg !763\l  %22 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %19, i64 %21), !dbg\l... !763\l  %23 = extractvalue \{ i64, i1 \} %22, 1, !dbg !763\l  %24 = extractvalue \{ i64, i1 \} %22, 0, !dbg !763\l  store i64 %24, i64* %12, align 8, !dbg !763\l  br i1 %23, label %25, label %26, !dbg !765\l|{<s0>T|<s1>F}}"];
	Node0x18c9a90:s0 -> Node0x18cd3d0;
	Node0x18c9a90:s1 -> Node0x18cd4c0;
	Node0x18cd3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%25:\l25:                                               \l  store i64 9223372036854775807, i64* %12, align 8, !dbg !766, !tbaa !752\l  br label %26, !dbg !767\l}"];
	Node0x18cd3d0 -> Node0x18cd4c0;
	Node0x18cd4c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i64, i64* %9, align 8, !dbg !768, !tbaa !752\l  %28 = icmp sle i64 0, %27, !dbg !770\l  br i1 %28, label %29, label %35, !dbg !771\l|{<s0>T|<s1>F}}"];
	Node0x18cd4c0:s0 -> Node0x18cd510;
	Node0x18cd4c0:s1 -> Node0x18cd5b0;
	Node0x18cd510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%29:\l29:                                               \l  %30 = load i64, i64* %9, align 8, !dbg !772, !tbaa !752\l  %31 = load i64, i64* %12, align 8, !dbg !773, !tbaa !752\l  %32 = icmp slt i64 %30, %31, !dbg !774\l  br i1 %32, label %33, label %35, !dbg !775\l|{<s0>T|<s1>F}}"];
	Node0x18cd510:s0 -> Node0x18cd560;
	Node0x18cd510:s1 -> Node0x18cd5b0;
	Node0x18cd560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%33:\l33:                                               \l  %34 = load i64, i64* %9, align 8, !dbg !776, !tbaa !752\l  store i64 %34, i64* %12, align 8, !dbg !777, !tbaa !752\l  br label %35, !dbg !778\l}"];
	Node0x18cd560 -> Node0x18cd5b0;
	Node0x18cd5b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = bitcast i64* %13 to i8*, !dbg !779\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #21, !dbg !779\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !318, metadata\l... !DIExpression()), !dbg !780\l  %37 = bitcast i64* %14 to i8*, !dbg !781\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #21, !dbg !781\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !319, metadata\l... !DIExpression()), !dbg !782\l  %38 = load i64, i64* %12, align 8, !dbg !783, !tbaa !752\l  %39 = load i64, i64* %10, align 8, !dbg !783, !tbaa !752\l  %40 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %38, i64 %39), !dbg\l... !783\l  %41 = extractvalue \{ i64, i1 \} %40, 1, !dbg !783\l  %42 = extractvalue \{ i64, i1 \} %40, 0, !dbg !783\l  store i64 %42, i64* %13, align 8, !dbg !783\l  br i1 %41, label %43, label %44, !dbg !783\l|{<s0>T|<s1>F}}"];
	Node0x18cd5b0:s0 -> Node0x18cd600;
	Node0x18cd5b0:s1 -> Node0x18cd650;
	Node0x18cd600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%43:\l43:                                               \l  br label %50, !dbg !783\l}"];
	Node0x18cd600 -> Node0x18cd6a0;
	Node0x18cd650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%44:\l44:                                               \l  %45 = load i64, i64* %13, align 8, !dbg !784, !tbaa !752\l  %46 = icmp slt i64 %45, 128, !dbg !785\l  %47 = zext i1 %46 to i64, !dbg !784\l  %48 = select i1 %46, i32 128, i32 0, !dbg !784\l  %49 = sext i32 %48 to i64, !dbg !784\l  br label %50, !dbg !783\l}"];
	Node0x18cd650 -> Node0x18cd6a0;
	Node0x18cd6a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i64 [ 9223372036854775807, %43 ], [ %49, %44 ], !dbg !783\l  store i64 %51, i64* %14, align 8, !dbg !782, !tbaa !752\l  %52 = load i64, i64* %14, align 8, !dbg !786, !tbaa !752\l  %53 = icmp ne i64 %52, 0, !dbg !786\l  br i1 %53, label %54, label %63, !dbg !788\l|{<s0>T|<s1>F}}"];
	Node0x18cd6a0:s0 -> Node0x18cd6f0;
	Node0x18cd6a0:s1 -> Node0x18cd740;
	Node0x18cd6f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%54:\l54:                                               \l  %55 = load i64, i64* %14, align 8, !dbg !789, !tbaa !752\l  %56 = load i64, i64* %10, align 8, !dbg !791, !tbaa !752\l  %57 = sdiv i64 %55, %56, !dbg !792\l  store i64 %57, i64* %12, align 8, !dbg !793, !tbaa !752\l  %58 = load i64, i64* %14, align 8, !dbg !794, !tbaa !752\l  %59 = load i64, i64* %14, align 8, !dbg !795, !tbaa !752\l  %60 = load i64, i64* %10, align 8, !dbg !796, !tbaa !752\l  %61 = srem i64 %59, %60, !dbg !797\l  %62 = sub nsw i64 %58, %61, !dbg !798\l  store i64 %62, i64* %13, align 8, !dbg !799, !tbaa !752\l  br label %63, !dbg !800\l}"];
	Node0x18cd6f0 -> Node0x18cd740;
	Node0x18cd740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = load i8*, i8** %6, align 8, !dbg !801, !tbaa !746\l  %65 = icmp ne i8* %64, null, !dbg !801\l  br i1 %65, label %68, label %66, !dbg !803\l|{<s0>T|<s1>F}}"];
	Node0x18cd740:s0 -> Node0x18cd7e0;
	Node0x18cd740:s1 -> Node0x18cd790;
	Node0x18cd790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%66:\l66:                                               \l  %67 = load i64*, i64** %7, align 8, !dbg !804, !tbaa !746\l  store i64 0, i64* %67, align 8, !dbg !805, !tbaa !752\l  br label %68, !dbg !806\l}"];
	Node0x18cd790 -> Node0x18cd7e0;
	Node0x18cd7e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = load i64, i64* %12, align 8, !dbg !807, !tbaa !752\l  %70 = load i64, i64* %11, align 8, !dbg !809, !tbaa !752\l  %71 = sub nsw i64 %69, %70, !dbg !810\l  %72 = load i64, i64* %8, align 8, !dbg !811, !tbaa !752\l  %73 = icmp slt i64 %71, %72, !dbg !812\l  br i1 %73, label %74, label %94, !dbg !813\l|{<s0>T|<s1>F}}"];
	Node0x18cd7e0:s0 -> Node0x18cd830;
	Node0x18cd7e0:s1 -> Node0x18cd9c0;
	Node0x18cd830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%74:\l74:                                               \l  %75 = load i64, i64* %11, align 8, !dbg !814, !tbaa !752\l  %76 = load i64, i64* %8, align 8, !dbg !814, !tbaa !752\l  %77 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %75, i64 %76), !dbg\l... !814\l  %78 = extractvalue \{ i64, i1 \} %77, 1, !dbg !814\l  %79 = extractvalue \{ i64, i1 \} %77, 0, !dbg !814\l  store i64 %79, i64* %12, align 8, !dbg !814\l  br i1 %78, label %93, label %80, !dbg !815\l|{<s0>T|<s1>F}}"];
	Node0x18cd830:s0 -> Node0x18cd970;
	Node0x18cd830:s1 -> Node0x18cd880;
	Node0x18cd880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%80:\l80:                                               \l  %81 = load i64, i64* %9, align 8, !dbg !816, !tbaa !752\l  %82 = icmp sle i64 0, %81, !dbg !817\l  br i1 %82, label %83, label %87, !dbg !818\l|{<s0>T|<s1>F}}"];
	Node0x18cd880:s0 -> Node0x18cd8d0;
	Node0x18cd880:s1 -> Node0x18cd920;
	Node0x18cd8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%83:\l83:                                               \l  %84 = load i64, i64* %9, align 8, !dbg !819, !tbaa !752\l  %85 = load i64, i64* %12, align 8, !dbg !820, !tbaa !752\l  %86 = icmp slt i64 %84, %85, !dbg !821\l  br i1 %86, label %93, label %87, !dbg !822\l|{<s0>T|<s1>F}}"];
	Node0x18cd8d0:s0 -> Node0x18cd970;
	Node0x18cd8d0:s1 -> Node0x18cd920;
	Node0x18cd920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%87:\l87:                                               \l  %88 = load i64, i64* %12, align 8, !dbg !823, !tbaa !752\l  %89 = load i64, i64* %10, align 8, !dbg !823, !tbaa !752\l  %90 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %88, i64 %89), !dbg\l... !823\l  %91 = extractvalue \{ i64, i1 \} %90, 1, !dbg !823\l  %92 = extractvalue \{ i64, i1 \} %90, 0, !dbg !823\l  store i64 %92, i64* %13, align 8, !dbg !823\l  br i1 %91, label %93, label %94, !dbg !824\l|{<s0>T|<s1>F}}"];
	Node0x18cd920:s0 -> Node0x18cd970;
	Node0x18cd920:s1 -> Node0x18cd9c0;
	Node0x18cd970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%93:\l93:                                               \l  call void @xalloc_die() #22, !dbg !825\l  unreachable, !dbg !825\l}"];
	Node0x18cd9c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  %95 = load i8*, i8** %6, align 8, !dbg !826, !tbaa !746\l  %96 = load i64, i64* %13, align 8, !dbg !827, !tbaa !752\l  %97 = call i8* @xrealloc(i8* noundef %95, i64 noundef %96) #23, !dbg !828\l  store i8* %97, i8** %6, align 8, !dbg !829, !tbaa !746\l  %98 = load i64, i64* %12, align 8, !dbg !830, !tbaa !752\l  %99 = load i64*, i64** %7, align 8, !dbg !831, !tbaa !746\l  store i64 %98, i64* %99, align 8, !dbg !832, !tbaa !752\l  %100 = load i8*, i8** %6, align 8, !dbg !833, !tbaa !746\l  %101 = bitcast i64* %14 to i8*, !dbg !834\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #21, !dbg !834\l  %102 = bitcast i64* %13 to i8*, !dbg !834\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #21, !dbg !834\l  %103 = bitcast i64* %12 to i8*, !dbg !834\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #21, !dbg !834\l  %104 = bitcast i64* %11 to i8*, !dbg !834\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %104) #21, !dbg !834\l  ret i8* %100, !dbg !835\l}"];
}
