digraph "CFG for 'is_prime' function" {
	label="CFG for 'is_prime' function";

	Node0x194bfd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%1:\l  %2 = alloca i64, align 8\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  store i64 %0, i64* %2, align 8, !tbaa !725\l  call void @llvm.dbg.declare(metadata i64* %2, metadata !722, metadata\l... !DIExpression()), !dbg !729\l  %5 = bitcast i64* %3 to i8*, !dbg !730\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #24, !dbg !730\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !723, metadata\l... !DIExpression()), !dbg !731\l  store i64 3, i64* %3, align 8, !dbg !731, !tbaa !725\l  %6 = bitcast i64* %4 to i8*, !dbg !732\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #24, !dbg !732\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !724, metadata\l... !DIExpression()), !dbg !733\l  %7 = load i64, i64* %3, align 8, !dbg !734, !tbaa !725\l  %8 = load i64, i64* %3, align 8, !dbg !735, !tbaa !725\l  %9 = mul i64 %7, %8, !dbg !736\l  store i64 %9, i64* %4, align 8, !dbg !733, !tbaa !725\l  br label %10, !dbg !737\l}"];
	Node0x194bfd0 -> Node0x194d7b0;
	Node0x194d7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l10:                                               \l  %11 = load i64, i64* %4, align 8, !dbg !738, !tbaa !725\l  %12 = load i64, i64* %2, align 8, !dbg !739, !tbaa !725\l  %13 = icmp ult i64 %11, %12, !dbg !740\l  br i1 %13, label %14, label %19, !dbg !741\l|{<s0>T|<s1>F}}"];
	Node0x194d7b0:s0 -> Node0x194d840;
	Node0x194d7b0:s1 -> Node0x194d890;
	Node0x194d840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%14:\l14:                                               \l  %15 = load i64, i64* %2, align 8, !dbg !742, !tbaa !725\l  %16 = load i64, i64* %3, align 8, !dbg !743, !tbaa !725\l  %17 = urem i64 %15, %16, !dbg !744\l  %18 = icmp ne i64 %17, 0, !dbg !741\l  br label %19\l}"];
	Node0x194d840 -> Node0x194d890;
	Node0x194d890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = phi i1 [ false, %10 ], [ %18, %14 ], !dbg !745\l  br i1 %20, label %21, label %30, !dbg !737\l|{<s0>T|<s1>F}}"];
	Node0x194d890:s0 -> Node0x194d8e0;
	Node0x194d890:s1 -> Node0x194d930;
	Node0x194d8e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%21:\l21:                                               \l  %22 = load i64, i64* %3, align 8, !dbg !746, !tbaa !725\l  %23 = add i64 %22, 1, !dbg !746\l  store i64 %23, i64* %3, align 8, !dbg !746, !tbaa !725\l  %24 = load i64, i64* %3, align 8, !dbg !748, !tbaa !725\l  %25 = mul i64 4, %24, !dbg !749\l  %26 = load i64, i64* %4, align 8, !dbg !750, !tbaa !725\l  %27 = add i64 %26, %25, !dbg !750\l  store i64 %27, i64* %4, align 8, !dbg !750, !tbaa !725\l  %28 = load i64, i64* %3, align 8, !dbg !751, !tbaa !725\l  %29 = add i64 %28, 1, !dbg !751\l  store i64 %29, i64* %3, align 8, !dbg !751, !tbaa !725\l  br label %10, !dbg !737, !llvm.loop !752\l}"];
	Node0x194d8e0 -> Node0x194d7b0;
	Node0x194d930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%30:\l30:                                               \l  %31 = load i64, i64* %2, align 8, !dbg !756, !tbaa !725\l  %32 = load i64, i64* %3, align 8, !dbg !757, !tbaa !725\l  %33 = urem i64 %31, %32, !dbg !758\l  %34 = icmp ne i64 %33, 0, !dbg !756\l  %35 = zext i1 %34 to i64, !dbg !756\l  %36 = select i1 %34, i32 1, i32 0, !dbg !756\l  %37 = icmp ne i32 %36, 0, !dbg !759\l  %38 = bitcast i64* %4 to i8*, !dbg !760\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #24, !dbg !760\l  %39 = bitcast i64* %3 to i8*, !dbg !760\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #24, !dbg !760\l  ret i1 %37, !dbg !761\l}"];
}
