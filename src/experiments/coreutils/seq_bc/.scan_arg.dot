digraph "CFG for 'scan_arg' function" {
	label="CFG for 'scan_arg' function";

	Node0xb7b580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i64, align 8\l  store i8* %1, i8** %3, align 8, !tbaa !999\l  call void @llvm.dbg.declare(metadata i8** %3, metadata !989, metadata\l... !DIExpression()), !dbg !1003\l  call void @llvm.dbg.declare(metadata %struct.operand* %0, metadata !990,\l... metadata !DIExpression()), !dbg !1004\l  %8 = load i8*, i8** %3, align 8, !dbg !1005, !tbaa !999\l  %9 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0, i32\l... 0, !dbg !1007\l  %10 = call zeroext i1 @xstrtold(i8* noundef %8, i8** noundef null, x86_fp80*\l... noundef %9, x86_fp80 (i8*, i8**)* noundef @cl_strtold), !dbg !1008\l  br i1 %10, label %14, label %11, !dbg !1009\l|{<s0>T|<s1>F}}"];
	Node0xb7b580:s0 -> Node0xb580d0;
	Node0xb7b580:s1 -> Node0xb58080;
	Node0xb58080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%11:\l11:                                               \l  %12 = load i8*, i8** %3, align 8, !dbg !1010, !tbaa !999\l  %13 = call i8* @quote(i8* noundef %12), !dbg !1010\l  call void (i32, i32, i8*, ...) @error(i32 noundef 0, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.52, i64 0, i64\l... 0), i8* noundef %13), !dbg !1010\l  call void @usage(i32 noundef 1) #22, !dbg !1012\l  unreachable, !dbg !1012\l}"];
	Node0xb580d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%14:\l14:                                               \l  %15 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 0, !dbg !1013\l  %16 = load x86_fp80, x86_fp80* %15, align 16, !dbg !1013, !tbaa !1015\l  %17 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 0, !dbg !1013\l  %18 = load x86_fp80, x86_fp80* %17, align 16, !dbg !1013, !tbaa !1015\l  %19 = fcmp une x86_fp80 %16, %18, !dbg !1013\l  br i1 %19, label %20, label %24, !dbg !1020\l|{<s0>T|<s1>F}}"];
	Node0xb580d0:s0 -> Node0xb58120;
	Node0xb580d0:s1 -> Node0xb58170;
	Node0xb58120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%20:\l20:                                               \l  %21 = call i8* @quote_n(i32 noundef 0, i8* noundef getelementptr inbounds\l... ([13 x i8], [13 x i8]* @.str.54, i64 0, i64 0)), !dbg !1021\l  %22 = load i8*, i8** %3, align 8, !dbg !1021, !tbaa !999\l  %23 = call i8* @quote_n(i32 noundef 1, i8* noundef %22), !dbg !1021\l  call void (i32, i32, i8*, ...) @error(i32 noundef 0, i32 noundef 0, i8*\l... noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.53, i64 0, i64\l... 0), i8* noundef %21, i8* noundef %23), !dbg !1021\l  call void @usage(i32 noundef 1) #22, !dbg !1023\l  unreachable, !dbg !1023\l}"];
	Node0xb58170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%24:\l24:                                               \l  br label %25, !dbg !1024\l}"];
	Node0xb58170 -> Node0xb581c0;
	Node0xb581c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = call i16** @__ctype_b_loc() #23, !dbg !1025\l  %27 = load i16*, i16** %26, align 8, !dbg !1025, !tbaa !999\l  %28 = load i8*, i8** %3, align 8, !dbg !1025, !tbaa !999\l  %29 = load i8, i8* %28, align 1, !dbg !1025, !tbaa !1026\l  %30 = call zeroext i8 @to_uchar(i8 noundef signext %29), !dbg !1025\l  %31 = zext i8 %30 to i32, !dbg !1025\l  %32 = sext i32 %31 to i64, !dbg !1025\l  %33 = getelementptr inbounds i16, i16* %27, i64 %32, !dbg !1025\l  %34 = load i16, i16* %33, align 2, !dbg !1025, !tbaa !1027\l  %35 = zext i16 %34 to i32, !dbg !1025\l  %36 = and i32 %35, 8192, !dbg !1025\l  %37 = icmp ne i32 %36, 0, !dbg !1025\l  br i1 %37, label %43, label %38, !dbg !1029\l|{<s0>T|<s1>F}}"];
	Node0xb581c0:s0 -> Node0xb58260;
	Node0xb581c0:s1 -> Node0xb58210;
	Node0xb58210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%38:\l38:                                               \l  %39 = load i8*, i8** %3, align 8, !dbg !1030, !tbaa !999\l  %40 = load i8, i8* %39, align 1, !dbg !1031, !tbaa !1026\l  %41 = sext i8 %40 to i32, !dbg !1031\l  %42 = icmp eq i32 %41, 43, !dbg !1032\l  br label %43, !dbg !1029\l}"];
	Node0xb58210 -> Node0xb58260;
	Node0xb58260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi i1 [ true, %25 ], [ %42, %38 ]\l  br i1 %44, label %45, label %48, !dbg !1024\l|{<s0>T|<s1>F}}"];
	Node0xb58260:s0 -> Node0xb582b0;
	Node0xb58260:s1 -> Node0xb58300;
	Node0xb582b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = load i8*, i8** %3, align 8, !dbg !1033, !tbaa !999\l  %47 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !1033\l  store i8* %47, i8** %3, align 8, !dbg !1033, !tbaa !999\l  br label %25, !dbg !1024, !llvm.loop !1034\l}"];
	Node0xb582b0 -> Node0xb581c0;
	Node0xb58300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%48:\l48:                                               \l  %49 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 1, !dbg !1037\l  store i64 0, i64* %49, align 16, !dbg !1038, !tbaa !1039\l  %50 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 2, !dbg !1040\l  store i32 2147483647, i32* %50, align 8, !dbg !1041, !tbaa !1042\l  %51 = bitcast i8** %4 to i8*, !dbg !1043\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #24, !dbg !1043\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !991, metadata\l... !DIExpression()), !dbg !1044\l  %52 = load i8*, i8** %3, align 8, !dbg !1045, !tbaa !999\l  %53 = call i8* @strchr(i8* noundef %52, i32 noundef 46) #25, !dbg !1046\l  store i8* %53, i8** %4, align 8, !dbg !1044, !tbaa !999\l  %54 = load i8*, i8** %4, align 8, !dbg !1047, !tbaa !999\l  %55 = icmp ne i8* %54, null, !dbg !1047\l  br i1 %55, label %62, label %56, !dbg !1049\l|{<s0>T|<s1>F}}"];
	Node0xb58300:s0 -> Node0xb583f0;
	Node0xb58300:s1 -> Node0xb58350;
	Node0xb58350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%56:\l56:                                               \l  %57 = load i8*, i8** %3, align 8, !dbg !1050, !tbaa !999\l  %58 = call i8* @strchr(i8* noundef %57, i32 noundef 112) #25, !dbg !1051\l  %59 = icmp ne i8* %58, null, !dbg !1051\l  br i1 %59, label %62, label %60, !dbg !1052\l|{<s0>T|<s1>F}}"];
	Node0xb58350:s0 -> Node0xb583f0;
	Node0xb58350:s1 -> Node0xb583a0;
	Node0xb583a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%60:\l60:                                               \l  %61 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 2, !dbg !1053\l  store i32 0, i32* %61, align 8, !dbg !1054, !tbaa !1042\l  br label %62, !dbg !1055\l}"];
	Node0xb583a0 -> Node0xb583f0;
	Node0xb583f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%62:\l62:                                               \l  %63 = load i8*, i8** %3, align 8, !dbg !1056, !tbaa !999\l  %64 = load i8*, i8** %3, align 8, !dbg !1057, !tbaa !999\l  %65 = call i64 @strcspn(i8* noundef %64, i8* noundef getelementptr inbounds\l... ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #25, !dbg !1058\l  %66 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !1056\l  %67 = load i8, i8* %66, align 1, !dbg !1056, !tbaa !1026\l  %68 = icmp ne i8 %67, 0, !dbg !1056\l  br i1 %68, label %236, label %69, !dbg !1059\l|{<s0>T|<s1>F}}"];
	Node0xb583f0:s0 -> Node0xb59070;
	Node0xb583f0:s1 -> Node0xb58440;
	Node0xb58440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%69:\l69:                                               \l  %70 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 0, !dbg !1060\l  %71 = load x86_fp80, x86_fp80* %70, align 16, !dbg !1060, !tbaa !1015\l  %72 = fmul x86_fp80 %71, 0xK00000000000000000000, !dbg !1060\l  %73 = fcmp oeq x86_fp80 %72, 0xK00000000000000000000, !dbg !1060\l  br i1 %73, label %74, label %236, !dbg !1061\l|{<s0>T|<s1>F}}"];
	Node0xb58440:s0 -> Node0xb58490;
	Node0xb58440:s1 -> Node0xb59070;
	Node0xb58490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%74:\l74:                                               \l  %75 = bitcast i64* %5 to i8*, !dbg !1062\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %75) #24, !dbg !1062\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !992, metadata\l... !DIExpression()), !dbg !1063\l  store i64 0, i64* %5, align 8, !dbg !1063, !tbaa !1064\l  %76 = load i8*, i8** %3, align 8, !dbg !1065, !tbaa !999\l  %77 = call i64 @strlen(i8* noundef %76) #25, !dbg !1066\l  %78 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 1, !dbg !1067\l  store i64 %77, i64* %78, align 16, !dbg !1068, !tbaa !1039\l  %79 = load i8*, i8** %4, align 8, !dbg !1069, !tbaa !999\l  %80 = icmp ne i8* %79, null, !dbg !1069\l  br i1 %80, label %81, label %116, !dbg !1071\l|{<s0>T|<s1>F}}"];
	Node0xb58490:s0 -> Node0xb584e0;
	Node0xb58490:s1 -> Node0xb58760;
	Node0xb584e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%81:\l81:                                               \l  %82 = load i8*, i8** %4, align 8, !dbg !1072, !tbaa !999\l  %83 = getelementptr inbounds i8, i8* %82, i64 1, !dbg !1074\l  %84 = call i64 @strcspn(i8* noundef %83, i8* noundef getelementptr inbounds\l... ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)) #25, !dbg !1075\l  store i64 %84, i64* %5, align 8, !dbg !1076, !tbaa !1064\l  %85 = load i64, i64* %5, align 8, !dbg !1077, !tbaa !1064\l  %86 = icmp ule i64 %85, 2147483647, !dbg !1079\l  br i1 %86, label %87, label %91, !dbg !1080\l|{<s0>T|<s1>F}}"];
	Node0xb584e0:s0 -> Node0xb58530;
	Node0xb584e0:s1 -> Node0xb58580;
	Node0xb58530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%87:\l87:                                               \l  %88 = load i64, i64* %5, align 8, !dbg !1081, !tbaa !1064\l  %89 = trunc i64 %88 to i32, !dbg !1081\l  %90 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 2, !dbg !1082\l  store i32 %89, i32* %90, align 8, !dbg !1083, !tbaa !1042\l  br label %91, !dbg !1084\l}"];
	Node0xb58530 -> Node0xb58580;
	Node0xb58580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%91:\l91:                                               \l  %92 = load i64, i64* %5, align 8, !dbg !1085, !tbaa !1064\l  %93 = icmp eq i64 %92, 0, !dbg !1086\l  br i1 %93, label %94, label %95, !dbg !1085\l|{<s0>T|<s1>F}}"];
	Node0xb58580:s0 -> Node0xb585d0;
	Node0xb58580:s1 -> Node0xb58620;
	Node0xb585d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%94:\l94:                                               \l  br label %110, !dbg !1085\l}"];
	Node0xb585d0 -> Node0xb58710;
	Node0xb58620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%95:\l95:                                               \l  %96 = load i8*, i8** %4, align 8, !dbg !1087, !tbaa !999\l  %97 = load i8*, i8** %3, align 8, !dbg !1088, !tbaa !999\l  %98 = icmp eq i8* %96, %97, !dbg !1089\l  br i1 %98, label %107, label %99, !dbg !1090\l|{<s0>T|<s1>F}}"];
	Node0xb58620:s0 -> Node0xb586c0;
	Node0xb58620:s1 -> Node0xb58670;
	Node0xb58670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%99:\l99:                                               \l  %100 = load i8*, i8** %4, align 8, !dbg !1091, !tbaa !999\l  %101 = getelementptr inbounds i8, i8* %100, i64 -1, !dbg !1091\l  %102 = load i8, i8* %101, align 1, !dbg !1091, !tbaa !1026\l  %103 = sext i8 %102 to i32, !dbg !1091\l  %104 = sub i32 %103, 48, !dbg !1091\l  %105 = icmp ule i32 %104, 9, !dbg !1091\l  %106 = xor i1 %105, true, !dbg !1092\l  br label %107, !dbg !1090\l}"];
	Node0xb58670 -> Node0xb586c0;
	Node0xb586c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%107:\l107:                                              \l  %108 = phi i1 [ true, %95 ], [ %106, %99 ]\l  %109 = zext i1 %108 to i32, !dbg !1090\l  br label %110, !dbg !1085\l}"];
	Node0xb586c0 -> Node0xb58710;
	Node0xb58710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%110:\l110:                                              \l  %111 = phi i32 [ -1, %94 ], [ %109, %107 ], !dbg !1085\l  %112 = sext i32 %111 to i64, !dbg !1093\l  %113 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 1, !dbg !1094\l  %114 = load i64, i64* %113, align 16, !dbg !1095, !tbaa !1039\l  %115 = add i64 %114, %112, !dbg !1095\l  store i64 %115, i64* %113, align 16, !dbg !1095, !tbaa !1039\l  br label %116, !dbg !1096\l}"];
	Node0xb58710 -> Node0xb58760;
	Node0xb58760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%116:\l116:                                              \l  %117 = bitcast i8** %6 to i8*, !dbg !1097\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %117) #24, !dbg !1097\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !995, metadata\l... !DIExpression()), !dbg !1098\l  %118 = load i8*, i8** %3, align 8, !dbg !1099, !tbaa !999\l  %119 = call i8* @strchr(i8* noundef %118, i32 noundef 101) #25, !dbg !1100\l  store i8* %119, i8** %6, align 8, !dbg !1098, !tbaa !999\l  %120 = load i8*, i8** %6, align 8, !dbg !1101, !tbaa !999\l  %121 = icmp ne i8* %120, null, !dbg !1101\l  br i1 %121, label %125, label %122, !dbg !1103\l|{<s0>T|<s1>F}}"];
	Node0xb58760:s0 -> Node0xb58800;
	Node0xb58760:s1 -> Node0xb587b0;
	Node0xb587b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%122:\l122:                                              \l  %123 = load i8*, i8** %3, align 8, !dbg !1104, !tbaa !999\l  %124 = call i8* @strchr(i8* noundef %123, i32 noundef 69) #25, !dbg !1105\l  store i8* %124, i8** %6, align 8, !dbg !1106, !tbaa !999\l  br label %125, !dbg !1107\l}"];
	Node0xb587b0 -> Node0xb58800;
	Node0xb58800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%125:\l125:                                              \l  %126 = load i8*, i8** %6, align 8, !dbg !1108, !tbaa !999\l  %127 = icmp ne i8* %126, null, !dbg !1108\l  br i1 %127, label %128, label %233, !dbg !1109\l|{<s0>T|<s1>F}}"];
	Node0xb58800:s0 -> Node0xb58850;
	Node0xb58800:s1 -> Node0xb59020;
	Node0xb58850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%128:\l128:                                              \l  %129 = bitcast i64* %7 to i8*, !dbg !1110\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %129) #24, !dbg !1110\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !996, metadata\l... !DIExpression()), !dbg !1111\l  %130 = load i8*, i8** %6, align 8, !dbg !1112, !tbaa !999\l  %131 = getelementptr inbounds i8, i8* %130, i64 1, !dbg !1112\l  %132 = call i64 @strtol(i8* noundef %131, i8** noundef null, i32 noundef 10)\l... #24, !dbg !1112\l  %133 = icmp sgt i64 %132, -9223372036854775807, !dbg !1112\l  br i1 %133, label %134, label %138, !dbg !1112\l|{<s0>T|<s1>F}}"];
	Node0xb58850:s0 -> Node0xb588a0;
	Node0xb58850:s1 -> Node0xb588f0;
	Node0xb588a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%134:\l134:                                              \l  %135 = load i8*, i8** %6, align 8, !dbg !1112, !tbaa !999\l  %136 = getelementptr inbounds i8, i8* %135, i64 1, !dbg !1112\l  %137 = call i64 @strtol(i8* noundef %136, i8** noundef null, i32 noundef 10)\l... #24, !dbg !1112\l  br label %139, !dbg !1112\l}"];
	Node0xb588a0 -> Node0xb58940;
	Node0xb588f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%138:\l138:                                              \l  br label %139, !dbg !1112\l}"];
	Node0xb588f0 -> Node0xb58940;
	Node0xb58940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%139:\l139:                                              \l  %140 = phi i64 [ %137, %134 ], [ -9223372036854775807, %138 ], !dbg !1112\l  store i64 %140, i64* %7, align 8, !dbg !1111, !tbaa !1064\l  %141 = load i64, i64* %7, align 8, !dbg !1113, !tbaa !1064\l  %142 = icmp slt i64 %141, 0, !dbg !1114\l  br i1 %142, label %143, label %146, !dbg !1113\l|{<s0>T|<s1>F}}"];
	Node0xb58940:s0 -> Node0xb58990;
	Node0xb58940:s1 -> Node0xb589e0;
	Node0xb58990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%143:\l143:                                              \l  %144 = load i64, i64* %7, align 8, !dbg !1115, !tbaa !1064\l  %145 = sub nsw i64 0, %144, !dbg !1116\l  br label %161, !dbg !1113\l}"];
	Node0xb58990 -> Node0xb58b20;
	Node0xb589e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%146:\l146:                                              \l  %147 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 2, !dbg !1117\l  %148 = load i32, i32* %147, align 8, !dbg !1117, !tbaa !1042\l  %149 = sext i32 %148 to i64, !dbg !1117\l  %150 = load i64, i64* %7, align 8, !dbg !1117, !tbaa !1064\l  %151 = icmp slt i64 %149, %150, !dbg !1117\l  br i1 %151, label %152, label %156, !dbg !1117\l|{<s0>T|<s1>F}}"];
	Node0xb589e0:s0 -> Node0xb58a30;
	Node0xb589e0:s1 -> Node0xb58a80;
	Node0xb58a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%152:\l152:                                              \l  %153 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 2, !dbg !1117\l  %154 = load i32, i32* %153, align 8, !dbg !1117, !tbaa !1042\l  %155 = sext i32 %154 to i64, !dbg !1117\l  br label %158, !dbg !1117\l}"];
	Node0xb58a30 -> Node0xb58ad0;
	Node0xb58a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%156:\l156:                                              \l  %157 = load i64, i64* %7, align 8, !dbg !1117, !tbaa !1064\l  br label %158, !dbg !1117\l}"];
	Node0xb58a80 -> Node0xb58ad0;
	Node0xb58ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%158:\l158:                                              \l  %159 = phi i64 [ %155, %152 ], [ %157, %156 ], !dbg !1117\l  %160 = sub nsw i64 0, %159, !dbg !1118\l  br label %161, !dbg !1113\l}"];
	Node0xb58ad0 -> Node0xb58b20;
	Node0xb58b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%161:\l161:                                              \l  %162 = phi i64 [ %145, %143 ], [ %160, %158 ], !dbg !1113\l  %163 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 2, !dbg !1119\l  %164 = load i32, i32* %163, align 8, !dbg !1120, !tbaa !1042\l  %165 = sext i32 %164 to i64, !dbg !1120\l  %166 = add nsw i64 %165, %162, !dbg !1120\l  %167 = trunc i64 %166 to i32, !dbg !1120\l  store i32 %167, i32* %163, align 8, !dbg !1120, !tbaa !1042\l  %168 = load i8*, i8** %3, align 8, !dbg !1121, !tbaa !999\l  %169 = call i64 @strlen(i8* noundef %168) #25, !dbg !1122\l  %170 = load i8*, i8** %6, align 8, !dbg !1123, !tbaa !999\l  %171 = load i8*, i8** %3, align 8, !dbg !1124, !tbaa !999\l  %172 = ptrtoint i8* %170 to i64, !dbg !1125\l  %173 = ptrtoint i8* %171 to i64, !dbg !1125\l  %174 = sub i64 %172, %173, !dbg !1125\l  %175 = sub i64 %169, %174, !dbg !1126\l  %176 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 1, !dbg !1127\l  %177 = load i64, i64* %176, align 16, !dbg !1128, !tbaa !1039\l  %178 = sub i64 %177, %175, !dbg !1128\l  store i64 %178, i64* %176, align 16, !dbg !1128, !tbaa !1039\l  %179 = load i64, i64* %7, align 8, !dbg !1129, !tbaa !1064\l  %180 = icmp slt i64 %179, 0, !dbg !1131\l  br i1 %180, label %181, label %201, !dbg !1132\l|{<s0>T|<s1>F}}"];
	Node0xb58b20:s0 -> Node0xb58b70;
	Node0xb58b20:s1 -> Node0xb58d50;
	Node0xb58b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%181:\l181:                                              \l  %182 = load i8*, i8** %4, align 8, !dbg !1133, !tbaa !999\l  %183 = icmp ne i8* %182, null, !dbg !1133\l  br i1 %183, label %184, label %194, !dbg !1136\l|{<s0>T|<s1>F}}"];
	Node0xb58b70:s0 -> Node0xb58bc0;
	Node0xb58b70:s1 -> Node0xb58cb0;
	Node0xb58bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%184:\l184:                                              \l  %185 = load i8*, i8** %6, align 8, !dbg !1137, !tbaa !999\l  %186 = load i8*, i8** %4, align 8, !dbg !1140, !tbaa !999\l  %187 = getelementptr inbounds i8, i8* %186, i64 1, !dbg !1141\l  %188 = icmp eq i8* %185, %187, !dbg !1142\l  br i1 %188, label %189, label %193, !dbg !1143\l|{<s0>T|<s1>F}}"];
	Node0xb58bc0:s0 -> Node0xb58c10;
	Node0xb58bc0:s1 -> Node0xb58c60;
	Node0xb58c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%189:\l189:                                              \l  %190 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 1, !dbg !1144\l  %191 = load i64, i64* %190, align 16, !dbg !1145, !tbaa !1039\l  %192 = add i64 %191, 1, !dbg !1145\l  store i64 %192, i64* %190, align 16, !dbg !1145, !tbaa !1039\l  br label %193, !dbg !1146\l}"];
	Node0xb58c10 -> Node0xb58c60;
	Node0xb58c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%193:\l193:                                              \l  br label %198, !dbg !1147\l}"];
	Node0xb58c60 -> Node0xb58d00;
	Node0xb58cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%194:\l194:                                              \l  %195 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 1, !dbg !1148\l  %196 = load i64, i64* %195, align 16, !dbg !1149, !tbaa !1039\l  %197 = add i64 %196, 1, !dbg !1149\l  store i64 %197, i64* %195, align 16, !dbg !1149, !tbaa !1039\l  br label %198\l}"];
	Node0xb58cb0 -> Node0xb58d00;
	Node0xb58d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%198:\l198:                                              \l  %199 = load i64, i64* %7, align 8, !dbg !1150, !tbaa !1064\l  %200 = sub nsw i64 0, %199, !dbg !1151\l  store i64 %200, i64* %7, align 8, !dbg !1152, !tbaa !1064\l  br label %227, !dbg !1153\l}"];
	Node0xb58d00 -> Node0xb58fd0;
	Node0xb58d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%201:\l201:                                              \l  %202 = load i8*, i8** %4, align 8, !dbg !1154, !tbaa !999\l  %203 = icmp ne i8* %202, null, !dbg !1154\l  br i1 %203, label %204, label %215, !dbg !1157\l|{<s0>T|<s1>F}}"];
	Node0xb58d50:s0 -> Node0xb58da0;
	Node0xb58d50:s1 -> Node0xb58e90;
	Node0xb58da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%204:\l204:                                              \l  %205 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 2, !dbg !1158\l  %206 = load i32, i32* %205, align 8, !dbg !1158, !tbaa !1042\l  %207 = icmp eq i32 %206, 0, !dbg !1159\l  br i1 %207, label %208, label %215, !dbg !1160\l|{<s0>T|<s1>F}}"];
	Node0xb58da0:s0 -> Node0xb58df0;
	Node0xb58da0:s1 -> Node0xb58e90;
	Node0xb58df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%208:\l208:                                              \l  %209 = load i64, i64* %5, align 8, !dbg !1161, !tbaa !1064\l  %210 = icmp ne i64 %209, 0, !dbg !1161\l  br i1 %210, label %211, label %215, !dbg !1162\l|{<s0>T|<s1>F}}"];
	Node0xb58df0:s0 -> Node0xb58e40;
	Node0xb58df0:s1 -> Node0xb58e90;
	Node0xb58e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%211:\l211:                                              \l  %212 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 1, !dbg !1163\l  %213 = load i64, i64* %212, align 16, !dbg !1164, !tbaa !1039\l  %214 = add i64 %213, -1, !dbg !1164\l  store i64 %214, i64* %212, align 16, !dbg !1164, !tbaa !1039\l  br label %215, !dbg !1165\l}"];
	Node0xb58e40 -> Node0xb58e90;
	Node0xb58e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%215:\l215:                                              \l  %216 = load i64, i64* %5, align 8, !dbg !1166, !tbaa !1064\l  %217 = load i64, i64* %7, align 8, !dbg !1166, !tbaa !1064\l  %218 = icmp ult i64 %216, %217, !dbg !1166\l  br i1 %218, label %219, label %221, !dbg !1166\l|{<s0>T|<s1>F}}"];
	Node0xb58e90:s0 -> Node0xb58ee0;
	Node0xb58e90:s1 -> Node0xb58f30;
	Node0xb58ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%219:\l219:                                              \l  %220 = load i64, i64* %5, align 8, !dbg !1166, !tbaa !1064\l  br label %223, !dbg !1166\l}"];
	Node0xb58ee0 -> Node0xb58f80;
	Node0xb58f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%221:\l221:                                              \l  %222 = load i64, i64* %7, align 8, !dbg !1166, !tbaa !1064\l  br label %223, !dbg !1166\l}"];
	Node0xb58f30 -> Node0xb58f80;
	Node0xb58f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%223:\l223:                                              \l  %224 = phi i64 [ %220, %219 ], [ %222, %221 ], !dbg !1166\l  %225 = load i64, i64* %7, align 8, !dbg !1167, !tbaa !1064\l  %226 = sub i64 %225, %224, !dbg !1167\l  store i64 %226, i64* %7, align 8, !dbg !1167, !tbaa !1064\l  br label %227\l}"];
	Node0xb58f80 -> Node0xb58fd0;
	Node0xb58fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%227:\l227:                                              \l  %228 = load i64, i64* %7, align 8, !dbg !1168, !tbaa !1064\l  %229 = getelementptr inbounds %struct.operand, %struct.operand* %0, i32 0,\l... i32 1, !dbg !1169\l  %230 = load i64, i64* %229, align 16, !dbg !1170, !tbaa !1039\l  %231 = add i64 %230, %228, !dbg !1170\l  store i64 %231, i64* %229, align 16, !dbg !1170, !tbaa !1039\l  %232 = bitcast i64* %7 to i8*, !dbg !1171\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %232) #24, !dbg !1171\l  br label %233, !dbg !1172\l}"];
	Node0xb58fd0 -> Node0xb59020;
	Node0xb59020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%233:\l233:                                              \l  %234 = bitcast i8** %6 to i8*, !dbg !1173\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %234) #24, !dbg !1173\l  %235 = bitcast i64* %5 to i8*, !dbg !1173\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %235) #24, !dbg !1173\l  br label %236, !dbg !1174\l}"];
	Node0xb59020 -> Node0xb59070;
	Node0xb59070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%236:\l236:                                              \l  %237 = bitcast i8** %4 to i8*, !dbg !1175\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %237) #24, !dbg !1175\l  ret void, !dbg !1175\l}"];
}
