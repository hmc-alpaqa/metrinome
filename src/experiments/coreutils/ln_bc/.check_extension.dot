digraph "CFG for 'check_extension' function" {
	label="CFG for 'check_extension' function";

	Node0xc1a9d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = alloca i1, align 1\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i8, align 1\l  %10 = alloca i32, align 4\l  %11 = alloca i64*, align 8\l  %12 = alloca i8*, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca [2 x i8], align 1\l  %17 = alloca i32, align 4\l  store i8* %0, i8** %7, align 8, !tbaa !932\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !915, metadata\l... !DIExpression()), !dbg !936\l  store i64 %1, i64* %8, align 8, !tbaa !937\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !916, metadata\l... !DIExpression()), !dbg !939\l  store i8 %2, i8* %9, align 1, !tbaa !940\l  call void @llvm.dbg.declare(metadata i8* %9, metadata !917, metadata\l... !DIExpression()), !dbg !941\l  store i32 %3, i32* %10, align 4, !tbaa !942\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !918, metadata\l... !DIExpression()), !dbg !944\l  store i64* %4, i64** %11, align 8, !tbaa !932\l  call void @llvm.dbg.declare(metadata i64** %11, metadata !919, metadata\l... !DIExpression()), !dbg !945\l  %18 = bitcast i8** %12 to i8*, !dbg !946\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #24, !dbg !946\l  call void @llvm.dbg.declare(metadata i8** %12, metadata !920, metadata\l... !DIExpression()), !dbg !947\l  %19 = load i8*, i8** %7, align 8, !dbg !948, !tbaa !932\l  %20 = call i8* @last_component(i8* noundef %19) #25, !dbg !949\l  store i8* %20, i8** %12, align 8, !dbg !947, !tbaa !932\l  %21 = bitcast i64* %13 to i8*, !dbg !950\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #24, !dbg !950\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !921, metadata\l... !DIExpression()), !dbg !951\l  %22 = load i8*, i8** %12, align 8, !dbg !952, !tbaa !932\l  %23 = call i64 @base_len(i8* noundef %22) #25, !dbg !953\l  store i64 %23, i64* %13, align 8, !dbg !951, !tbaa !937\l  %24 = bitcast i64* %14 to i8*, !dbg !954\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #24, !dbg !954\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !922, metadata\l... !DIExpression()), !dbg !955\l  store i64 255, i64* %14, align 8, !dbg !955, !tbaa !937\l  %25 = load i64, i64* %13, align 8, !dbg !956, !tbaa !937\l  %26 = icmp slt i64 14, %25, !dbg !957\l  br i1 %26, label %27, label %87, !dbg !958\l|{<s0>T|<s1>F}}"];
	Node0xc1a9d0:s0 -> Node0xc1abb0;
	Node0xc1a9d0:s1 -> Node0xc1aed0;
	Node0xc1abb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%27:\l27:                                               \l  %28 = load i64*, i64** %11, align 8, !dbg !959, !tbaa !932\l  %29 = load i64, i64* %28, align 8, !dbg !960, !tbaa !937\l  %30 = icmp eq i64 %29, 0, !dbg !961\l  br i1 %30, label %31, label %84, !dbg !962\l|{<s0>T|<s1>F}}"];
	Node0xc1abb0:s0 -> Node0xc1ac00;
	Node0xc1abb0:s1 -> Node0xc1ae80;
	Node0xc1ac00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%31:\l31:                                               \l  %32 = bitcast i64* %15 to i8*, !dbg !963\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #24, !dbg !963\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !923, metadata\l... !DIExpression()), !dbg !964\l  %33 = load i32, i32* %10, align 4, !dbg !965, !tbaa !942\l  %34 = icmp slt i32 %33, 0, !dbg !966\l  br i1 %34, label %35, label %55, !dbg !967\l|{<s0>T|<s1>F}}"];
	Node0xc1ac00:s0 -> Node0xc1ac50;
	Node0xc1ac00:s1 -> Node0xc1aca0;
	Node0xc1ac50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%35:\l35:                                               \l  %36 = bitcast [2 x i8]* %16 to i8*, !dbg !968\l  call void @llvm.lifetime.start.p0i8(i64 2, i8* %36) #24, !dbg !968\l  call void @llvm.dbg.declare(metadata [2 x i8]* %16, metadata !928, metadata\l... !DIExpression()), !dbg !969\l  %37 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 0, !dbg !970\l  %38 = load i8*, i8** %12, align 8, !dbg !971, !tbaa !932\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %38, i64\l... 2, i1 false), !dbg !970\l  %39 = load i8*, i8** %12, align 8, !dbg !972, !tbaa !932\l  %40 = call i8* @strcpy(i8* noundef %39, i8* noundef getelementptr inbounds\l... ([2 x i8], [2 x i8]* @.str.2.89, i64 0, i64 0)) #24, !dbg !973\l  %41 = call i32* @__errno_location() #26, !dbg !974\l  store i32 0, i32* %41, align 4, !dbg !975, !tbaa !942\l  %42 = load i8*, i8** %7, align 8, !dbg !976, !tbaa !932\l  %43 = call i64 @pathconf(i8* noundef %42, i32 noundef 3) #24, !dbg !977\l  store i64 %43, i64* %15, align 8, !dbg !978, !tbaa !937\l  %44 = call i32* @__errno_location() #26, !dbg !979\l  %45 = load i32, i32* %44, align 4, !dbg !979, !tbaa !942\l  %46 = icmp ne i32 %45, 0, !dbg !980\l  %47 = xor i1 %46, true, !dbg !980\l  %48 = zext i1 %47 to i32, !dbg !980\l  %49 = sext i32 %48 to i64, !dbg !980\l  %50 = load i64, i64* %15, align 8, !dbg !981, !tbaa !937\l  %51 = sub nsw i64 %50, %49, !dbg !981\l  store i64 %51, i64* %15, align 8, !dbg !981, !tbaa !937\l  %52 = load i8*, i8** %12, align 8, !dbg !982, !tbaa !932\l  %53 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 0, !dbg !983\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %53, i64\l... 2, i1 false), !dbg !983\l  %54 = bitcast [2 x i8]* %16 to i8*, !dbg !984\l  call void @llvm.lifetime.end.p0i8(i64 2, i8* %54) #24, !dbg !984\l  br label %67, !dbg !985\l}"];
	Node0xc1ac50 -> Node0xc1acf0;
	Node0xc1aca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%55:\l55:                                               \l  %56 = call i32* @__errno_location() #26, !dbg !986\l  store i32 0, i32* %56, align 4, !dbg !988, !tbaa !942\l  %57 = load i32, i32* %10, align 4, !dbg !989, !tbaa !942\l  %58 = call i64 @fpathconf(i32 noundef %57, i32 noundef 3) #24, !dbg !990\l  store i64 %58, i64* %15, align 8, !dbg !991, !tbaa !937\l  %59 = call i32* @__errno_location() #26, !dbg !992\l  %60 = load i32, i32* %59, align 4, !dbg !992, !tbaa !942\l  %61 = icmp ne i32 %60, 0, !dbg !993\l  %62 = xor i1 %61, true, !dbg !993\l  %63 = zext i1 %62 to i32, !dbg !993\l  %64 = sext i32 %63 to i64, !dbg !993\l  %65 = load i64, i64* %15, align 8, !dbg !994, !tbaa !937\l  %66 = sub nsw i64 %65, %64, !dbg !994\l  store i64 %66, i64* %15, align 8, !dbg !994, !tbaa !937\l  br label %67\l}"];
	Node0xc1aca0 -> Node0xc1acf0;
	Node0xc1acf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%67:\l67:                                               \l  %68 = load i64, i64* %15, align 8, !dbg !995, !tbaa !937\l  %69 = icmp sle i64 0, %68, !dbg !996\l  br i1 %69, label %70, label %75, !dbg !997\l|{<s0>T|<s1>F}}"];
	Node0xc1acf0:s0 -> Node0xc1ad40;
	Node0xc1acf0:s1 -> Node0xc1ade0;
	Node0xc1ad40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%70:\l70:                                               \l  %71 = load i64, i64* %15, align 8, !dbg !998, !tbaa !937\l  %72 = icmp ule i64 %71, -1, !dbg !999\l  br i1 %72, label %73, label %75, !dbg !1000\l|{<s0>T|<s1>F}}"];
	Node0xc1ad40:s0 -> Node0xc1ad90;
	Node0xc1ad40:s1 -> Node0xc1ade0;
	Node0xc1ad90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%73:\l73:                                               \l  %74 = load i64, i64* %15, align 8, !dbg !1001, !tbaa !937\l  br label %80, !dbg !1000\l}"];
	Node0xc1ad90 -> Node0xc1ae30;
	Node0xc1ade0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%75:\l75:                                               \l  %76 = load i64, i64* %15, align 8, !dbg !1002, !tbaa !937\l  %77 = icmp slt i64 %76, -1, !dbg !1003\l  %78 = zext i1 %77 to i64, !dbg !1002\l  %79 = select i1 %77, i64 14, i64 -1, !dbg !1002\l  br label %80, !dbg !1000\l}"];
	Node0xc1ade0 -> Node0xc1ae30;
	Node0xc1ae30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%80:\l80:                                               \l  %81 = phi i64 [ %74, %73 ], [ %79, %75 ], !dbg !1000\l  %82 = load i64*, i64** %11, align 8, !dbg !1004, !tbaa !932\l  store i64 %81, i64* %82, align 8, !dbg !1005, !tbaa !937\l  %83 = bitcast i64* %15 to i8*, !dbg !1006\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #24, !dbg !1006\l  br label %84, !dbg !1007\l}"];
	Node0xc1ae30 -> Node0xc1ae80;
	Node0xc1ae80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%84:\l84:                                               \l  %85 = load i64*, i64** %11, align 8, !dbg !1008, !tbaa !932\l  %86 = load i64, i64* %85, align 8, !dbg !1009, !tbaa !937\l  store i64 %86, i64* %14, align 8, !dbg !1010, !tbaa !937\l  br label %87, !dbg !1011\l}"];
	Node0xc1ae80 -> Node0xc1aed0;
	Node0xc1aed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  %88 = load i64, i64* %13, align 8, !dbg !1012, !tbaa !937\l  %89 = load i64, i64* %14, align 8, !dbg !1014, !tbaa !937\l  %90 = icmp sle i64 %88, %89, !dbg !1015\l  br i1 %90, label %91, label %92, !dbg !1016\l|{<s0>T|<s1>F}}"];
	Node0xc1aed0:s0 -> Node0xc1af20;
	Node0xc1aed0:s1 -> Node0xc1af70;
	Node0xc1af20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%91:\l91:                                               \l  store i1 true, i1* %6, align 1, !dbg !1017\l  store i32 1, i32* %17, align 4\l  br label %115, !dbg !1017\l}"];
	Node0xc1af20 -> Node0xc1b060;
	Node0xc1af70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%92:\l92:                                               \l  %93 = load i8*, i8** %7, align 8, !dbg !1018, !tbaa !932\l  %94 = load i64, i64* %8, align 8, !dbg !1020, !tbaa !937\l  %95 = getelementptr inbounds i8, i8* %93, i64 %94, !dbg !1021\l  %96 = load i8*, i8** %12, align 8, !dbg !1022, !tbaa !932\l  %97 = ptrtoint i8* %95 to i64, !dbg !1023\l  %98 = ptrtoint i8* %96 to i64, !dbg !1023\l  %99 = sub i64 %97, %98, !dbg !1023\l  store i64 %99, i64* %13, align 8, !dbg !1024, !tbaa !937\l  %100 = load i64, i64* %14, align 8, !dbg !1025, !tbaa !937\l  %101 = load i64, i64* %13, align 8, !dbg !1027, !tbaa !937\l  %102 = icmp sle i64 %100, %101, !dbg !1028\l  br i1 %102, label %103, label %106, !dbg !1029\l|{<s0>T|<s1>F}}"];
	Node0xc1af70:s0 -> Node0xc1afc0;
	Node0xc1af70:s1 -> Node0xc1b010;
	Node0xc1afc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%103:\l103:                                              \l  %104 = load i64, i64* %14, align 8, !dbg !1030, !tbaa !937\l  %105 = sub nsw i64 %104, 1, !dbg !1031\l  store i64 %105, i64* %13, align 8, !dbg !1032, !tbaa !937\l  br label %106, !dbg !1033\l}"];
	Node0xc1afc0 -> Node0xc1b010;
	Node0xc1b010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%106:\l106:                                              \l  %107 = load i8, i8* %9, align 1, !dbg !1034, !tbaa !940\l  %108 = load i8*, i8** %12, align 8, !dbg !1035, !tbaa !932\l  %109 = load i64, i64* %13, align 8, !dbg !1036, !tbaa !937\l  %110 = getelementptr inbounds i8, i8* %108, i64 %109, !dbg !1035\l  store i8 %107, i8* %110, align 1, !dbg !1037, !tbaa !940\l  %111 = load i8*, i8** %12, align 8, !dbg !1038, !tbaa !932\l  %112 = load i64, i64* %13, align 8, !dbg !1039, !tbaa !937\l  %113 = add nsw i64 %112, 1, !dbg !1040\l  %114 = getelementptr inbounds i8, i8* %111, i64 %113, !dbg !1038\l  store i8 0, i8* %114, align 1, !dbg !1041, !tbaa !940\l  store i1 false, i1* %6, align 1, !dbg !1042\l  store i32 1, i32* %17, align 4\l  br label %115, !dbg !1042\l}"];
	Node0xc1b010 -> Node0xc1b060;
	Node0xc1b060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%115:\l115:                                              \l  %116 = bitcast i64* %14 to i8*, !dbg !1043\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116) #24, !dbg !1043\l  %117 = bitcast i64* %13 to i8*, !dbg !1043\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117) #24, !dbg !1043\l  %118 = bitcast i8** %12 to i8*, !dbg !1043\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %118) #24, !dbg !1043\l  %119 = load i1, i1* %6, align 1, !dbg !1043\l  ret i1 %119, !dbg !1043\l}"];
}
