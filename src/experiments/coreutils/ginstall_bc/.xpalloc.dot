digraph "CFG for 'xpalloc' function" {
	label="CFG for 'xpalloc' function";

	Node0x194ad00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = alloca i8*, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  store i8* %0, i8** %6, align 8, !tbaa !1735\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1201, metadata\l... !DIExpression()), !dbg !1739\l  store i64* %1, i64** %7, align 8, !tbaa !1735\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !1202, metadata\l... !DIExpression()), !dbg !1740\l  store i64 %2, i64* %8, align 8, !tbaa !1741\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1203, metadata\l... !DIExpression()), !dbg !1743\l  store i64 %3, i64* %9, align 8, !tbaa !1741\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1204, metadata\l... !DIExpression()), !dbg !1744\l  store i64 %4, i64* %10, align 8, !tbaa !1741\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1205, metadata\l... !DIExpression()), !dbg !1745\l  %15 = bitcast i64* %11 to i8*, !dbg !1746\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #26, !dbg !1746\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1206, metadata\l... !DIExpression()), !dbg !1747\l  %16 = load i64*, i64** %7, align 8, !dbg !1748, !tbaa !1735\l  %17 = load i64, i64* %16, align 8, !dbg !1749, !tbaa !1741\l  store i64 %17, i64* %11, align 8, !dbg !1747, !tbaa !1741\l  %18 = bitcast i64* %12 to i8*, !dbg !1750\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #26, !dbg !1750\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1207, metadata\l... !DIExpression()), !dbg !1751\l  %19 = load i64, i64* %11, align 8, !dbg !1752, !tbaa !1741\l  %20 = load i64, i64* %11, align 8, !dbg !1752, !tbaa !1741\l  %21 = ashr i64 %20, 1, !dbg !1752\l  %22 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %19, i64 %21), !dbg\l... !1752\l  %23 = extractvalue \{ i64, i1 \} %22, 1, !dbg !1752\l  %24 = extractvalue \{ i64, i1 \} %22, 0, !dbg !1752\l  store i64 %24, i64* %12, align 8, !dbg !1752\l  br i1 %23, label %25, label %26, !dbg !1754\l|{<s0>T|<s1>F}}"];
	Node0x194ad00:s0 -> Node0x194e640;
	Node0x194ad00:s1 -> Node0x194e730;
	Node0x194e640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%25:\l25:                                               \l  store i64 9223372036854775807, i64* %12, align 8, !dbg !1755, !tbaa !1741\l  br label %26, !dbg !1756\l}"];
	Node0x194e640 -> Node0x194e730;
	Node0x194e730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i64, i64* %9, align 8, !dbg !1757, !tbaa !1741\l  %28 = icmp sle i64 0, %27, !dbg !1759\l  br i1 %28, label %29, label %35, !dbg !1760\l|{<s0>T|<s1>F}}"];
	Node0x194e730:s0 -> Node0x194e780;
	Node0x194e730:s1 -> Node0x194e820;
	Node0x194e780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%29:\l29:                                               \l  %30 = load i64, i64* %9, align 8, !dbg !1761, !tbaa !1741\l  %31 = load i64, i64* %12, align 8, !dbg !1762, !tbaa !1741\l  %32 = icmp slt i64 %30, %31, !dbg !1763\l  br i1 %32, label %33, label %35, !dbg !1764\l|{<s0>T|<s1>F}}"];
	Node0x194e780:s0 -> Node0x194e7d0;
	Node0x194e780:s1 -> Node0x194e820;
	Node0x194e7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%33:\l33:                                               \l  %34 = load i64, i64* %9, align 8, !dbg !1765, !tbaa !1741\l  store i64 %34, i64* %12, align 8, !dbg !1766, !tbaa !1741\l  br label %35, !dbg !1767\l}"];
	Node0x194e7d0 -> Node0x194e820;
	Node0x194e820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = bitcast i64* %13 to i8*, !dbg !1768\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #26, !dbg !1768\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !1208, metadata\l... !DIExpression()), !dbg !1769\l  %37 = bitcast i64* %14 to i8*, !dbg !1770\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #26, !dbg !1770\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !1209, metadata\l... !DIExpression()), !dbg !1771\l  %38 = load i64, i64* %12, align 8, !dbg !1772, !tbaa !1741\l  %39 = load i64, i64* %10, align 8, !dbg !1772, !tbaa !1741\l  %40 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %38, i64 %39), !dbg\l... !1772\l  %41 = extractvalue \{ i64, i1 \} %40, 1, !dbg !1772\l  %42 = extractvalue \{ i64, i1 \} %40, 0, !dbg !1772\l  store i64 %42, i64* %13, align 8, !dbg !1772\l  br i1 %41, label %43, label %44, !dbg !1772\l|{<s0>T|<s1>F}}"];
	Node0x194e820:s0 -> Node0x194e870;
	Node0x194e820:s1 -> Node0x194e8c0;
	Node0x194e870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%43:\l43:                                               \l  br label %50, !dbg !1772\l}"];
	Node0x194e870 -> Node0x194e910;
	Node0x194e8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%44:\l44:                                               \l  %45 = load i64, i64* %13, align 8, !dbg !1773, !tbaa !1741\l  %46 = icmp slt i64 %45, 128, !dbg !1774\l  %47 = zext i1 %46 to i64, !dbg !1773\l  %48 = select i1 %46, i32 128, i32 0, !dbg !1773\l  %49 = sext i32 %48 to i64, !dbg !1773\l  br label %50, !dbg !1772\l}"];
	Node0x194e8c0 -> Node0x194e910;
	Node0x194e910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i64 [ 9223372036854775807, %43 ], [ %49, %44 ], !dbg !1772\l  store i64 %51, i64* %14, align 8, !dbg !1771, !tbaa !1741\l  %52 = load i64, i64* %14, align 8, !dbg !1775, !tbaa !1741\l  %53 = icmp ne i64 %52, 0, !dbg !1775\l  br i1 %53, label %54, label %63, !dbg !1777\l|{<s0>T|<s1>F}}"];
	Node0x194e910:s0 -> Node0x194e960;
	Node0x194e910:s1 -> Node0x1c06b30;
	Node0x194e960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%54:\l54:                                               \l  %55 = load i64, i64* %14, align 8, !dbg !1778, !tbaa !1741\l  %56 = load i64, i64* %10, align 8, !dbg !1780, !tbaa !1741\l  %57 = sdiv i64 %55, %56, !dbg !1781\l  store i64 %57, i64* %12, align 8, !dbg !1782, !tbaa !1741\l  %58 = load i64, i64* %14, align 8, !dbg !1783, !tbaa !1741\l  %59 = load i64, i64* %14, align 8, !dbg !1784, !tbaa !1741\l  %60 = load i64, i64* %10, align 8, !dbg !1785, !tbaa !1741\l  %61 = srem i64 %59, %60, !dbg !1786\l  %62 = sub nsw i64 %58, %61, !dbg !1787\l  store i64 %62, i64* %13, align 8, !dbg !1788, !tbaa !1741\l  br label %63, !dbg !1789\l}"];
	Node0x194e960 -> Node0x1c06b30;
	Node0x1c06b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = load i8*, i8** %6, align 8, !dbg !1790, !tbaa !1735\l  %65 = icmp ne i8* %64, null, !dbg !1790\l  br i1 %65, label %68, label %66, !dbg !1792\l|{<s0>T|<s1>F}}"];
	Node0x1c06b30:s0 -> Node0x1c06bd0;
	Node0x1c06b30:s1 -> Node0x1c06b80;
	Node0x1c06b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%66:\l66:                                               \l  %67 = load i64*, i64** %7, align 8, !dbg !1793, !tbaa !1735\l  store i64 0, i64* %67, align 8, !dbg !1794, !tbaa !1741\l  br label %68, !dbg !1795\l}"];
	Node0x1c06b80 -> Node0x1c06bd0;
	Node0x1c06bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = load i64, i64* %12, align 8, !dbg !1796, !tbaa !1741\l  %70 = load i64, i64* %11, align 8, !dbg !1798, !tbaa !1741\l  %71 = sub nsw i64 %69, %70, !dbg !1799\l  %72 = load i64, i64* %8, align 8, !dbg !1800, !tbaa !1741\l  %73 = icmp slt i64 %71, %72, !dbg !1801\l  br i1 %73, label %74, label %94, !dbg !1802\l|{<s0>T|<s1>F}}"];
	Node0x1c06bd0:s0 -> Node0x1c06c20;
	Node0x1c06bd0:s1 -> Node0x1c06db0;
	Node0x1c06c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%74:\l74:                                               \l  %75 = load i64, i64* %11, align 8, !dbg !1803, !tbaa !1741\l  %76 = load i64, i64* %8, align 8, !dbg !1803, !tbaa !1741\l  %77 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %75, i64 %76), !dbg\l... !1803\l  %78 = extractvalue \{ i64, i1 \} %77, 1, !dbg !1803\l  %79 = extractvalue \{ i64, i1 \} %77, 0, !dbg !1803\l  store i64 %79, i64* %12, align 8, !dbg !1803\l  br i1 %78, label %93, label %80, !dbg !1804\l|{<s0>T|<s1>F}}"];
	Node0x1c06c20:s0 -> Node0x1c06d60;
	Node0x1c06c20:s1 -> Node0x1c06c70;
	Node0x1c06c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%80:\l80:                                               \l  %81 = load i64, i64* %9, align 8, !dbg !1805, !tbaa !1741\l  %82 = icmp sle i64 0, %81, !dbg !1806\l  br i1 %82, label %83, label %87, !dbg !1807\l|{<s0>T|<s1>F}}"];
	Node0x1c06c70:s0 -> Node0x1c06cc0;
	Node0x1c06c70:s1 -> Node0x1c06d10;
	Node0x1c06cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%83:\l83:                                               \l  %84 = load i64, i64* %9, align 8, !dbg !1808, !tbaa !1741\l  %85 = load i64, i64* %12, align 8, !dbg !1809, !tbaa !1741\l  %86 = icmp slt i64 %84, %85, !dbg !1810\l  br i1 %86, label %93, label %87, !dbg !1811\l|{<s0>T|<s1>F}}"];
	Node0x1c06cc0:s0 -> Node0x1c06d60;
	Node0x1c06cc0:s1 -> Node0x1c06d10;
	Node0x1c06d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%87:\l87:                                               \l  %88 = load i64, i64* %12, align 8, !dbg !1812, !tbaa !1741\l  %89 = load i64, i64* %10, align 8, !dbg !1812, !tbaa !1741\l  %90 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %88, i64 %89), !dbg\l... !1812\l  %91 = extractvalue \{ i64, i1 \} %90, 1, !dbg !1812\l  %92 = extractvalue \{ i64, i1 \} %90, 0, !dbg !1812\l  store i64 %92, i64* %13, align 8, !dbg !1812\l  br i1 %91, label %93, label %94, !dbg !1813\l|{<s0>T|<s1>F}}"];
	Node0x1c06d10:s0 -> Node0x1c06d60;
	Node0x1c06d10:s1 -> Node0x1c06db0;
	Node0x1c06d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%93:\l93:                                               \l  call void @xalloc_die() #27, !dbg !1814\l  unreachable, !dbg !1814\l}"];
	Node0x1c06db0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  %95 = load i8*, i8** %6, align 8, !dbg !1815, !tbaa !1735\l  %96 = load i64, i64* %13, align 8, !dbg !1816, !tbaa !1741\l  %97 = call i8* @xrealloc(i8* noundef %95, i64 noundef %96) #28, !dbg !1817\l  store i8* %97, i8** %6, align 8, !dbg !1818, !tbaa !1735\l  %98 = load i64, i64* %12, align 8, !dbg !1819, !tbaa !1741\l  %99 = load i64*, i64** %7, align 8, !dbg !1820, !tbaa !1735\l  store i64 %98, i64* %99, align 8, !dbg !1821, !tbaa !1741\l  %100 = load i8*, i8** %6, align 8, !dbg !1822, !tbaa !1735\l  %101 = bitcast i64* %14 to i8*, !dbg !1823\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #26, !dbg !1823\l  %102 = bitcast i64* %13 to i8*, !dbg !1823\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #26, !dbg !1823\l  %103 = bitcast i64* %12 to i8*, !dbg !1823\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #26, !dbg !1823\l  %104 = bitcast i64* %11 to i8*, !dbg !1823\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %104) #26, !dbg !1823\l  ret i8* %100, !dbg !1824\l}"];
}
