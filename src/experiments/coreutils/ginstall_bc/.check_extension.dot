digraph "CFG for 'check_extension' function" {
	label="CFG for 'check_extension' function";

	Node0x171aa20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = alloca i1, align 1\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i8, align 1\l  %10 = alloca i32, align 4\l  %11 = alloca i64*, align 8\l  %12 = alloca i8*, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca [2 x i8], align 1\l  %17 = alloca i32, align 4\l  store i8* %0, i8** %7, align 8, !tbaa !1756\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !1739, metadata\l... !DIExpression()), !dbg !1760\l  store i64 %1, i64* %8, align 8, !tbaa !1761\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1740, metadata\l... !DIExpression()), !dbg !1763\l  store i8 %2, i8* %9, align 1, !tbaa !1764\l  call void @llvm.dbg.declare(metadata i8* %9, metadata !1741, metadata\l... !DIExpression()), !dbg !1765\l  store i32 %3, i32* %10, align 4, !tbaa !1766\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !1742, metadata\l... !DIExpression()), !dbg !1768\l  store i64* %4, i64** %11, align 8, !tbaa !1756\l  call void @llvm.dbg.declare(metadata i64** %11, metadata !1743, metadata\l... !DIExpression()), !dbg !1769\l  %18 = bitcast i8** %12 to i8*, !dbg !1770\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #26, !dbg !1770\l  call void @llvm.dbg.declare(metadata i8** %12, metadata !1744, metadata\l... !DIExpression()), !dbg !1771\l  %19 = load i8*, i8** %7, align 8, !dbg !1772, !tbaa !1756\l  %20 = call i8* @last_component(i8* noundef %19) #27, !dbg !1773\l  store i8* %20, i8** %12, align 8, !dbg !1771, !tbaa !1756\l  %21 = bitcast i64* %13 to i8*, !dbg !1774\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #26, !dbg !1774\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !1745, metadata\l... !DIExpression()), !dbg !1775\l  %22 = load i8*, i8** %12, align 8, !dbg !1776, !tbaa !1756\l  %23 = call i64 @base_len(i8* noundef %22) #27, !dbg !1777\l  store i64 %23, i64* %13, align 8, !dbg !1775, !tbaa !1761\l  %24 = bitcast i64* %14 to i8*, !dbg !1778\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #26, !dbg !1778\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !1746, metadata\l... !DIExpression()), !dbg !1779\l  store i64 255, i64* %14, align 8, !dbg !1779, !tbaa !1761\l  %25 = load i64, i64* %13, align 8, !dbg !1780, !tbaa !1761\l  %26 = icmp slt i64 14, %25, !dbg !1781\l  br i1 %26, label %27, label %87, !dbg !1782\l|{<s0>T|<s1>F}}"];
	Node0x171aa20:s0 -> Node0x171ac00;
	Node0x171aa20:s1 -> Node0x171af20;
	Node0x171ac00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%27:\l27:                                               \l  %28 = load i64*, i64** %11, align 8, !dbg !1783, !tbaa !1756\l  %29 = load i64, i64* %28, align 8, !dbg !1784, !tbaa !1761\l  %30 = icmp eq i64 %29, 0, !dbg !1785\l  br i1 %30, label %31, label %84, !dbg !1786\l|{<s0>T|<s1>F}}"];
	Node0x171ac00:s0 -> Node0x171ac50;
	Node0x171ac00:s1 -> Node0x171aed0;
	Node0x171ac50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%31:\l31:                                               \l  %32 = bitcast i64* %15 to i8*, !dbg !1787\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #26, !dbg !1787\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !1747, metadata\l... !DIExpression()), !dbg !1788\l  %33 = load i32, i32* %10, align 4, !dbg !1789, !tbaa !1766\l  %34 = icmp slt i32 %33, 0, !dbg !1790\l  br i1 %34, label %35, label %55, !dbg !1791\l|{<s0>T|<s1>F}}"];
	Node0x171ac50:s0 -> Node0x171aca0;
	Node0x171ac50:s1 -> Node0x171acf0;
	Node0x171aca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%35:\l35:                                               \l  %36 = bitcast [2 x i8]* %16 to i8*, !dbg !1792\l  call void @llvm.lifetime.start.p0i8(i64 2, i8* %36) #26, !dbg !1792\l  call void @llvm.dbg.declare(metadata [2 x i8]* %16, metadata !1752, metadata\l... !DIExpression()), !dbg !1793\l  %37 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 0, !dbg\l... !1794\l  %38 = load i8*, i8** %12, align 8, !dbg !1795, !tbaa !1756\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %38, i64\l... 2, i1 false), !dbg !1794\l  %39 = load i8*, i8** %12, align 8, !dbg !1796, !tbaa !1756\l  %40 = call i8* @strcpy(i8* noundef %39, i8* noundef getelementptr inbounds\l... ([2 x i8], [2 x i8]* @.str.2.235, i64 0, i64 0)) #26, !dbg !1797\l  %41 = call i32* @__errno_location() #28, !dbg !1798\l  store i32 0, i32* %41, align 4, !dbg !1799, !tbaa !1766\l  %42 = load i8*, i8** %7, align 8, !dbg !1800, !tbaa !1756\l  %43 = call i64 @pathconf(i8* noundef %42, i32 noundef 3) #26, !dbg !1801\l  store i64 %43, i64* %15, align 8, !dbg !1802, !tbaa !1761\l  %44 = call i32* @__errno_location() #28, !dbg !1803\l  %45 = load i32, i32* %44, align 4, !dbg !1803, !tbaa !1766\l  %46 = icmp ne i32 %45, 0, !dbg !1804\l  %47 = xor i1 %46, true, !dbg !1804\l  %48 = zext i1 %47 to i32, !dbg !1804\l  %49 = sext i32 %48 to i64, !dbg !1804\l  %50 = load i64, i64* %15, align 8, !dbg !1805, !tbaa !1761\l  %51 = sub nsw i64 %50, %49, !dbg !1805\l  store i64 %51, i64* %15, align 8, !dbg !1805, !tbaa !1761\l  %52 = load i8*, i8** %12, align 8, !dbg !1806, !tbaa !1756\l  %53 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 0, !dbg\l... !1807\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %53, i64\l... 2, i1 false), !dbg !1807\l  %54 = bitcast [2 x i8]* %16 to i8*, !dbg !1808\l  call void @llvm.lifetime.end.p0i8(i64 2, i8* %54) #26, !dbg !1808\l  br label %67, !dbg !1809\l}"];
	Node0x171aca0 -> Node0x171ad40;
	Node0x171acf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%55:\l55:                                               \l  %56 = call i32* @__errno_location() #28, !dbg !1810\l  store i32 0, i32* %56, align 4, !dbg !1812, !tbaa !1766\l  %57 = load i32, i32* %10, align 4, !dbg !1813, !tbaa !1766\l  %58 = call i64 @fpathconf(i32 noundef %57, i32 noundef 3) #26, !dbg !1814\l  store i64 %58, i64* %15, align 8, !dbg !1815, !tbaa !1761\l  %59 = call i32* @__errno_location() #28, !dbg !1816\l  %60 = load i32, i32* %59, align 4, !dbg !1816, !tbaa !1766\l  %61 = icmp ne i32 %60, 0, !dbg !1817\l  %62 = xor i1 %61, true, !dbg !1817\l  %63 = zext i1 %62 to i32, !dbg !1817\l  %64 = sext i32 %63 to i64, !dbg !1817\l  %65 = load i64, i64* %15, align 8, !dbg !1818, !tbaa !1761\l  %66 = sub nsw i64 %65, %64, !dbg !1818\l  store i64 %66, i64* %15, align 8, !dbg !1818, !tbaa !1761\l  br label %67\l}"];
	Node0x171acf0 -> Node0x171ad40;
	Node0x171ad40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%67:\l67:                                               \l  %68 = load i64, i64* %15, align 8, !dbg !1819, !tbaa !1761\l  %69 = icmp sle i64 0, %68, !dbg !1820\l  br i1 %69, label %70, label %75, !dbg !1821\l|{<s0>T|<s1>F}}"];
	Node0x171ad40:s0 -> Node0x171ad90;
	Node0x171ad40:s1 -> Node0x171ae30;
	Node0x171ad90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%70:\l70:                                               \l  %71 = load i64, i64* %15, align 8, !dbg !1822, !tbaa !1761\l  %72 = icmp ule i64 %71, -1, !dbg !1823\l  br i1 %72, label %73, label %75, !dbg !1824\l|{<s0>T|<s1>F}}"];
	Node0x171ad90:s0 -> Node0x171ade0;
	Node0x171ad90:s1 -> Node0x171ae30;
	Node0x171ade0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%73:\l73:                                               \l  %74 = load i64, i64* %15, align 8, !dbg !1825, !tbaa !1761\l  br label %80, !dbg !1824\l}"];
	Node0x171ade0 -> Node0x171ae80;
	Node0x171ae30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%75:\l75:                                               \l  %76 = load i64, i64* %15, align 8, !dbg !1826, !tbaa !1761\l  %77 = icmp slt i64 %76, -1, !dbg !1827\l  %78 = zext i1 %77 to i64, !dbg !1826\l  %79 = select i1 %77, i64 14, i64 -1, !dbg !1826\l  br label %80, !dbg !1824\l}"];
	Node0x171ae30 -> Node0x171ae80;
	Node0x171ae80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%80:\l80:                                               \l  %81 = phi i64 [ %74, %73 ], [ %79, %75 ], !dbg !1824\l  %82 = load i64*, i64** %11, align 8, !dbg !1828, !tbaa !1756\l  store i64 %81, i64* %82, align 8, !dbg !1829, !tbaa !1761\l  %83 = bitcast i64* %15 to i8*, !dbg !1830\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #26, !dbg !1830\l  br label %84, !dbg !1831\l}"];
	Node0x171ae80 -> Node0x171aed0;
	Node0x171aed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%84:\l84:                                               \l  %85 = load i64*, i64** %11, align 8, !dbg !1832, !tbaa !1756\l  %86 = load i64, i64* %85, align 8, !dbg !1833, !tbaa !1761\l  store i64 %86, i64* %14, align 8, !dbg !1834, !tbaa !1761\l  br label %87, !dbg !1835\l}"];
	Node0x171aed0 -> Node0x171af20;
	Node0x171af20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  %88 = load i64, i64* %13, align 8, !dbg !1836, !tbaa !1761\l  %89 = load i64, i64* %14, align 8, !dbg !1838, !tbaa !1761\l  %90 = icmp sle i64 %88, %89, !dbg !1839\l  br i1 %90, label %91, label %92, !dbg !1840\l|{<s0>T|<s1>F}}"];
	Node0x171af20:s0 -> Node0x171af70;
	Node0x171af20:s1 -> Node0x171afc0;
	Node0x171af70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%91:\l91:                                               \l  store i1 true, i1* %6, align 1, !dbg !1841\l  store i32 1, i32* %17, align 4\l  br label %115, !dbg !1841\l}"];
	Node0x171af70 -> Node0x171b0b0;
	Node0x171afc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%92:\l92:                                               \l  %93 = load i8*, i8** %7, align 8, !dbg !1842, !tbaa !1756\l  %94 = load i64, i64* %8, align 8, !dbg !1844, !tbaa !1761\l  %95 = getelementptr inbounds i8, i8* %93, i64 %94, !dbg !1845\l  %96 = load i8*, i8** %12, align 8, !dbg !1846, !tbaa !1756\l  %97 = ptrtoint i8* %95 to i64, !dbg !1847\l  %98 = ptrtoint i8* %96 to i64, !dbg !1847\l  %99 = sub i64 %97, %98, !dbg !1847\l  store i64 %99, i64* %13, align 8, !dbg !1848, !tbaa !1761\l  %100 = load i64, i64* %14, align 8, !dbg !1849, !tbaa !1761\l  %101 = load i64, i64* %13, align 8, !dbg !1851, !tbaa !1761\l  %102 = icmp sle i64 %100, %101, !dbg !1852\l  br i1 %102, label %103, label %106, !dbg !1853\l|{<s0>T|<s1>F}}"];
	Node0x171afc0:s0 -> Node0x171b010;
	Node0x171afc0:s1 -> Node0x171b060;
	Node0x171b010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%103:\l103:                                              \l  %104 = load i64, i64* %14, align 8, !dbg !1854, !tbaa !1761\l  %105 = sub nsw i64 %104, 1, !dbg !1855\l  store i64 %105, i64* %13, align 8, !dbg !1856, !tbaa !1761\l  br label %106, !dbg !1857\l}"];
	Node0x171b010 -> Node0x171b060;
	Node0x171b060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%106:\l106:                                              \l  %107 = load i8, i8* %9, align 1, !dbg !1858, !tbaa !1764\l  %108 = load i8*, i8** %12, align 8, !dbg !1859, !tbaa !1756\l  %109 = load i64, i64* %13, align 8, !dbg !1860, !tbaa !1761\l  %110 = getelementptr inbounds i8, i8* %108, i64 %109, !dbg !1859\l  store i8 %107, i8* %110, align 1, !dbg !1861, !tbaa !1764\l  %111 = load i8*, i8** %12, align 8, !dbg !1862, !tbaa !1756\l  %112 = load i64, i64* %13, align 8, !dbg !1863, !tbaa !1761\l  %113 = add nsw i64 %112, 1, !dbg !1864\l  %114 = getelementptr inbounds i8, i8* %111, i64 %113, !dbg !1862\l  store i8 0, i8* %114, align 1, !dbg !1865, !tbaa !1764\l  store i1 false, i1* %6, align 1, !dbg !1866\l  store i32 1, i32* %17, align 4\l  br label %115, !dbg !1866\l}"];
	Node0x171b060 -> Node0x171b0b0;
	Node0x171b0b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%115:\l115:                                              \l  %116 = bitcast i64* %14 to i8*, !dbg !1867\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116) #26, !dbg !1867\l  %117 = bitcast i64* %13 to i8*, !dbg !1867\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117) #26, !dbg !1867\l  %118 = bitcast i8** %12 to i8*, !dbg !1867\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %118) #26, !dbg !1867\l  %119 = load i1, i1* %6, align 1, !dbg !1867\l  ret i1 %119, !dbg !1867\l}"];
}
