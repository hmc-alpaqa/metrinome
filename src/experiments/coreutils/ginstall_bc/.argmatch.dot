digraph "CFG for 'argmatch' function" {
	label="CFG for 'argmatch' function";

	Node0x1c42840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i8**, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i8, align 1\l  %14 = alloca i32, align 4\l  store i8* %0, i8** %6, align 8, !tbaa !1748\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1740, metadata\l... !DIExpression()), !dbg !1752\l  store i8** %1, i8*** %7, align 8, !tbaa !1748\l  call void @llvm.dbg.declare(metadata i8*** %7, metadata !1741, metadata\l... !DIExpression()), !dbg !1753\l  store i8* %2, i8** %8, align 8, !tbaa !1748\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1742, metadata\l... !DIExpression()), !dbg !1754\l  store i64 %3, i64* %9, align 8, !tbaa !1755\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1743, metadata\l... !DIExpression()), !dbg !1757\l  %15 = bitcast i64* %10 to i8*, !dbg !1758\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #26, !dbg !1758\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1744, metadata\l... !DIExpression()), !dbg !1759\l  %16 = bitcast i64* %11 to i8*, !dbg !1760\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #26, !dbg !1760\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1745, metadata\l... !DIExpression()), !dbg !1761\l  %17 = bitcast i64* %12 to i8*, !dbg !1762\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #26, !dbg !1762\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1746, metadata\l... !DIExpression()), !dbg !1763\l  store i64 -1, i64* %12, align 8, !dbg !1763, !tbaa !1755\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #26, !dbg !1764\l  call void @llvm.dbg.declare(metadata i8* %13, metadata !1747, metadata\l... !DIExpression()), !dbg !1765\l  store i8 0, i8* %13, align 1, !dbg !1765, !tbaa !1766\l  %18 = load i8*, i8** %6, align 8, !dbg !1768, !tbaa !1748\l  %19 = call i64 @strlen(i8* noundef %18) #27, !dbg !1769\l  store i64 %19, i64* %11, align 8, !dbg !1770, !tbaa !1755\l  store i64 0, i64* %10, align 8, !dbg !1771, !tbaa !1755\l  br label %20, !dbg !1773\l}"];
	Node0x1c42840 -> Node0x1c42930;
	Node0x1c42930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = load i8**, i8*** %7, align 8, !dbg !1774, !tbaa !1748\l  %22 = load i64, i64* %10, align 8, !dbg !1776, !tbaa !1755\l  %23 = getelementptr inbounds i8*, i8** %21, i64 %22, !dbg !1774\l  %24 = load i8*, i8** %23, align 8, !dbg !1774, !tbaa !1748\l  %25 = icmp ne i8* %24, null, !dbg !1777\l  br i1 %25, label %26, label %75, !dbg !1777\l|{<s0>T|<s1>F}}"];
	Node0x1c42930:s0 -> Node0x1c42980;
	Node0x1c42930:s1 -> Node0x1c42d90;
	Node0x1c42980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i8**, i8*** %7, align 8, !dbg !1778, !tbaa !1748\l  %28 = load i64, i64* %10, align 8, !dbg !1781, !tbaa !1755\l  %29 = getelementptr inbounds i8*, i8** %27, i64 %28, !dbg !1778\l  %30 = load i8*, i8** %29, align 8, !dbg !1778, !tbaa !1748\l  %31 = load i8*, i8** %6, align 8, !dbg !1782, !tbaa !1748\l  %32 = load i64, i64* %11, align 8, !dbg !1783, !tbaa !1755\l  %33 = call i32 @strncmp(i8* noundef %30, i8* noundef %31, i64 noundef %32)\l... #27, !dbg !1784\l  %34 = icmp ne i32 %33, 0, !dbg !1784\l  br i1 %34, label %71, label %35, !dbg !1785\l|{<s0>T|<s1>F}}"];
	Node0x1c42980:s0 -> Node0x1c42cf0;
	Node0x1c42980:s1 -> Node0x1c429d0;
	Node0x1c429d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%35:\l35:                                               \l  %36 = load i8**, i8*** %7, align 8, !dbg !1786, !tbaa !1748\l  %37 = load i64, i64* %10, align 8, !dbg !1789, !tbaa !1755\l  %38 = getelementptr inbounds i8*, i8** %36, i64 %37, !dbg !1786\l  %39 = load i8*, i8** %38, align 8, !dbg !1786, !tbaa !1748\l  %40 = call i64 @strlen(i8* noundef %39) #27, !dbg !1790\l  %41 = load i64, i64* %11, align 8, !dbg !1791, !tbaa !1755\l  %42 = icmp eq i64 %40, %41, !dbg !1792\l  br i1 %42, label %43, label %45, !dbg !1793\l|{<s0>T|<s1>F}}"];
	Node0x1c429d0:s0 -> Node0x1c42a20;
	Node0x1c429d0:s1 -> Node0x1c42a70;
	Node0x1c42a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%43:\l43:                                               \l  %44 = load i64, i64* %10, align 8, !dbg !1794, !tbaa !1755\l  store i64 %44, i64* %5, align 8, !dbg !1795\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1795\l}"];
	Node0x1c42a20 -> Node0x1c42e80;
	Node0x1c42a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%45:\l45:                                               \l  %46 = load i64, i64* %12, align 8, !dbg !1796, !tbaa !1755\l  %47 = icmp eq i64 %46, -1, !dbg !1798\l  br i1 %47, label %48, label %50, !dbg !1799\l|{<s0>T|<s1>F}}"];
	Node0x1c42a70:s0 -> Node0x1c42ac0;
	Node0x1c42a70:s1 -> Node0x1c42b10;
	Node0x1c42ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%48:\l48:                                               \l  %49 = load i64, i64* %10, align 8, !dbg !1800, !tbaa !1755\l  store i64 %49, i64* %12, align 8, !dbg !1801, !tbaa !1755\l  br label %69, !dbg !1802\l}"];
	Node0x1c42ac0 -> Node0x1c42c50;
	Node0x1c42b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%50:\l50:                                               \l  %51 = load i8*, i8** %8, align 8, !dbg !1803, !tbaa !1748\l  %52 = icmp eq i8* %51, null, !dbg !1806\l  br i1 %52, label %67, label %53, !dbg !1807\l|{<s0>T|<s1>F}}"];
	Node0x1c42b10:s0 -> Node0x1c42bb0;
	Node0x1c42b10:s1 -> Node0x1c42b60;
	Node0x1c42b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%53:\l53:                                               \l  %54 = load i8*, i8** %8, align 8, !dbg !1808, !tbaa !1748\l  %55 = load i64, i64* %9, align 8, !dbg !1809, !tbaa !1755\l  %56 = load i64, i64* %12, align 8, !dbg !1810, !tbaa !1755\l  %57 = mul i64 %55, %56, !dbg !1811\l  %58 = getelementptr inbounds i8, i8* %54, i64 %57, !dbg !1812\l  %59 = load i8*, i8** %8, align 8, !dbg !1813, !tbaa !1748\l  %60 = load i64, i64* %9, align 8, !dbg !1814, !tbaa !1755\l  %61 = load i64, i64* %10, align 8, !dbg !1815, !tbaa !1755\l  %62 = mul i64 %60, %61, !dbg !1816\l  %63 = getelementptr inbounds i8, i8* %59, i64 %62, !dbg !1817\l  %64 = load i64, i64* %9, align 8, !dbg !1818, !tbaa !1755\l  %65 = call i32 @memcmp(i8* noundef %58, i8* noundef %63, i64 noundef %64)\l... #27, !dbg !1819\l  %66 = icmp ne i32 %65, 0, !dbg !1819\l  br i1 %66, label %67, label %68, !dbg !1820\l|{<s0>T|<s1>F}}"];
	Node0x1c42b60:s0 -> Node0x1c42bb0;
	Node0x1c42b60:s1 -> Node0x1c42c00;
	Node0x1c42bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%67:\l67:                                               \l  store i8 1, i8* %13, align 1, !dbg !1821, !tbaa !1766\l  br label %68, !dbg !1823\l}"];
	Node0x1c42bb0 -> Node0x1c42c00;
	Node0x1c42c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%68:\l68:                                               \l  br label %69\l}"];
	Node0x1c42c00 -> Node0x1c42c50;
	Node0x1c42c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%69:\l69:                                               \l  br label %70\l}"];
	Node0x1c42c50 -> Node0x1c42ca0;
	Node0x1c42ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%70:\l70:                                               \l  br label %71, !dbg !1824\l}"];
	Node0x1c42ca0 -> Node0x1c42cf0;
	Node0x1c42cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%71:\l71:                                               \l  br label %72, !dbg !1825\l}"];
	Node0x1c42cf0 -> Node0x1c42d40;
	Node0x1c42d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%72:\l72:                                               \l  %73 = load i64, i64* %10, align 8, !dbg !1826, !tbaa !1755\l  %74 = add i64 %73, 1, !dbg !1826\l  store i64 %74, i64* %10, align 8, !dbg !1826, !tbaa !1755\l  br label %20, !dbg !1827, !llvm.loop !1828\l}"];
	Node0x1c42d40 -> Node0x1c42930;
	Node0x1c42d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%75:\l75:                                               \l  %76 = load i8, i8* %13, align 1, !dbg !1832, !tbaa !1766, !range !1834\l  %77 = trunc i8 %76 to i1, !dbg !1832\l  br i1 %77, label %78, label %79, !dbg !1835\l|{<s0>T|<s1>F}}"];
	Node0x1c42d90:s0 -> Node0x1c42de0;
	Node0x1c42d90:s1 -> Node0x1c42e30;
	Node0x1c42de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%78:\l78:                                               \l  store i64 -2, i64* %5, align 8, !dbg !1836\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1836\l}"];
	Node0x1c42de0 -> Node0x1c42e80;
	Node0x1c42e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%79:\l79:                                               \l  %80 = load i64, i64* %12, align 8, !dbg !1837, !tbaa !1755\l  store i64 %80, i64* %5, align 8, !dbg !1838\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1838\l}"];
	Node0x1c42e30 -> Node0x1c42e80;
	Node0x1c42e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%81:\l81:                                               \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #26, !dbg !1839\l  %82 = bitcast i64* %12 to i8*, !dbg !1839\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #26, !dbg !1839\l  %83 = bitcast i64* %11 to i8*, !dbg !1839\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #26, !dbg !1839\l  %84 = bitcast i64* %10 to i8*, !dbg !1839\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #26, !dbg !1839\l  %85 = load i64, i64* %5, align 8, !dbg !1839\l  ret i64 %85, !dbg !1839\l}"];
}
