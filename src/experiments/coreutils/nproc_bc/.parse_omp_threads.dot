digraph "CFG for 'parse_omp_threads' function" {
	label="CFG for 'parse_omp_threads' function";

	Node0xe4d730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1:\l  %2 = alloca i64, align 8\l  %3 = alloca i8*, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i8*, align 8\l  %7 = alloca i64, align 8\l  store i8* %0, i8** %3, align 8, !tbaa !893\l  call void @llvm.dbg.declare(metadata i8** %3, metadata !887, metadata\l... !DIExpression()), !dbg !897\l  %8 = bitcast i64* %4 to i8*, !dbg !898\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #22, !dbg !898\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !888, metadata\l... !DIExpression()), !dbg !899\l  store i64 0, i64* %4, align 8, !dbg !899, !tbaa !900\l  %9 = load i8*, i8** %3, align 8, !dbg !902, !tbaa !893\l  %10 = icmp eq i8* %9, null, !dbg !904\l  br i1 %10, label %11, label %13, !dbg !905\l|{<s0>T|<s1>F}}"];
	Node0xe4d730:s0 -> Node0xe4d850;
	Node0xe4d730:s1 -> Node0xe4d8a0;
	Node0xe4d850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%11:\l11:                                               \l  %12 = load i64, i64* %4, align 8, !dbg !906, !tbaa !900\l  store i64 %12, i64* %2, align 8, !dbg !907\l  store i32 1, i32* %5, align 4\l  br label %81, !dbg !907\l}"];
	Node0xe4d850 -> Node0xe4df80;
	Node0xe4d8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%13:\l13:                                               \l  br label %14, !dbg !908\l}"];
	Node0xe4d8a0 -> Node0xe4d8f0;
	Node0xe4d8f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l14:                                               \l  %15 = load i8*, i8** %3, align 8, !dbg !909, !tbaa !893\l  %16 = load i8, i8* %15, align 1, !dbg !910, !tbaa !911\l  %17 = sext i8 %16 to i32, !dbg !910\l  %18 = icmp ne i32 %17, 0, !dbg !912\l  br i1 %18, label %19, label %24, !dbg !913\l|{<s0>T|<s1>F}}"];
	Node0xe4d8f0:s0 -> Node0xe4d940;
	Node0xe4d8f0:s1 -> Node0xe4d990;
	Node0xe4d940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%19:\l19:                                               \l  %20 = load i8*, i8** %3, align 8, !dbg !914, !tbaa !893\l  %21 = load i8, i8* %20, align 1, !dbg !915, !tbaa !911\l  %22 = sext i8 %21 to i32, !dbg !915\l  %23 = call zeroext i1 @c_isspace(i32 noundef %22), !dbg !916\l  br label %24\l}"];
	Node0xe4d940 -> Node0xe4d990;
	Node0xe4d990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i1 [ false, %14 ], [ %23, %19 ], !dbg !917\l  br i1 %25, label %26, label %29, !dbg !908\l|{<s0>T|<s1>F}}"];
	Node0xe4d990:s0 -> Node0xe4d9e0;
	Node0xe4d990:s1 -> Node0xe4da30;
	Node0xe4d9e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i8*, i8** %3, align 8, !dbg !918, !tbaa !893\l  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !918\l  store i8* %28, i8** %3, align 8, !dbg !918, !tbaa !893\l  br label %14, !dbg !908, !llvm.loop !919\l}"];
	Node0xe4d9e0 -> Node0xe4d8f0;
	Node0xe4da30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%29:\l29:                                               \l  %30 = load i8*, i8** %3, align 8, !dbg !922, !tbaa !893\l  %31 = load i8, i8* %30, align 1, !dbg !923, !tbaa !911\l  %32 = sext i8 %31 to i32, !dbg !923\l  %33 = call zeroext i1 @c_isdigit(i32 noundef %32), !dbg !924\l  br i1 %33, label %34, label %79, !dbg !925\l|{<s0>T|<s1>F}}"];
	Node0xe4da30:s0 -> Node0xe4da80;
	Node0xe4da30:s1 -> Node0xe4df30;
	Node0xe4da80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%34:\l34:                                               \l  %35 = bitcast i8** %6 to i8*, !dbg !926\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #22, !dbg !926\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !889, metadata\l... !DIExpression()), !dbg !927\l  store i8* null, i8** %6, align 8, !dbg !927, !tbaa !893\l  %36 = bitcast i64* %7 to i8*, !dbg !928\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #22, !dbg !928\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !892, metadata\l... !DIExpression()), !dbg !929\l  %37 = load i8*, i8** %3, align 8, !dbg !930, !tbaa !893\l  %38 = call i64 @strtoul(i8* noundef %37, i8** noundef %6, i32 noundef 10)\l... #22, !dbg !931\l  store i64 %38, i64* %7, align 8, !dbg !929, !tbaa !900\l  %39 = load i8*, i8** %6, align 8, !dbg !932, !tbaa !893\l  %40 = icmp ne i8* %39, null, !dbg !934\l  br i1 %40, label %41, label %73, !dbg !935\l|{<s0>T|<s1>F}}"];
	Node0xe4da80:s0 -> Node0xe4dad0;
	Node0xe4da80:s1 -> Node0xe4de40;
	Node0xe4dad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%41:\l41:                                               \l  br label %42, !dbg !936\l}"];
	Node0xe4dad0 -> Node0xe4db20;
	Node0xe4db20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%42:\l42:                                               \l  %43 = load i8*, i8** %6, align 8, !dbg !938, !tbaa !893\l  %44 = load i8, i8* %43, align 1, !dbg !939, !tbaa !911\l  %45 = sext i8 %44 to i32, !dbg !939\l  %46 = icmp ne i32 %45, 0, !dbg !940\l  br i1 %46, label %47, label %52, !dbg !941\l|{<s0>T|<s1>F}}"];
	Node0xe4db20:s0 -> Node0xe4db70;
	Node0xe4db20:s1 -> Node0xe4dbc0;
	Node0xe4db70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%47:\l47:                                               \l  %48 = load i8*, i8** %6, align 8, !dbg !942, !tbaa !893\l  %49 = load i8, i8* %48, align 1, !dbg !943, !tbaa !911\l  %50 = sext i8 %49 to i32, !dbg !943\l  %51 = call zeroext i1 @c_isspace(i32 noundef %50), !dbg !944\l  br label %52\l}"];
	Node0xe4db70 -> Node0xe4dbc0;
	Node0xe4dbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%52:\l52:                                               \l  %53 = phi i1 [ false, %42 ], [ %51, %47 ], !dbg !945\l  br i1 %53, label %54, label %57, !dbg !936\l|{<s0>T|<s1>F}}"];
	Node0xe4dbc0:s0 -> Node0xe4dc10;
	Node0xe4dbc0:s1 -> Node0xe4dc60;
	Node0xe4dc10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%54:\l54:                                               \l  %55 = load i8*, i8** %6, align 8, !dbg !946, !tbaa !893\l  %56 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !946\l  store i8* %56, i8** %6, align 8, !dbg !946, !tbaa !893\l  br label %42, !dbg !936, !llvm.loop !947\l}"];
	Node0xe4dc10 -> Node0xe4db20;
	Node0xe4dc60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%57:\l57:                                               \l  %58 = load i8*, i8** %6, align 8, !dbg !948, !tbaa !893\l  %59 = load i8, i8* %58, align 1, !dbg !950, !tbaa !911\l  %60 = sext i8 %59 to i32, !dbg !950\l  %61 = icmp eq i32 %60, 0, !dbg !951\l  br i1 %61, label %62, label %64, !dbg !952\l|{<s0>T|<s1>F}}"];
	Node0xe4dc60:s0 -> Node0xe4dcb0;
	Node0xe4dc60:s1 -> Node0xe4dd00;
	Node0xe4dcb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%62:\l62:                                               \l  %63 = load i64, i64* %7, align 8, !dbg !953, !tbaa !900\l  store i64 %63, i64* %2, align 8, !dbg !954\l  store i32 1, i32* %5, align 4\l  br label %74, !dbg !954\l}"];
	Node0xe4dcb0 -> Node0xe4de90;
	Node0xe4dd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%64:\l64:                                               \l  %65 = load i8*, i8** %6, align 8, !dbg !955, !tbaa !893\l  %66 = load i8, i8* %65, align 1, !dbg !957, !tbaa !911\l  %67 = sext i8 %66 to i32, !dbg !957\l  %68 = icmp eq i32 %67, 44, !dbg !958\l  br i1 %68, label %69, label %71, !dbg !959\l|{<s0>T|<s1>F}}"];
	Node0xe4dd00:s0 -> Node0xe4dd50;
	Node0xe4dd00:s1 -> Node0xe4dda0;
	Node0xe4dd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%69:\l69:                                               \l  %70 = load i64, i64* %7, align 8, !dbg !960, !tbaa !900\l  store i64 %70, i64* %2, align 8, !dbg !961\l  store i32 1, i32* %5, align 4\l  br label %74, !dbg !961\l}"];
	Node0xe4dd50 -> Node0xe4de90;
	Node0xe4dda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%71:\l71:                                               \l  br label %72\l}"];
	Node0xe4dda0 -> Node0xe4ddf0;
	Node0xe4ddf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%72:\l72:                                               \l  br label %73, !dbg !962\l}"];
	Node0xe4ddf0 -> Node0xe4de40;
	Node0xe4de40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%73:\l73:                                               \l  store i32 0, i32* %5, align 4, !dbg !963\l  br label %74, !dbg !963\l}"];
	Node0xe4de40 -> Node0xe4de90;
	Node0xe4de90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%74:\l74:                                               \l  %75 = bitcast i64* %7 to i8*, !dbg !963\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #22, !dbg !963\l  %76 = bitcast i8** %6 to i8*, !dbg !963\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #22, !dbg !963\l  %77 = load i32, i32* %5, align 4\l  switch i32 %77, label %81 [\l    i32 0, label %78\l  ]\l|{<s0>def|<s1>0}}"];
	Node0xe4de90:s0 -> Node0xe4df80;
	Node0xe4de90:s1 -> Node0xe4dee0;
	Node0xe4dee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%78:\l78:                                               \l  br label %79, !dbg !964\l}"];
	Node0xe4dee0 -> Node0xe4df30;
	Node0xe4df30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%79:\l79:                                               \l  %80 = load i64, i64* %4, align 8, !dbg !965, !tbaa !900\l  store i64 %80, i64* %2, align 8, !dbg !966\l  store i32 1, i32* %5, align 4\l  br label %81, !dbg !966\l}"];
	Node0xe4df30 -> Node0xe4df80;
	Node0xe4df80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%81:\l81:                                               \l  %82 = bitcast i64* %4 to i8*, !dbg !967\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #22, !dbg !967\l  %83 = load i64, i64* %2, align 8, !dbg !967\l  ret i64 %83, !dbg !967\l}"];
}
