digraph "CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function" {
	label="CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function";

	Node0xa29990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4, !tbaa !747\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !232, metadata\l... !DIExpression()), !dbg !751\l  store i32 %1, i32* %4, align 4, !tbaa !747\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !233, metadata\l... !DIExpression()), !dbg !752\l  %8 = bitcast i32* %5 to i8*, !dbg !753\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #21, !dbg !753\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !234, metadata\l... !DIExpression()), !dbg !754\l  %9 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !755, !tbaa !747\l  %10 = icmp sle i32 0, %9, !dbg !757\l  br i1 %10, label %11, label %31, !dbg !758\l|{<s0>T|<s1>F}}"];
	Node0xa29990:s0 -> Node0xa2abd0;
	Node0xa29990:s1 -> Node0xa2ae00;
	Node0xa2abd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%11:\l11:                                               \l  %12 = load i32, i32* %3, align 4, !dbg !759, !tbaa !747\l  %13 = load i32, i32* %4, align 4, !dbg !761, !tbaa !747\l  %14 = call i32 (i32, i32, ...) @fcntl(i32 noundef %12, i32 noundef 1030, i32\l... noundef %13), !dbg !762\l  store i32 %14, i32* %5, align 4, !dbg !763, !tbaa !747\l  %15 = load i32, i32* %5, align 4, !dbg !764, !tbaa !747\l  %16 = icmp sle i32 0, %15, !dbg !766\l  br i1 %16, label %21, label %17, !dbg !767\l|{<s0>T|<s1>F}}"];
	Node0xa2abd0:s0 -> Node0xa2ac70;
	Node0xa2abd0:s1 -> Node0xa2ac20;
	Node0xa2ac20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%17:\l17:                                               \l  %18 = call i32* @__errno_location() #22, !dbg !768\l  %19 = load i32, i32* %18, align 4, !dbg !768, !tbaa !747\l  %20 = icmp ne i32 %19, 22, !dbg !769\l  br i1 %20, label %21, label %22, !dbg !770\l|{<s0>T|<s1>F}}"];
	Node0xa2ac20:s0 -> Node0xa2ac70;
	Node0xa2ac20:s1 -> Node0xa2acc0;
	Node0xa2ac70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%21:\l21:                                               \l  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg\l... !771, !tbaa !747\l  br label %30, !dbg !773\l}"];
	Node0xa2ac70 -> Node0xa2adb0;
	Node0xa2acc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%22:\l22:                                               \l  %23 = load i32, i32* %3, align 4, !dbg !774, !tbaa !747\l  %24 = load i32, i32* %4, align 4, !dbg !776, !tbaa !747\l  %25 = call i32 @rpl_fcntl_DUPFD(i32 noundef %23, i32 noundef %24), !dbg !777\l  store i32 %25, i32* %5, align 4, !dbg !778, !tbaa !747\l  %26 = load i32, i32* %5, align 4, !dbg !779, !tbaa !747\l  %27 = icmp sge i32 %26, 0, !dbg !781\l  br i1 %27, label %28, label %29, !dbg !782\l|{<s0>T|<s1>F}}"];
	Node0xa2acc0:s0 -> Node0xa2ad10;
	Node0xa2acc0:s1 -> Node0xa2ad60;
	Node0xa2ad10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%28:\l28:                                               \l  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !783, !tbaa !747\l  br label %29, !dbg !784\l}"];
	Node0xa2ad10 -> Node0xa2ad60;
	Node0xa2ad60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%29:\l29:                                               \l  br label %30\l}"];
	Node0xa2ad60 -> Node0xa2adb0;
	Node0xa2adb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%30:\l30:                                               \l  br label %35, !dbg !785\l}"];
	Node0xa2adb0 -> Node0xa2ae50;
	Node0xa2ae00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%31:\l31:                                               \l  %32 = load i32, i32* %3, align 4, !dbg !786, !tbaa !747\l  %33 = load i32, i32* %4, align 4, !dbg !787, !tbaa !747\l  %34 = call i32 @rpl_fcntl_DUPFD(i32 noundef %32, i32 noundef %33), !dbg !788\l  store i32 %34, i32* %5, align 4, !dbg !789, !tbaa !747\l  br label %35\l}"];
	Node0xa2ae00 -> Node0xa2ae50;
	Node0xa2ae50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = load i32, i32* %5, align 4, !dbg !790, !tbaa !747\l  %37 = icmp sle i32 0, %36, !dbg !791\l  br i1 %37, label %38, label %64, !dbg !792\l|{<s0>T|<s1>F}}"];
	Node0xa2ae50:s0 -> Node0xa2aea0;
	Node0xa2ae50:s1 -> Node0xa2b030;
	Node0xa2aea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%38:\l38:                                               \l  %39 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !793, !tbaa !747\l  %40 = icmp eq i32 %39, -1, !dbg !794\l  br i1 %40, label %41, label %64, !dbg !795\l|{<s0>T|<s1>F}}"];
	Node0xa2aea0:s0 -> Node0xa2aef0;
	Node0xa2aea0:s1 -> Node0xa2b030;
	Node0xa2aef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = bitcast i32* %6 to i8*, !dbg !796\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #21, !dbg !796\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !235, metadata\l... !DIExpression()), !dbg !797\l  %43 = load i32, i32* %5, align 4, !dbg !798, !tbaa !747\l  %44 = call i32 (i32, i32, ...) @fcntl(i32 noundef %43, i32 noundef 1), !dbg\l... !799\l  store i32 %44, i32* %6, align 4, !dbg !797, !tbaa !747\l  %45 = load i32, i32* %6, align 4, !dbg !800, !tbaa !747\l  %46 = icmp slt i32 %45, 0, !dbg !801\l  br i1 %46, label %53, label %47, !dbg !802\l|{<s0>T|<s1>F}}"];
	Node0xa2aef0:s0 -> Node0xa2af90;
	Node0xa2aef0:s1 -> Node0xa2af40;
	Node0xa2af40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%47:\l47:                                               \l  %48 = load i32, i32* %5, align 4, !dbg !803, !tbaa !747\l  %49 = load i32, i32* %6, align 4, !dbg !804, !tbaa !747\l  %50 = or i32 %49, 1, !dbg !805\l  %51 = call i32 (i32, i32, ...) @fcntl(i32 noundef %48, i32 noundef 2, i32\l... noundef %50), !dbg !806\l  %52 = icmp eq i32 %51, -1, !dbg !807\l  br i1 %52, label %53, label %62, !dbg !808\l|{<s0>T|<s1>F}}"];
	Node0xa2af40:s0 -> Node0xa2af90;
	Node0xa2af40:s1 -> Node0xa2afe0;
	Node0xa2af90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%53:\l53:                                               \l  %54 = bitcast i32* %7 to i8*, !dbg !809\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #21, !dbg !809\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !238, metadata\l... !DIExpression()), !dbg !810\l  %55 = call i32* @__errno_location() #22, !dbg !811\l  %56 = load i32, i32* %55, align 4, !dbg !811, !tbaa !747\l  store i32 %56, i32* %7, align 4, !dbg !810, !tbaa !747\l  %57 = load i32, i32* %5, align 4, !dbg !812, !tbaa !747\l  %58 = call i32 @close(i32 noundef %57), !dbg !813\l  %59 = load i32, i32* %7, align 4, !dbg !814, !tbaa !747\l  %60 = call i32* @__errno_location() #22, !dbg !815\l  store i32 %59, i32* %60, align 4, !dbg !816, !tbaa !747\l  store i32 -1, i32* %5, align 4, !dbg !817, !tbaa !747\l  %61 = bitcast i32* %7 to i8*, !dbg !818\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #21, !dbg !818\l  br label %62, !dbg !819\l}"];
	Node0xa2af90 -> Node0xa2afe0;
	Node0xa2afe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%62:\l62:                                               \l  %63 = bitcast i32* %6 to i8*, !dbg !820\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %63) #21, !dbg !820\l  br label %64, !dbg !821\l}"];
	Node0xa2afe0 -> Node0xa2b030;
	Node0xa2b030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = load i32, i32* %5, align 4, !dbg !822, !tbaa !747\l  %66 = bitcast i32* %5 to i8*, !dbg !823\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #21, !dbg !823\l  ret i32 %65, !dbg !824\l}"];
}
