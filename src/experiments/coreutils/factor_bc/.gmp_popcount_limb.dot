digraph "CFG for 'gmp_popcount_limb' function" {
	label="CFG for 'gmp_popcount_limb' function";

	Node0x1e06210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%1:\l  %2 = alloca i64, align 8\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  store i64 %0, i64* %2, align 8, !tbaa !790\l  call void @llvm.dbg.declare(metadata i64* %2, metadata !783, metadata\l... !DIExpression()), !dbg !794\l  %6 = bitcast i32* %3 to i8*, !dbg !795\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %6) #23, !dbg !795\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !784, metadata\l... !DIExpression()), !dbg !796\l  %7 = bitcast i32* %4 to i8*, !dbg !797\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #23, !dbg !797\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !785, metadata\l... !DIExpression()), !dbg !798\l  store i32 16, i32* %4, align 4, !dbg !798, !tbaa !799\l  store i32 0, i32* %3, align 4, !dbg !801, !tbaa !799\l  br label %8, !dbg !802\l}"];
	Node0x1e06210 -> Node0x1e08540;
	Node0x1e08540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l8:                                                \l  %9 = load i64, i64* %2, align 8, !dbg !803, !tbaa !790\l  %10 = icmp ugt i64 %9, 0, !dbg !804\l  br i1 %10, label %11, label %49, !dbg !805\l|{<s0>T|<s1>F}}"];
	Node0x1e08540:s0 -> Node0x1e08590;
	Node0x1e08540:s1 -> Node0x1e086d0;
	Node0x1e08590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%11:\l11:                                               \l  %12 = bitcast i32* %5 to i8*, !dbg !806\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #23, !dbg !806\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !786, metadata\l... !DIExpression()), !dbg !807\l  %13 = load i64, i64* %2, align 8, !dbg !808, !tbaa !790\l  %14 = load i64, i64* %2, align 8, !dbg !809, !tbaa !790\l  %15 = lshr i64 %14, 1, !dbg !810\l  %16 = and i64 %15, 21845, !dbg !811\l  %17 = sub i64 %13, %16, !dbg !812\l  %18 = trunc i64 %17 to i32, !dbg !808\l  store i32 %18, i32* %5, align 4, !dbg !807, !tbaa !799\l  %19 = load i32, i32* %5, align 4, !dbg !813, !tbaa !799\l  %20 = lshr i32 %19, 2, !dbg !814\l  %21 = and i32 %20, 13107, !dbg !815\l  %22 = load i32, i32* %5, align 4, !dbg !816, !tbaa !799\l  %23 = and i32 %22, 13107, !dbg !817\l  %24 = add i32 %21, %23, !dbg !818\l  store i32 %24, i32* %5, align 4, !dbg !819, !tbaa !799\l  %25 = load i32, i32* %5, align 4, !dbg !820, !tbaa !799\l  %26 = lshr i32 %25, 4, !dbg !821\l  %27 = load i32, i32* %5, align 4, !dbg !822, !tbaa !799\l  %28 = add i32 %26, %27, !dbg !823\l  store i32 %28, i32* %5, align 4, !dbg !824, !tbaa !799\l  %29 = load i32, i32* %5, align 4, !dbg !825, !tbaa !799\l  %30 = lshr i32 %29, 8, !dbg !826\l  %31 = and i32 %30, 15, !dbg !827\l  %32 = load i32, i32* %5, align 4, !dbg !828, !tbaa !799\l  %33 = and i32 %32, 15, !dbg !829\l  %34 = add i32 %31, %33, !dbg !830\l  store i32 %34, i32* %5, align 4, !dbg !831, !tbaa !799\l  %35 = load i32, i32* %5, align 4, !dbg !832, !tbaa !799\l  %36 = load i32, i32* %3, align 4, !dbg !833, !tbaa !799\l  %37 = add i32 %36, %35, !dbg !833\l  store i32 %37, i32* %3, align 4, !dbg !833, !tbaa !799\l  %38 = load i32, i32* %4, align 4, !dbg !834, !tbaa !799\l  %39 = sext i32 %38 to i64, !dbg !834\l  %40 = icmp ugt i64 64, %39, !dbg !836\l  br i1 %40, label %41, label %46, !dbg !837\l|{<s0>T|<s1>F}}"];
	Node0x1e08590:s0 -> Node0x1e085e0;
	Node0x1e08590:s1 -> Node0x1e08630;
	Node0x1e085e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%41:\l41:                                               \l  %42 = load i32, i32* %4, align 4, !dbg !838, !tbaa !799\l  %43 = load i64, i64* %2, align 8, !dbg !839, !tbaa !790\l  %44 = zext i32 %42 to i64, !dbg !839\l  %45 = lshr i64 %43, %44, !dbg !839\l  store i64 %45, i64* %2, align 8, !dbg !839, !tbaa !790\l  br label %47, !dbg !840\l}"];
	Node0x1e085e0 -> Node0x1e08680;
	Node0x1e08630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%46:\l46:                                               \l  store i64 0, i64* %2, align 8, !dbg !841, !tbaa !790\l  br label %47\l}"];
	Node0x1e08630 -> Node0x1e08680;
	Node0x1e08680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%47:\l47:                                               \l  %48 = bitcast i32* %5 to i8*, !dbg !842\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %48) #23, !dbg !842\l  br label %8, !dbg !843, !llvm.loop !844\l}"];
	Node0x1e08680 -> Node0x1e08540;
	Node0x1e086d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%49:\l49:                                               \l  %50 = load i32, i32* %3, align 4, !dbg !848, !tbaa !799\l  %51 = bitcast i32* %4 to i8*, !dbg !849\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %51) #23, !dbg !849\l  %52 = bitcast i32* %3 to i8*, !dbg !849\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %52) #23, !dbg !849\l  ret i32 %50, !dbg !850\l}"];
}
