digraph "CFG for 'mpz_get_d' function" {
	label="CFG for 'mpz_get_d' function";

	Node0x1bcca90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%1:\l  %2 = alloca double, align 8\l  %3 = alloca %struct.__mpz_struct*, align 8\l  %4 = alloca i32, align 4\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca double, align 8\l  %8 = alloca double, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i64, align 8\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  store %struct.__mpz_struct* %0, %struct.__mpz_struct** %3, align 8, !tbaa\l... !795\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %3, metadata\l... !785, metadata !DIExpression()), !dbg !799\l  %13 = bitcast i32* %4 to i8*, !dbg !800\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #23, !dbg !800\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !786, metadata\l... !DIExpression()), !dbg !801\l  %14 = bitcast i64* %5 to i8*, !dbg !802\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #23, !dbg !802\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !787, metadata\l... !DIExpression()), !dbg !803\l  %15 = bitcast i64* %6 to i8*, !dbg !804\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #23, !dbg !804\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !788, metadata\l... !DIExpression()), !dbg !805\l  %16 = bitcast double* %7 to i8*, !dbg !806\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #23, !dbg !806\l  call void @llvm.dbg.declare(metadata double* %7, metadata !789, metadata\l... !DIExpression()), !dbg !807\l  %17 = bitcast double* %8 to i8*, !dbg !808\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #23, !dbg !808\l  call void @llvm.dbg.declare(metadata double* %8, metadata !790, metadata\l... !DIExpression()), !dbg !809\l  store double 0x43F0000000000000, double* %8, align 8, !dbg !809, !tbaa !810\l  %18 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !812, !tbaa !795\l  %19 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %18, i32 0, i32 1, !dbg !812\l  %20 = load i32, i32* %19, align 4, !dbg !812, !tbaa !813\l  %21 = icmp sge i32 %20, 0, !dbg !812\l  br i1 %21, label %22, label %26, !dbg !812\l|{<s0>T|<s1>F}}"];
	Node0x1bcca90:s0 -> Node0x1bccae0;
	Node0x1bcca90:s1 -> Node0x1bccb30;
	Node0x1bccae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%22:\l22:                                               \l  %23 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !812, !tbaa !795\l  %24 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %23, i32 0, i32 1, !dbg !812\l  %25 = load i32, i32* %24, align 4, !dbg !812, !tbaa !813\l  br label %31, !dbg !812\l}"];
	Node0x1bccae0 -> Node0x1bccb80;
	Node0x1bccb30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%26:\l26:                                               \l  %27 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !812, !tbaa !795\l  %28 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %27, i32 0, i32 1, !dbg !812\l  %29 = load i32, i32* %28, align 4, !dbg !812, !tbaa !813\l  %30 = sub nsw i32 0, %29, !dbg !812\l  br label %31, !dbg !812\l}"];
	Node0x1bccb30 -> Node0x1bccb80;
	Node0x1bccb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%31:\l31:                                               \l  %32 = phi i32 [ %25, %22 ], [ %30, %26 ], !dbg !812\l  %33 = sext i32 %32 to i64, !dbg !812\l  store i64 %33, i64* %6, align 8, !dbg !816, !tbaa !817\l  %34 = load i64, i64* %6, align 8, !dbg !819, !tbaa !817\l  %35 = icmp eq i64 %34, 0, !dbg !821\l  br i1 %35, label %36, label %37, !dbg !822\l|{<s0>T|<s1>F}}"];
	Node0x1bccb80:s0 -> Node0x1bccbd0;
	Node0x1bccb80:s1 -> Node0x1bccc20;
	Node0x1bccbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%36:\l36:                                               \l  store double 0.000000e+00, double* %2, align 8, !dbg !823\l  store i32 1, i32* %9, align 4\l  br label %148, !dbg !823\l}"];
	Node0x1bccbd0 -> Node0x1bcd3f0;
	Node0x1bccc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%37:\l37:                                               \l  %38 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !824, !tbaa !795\l  %39 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %38, i32 0, i32 2, !dbg !825\l  %40 = load i64*, i64** %39, align 8, !dbg !825, !tbaa !826\l  %41 = load i64, i64* %6, align 8, !dbg !827, !tbaa !817\l  %42 = add nsw i64 %41, -1, !dbg !827\l  store i64 %42, i64* %6, align 8, !dbg !827, !tbaa !817\l  %43 = getelementptr inbounds i64, i64* %40, i64 %42, !dbg !824\l  %44 = load i64, i64* %43, align 8, !dbg !824, !tbaa !817\l  store i64 %44, i64* %5, align 8, !dbg !828, !tbaa !817\l  br label %45, !dbg !829\l}"];
	Node0x1bccc20 -> Node0x1bccc70;
	Node0x1bccc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%45:\l45:                                               \l  %46 = bitcast i64* %10 to i8*, !dbg !830\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #23, !dbg !830\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !791, metadata\l... !DIExpression()), !dbg !830\l  %47 = load i64, i64* %5, align 8, !dbg !830, !tbaa !817\l  store i64 %47, i64* %10, align 8, !dbg !830, !tbaa !817\l  %48 = bitcast i32* %11 to i8*, !dbg !830\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #23, !dbg !830\l  call void @llvm.dbg.declare(metadata i32* %11, metadata !793, metadata\l... !DIExpression()), !dbg !830\l  store i32 0, i32* %11, align 4, !dbg !830, !tbaa !831\l  %49 = bitcast i32* %12 to i8*, !dbg !830\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #23, !dbg !830\l  call void @llvm.dbg.declare(metadata i32* %12, metadata !794, metadata\l... !DIExpression()), !dbg !830\l  store i32 8, i32* %12, align 4, !dbg !830, !tbaa !831\l  %50 = load i32, i32* %12, align 4, !dbg !832, !tbaa !831\l  %51 = sext i32 %50 to i64, !dbg !832\l  %52 = icmp ugt i64 64, %51, !dbg !832\l  br i1 %52, label %53, label %67, !dbg !830\l|{<s0>T|<s1>F}}"];
	Node0x1bccc70:s0 -> Node0x1bcccc0;
	Node0x1bccc70:s1 -> Node0x1bcce50;
	Node0x1bcccc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%53:\l53:                                               \l  br label %54, !dbg !832\l}"];
	Node0x1bcccc0 -> Node0x1bccd10;
	Node0x1bccd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%54:\l54:                                               \l  %55 = load i64, i64* %10, align 8, !dbg !834, !tbaa !817\l  %56 = and i64 %55, -72057594037927936, !dbg !834\l  %57 = icmp eq i64 %56, 0, !dbg !834\l  br i1 %57, label %58, label %66, !dbg !837\l|{<s0>T|<s1>F}}"];
	Node0x1bccd10:s0 -> Node0x1bccd60;
	Node0x1bccd10:s1 -> Node0x1bcce00;
	Node0x1bccd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%58:\l58:                                               \l  %59 = load i32, i32* %12, align 4, !dbg !838, !tbaa !831\l  %60 = load i64, i64* %10, align 8, !dbg !838, !tbaa !817\l  %61 = zext i32 %59 to i64, !dbg !838\l  %62 = shl i64 %60, %61, !dbg !838\l  store i64 %62, i64* %10, align 8, !dbg !838, !tbaa !817\l  br label %63, !dbg !838\l}"];
	Node0x1bccd60 -> Node0x1bccdb0;
	Node0x1bccdb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%63:\l63:                                               \l  %64 = load i32, i32* %11, align 4, !dbg !834, !tbaa !831\l  %65 = add i32 %64, 8, !dbg !834\l  store i32 %65, i32* %11, align 4, !dbg !834, !tbaa !831\l  br label %54, !dbg !834, !llvm.loop !840\l}"];
	Node0x1bccdb0 -> Node0x1bccd10;
	Node0x1bcce00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%66:\l66:                                               \l  br label %67, !dbg !837\l}"];
	Node0x1bcce00 -> Node0x1bcce50;
	Node0x1bcce50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%67:\l67:                                               \l  br label %68, !dbg !830\l}"];
	Node0x1bcce50 -> Node0x1bccea0;
	Node0x1bccea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = load i64, i64* %10, align 8, !dbg !843, !tbaa !817\l  %70 = and i64 %69, -9223372036854775808, !dbg !843\l  %71 = icmp eq i64 %70, 0, !dbg !843\l  br i1 %71, label %72, label %78, !dbg !846\l|{<s0>T|<s1>F}}"];
	Node0x1bccea0:s0 -> Node0x1bccef0;
	Node0x1bccea0:s1 -> Node0x1bccf90;
	Node0x1bccef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  %73 = load i64, i64* %10, align 8, !dbg !843, !tbaa !817\l  %74 = shl i64 %73, 1, !dbg !843\l  store i64 %74, i64* %10, align 8, !dbg !843, !tbaa !817\l  br label %75, !dbg !843\l}"];
	Node0x1bccef0 -> Node0x1bccf40;
	Node0x1bccf40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  %76 = load i32, i32* %11, align 4, !dbg !843, !tbaa !831\l  %77 = add i32 %76, 1, !dbg !843\l  store i32 %77, i32* %11, align 4, !dbg !843, !tbaa !831\l  br label %68, !dbg !843, !llvm.loop !847\l}"];
	Node0x1bccf40 -> Node0x1bccea0;
	Node0x1bccf90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%78:\l78:                                               \l  %79 = load i32, i32* %11, align 4, !dbg !830, !tbaa !831\l  store i32 %79, i32* %4, align 4, !dbg !830, !tbaa !831\l  %80 = bitcast i32* %12 to i8*, !dbg !829\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %80) #23, !dbg !829\l  %81 = bitcast i32* %11 to i8*, !dbg !829\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %81) #23, !dbg !829\l  %82 = bitcast i64* %10 to i8*, !dbg !829\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #23, !dbg !829\l  br label %83, !dbg !830\l}"];
	Node0x1bccf90 -> Node0x1bccfe0;
	Node0x1bccfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%83:\l83:                                               \l  br label %84, !dbg !830\l}"];
	Node0x1bccfe0 -> Node0x1bcd030;
	Node0x1bcd030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%84:\l84:                                               \l  %85 = load i32, i32* %4, align 4, !dbg !848, !tbaa !831\l  %86 = add nsw i32 %85, 53, !dbg !849\l  %87 = sext i32 %86 to i64, !dbg !848\l  %88 = sub i64 %87, 64, !dbg !850\l  %89 = trunc i64 %88 to i32, !dbg !848\l  store i32 %89, i32* %4, align 4, !dbg !851, !tbaa !831\l  %90 = load i32, i32* %4, align 4, !dbg !852, !tbaa !831\l  %91 = icmp slt i32 %90, 0, !dbg !854\l  br i1 %91, label %92, label %99, !dbg !855\l|{<s0>T|<s1>F}}"];
	Node0x1bcd030:s0 -> Node0x1bcd080;
	Node0x1bcd030:s1 -> Node0x1bcd0d0;
	Node0x1bcd080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%92:\l92:                                               \l  %93 = load i32, i32* %4, align 4, !dbg !856, !tbaa !831\l  %94 = sub nsw i32 0, %93, !dbg !857\l  %95 = zext i32 %94 to i64, !dbg !858\l  %96 = shl i64 -1, %95, !dbg !858\l  %97 = load i64, i64* %5, align 8, !dbg !859, !tbaa !817\l  %98 = and i64 %97, %96, !dbg !859\l  store i64 %98, i64* %5, align 8, !dbg !859, !tbaa !817\l  br label %99, !dbg !860\l}"];
	Node0x1bcd080 -> Node0x1bcd0d0;
	Node0x1bcd0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%99:\l99:                                               \l  %100 = load i64, i64* %5, align 8, !dbg !861, !tbaa !817\l  %101 = uitofp i64 %100 to double, !dbg !861\l  store double %101, double* %7, align 8, !dbg !863, !tbaa !810\l  br label %102, !dbg !864\l}"];
	Node0x1bcd0d0 -> Node0x1bcd120;
	Node0x1bcd120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  %103 = load i64, i64* %6, align 8, !dbg !865, !tbaa !817\l  %104 = add nsw i64 %103, -1, !dbg !865\l  store i64 %104, i64* %6, align 8, !dbg !865, !tbaa !817\l  %105 = icmp sge i64 %104, 0, !dbg !867\l  br i1 %105, label %106, label %138, !dbg !868\l|{<s0>T|<s1>F}}"];
	Node0x1bcd120:s0 -> Node0x1bcd170;
	Node0x1bcd120:s1 -> Node0x1bcd300;
	Node0x1bcd170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  %107 = load double, double* %8, align 8, !dbg !869, !tbaa !810\l  %108 = load double, double* %7, align 8, !dbg !871, !tbaa !810\l  %109 = fmul double %107, %108, !dbg !872\l  store double %109, double* %7, align 8, !dbg !873, !tbaa !810\l  %110 = load i32, i32* %4, align 4, !dbg !874, !tbaa !831\l  %111 = icmp sgt i32 %110, 0, !dbg !876\l  br i1 %111, label %112, label %137, !dbg !877\l|{<s0>T|<s1>F}}"];
	Node0x1bcd170:s0 -> Node0x1bcd1c0;
	Node0x1bcd170:s1 -> Node0x1bcd2b0;
	Node0x1bcd1c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%112:\l112:                                              \l  %113 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !878, !tbaa !795\l  %114 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %113, i32 0, i32 2, !dbg !880\l  %115 = load i64*, i64** %114, align 8, !dbg !880, !tbaa !826\l  %116 = load i64, i64* %6, align 8, !dbg !881, !tbaa !817\l  %117 = getelementptr inbounds i64, i64* %115, i64 %116, !dbg !878\l  %118 = load i64, i64* %117, align 8, !dbg !878, !tbaa !817\l  store i64 %118, i64* %5, align 8, !dbg !882, !tbaa !817\l  %119 = load i32, i32* %4, align 4, !dbg !883, !tbaa !831\l  %120 = sext i32 %119 to i64, !dbg !883\l  %121 = sub i64 %120, 64, !dbg !883\l  %122 = trunc i64 %121 to i32, !dbg !883\l  store i32 %122, i32* %4, align 4, !dbg !883, !tbaa !831\l  %123 = load i32, i32* %4, align 4, !dbg !884, !tbaa !831\l  %124 = icmp slt i32 %123, 0, !dbg !886\l  br i1 %124, label %125, label %132, !dbg !887\l|{<s0>T|<s1>F}}"];
	Node0x1bcd1c0:s0 -> Node0x1bcd210;
	Node0x1bcd1c0:s1 -> Node0x1bcd260;
	Node0x1bcd210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%125:\l125:                                              \l  %126 = load i32, i32* %4, align 4, !dbg !888, !tbaa !831\l  %127 = sub nsw i32 0, %126, !dbg !889\l  %128 = zext i32 %127 to i64, !dbg !890\l  %129 = shl i64 -1, %128, !dbg !890\l  %130 = load i64, i64* %5, align 8, !dbg !891, !tbaa !817\l  %131 = and i64 %130, %129, !dbg !891\l  store i64 %131, i64* %5, align 8, !dbg !891, !tbaa !817\l  br label %132, !dbg !892\l}"];
	Node0x1bcd210 -> Node0x1bcd260;
	Node0x1bcd260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%132:\l132:                                              \l  %133 = load i64, i64* %5, align 8, !dbg !893, !tbaa !817\l  %134 = uitofp i64 %133 to double, !dbg !893\l  %135 = load double, double* %7, align 8, !dbg !894, !tbaa !810\l  %136 = fadd double %135, %134, !dbg !894\l  store double %136, double* %7, align 8, !dbg !894, !tbaa !810\l  br label %137, !dbg !895\l}"];
	Node0x1bcd260 -> Node0x1bcd2b0;
	Node0x1bcd2b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%137:\l137:                                              \l  br label %102, !dbg !896, !llvm.loop !897\l}"];
	Node0x1bcd2b0 -> Node0x1bcd120;
	Node0x1bcd300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%138:\l138:                                              \l  %139 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !899, !tbaa !795\l  %140 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %139, i32 0, i32 1, !dbg !901\l  %141 = load i32, i32* %140, align 4, !dbg !901, !tbaa !813\l  %142 = icmp slt i32 %141, 0, !dbg !902\l  br i1 %142, label %143, label %146, !dbg !903\l|{<s0>T|<s1>F}}"];
	Node0x1bcd300:s0 -> Node0x1bcd350;
	Node0x1bcd300:s1 -> Node0x1bcd3a0;
	Node0x1bcd350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%143:\l143:                                              \l  %144 = load double, double* %7, align 8, !dbg !904, !tbaa !810\l  %145 = fneg double %144, !dbg !905\l  store double %145, double* %7, align 8, !dbg !906, !tbaa !810\l  br label %146, !dbg !907\l}"];
	Node0x1bcd350 -> Node0x1bcd3a0;
	Node0x1bcd3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%146:\l146:                                              \l  %147 = load double, double* %7, align 8, !dbg !908, !tbaa !810\l  store double %147, double* %2, align 8, !dbg !909\l  store i32 1, i32* %9, align 4\l  br label %148, !dbg !909\l}"];
	Node0x1bcd3a0 -> Node0x1bcd3f0;
	Node0x1bcd3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%148:\l148:                                              \l  %149 = bitcast double* %8 to i8*, !dbg !910\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %149) #23, !dbg !910\l  %150 = bitcast double* %7 to i8*, !dbg !910\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %150) #23, !dbg !910\l  %151 = bitcast i64* %6 to i8*, !dbg !910\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %151) #23, !dbg !910\l  %152 = bitcast i64* %5 to i8*, !dbg !910\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %152) #23, !dbg !910\l  %153 = bitcast i32* %4 to i8*, !dbg !910\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %153) #23, !dbg !910\l  %154 = load double, double* %2, align 8, !dbg !910\l  ret double %154, !dbg !910\l}"];
}
