digraph "CFG for 'mpn_set_str_other' function" {
	label="CFG for 'mpn_set_str_other' function";

	Node0x1b76cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%5:\l  %6 = alloca i64*, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca %struct.mpn_base_info*, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i32, align 4\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  store i64* %0, i64** %6, align 8, !tbaa !802\l  call void @llvm.dbg.declare(metadata i64** %6, metadata !789, metadata\l... !DIExpression()), !dbg !806\l  store i8* %1, i8** %7, align 8, !tbaa !802\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !790, metadata\l... !DIExpression()), !dbg !807\l  store i64 %2, i64* %8, align 8, !tbaa !808\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !791, metadata\l... !DIExpression()), !dbg !810\l  store i64 %3, i64* %9, align 8, !tbaa !808\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !792, metadata\l... !DIExpression()), !dbg !811\l  store %struct.mpn_base_info* %4, %struct.mpn_base_info** %10, align 8, !tbaa\l... !802\l  call void @llvm.dbg.declare(metadata %struct.mpn_base_info** %10, metadata\l... !793, metadata !DIExpression()), !dbg !812\l  %16 = bitcast i64* %11 to i8*, !dbg !813\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #23, !dbg !813\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !794, metadata\l... !DIExpression()), !dbg !814\l  %17 = bitcast i64* %12 to i8*, !dbg !815\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #23, !dbg !815\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !795, metadata\l... !DIExpression()), !dbg !816\l  %18 = bitcast i32* %13 to i8*, !dbg !817\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %18) #23, !dbg !817\l  call void @llvm.dbg.declare(metadata i32* %13, metadata !796, metadata\l... !DIExpression()), !dbg !818\l  %19 = bitcast i64* %14 to i8*, !dbg !819\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #23, !dbg !819\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !797, metadata\l... !DIExpression()), !dbg !820\l  %20 = load i64, i64* %8, align 8, !dbg !821, !tbaa !808\l  %21 = icmp ugt i64 %20, 0, !dbg !821\l  br i1 %21, label %22, label %23, !dbg !824\l|{<s0>T|<s1>F}}"];
	Node0x1b76cb0:s0 -> Node0x1b7a190;
	Node0x1b76cb0:s1 -> Node0x1b7f040;
	Node0x1b7a190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%22:\l22:                                               \l  br label %24, !dbg !824\l}"];
	Node0x1b7a190 -> Node0x1b7f090;
	Node0x1b7f040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%23:\l23:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([7 x i8], [7 x\l... i8]* @.str.47.90, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 1379, i8* noundef\l... getelementptr inbounds ([108 x i8], [108 x i8]*\l... @__PRETTY_FUNCTION__.mpn_set_str_other, i64 0, i64 0)) #24, !dbg !821\l  unreachable, !dbg !821\l}"];
	Node0x1b7f090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%24:\l24:                                               \l  %25 = load i64, i64* %8, align 8, !dbg !825, !tbaa !808\l  %26 = sub i64 %25, 1, !dbg !826\l  %27 = load %struct.mpn_base_info*, %struct.mpn_base_info** %10, align 8,\l... !dbg !827, !tbaa !802\l  %28 = getelementptr inbounds %struct.mpn_base_info, %struct.mpn_base_info*\l... %27, i32 0, i32 0, !dbg !828\l  %29 = load i32, i32* %28, align 8, !dbg !828, !tbaa !829\l  %30 = zext i32 %29 to i64, !dbg !827\l  %31 = urem i64 %26, %30, !dbg !832\l  %32 = add i64 1, %31, !dbg !833\l  %33 = trunc i64 %32 to i32, !dbg !834\l  store i32 %33, i32* %13, align 4, !dbg !835, !tbaa !836\l  store i64 0, i64* %14, align 8, !dbg !837, !tbaa !808\l  %34 = load i8*, i8** %7, align 8, !dbg !838, !tbaa !802\l  %35 = load i64, i64* %14, align 8, !dbg !839, !tbaa !808\l  %36 = add i64 %35, 1, !dbg !839\l  store i64 %36, i64* %14, align 8, !dbg !839, !tbaa !808\l  %37 = getelementptr inbounds i8, i8* %34, i64 %35, !dbg !838\l  %38 = load i8, i8* %37, align 1, !dbg !838, !tbaa !840\l  %39 = zext i8 %38 to i64, !dbg !838\l  store i64 %39, i64* %12, align 8, !dbg !841, !tbaa !808\l  br label %40, !dbg !842\l}"];
	Node0x1b7f090 -> Node0x1b7f0e0;
	Node0x1b7f0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%40:\l40:                                               \l  %41 = load i32, i32* %13, align 4, !dbg !843, !tbaa !836\l  %42 = add i32 %41, -1, !dbg !843\l  store i32 %42, i32* %13, align 4, !dbg !843, !tbaa !836\l  %43 = icmp ne i32 %42, 0, !dbg !844\l  br i1 %43, label %44, label %55, !dbg !842\l|{<s0>T|<s1>F}}"];
	Node0x1b7f0e0:s0 -> Node0x1b7f130;
	Node0x1b7f0e0:s1 -> Node0x1b7f180;
	Node0x1b7f130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%44:\l44:                                               \l  %45 = load i64, i64* %12, align 8, !dbg !845, !tbaa !808\l  %46 = load i64, i64* %9, align 8, !dbg !846, !tbaa !808\l  %47 = mul i64 %45, %46, !dbg !847\l  %48 = load i8*, i8** %7, align 8, !dbg !848, !tbaa !802\l  %49 = load i64, i64* %14, align 8, !dbg !849, !tbaa !808\l  %50 = add i64 %49, 1, !dbg !849\l  store i64 %50, i64* %14, align 8, !dbg !849, !tbaa !808\l  %51 = getelementptr inbounds i8, i8* %48, i64 %49, !dbg !848\l  %52 = load i8, i8* %51, align 1, !dbg !848, !tbaa !840\l  %53 = zext i8 %52 to i64, !dbg !848\l  %54 = add i64 %47, %53, !dbg !850\l  store i64 %54, i64* %12, align 8, !dbg !851, !tbaa !808\l  br label %40, !dbg !842, !llvm.loop !852\l}"];
	Node0x1b7f130 -> Node0x1b7f0e0;
	Node0x1b7f180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%55:\l55:                                               \l  %56 = load i64, i64* %12, align 8, !dbg !856, !tbaa !808\l  %57 = load i64*, i64** %6, align 8, !dbg !857, !tbaa !802\l  %58 = getelementptr inbounds i64, i64* %57, i64 0, !dbg !857\l  store i64 %56, i64* %58, align 8, !dbg !858, !tbaa !808\l  store i64 1, i64* %11, align 8, !dbg !859, !tbaa !808\l  br label %59, !dbg !860\l}"];
	Node0x1b7f180 -> Node0x1b7f1d0;
	Node0x1b7f1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%59:\l59:                                               \l  %60 = load i64, i64* %14, align 8, !dbg !861, !tbaa !808\l  %61 = load i64, i64* %8, align 8, !dbg !862, !tbaa !808\l  %62 = icmp ult i64 %60, %61, !dbg !863\l  br i1 %62, label %63, label %116, !dbg !864\l|{<s0>T|<s1>F}}"];
	Node0x1b7f1d0:s0 -> Node0x1b7f220;
	Node0x1b7f1d0:s1 -> Node0x1b7f450;
	Node0x1b7f220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%63:\l63:                                               \l  %64 = bitcast i64* %15 to i8*, !dbg !865\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %64) #23, !dbg !865\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !798, metadata\l... !DIExpression()), !dbg !866\l  %65 = load i8*, i8** %7, align 8, !dbg !867, !tbaa !802\l  %66 = load i64, i64* %14, align 8, !dbg !868, !tbaa !808\l  %67 = add i64 %66, 1, !dbg !868\l  store i64 %67, i64* %14, align 8, !dbg !868, !tbaa !808\l  %68 = getelementptr inbounds i8, i8* %65, i64 %66, !dbg !867\l  %69 = load i8, i8* %68, align 1, !dbg !867, !tbaa !840\l  %70 = zext i8 %69 to i64, !dbg !867\l  store i64 %70, i64* %12, align 8, !dbg !869, !tbaa !808\l  store i32 1, i32* %13, align 4, !dbg !870, !tbaa !836\l  br label %71, !dbg !872\l}"];
	Node0x1b7f220 -> Node0x1b7f270;
	Node0x1b7f270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = load i32, i32* %13, align 4, !dbg !873, !tbaa !836\l  %73 = load %struct.mpn_base_info*, %struct.mpn_base_info** %10, align 8,\l... !dbg !875, !tbaa !802\l  %74 = getelementptr inbounds %struct.mpn_base_info, %struct.mpn_base_info*\l... %73, i32 0, i32 0, !dbg !876\l  %75 = load i32, i32* %74, align 8, !dbg !876, !tbaa !829\l  %76 = icmp ult i32 %72, %75, !dbg !877\l  br i1 %76, label %77, label %91, !dbg !878\l|{<s0>T|<s1>F}}"];
	Node0x1b7f270:s0 -> Node0x1b7f2c0;
	Node0x1b7f270:s1 -> Node0x1b7f360;
	Node0x1b7f2c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = load i64, i64* %12, align 8, !dbg !879, !tbaa !808\l  %79 = load i64, i64* %9, align 8, !dbg !880, !tbaa !808\l  %80 = mul i64 %78, %79, !dbg !881\l  %81 = load i8*, i8** %7, align 8, !dbg !882, !tbaa !802\l  %82 = load i64, i64* %14, align 8, !dbg !883, !tbaa !808\l  %83 = add i64 %82, 1, !dbg !883\l  store i64 %83, i64* %14, align 8, !dbg !883, !tbaa !808\l  %84 = getelementptr inbounds i8, i8* %81, i64 %82, !dbg !882\l  %85 = load i8, i8* %84, align 1, !dbg !882, !tbaa !840\l  %86 = zext i8 %85 to i64, !dbg !882\l  %87 = add i64 %80, %86, !dbg !884\l  store i64 %87, i64* %12, align 8, !dbg !885, !tbaa !808\l  br label %88, !dbg !886\l}"];
	Node0x1b7f2c0 -> Node0x1b7f310;
	Node0x1b7f310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  %89 = load i32, i32* %13, align 4, !dbg !887, !tbaa !836\l  %90 = add i32 %89, 1, !dbg !887\l  store i32 %90, i32* %13, align 4, !dbg !887, !tbaa !836\l  br label %71, !dbg !888, !llvm.loop !889\l}"];
	Node0x1b7f310 -> Node0x1b7f270;
	Node0x1b7f360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%91:\l91:                                               \l  %92 = load i64*, i64** %6, align 8, !dbg !891, !tbaa !802\l  %93 = load i64*, i64** %6, align 8, !dbg !892, !tbaa !802\l  %94 = load i64, i64* %11, align 8, !dbg !893, !tbaa !808\l  %95 = load %struct.mpn_base_info*, %struct.mpn_base_info** %10, align 8,\l... !dbg !894, !tbaa !802\l  %96 = getelementptr inbounds %struct.mpn_base_info, %struct.mpn_base_info*\l... %95, i32 0, i32 1, !dbg !895\l  %97 = load i64, i64* %96, align 8, !dbg !895, !tbaa !896\l  %98 = call i64 @mpn_mul_1(i64* noundef %92, i64* noundef %93, i64 noundef\l... %94, i64 noundef %97), !dbg !897\l  store i64 %98, i64* %15, align 8, !dbg !898, !tbaa !808\l  %99 = load i64*, i64** %6, align 8, !dbg !899, !tbaa !802\l  %100 = load i64*, i64** %6, align 8, !dbg !900, !tbaa !802\l  %101 = load i64, i64* %11, align 8, !dbg !901, !tbaa !808\l  %102 = load i64, i64* %12, align 8, !dbg !902, !tbaa !808\l  %103 = call i64 @mpn_add_1(i64* noundef %99, i64* noundef %100, i64 noundef\l... %101, i64 noundef %102), !dbg !903\l  %104 = load i64, i64* %15, align 8, !dbg !904, !tbaa !808\l  %105 = add i64 %104, %103, !dbg !904\l  store i64 %105, i64* %15, align 8, !dbg !904, !tbaa !808\l  %106 = load i64, i64* %15, align 8, !dbg !905, !tbaa !808\l  %107 = icmp ugt i64 %106, 0, !dbg !907\l  br i1 %107, label %108, label %114, !dbg !908\l|{<s0>T|<s1>F}}"];
	Node0x1b7f360:s0 -> Node0x1b7f3b0;
	Node0x1b7f360:s1 -> Node0x1b7f400;
	Node0x1b7f3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%108:\l108:                                              \l  %109 = load i64, i64* %15, align 8, !dbg !909, !tbaa !808\l  %110 = load i64*, i64** %6, align 8, !dbg !910, !tbaa !802\l  %111 = load i64, i64* %11, align 8, !dbg !911, !tbaa !808\l  %112 = add nsw i64 %111, 1, !dbg !911\l  store i64 %112, i64* %11, align 8, !dbg !911, !tbaa !808\l  %113 = getelementptr inbounds i64, i64* %110, i64 %111, !dbg !910\l  store i64 %109, i64* %113, align 8, !dbg !912, !tbaa !808\l  br label %114, !dbg !910\l}"];
	Node0x1b7f3b0 -> Node0x1b7f400;
	Node0x1b7f400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%114:\l114:                                              \l  %115 = bitcast i64* %15 to i8*, !dbg !913\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %115) #23, !dbg !913\l  br label %59, !dbg !914, !llvm.loop !915\l}"];
	Node0x1b7f400 -> Node0x1b7f1d0;
	Node0x1b7f450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%116:\l116:                                              \l  %117 = load i64, i64* %14, align 8, !dbg !917, !tbaa !808\l  %118 = load i64, i64* %8, align 8, !dbg !917, !tbaa !808\l  %119 = icmp eq i64 %117, %118, !dbg !917\l  br i1 %119, label %120, label %121, !dbg !920\l|{<s0>T|<s1>F}}"];
	Node0x1b7f450:s0 -> Node0x1b7f4a0;
	Node0x1b7f450:s1 -> Node0x1b7f4f0;
	Node0x1b7f4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%120:\l120:                                              \l  br label %122, !dbg !920\l}"];
	Node0x1b7f4a0 -> Node0x1b7f540;
	Node0x1b7f4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%121:\l121:                                              \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([8 x i8], [8 x\l... i8]* @.str.48.91, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 1403, i8* noundef\l... getelementptr inbounds ([108 x i8], [108 x i8]*\l... @__PRETTY_FUNCTION__.mpn_set_str_other, i64 0, i64 0)) #24, !dbg !917\l  unreachable, !dbg !917\l}"];
	Node0x1b7f540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%122:\l122:                                              \l  %123 = load i64, i64* %11, align 8, !dbg !921, !tbaa !808\l  %124 = bitcast i64* %14 to i8*, !dbg !922\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %124) #23, !dbg !922\l  %125 = bitcast i32* %13 to i8*, !dbg !922\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %125) #23, !dbg !922\l  %126 = bitcast i64* %12 to i8*, !dbg !922\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #23, !dbg !922\l  %127 = bitcast i64* %11 to i8*, !dbg !922\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %127) #23, !dbg !922\l  ret i64 %123, !dbg !923\l}"];
}
