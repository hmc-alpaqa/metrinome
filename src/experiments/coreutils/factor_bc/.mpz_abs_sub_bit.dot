digraph "CFG for 'mpz_abs_sub_bit' function" {
	label="CFG for 'mpz_abs_sub_bit' function";

	Node0x1d40980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca %struct.__mpz_struct*, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  store %struct.__mpz_struct* %0, %struct.__mpz_struct** %3, align 8, !tbaa\l... !791\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %3, metadata\l... !783, metadata !DIExpression()), !dbg !795\l  store i64 %1, i64* %4, align 8, !tbaa !796\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !784, metadata\l... !DIExpression()), !dbg !798\l  %10 = bitcast i64* %5 to i8*, !dbg !799\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #23, !dbg !799\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !785, metadata\l... !DIExpression()), !dbg !800\l  %11 = bitcast i64* %6 to i8*, !dbg !799\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #23, !dbg !799\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !786, metadata\l... !DIExpression()), !dbg !801\l  %12 = bitcast i64** %7 to i8*, !dbg !802\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #23, !dbg !802\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !787, metadata\l... !DIExpression()), !dbg !803\l  %13 = bitcast i64* %8 to i8*, !dbg !804\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #23, !dbg !804\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !788, metadata\l... !DIExpression()), !dbg !805\l  %14 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !806, !tbaa !791\l  %15 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %14, i32 0, i32 1, !dbg !806\l  %16 = load i32, i32* %15, align 4, !dbg !806, !tbaa !807\l  %17 = icmp sge i32 %16, 0, !dbg !806\l  br i1 %17, label %18, label %22, !dbg !806\l|{<s0>T|<s1>F}}"];
	Node0x1d40980:s0 -> Node0x1d40a60;
	Node0x1d40980:s1 -> Node0x1d40ab0;
	Node0x1d40a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%18:\l18:                                               \l  %19 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !806, !tbaa !791\l  %20 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %19, i32 0, i32 1, !dbg !806\l  %21 = load i32, i32* %20, align 4, !dbg !806, !tbaa !807\l  br label %27, !dbg !806\l}"];
	Node0x1d40a60 -> Node0x1d40b00;
	Node0x1d40ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%22:\l22:                                               \l  %23 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !806, !tbaa !791\l  %24 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %23, i32 0, i32 1, !dbg !806\l  %25 = load i32, i32* %24, align 4, !dbg !806, !tbaa !807\l  %26 = sub nsw i32 0, %25, !dbg !806\l  br label %27, !dbg !806\l}"];
	Node0x1d40ab0 -> Node0x1d40b00;
	Node0x1d40b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %21, %18 ], [ %26, %22 ], !dbg !806\l  %29 = sext i32 %28 to i64, !dbg !806\l  store i64 %29, i64* %5, align 8, !dbg !810, !tbaa !796\l  %30 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !811, !tbaa !791\l  %31 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %30, i32 0, i32 2, !dbg !812\l  %32 = load i64*, i64** %31, align 8, !dbg !812, !tbaa !813\l  store i64* %32, i64** %7, align 8, !dbg !814, !tbaa !791\l  %33 = load i64, i64* %4, align 8, !dbg !815, !tbaa !796\l  %34 = udiv i64 %33, 64, !dbg !816\l  store i64 %34, i64* %6, align 8, !dbg !817, !tbaa !796\l  %35 = load i64, i64* %4, align 8, !dbg !818, !tbaa !796\l  %36 = urem i64 %35, 64, !dbg !819\l  %37 = shl i64 1, %36, !dbg !820\l  store i64 %37, i64* %8, align 8, !dbg !821, !tbaa !796\l  %38 = load i64, i64* %6, align 8, !dbg !822, !tbaa !796\l  %39 = load i64, i64* %5, align 8, !dbg !822, !tbaa !796\l  %40 = icmp slt i64 %38, %39, !dbg !822\l  br i1 %40, label %41, label %42, !dbg !825\l|{<s0>T|<s1>F}}"];
	Node0x1d40b00:s0 -> Node0x1d40b50;
	Node0x1d40b00:s1 -> Node0x1d40ba0;
	Node0x1d40b50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  br label %43, !dbg !825\l}"];
	Node0x1d40b50 -> Node0x1d40bf0;
	Node0x1d40ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%42:\l42:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([16 x i8], [16\l... x i8]* @.str.71, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 3761, i8* noundef\l... getelementptr inbounds ([50 x i8], [50 x i8]*\l... @__PRETTY_FUNCTION__.mpz_abs_sub_bit, i64 0, i64 0)) #24, !dbg !822\l  unreachable, !dbg !822\l}"];
	Node0x1d40bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  br label %44, !dbg !826\l}"];
	Node0x1d40bf0 -> Node0x1d40c40;
	Node0x1d40c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = bitcast i64* %9 to i8*, !dbg !827\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #23, !dbg !827\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !789, metadata\l... !DIExpression()), !dbg !827\l  %46 = load i64*, i64** %7, align 8, !dbg !827, !tbaa !791\l  %47 = load i64, i64* %6, align 8, !dbg !827, !tbaa !796\l  %48 = getelementptr inbounds i64, i64* %46, i64 %47, !dbg !827\l  %49 = load i64*, i64** %7, align 8, !dbg !827, !tbaa !791\l  %50 = load i64, i64* %6, align 8, !dbg !827, !tbaa !796\l  %51 = getelementptr inbounds i64, i64* %49, i64 %50, !dbg !827\l  %52 = load i64, i64* %5, align 8, !dbg !827, !tbaa !796\l  %53 = load i64, i64* %6, align 8, !dbg !827, !tbaa !796\l  %54 = sub nsw i64 %52, %53, !dbg !827\l  %55 = load i64, i64* %8, align 8, !dbg !827, !tbaa !796\l  %56 = call i64 @mpn_sub_1(i64* noundef %48, i64* noundef %51, i64 noundef\l... %54, i64 noundef %55), !dbg !827\l  store i64 %56, i64* %9, align 8, !dbg !827, !tbaa !796\l  %57 = load i64, i64* %9, align 8, !dbg !828, !tbaa !796\l  %58 = icmp eq i64 %57, 0, !dbg !828\l  br i1 %58, label %59, label %60, !dbg !831\l|{<s0>T|<s1>F}}"];
	Node0x1d40c40:s0 -> Node0x1d40c90;
	Node0x1d40c40:s1 -> Node0x1d40ce0;
	Node0x1d40c90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  br label %61, !dbg !831\l}"];
	Node0x1d40c90 -> Node0x1d40d30;
	Node0x1d40ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%60:\l60:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([10 x i8], [10\l... x i8]* @.str.13.113, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 3764, i8* noundef\l... getelementptr inbounds ([50 x i8], [50 x i8]*\l... @__PRETTY_FUNCTION__.mpz_abs_sub_bit, i64 0, i64 0)) #24, !dbg !828\l  unreachable, !dbg !828\l}"];
	Node0x1d40d30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = load i64, i64* %9, align 8, !dbg !827, !tbaa !796\l  %63 = bitcast i64* %9 to i8*, !dbg !826\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #23, !dbg !826\l  br label %64, !dbg !827\l}"];
	Node0x1d40d30 -> Node0x1d40d80;
	Node0x1d40d80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  br label %65, !dbg !827\l}"];
	Node0x1d40d80 -> Node0x1d40dd0;
	Node0x1d40dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = load i64*, i64** %7, align 8, !dbg !832, !tbaa !791\l  %67 = load i64, i64* %5, align 8, !dbg !833, !tbaa !796\l  %68 = call i64 @mpn_normalized_size(i64* noundef %66, i64 noundef %67), !dbg\l... !834\l  store i64 %68, i64* %5, align 8, !dbg !835, !tbaa !796\l  %69 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !836, !tbaa !791\l  %70 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %69, i32 0, i32 1, !dbg !837\l  %71 = load i32, i32* %70, align 4, !dbg !837, !tbaa !807\l  %72 = icmp slt i32 %71, 0, !dbg !838\l  br i1 %72, label %73, label %76, !dbg !839\l|{<s0>T|<s1>F}}"];
	Node0x1d40dd0:s0 -> Node0x1d40e20;
	Node0x1d40dd0:s1 -> Node0x1d40e70;
	Node0x1d40e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%73:\l73:                                               \l  %74 = load i64, i64* %5, align 8, !dbg !840, !tbaa !796\l  %75 = sub nsw i64 0, %74, !dbg !841\l  br label %78, !dbg !839\l}"];
	Node0x1d40e20 -> Node0x1d40ec0;
	Node0x1d40e70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%76:\l76:                                               \l  %77 = load i64, i64* %5, align 8, !dbg !842, !tbaa !796\l  br label %78, !dbg !839\l}"];
	Node0x1d40e70 -> Node0x1d40ec0;
	Node0x1d40ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%78:\l78:                                               \l  %79 = phi i64 [ %75, %73 ], [ %77, %76 ], !dbg !839\l  %80 = trunc i64 %79 to i32, !dbg !839\l  %81 = load %struct.__mpz_struct*, %struct.__mpz_struct** %3, align 8, !dbg\l... !843, !tbaa !791\l  %82 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %81, i32 0, i32 1, !dbg !844\l  store i32 %80, i32* %82, align 4, !dbg !845, !tbaa !807\l  %83 = bitcast i64* %8 to i8*, !dbg !846\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #23, !dbg !846\l  %84 = bitcast i64** %7 to i8*, !dbg !846\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #23, !dbg !846\l  %85 = bitcast i64* %6 to i8*, !dbg !846\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #23, !dbg !846\l  %86 = bitcast i64* %5 to i8*, !dbg !846\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #23, !dbg !846\l  ret void, !dbg !846\l}"];
}
