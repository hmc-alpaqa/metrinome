digraph "CFG for 'mpn_div_qr_1_invert' function" {
	label="CFG for 'mpn_div_qr_1_invert' function";

	Node0x1b41750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%2:\l  %3 = alloca %struct.gmp_div_inverse*, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i64, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  store %struct.gmp_div_inverse* %0, %struct.gmp_div_inverse** %3, align 8,\l... !tbaa !797\l  call void @llvm.dbg.declare(metadata %struct.gmp_div_inverse** %3, metadata\l... !790, metadata !DIExpression()), !dbg !801\l  store i64 %1, i64* %4, align 8, !tbaa !802\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !791, metadata\l... !DIExpression()), !dbg !804\l  %9 = bitcast i32* %5 to i8*, !dbg !805\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #23, !dbg !805\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !792, metadata\l... !DIExpression()), !dbg !806\l  %10 = load i64, i64* %4, align 8, !dbg !807, !tbaa !802\l  %11 = icmp ugt i64 %10, 0, !dbg !807\l  br i1 %11, label %12, label %13, !dbg !810\l|{<s0>T|<s1>F}}"];
	Node0x1b41750:s0 -> Node0x1b49c90;
	Node0x1b41750:s1 -> Node0x1b49ce0;
	Node0x1b49c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%12:\l12:                                               \l  br label %14, !dbg !810\l}"];
	Node0x1b49c90 -> Node0x1b49d30;
	Node0x1b49ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%13:\l13:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([6 x i8], [6 x\l... i8]* @.str.73, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x i8],\l... [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 911, i8* noundef\l... getelementptr inbounds ([62 x i8], [62 x i8]*\l... @__PRETTY_FUNCTION__.mpn_div_qr_1_invert, i64 0, i64 0)) #24, !dbg !807\l  unreachable, !dbg !807\l}"];
	Node0x1b49d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%14:\l14:                                               \l  br label %15, !dbg !811\l}"];
	Node0x1b49d30 -> Node0x1b49d80;
	Node0x1b49d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%15:\l15:                                               \l  %16 = bitcast i64* %6 to i8*, !dbg !812\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #23, !dbg !812\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !793, metadata\l... !DIExpression()), !dbg !812\l  %17 = load i64, i64* %4, align 8, !dbg !812, !tbaa !802\l  store i64 %17, i64* %6, align 8, !dbg !812, !tbaa !802\l  %18 = bitcast i32* %7 to i8*, !dbg !812\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %18) #23, !dbg !812\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !795, metadata\l... !DIExpression()), !dbg !812\l  store i32 0, i32* %7, align 4, !dbg !812, !tbaa !813\l  %19 = bitcast i32* %8 to i8*, !dbg !812\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #23, !dbg !812\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !796, metadata\l... !DIExpression()), !dbg !812\l  store i32 8, i32* %8, align 4, !dbg !812, !tbaa !813\l  %20 = load i32, i32* %8, align 4, !dbg !815, !tbaa !813\l  %21 = sext i32 %20 to i64, !dbg !815\l  %22 = icmp ugt i64 64, %21, !dbg !815\l  br i1 %22, label %23, label %37, !dbg !812\l|{<s0>T|<s1>F}}"];
	Node0x1b49d80:s0 -> Node0x1b49dd0;
	Node0x1b49d80:s1 -> Node0x1b49f60;
	Node0x1b49dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%23:\l23:                                               \l  br label %24, !dbg !815\l}"];
	Node0x1b49dd0 -> Node0x1b49e20;
	Node0x1b49e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%24:\l24:                                               \l  %25 = load i64, i64* %6, align 8, !dbg !817, !tbaa !802\l  %26 = and i64 %25, -72057594037927936, !dbg !817\l  %27 = icmp eq i64 %26, 0, !dbg !817\l  br i1 %27, label %28, label %36, !dbg !820\l|{<s0>T|<s1>F}}"];
	Node0x1b49e20:s0 -> Node0x1b49e70;
	Node0x1b49e20:s1 -> Node0x1b49f10;
	Node0x1b49e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%28:\l28:                                               \l  %29 = load i32, i32* %8, align 4, !dbg !821, !tbaa !813\l  %30 = load i64, i64* %6, align 8, !dbg !821, !tbaa !802\l  %31 = zext i32 %29 to i64, !dbg !821\l  %32 = shl i64 %30, %31, !dbg !821\l  store i64 %32, i64* %6, align 8, !dbg !821, !tbaa !802\l  br label %33, !dbg !821\l}"];
	Node0x1b49e70 -> Node0x1b49ec0;
	Node0x1b49ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%33:\l33:                                               \l  %34 = load i32, i32* %7, align 4, !dbg !817, !tbaa !813\l  %35 = add i32 %34, 8, !dbg !817\l  store i32 %35, i32* %7, align 4, !dbg !817, !tbaa !813\l  br label %24, !dbg !817, !llvm.loop !823\l}"];
	Node0x1b49ec0 -> Node0x1b49e20;
	Node0x1b49f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%36:\l36:                                               \l  br label %37, !dbg !820\l}"];
	Node0x1b49f10 -> Node0x1b49f60;
	Node0x1b49f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%37:\l37:                                               \l  br label %38, !dbg !812\l}"];
	Node0x1b49f60 -> Node0x1b49fb0;
	Node0x1b49fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = load i64, i64* %6, align 8, !dbg !826, !tbaa !802\l  %40 = and i64 %39, -9223372036854775808, !dbg !826\l  %41 = icmp eq i64 %40, 0, !dbg !826\l  br i1 %41, label %42, label %48, !dbg !829\l|{<s0>T|<s1>F}}"];
	Node0x1b49fb0:s0 -> Node0x1b4a000;
	Node0x1b49fb0:s1 -> Node0x1b4a0a0;
	Node0x1b4a000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = load i64, i64* %6, align 8, !dbg !826, !tbaa !802\l  %44 = shl i64 %43, 1, !dbg !826\l  store i64 %44, i64* %6, align 8, !dbg !826, !tbaa !802\l  br label %45, !dbg !826\l}"];
	Node0x1b4a000 -> Node0x1b4a050;
	Node0x1b4a050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = load i32, i32* %7, align 4, !dbg !826, !tbaa !813\l  %47 = add i32 %46, 1, !dbg !826\l  store i32 %47, i32* %7, align 4, !dbg !826, !tbaa !813\l  br label %38, !dbg !826, !llvm.loop !830\l}"];
	Node0x1b4a050 -> Node0x1b49fb0;
	Node0x1b4a0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%48:\l48:                                               \l  %49 = load i32, i32* %7, align 4, !dbg !812, !tbaa !813\l  store i32 %49, i32* %5, align 4, !dbg !812, !tbaa !813\l  %50 = bitcast i32* %8 to i8*, !dbg !811\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %50) #23, !dbg !811\l  %51 = bitcast i32* %7 to i8*, !dbg !811\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %51) #23, !dbg !811\l  %52 = bitcast i64* %6 to i8*, !dbg !811\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %52) #23, !dbg !811\l  br label %53, !dbg !812\l}"];
	Node0x1b4a0a0 -> Node0x1b4a0f0;
	Node0x1b4a0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%53:\l53:                                               \l  br label %54, !dbg !812\l}"];
	Node0x1b4a0f0 -> Node0x1b4a140;
	Node0x1b4a140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%54:\l54:                                               \l  %55 = load i32, i32* %5, align 4, !dbg !831, !tbaa !813\l  %56 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %3, align 8,\l... !dbg !832, !tbaa !797\l  %57 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %56, i32 0, i32 0, !dbg !833\l  store i32 %55, i32* %57, align 8, !dbg !834, !tbaa !835\l  %58 = load i64, i64* %4, align 8, !dbg !837, !tbaa !802\l  %59 = load i32, i32* %5, align 4, !dbg !838, !tbaa !813\l  %60 = zext i32 %59 to i64, !dbg !839\l  %61 = shl i64 %58, %60, !dbg !839\l  %62 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %3, align 8,\l... !dbg !840, !tbaa !797\l  %63 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %62, i32 0, i32 1, !dbg !841\l  store i64 %61, i64* %63, align 8, !dbg !842, !tbaa !843\l  %64 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %3, align 8,\l... !dbg !844, !tbaa !797\l  %65 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %64, i32 0, i32 1, !dbg !844\l  %66 = load i64, i64* %65, align 8, !dbg !844, !tbaa !843\l  %67 = call i64 @mpn_invert_3by2(i64 noundef %66, i64 noundef 0), !dbg !844\l  %68 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %3, align 8,\l... !dbg !845, !tbaa !797\l  %69 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %68, i32 0, i32 3, !dbg !846\l  store i64 %67, i64* %69, align 8, !dbg !847, !tbaa !848\l  %70 = bitcast i32* %5 to i8*, !dbg !849\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %70) #23, !dbg !849\l  ret void, !dbg !849\l}"];
}
