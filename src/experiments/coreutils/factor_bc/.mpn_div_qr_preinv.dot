digraph "CFG for 'mpn_div_qr_preinv' function" {
	label="CFG for 'mpn_div_qr_preinv' function";

	Node0x1c73dc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = alloca i64*, align 8\l  %8 = alloca i64*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64*, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca %struct.gmp_div_inverse*, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i32, align 4\l  %15 = alloca i64, align 8\l  store i64* %0, i64** %7, align 8, !tbaa !807\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !793, metadata\l... !DIExpression()), !dbg !811\l  store i64* %1, i64** %8, align 8, !tbaa !807\l  call void @llvm.dbg.declare(metadata i64** %8, metadata !794, metadata\l... !DIExpression()), !dbg !812\l  store i64 %2, i64* %9, align 8, !tbaa !813\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !795, metadata\l... !DIExpression()), !dbg !815\l  store i64* %3, i64** %10, align 8, !tbaa !807\l  call void @llvm.dbg.declare(metadata i64** %10, metadata !796, metadata\l... !DIExpression()), !dbg !816\l  store i64 %4, i64* %11, align 8, !tbaa !813\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !797, metadata\l... !DIExpression()), !dbg !817\l  store %struct.gmp_div_inverse* %5, %struct.gmp_div_inverse** %12, align 8,\l... !tbaa !807\l  call void @llvm.dbg.declare(metadata %struct.gmp_div_inverse** %12, metadata\l... !798, metadata !DIExpression()), !dbg !818\l  %16 = load i64, i64* %11, align 8, !dbg !819, !tbaa !813\l  %17 = icmp sgt i64 %16, 0, !dbg !819\l  br i1 %17, label %18, label %19, !dbg !822\l|{<s0>T|<s1>F}}"];
	Node0x1c73dc0:s0 -> Node0x1c73f20;
	Node0x1c73dc0:s1 -> Node0x1c73f70;
	Node0x1c73f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%18:\l18:                                               \l  br label %20, !dbg !822\l}"];
	Node0x1c73f20 -> Node0x1c73fc0;
	Node0x1c73f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%19:\l19:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([7 x i8], [7 x\l... i8]* @.str.50.121, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 1122, i8* noundef\l... getelementptr inbounds ([104 x i8], [104 x i8]*\l... @__PRETTY_FUNCTION__.mpn_div_qr_preinv, i64 0, i64 0)) #23, !dbg !819\l  unreachable, !dbg !819\l}"];
	Node0x1c73fc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = load i64, i64* %9, align 8, !dbg !823, !tbaa !813\l  %22 = load i64, i64* %11, align 8, !dbg !823, !tbaa !813\l  %23 = icmp sge i64 %21, %22, !dbg !823\l  br i1 %23, label %24, label %25, !dbg !826\l|{<s0>T|<s1>F}}"];
	Node0x1c73fc0:s0 -> Node0x1c74010;
	Node0x1c73fc0:s1 -> Node0x1c74060;
	Node0x1c74010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  br label %26, !dbg !826\l}"];
	Node0x1c74010 -> Node0x1c740b0;
	Node0x1c74060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%25:\l25:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([9 x i8], [9 x\l... i8]* @.str.51.122, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 1123, i8* noundef\l... getelementptr inbounds ([104 x i8], [104 x i8]*\l... @__PRETTY_FUNCTION__.mpn_div_qr_preinv, i64 0, i64 0)) #23, !dbg !823\l  unreachable, !dbg !823\l}"];
	Node0x1c740b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i64, i64* %11, align 8, !dbg !827, !tbaa !813\l  %28 = icmp eq i64 %27, 1, !dbg !828\l  br i1 %28, label %29, label %37, !dbg !829\l|{<s0>T|<s1>F}}"];
	Node0x1c740b0:s0 -> Node0x1c74100;
	Node0x1c740b0:s1 -> Node0x1c74150;
	Node0x1c74100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%29:\l29:                                               \l  %30 = load i64*, i64** %7, align 8, !dbg !830, !tbaa !807\l  %31 = load i64*, i64** %8, align 8, !dbg !831, !tbaa !807\l  %32 = load i64, i64* %9, align 8, !dbg !832, !tbaa !813\l  %33 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %12, align 8,\l... !dbg !833, !tbaa !807\l  %34 = call i64 @mpn_div_qr_1_preinv(i64* noundef %30, i64* noundef %31, i64\l... noundef %32, %struct.gmp_div_inverse* noundef %33), !dbg !834\l  %35 = load i64*, i64** %8, align 8, !dbg !835, !tbaa !807\l  %36 = getelementptr inbounds i64, i64* %35, i64 0, !dbg !835\l  store i64 %34, i64* %36, align 8, !dbg !836, !tbaa !813\l  br label %125, !dbg !835\l}"];
	Node0x1c74100 -> Node0x1c748d0;
	Node0x1c74150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%37:\l37:                                               \l  %38 = load i64, i64* %11, align 8, !dbg !837, !tbaa !813\l  %39 = icmp eq i64 %38, 2, !dbg !838\l  br i1 %39, label %40, label %45, !dbg !839\l|{<s0>T|<s1>F}}"];
	Node0x1c74150:s0 -> Node0x1c741a0;
	Node0x1c74150:s1 -> Node0x1c741f0;
	Node0x1c741a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%40:\l40:                                               \l  %41 = load i64*, i64** %7, align 8, !dbg !840, !tbaa !807\l  %42 = load i64*, i64** %8, align 8, !dbg !841, !tbaa !807\l  %43 = load i64, i64* %9, align 8, !dbg !842, !tbaa !813\l  %44 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %12, align 8,\l... !dbg !843, !tbaa !807\l  call void @mpn_div_qr_2_preinv(i64* noundef %41, i64* noundef %42, i64\l... noundef %43, %struct.gmp_div_inverse* noundef %44), !dbg !844\l  br label %124, !dbg !844\l}"];
	Node0x1c741a0 -> Node0x1c74880;
	Node0x1c741f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%45:\l45:                                               \l  %46 = bitcast i64* %13 to i8*, !dbg !845\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #24, !dbg !845\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !799, metadata\l... !DIExpression()), !dbg !846\l  %47 = bitcast i32* %14 to i8*, !dbg !847\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #24, !dbg !847\l  call void @llvm.dbg.declare(metadata i32* %14, metadata !803, metadata\l... !DIExpression()), !dbg !848\l  %48 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %12, align 8,\l... !dbg !849, !tbaa !807\l  %49 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %48, i32 0, i32 1, !dbg !849\l  %50 = load i64, i64* %49, align 8, !dbg !849, !tbaa !852\l  %51 = load i64*, i64** %10, align 8, !dbg !849, !tbaa !807\l  %52 = load i64, i64* %11, align 8, !dbg !849, !tbaa !813\l  %53 = sub nsw i64 %52, 1, !dbg !849\l  %54 = getelementptr inbounds i64, i64* %51, i64 %53, !dbg !849\l  %55 = load i64, i64* %54, align 8, !dbg !849, !tbaa !813\l  %56 = icmp eq i64 %50, %55, !dbg !849\l  br i1 %56, label %57, label %58, !dbg !855\l|{<s0>T|<s1>F}}"];
	Node0x1c741f0:s0 -> Node0x1c74240;
	Node0x1c741f0:s1 -> Node0x1c74290;
	Node0x1c74240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%57:\l57:                                               \l  br label %59, !dbg !855\l}"];
	Node0x1c74240 -> Node0x1c742e0;
	Node0x1c74290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%58:\l58:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([20 x i8], [20\l... x i8]* @.str.56.123, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 1134, i8* noundef\l... getelementptr inbounds ([104 x i8], [104 x i8]*\l... @__PRETTY_FUNCTION__.mpn_div_qr_preinv, i64 0, i64 0)) #23, !dbg !849\l  unreachable, !dbg !849\l}"];
	Node0x1c742e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%59:\l59:                                               \l  %60 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %12, align 8,\l... !dbg !856, !tbaa !807\l  %61 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %60, i32 0, i32 2, !dbg !856\l  %62 = load i64, i64* %61, align 8, !dbg !856, !tbaa !859\l  %63 = load i64*, i64** %10, align 8, !dbg !856, !tbaa !807\l  %64 = load i64, i64* %11, align 8, !dbg !856, !tbaa !813\l  %65 = sub nsw i64 %64, 2, !dbg !856\l  %66 = getelementptr inbounds i64, i64* %63, i64 %65, !dbg !856\l  %67 = load i64, i64* %66, align 8, !dbg !856, !tbaa !813\l  %68 = icmp eq i64 %62, %67, !dbg !856\l  br i1 %68, label %69, label %70, !dbg !860\l|{<s0>T|<s1>F}}"];
	Node0x1c742e0:s0 -> Node0x1c74330;
	Node0x1c742e0:s1 -> Node0x1c74380;
	Node0x1c74330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%69:\l69:                                               \l  br label %71, !dbg !860\l}"];
	Node0x1c74330 -> Node0x1c743d0;
	Node0x1c74380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%70:\l70:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([20 x i8], [20\l... x i8]* @.str.57.124, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 1135, i8* noundef\l... getelementptr inbounds ([104 x i8], [104 x i8]*\l... @__PRETTY_FUNCTION__.mpn_div_qr_preinv, i64 0, i64 0)) #23, !dbg !856\l  unreachable, !dbg !856\l}"];
	Node0x1c743d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%71:\l71:                                               \l  %72 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %12, align 8,\l... !dbg !861, !tbaa !807\l  %73 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %72, i32 0, i32 1, !dbg !861\l  %74 = load i64, i64* %73, align 8, !dbg !861, !tbaa !852\l  %75 = and i64 %74, -9223372036854775808, !dbg !861\l  %76 = icmp ne i64 %75, 0, !dbg !861\l  br i1 %76, label %77, label %78, !dbg !864\l|{<s0>T|<s1>F}}"];
	Node0x1c743d0:s0 -> Node0x1c74420;
	Node0x1c743d0:s1 -> Node0x1c74470;
	Node0x1c74420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%77:\l77:                                               \l  br label %79, !dbg !864\l}"];
	Node0x1c74420 -> Node0x1c744c0;
	Node0x1c74470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%78:\l78:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([34 x i8], [34\l... x i8]* @.str.58, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 1136, i8* noundef\l... getelementptr inbounds ([104 x i8], [104 x i8]*\l... @__PRETTY_FUNCTION__.mpn_div_qr_preinv, i64 0, i64 0)) #23, !dbg !861\l  unreachable, !dbg !861\l}"];
	Node0x1c744c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%79:\l79:                                               \l  %80 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %12, align 8,\l... !dbg !865, !tbaa !807\l  %81 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %80, i32 0, i32 0, !dbg !866\l  %82 = load i32, i32* %81, align 8, !dbg !866, !tbaa !867\l  store i32 %82, i32* %14, align 4, !dbg !868, !tbaa !869\l  %83 = load i32, i32* %14, align 4, !dbg !870, !tbaa !869\l  %84 = icmp ugt i32 %83, 0, !dbg !872\l  br i1 %84, label %85, label %91, !dbg !873\l|{<s0>T|<s1>F}}"];
	Node0x1c744c0:s0 -> Node0x1c74510;
	Node0x1c744c0:s1 -> Node0x1c74560;
	Node0x1c74510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%85:\l85:                                               \l  %86 = load i64*, i64** %8, align 8, !dbg !874, !tbaa !807\l  %87 = load i64*, i64** %8, align 8, !dbg !875, !tbaa !807\l  %88 = load i64, i64* %9, align 8, !dbg !876, !tbaa !813\l  %89 = load i32, i32* %14, align 4, !dbg !877, !tbaa !869\l  %90 = call i64 @mpn_lshift(i64* noundef %86, i64* noundef %87, i64 noundef\l... %88, i32 noundef %89), !dbg !878\l  store i64 %90, i64* %13, align 8, !dbg !879, !tbaa !813\l  br label %92, !dbg !880\l}"];
	Node0x1c74510 -> Node0x1c745b0;
	Node0x1c74560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%91:\l91:                                               \l  store i64 0, i64* %13, align 8, !dbg !881, !tbaa !813\l  br label %92\l}"];
	Node0x1c74560 -> Node0x1c745b0;
	Node0x1c745b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%92:\l92:                                               \l  %93 = load i64*, i64** %7, align 8, !dbg !882, !tbaa !807\l  %94 = load i64*, i64** %8, align 8, !dbg !883, !tbaa !807\l  %95 = load i64, i64* %9, align 8, !dbg !884, !tbaa !813\l  %96 = load i64, i64* %13, align 8, !dbg !885, !tbaa !813\l  %97 = load i64*, i64** %10, align 8, !dbg !886, !tbaa !807\l  %98 = load i64, i64* %11, align 8, !dbg !887, !tbaa !813\l  %99 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %12, align 8,\l... !dbg !888, !tbaa !807\l  %100 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %99, i32 0, i32 3, !dbg !889\l  %101 = load i64, i64* %100, align 8, !dbg !889, !tbaa !890\l  call void @mpn_div_qr_pi1(i64* noundef %93, i64* noundef %94, i64 noundef\l... %95, i64 noundef %96, i64* noundef %97, i64 noundef %98, i64 noundef %101),\l... !dbg !891\l  %102 = load i32, i32* %14, align 4, !dbg !892, !tbaa !869\l  %103 = icmp ugt i32 %102, 0, !dbg !893\l  br i1 %103, label %104, label %121, !dbg !894\l|{<s0>T|<s1>F}}"];
	Node0x1c745b0:s0 -> Node0x1c74600;
	Node0x1c745b0:s1 -> Node0x1c74830;
	Node0x1c74600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%104:\l104:                                              \l  br label %105, !dbg !895\l}"];
	Node0x1c74600 -> Node0x1c74650;
	Node0x1c74650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%105:\l105:                                              \l  %106 = bitcast i64* %15 to i8*, !dbg !896\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %106) #24, !dbg !896\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !804, metadata\l... !DIExpression()), !dbg !896\l  %107 = load i64*, i64** %8, align 8, !dbg !896, !tbaa !807\l  %108 = load i64*, i64** %8, align 8, !dbg !896, !tbaa !807\l  %109 = load i64, i64* %11, align 8, !dbg !896, !tbaa !813\l  %110 = load i32, i32* %14, align 4, !dbg !896, !tbaa !869\l  %111 = call i64 @mpn_rshift(i64* noundef %107, i64* noundef %108, i64\l... noundef %109, i32 noundef %110), !dbg !896\l  store i64 %111, i64* %15, align 8, !dbg !896, !tbaa !813\l  %112 = load i64, i64* %15, align 8, !dbg !897, !tbaa !813\l  %113 = icmp eq i64 %112, 0, !dbg !897\l  br i1 %113, label %114, label %115, !dbg !900\l|{<s0>T|<s1>F}}"];
	Node0x1c74650:s0 -> Node0x1c746a0;
	Node0x1c74650:s1 -> Node0x1c746f0;
	Node0x1c746a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%114:\l114:                                              \l  br label %116, !dbg !900\l}"];
	Node0x1c746a0 -> Node0x1c74740;
	Node0x1c746f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%115:\l115:                                              \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([10 x i8], [10\l... x i8]* @.str.13.113, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 1147, i8* noundef\l... getelementptr inbounds ([104 x i8], [104 x i8]*\l... @__PRETTY_FUNCTION__.mpn_div_qr_preinv, i64 0, i64 0)) #23, !dbg !897\l  unreachable, !dbg !897\l}"];
	Node0x1c74740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%116:\l116:                                              \l  %117 = load i64, i64* %15, align 8, !dbg !896, !tbaa !813\l  %118 = bitcast i64* %15 to i8*, !dbg !895\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %118) #24, !dbg !895\l  br label %119, !dbg !896\l}"];
	Node0x1c74740 -> Node0x1c74790;
	Node0x1c74790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%119:\l119:                                              \l  br label %120, !dbg !896\l}"];
	Node0x1c74790 -> Node0x1c747e0;
	Node0x1c747e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%120:\l120:                                              \l  br label %121, !dbg !896\l}"];
	Node0x1c747e0 -> Node0x1c74830;
	Node0x1c74830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%121:\l121:                                              \l  %122 = bitcast i32* %14 to i8*, !dbg !901\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %122) #24, !dbg !901\l  %123 = bitcast i64* %13 to i8*, !dbg !901\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %123) #24, !dbg !901\l  br label %124\l}"];
	Node0x1c74830 -> Node0x1c74880;
	Node0x1c74880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%124:\l124:                                              \l  br label %125\l}"];
	Node0x1c74880 -> Node0x1c748d0;
	Node0x1c748d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%125:\l125:                                              \l  ret void, !dbg !902\l}"];
}
