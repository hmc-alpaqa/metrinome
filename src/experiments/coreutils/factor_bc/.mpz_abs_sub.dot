digraph "CFG for 'mpz_abs_sub' function" {
	label="CFG for 'mpz_abs_sub' function";

	Node0x1bf9920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca i64, align 8\l  %5 = alloca %struct.__mpz_struct*, align 8\l  %6 = alloca %struct.__mpz_struct*, align 8\l  %7 = alloca %struct.__mpz_struct*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i32, align 4\l  %11 = alloca i64*, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i32, align 4\l  %14 = alloca i64, align 8\l  store %struct.__mpz_struct* %0, %struct.__mpz_struct** %5, align 8, !tbaa\l... !800\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %5, metadata\l... !785, metadata !DIExpression()), !dbg !804\l  store %struct.__mpz_struct* %1, %struct.__mpz_struct** %6, align 8, !tbaa\l... !800\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %6, metadata\l... !786, metadata !DIExpression()), !dbg !805\l  store %struct.__mpz_struct* %2, %struct.__mpz_struct** %7, align 8, !tbaa\l... !800\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %7, metadata\l... !787, metadata !DIExpression()), !dbg !806\l  %15 = bitcast i64* %8 to i8*, !dbg !807\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #23, !dbg !807\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !788, metadata\l... !DIExpression()), !dbg !808\l  %16 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !809, !tbaa !800\l  %17 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %16, i32 0, i32 1, !dbg !809\l  %18 = load i32, i32* %17, align 4, !dbg !809, !tbaa !810\l  %19 = icmp sge i32 %18, 0, !dbg !809\l  br i1 %19, label %20, label %24, !dbg !809\l|{<s0>T|<s1>F}}"];
	Node0x1bf9920:s0 -> Node0x1bf9a70;
	Node0x1bf9920:s1 -> Node0x1bf9ac0;
	Node0x1bf9a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%20:\l20:                                               \l  %21 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !809, !tbaa !800\l  %22 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %21, i32 0, i32 1, !dbg !809\l  %23 = load i32, i32* %22, align 4, !dbg !809, !tbaa !810\l  br label %29, !dbg !809\l}"];
	Node0x1bf9a70 -> Node0x1bf9b10;
	Node0x1bf9ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%24:\l24:                                               \l  %25 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !809, !tbaa !800\l  %26 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %25, i32 0, i32 1, !dbg !809\l  %27 = load i32, i32* %26, align 4, !dbg !809, !tbaa !810\l  %28 = sub nsw i32 0, %27, !dbg !809\l  br label %29, !dbg !809\l}"];
	Node0x1bf9ac0 -> Node0x1bf9b10;
	Node0x1bf9b10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %23, %20 ], [ %28, %24 ], !dbg !809\l  %31 = sext i32 %30 to i64, !dbg !809\l  store i64 %31, i64* %8, align 8, !dbg !808, !tbaa !813\l  %32 = bitcast i64* %9 to i8*, !dbg !815\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #23, !dbg !815\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !789, metadata\l... !DIExpression()), !dbg !816\l  %33 = load %struct.__mpz_struct*, %struct.__mpz_struct** %7, align 8, !dbg\l... !817, !tbaa !800\l  %34 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %33, i32 0, i32 1, !dbg !817\l  %35 = load i32, i32* %34, align 4, !dbg !817, !tbaa !810\l  %36 = icmp sge i32 %35, 0, !dbg !817\l  br i1 %36, label %37, label %41, !dbg !817\l|{<s0>T|<s1>F}}"];
	Node0x1bf9b10:s0 -> Node0x1bf9b60;
	Node0x1bf9b10:s1 -> Node0x1bf9bb0;
	Node0x1bf9b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%37:\l37:                                               \l  %38 = load %struct.__mpz_struct*, %struct.__mpz_struct** %7, align 8, !dbg\l... !817, !tbaa !800\l  %39 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %38, i32 0, i32 1, !dbg !817\l  %40 = load i32, i32* %39, align 4, !dbg !817, !tbaa !810\l  br label %46, !dbg !817\l}"];
	Node0x1bf9b60 -> Node0x1bf9c00;
	Node0x1bf9bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%41:\l41:                                               \l  %42 = load %struct.__mpz_struct*, %struct.__mpz_struct** %7, align 8, !dbg\l... !817, !tbaa !800\l  %43 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %42, i32 0, i32 1, !dbg !817\l  %44 = load i32, i32* %43, align 4, !dbg !817, !tbaa !810\l  %45 = sub nsw i32 0, %44, !dbg !817\l  br label %46, !dbg !817\l}"];
	Node0x1bf9bb0 -> Node0x1bf9c00;
	Node0x1bf9c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i32 [ %40, %37 ], [ %45, %41 ], !dbg !817\l  %48 = sext i32 %47 to i64, !dbg !817\l  store i64 %48, i64* %9, align 8, !dbg !816, !tbaa !813\l  %49 = bitcast i32* %10 to i8*, !dbg !818\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #23, !dbg !818\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !790, metadata\l... !DIExpression()), !dbg !819\l  %50 = bitcast i64** %11 to i8*, !dbg !820\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #23, !dbg !820\l  call void @llvm.dbg.declare(metadata i64** %11, metadata !791, metadata\l... !DIExpression()), !dbg !821\l  %51 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !822, !tbaa !800\l  %52 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %51, i32 0, i32 2, !dbg !823\l  %53 = load i64*, i64** %52, align 8, !dbg !823, !tbaa !824\l  %54 = load i64, i64* %8, align 8, !dbg !825, !tbaa !813\l  %55 = load %struct.__mpz_struct*, %struct.__mpz_struct** %7, align 8, !dbg\l... !826, !tbaa !800\l  %56 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %55, i32 0, i32 2, !dbg !827\l  %57 = load i64*, i64** %56, align 8, !dbg !827, !tbaa !824\l  %58 = load i64, i64* %9, align 8, !dbg !828, !tbaa !813\l  %59 = call i32 @mpn_cmp4(i64* noundef %53, i64 noundef %54, i64* noundef\l... %57, i64 noundef %58), !dbg !829\l  store i32 %59, i32* %10, align 4, !dbg !830, !tbaa !831\l  %60 = load i32, i32* %10, align 4, !dbg !832, !tbaa !831\l  %61 = icmp sgt i32 %60, 0, !dbg !833\l  br i1 %61, label %62, label %103, !dbg !834\l|{<s0>T|<s1>F}}"];
	Node0x1bf9c00:s0 -> Node0x1bf9c50;
	Node0x1bf9c00:s1 -> Node0x1bf9f70;
	Node0x1bf9c50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%62:\l62:                                               \l  %63 = load i64, i64* %8, align 8, !dbg !835, !tbaa !813\l  %64 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !835, !tbaa !800\l  %65 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %64, i32 0, i32 0, !dbg !835\l  %66 = load i32, i32* %65, align 8, !dbg !835, !tbaa !836\l  %67 = sext i32 %66 to i64, !dbg !835\l  %68 = icmp sgt i64 %63, %67, !dbg !835\l  br i1 %68, label %69, label %73, !dbg !835\l|{<s0>T|<s1>F}}"];
	Node0x1bf9c50:s0 -> Node0x1bf9ca0;
	Node0x1bf9c50:s1 -> Node0x1bf9cf0;
	Node0x1bf9ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%69:\l69:                                               \l  %70 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !835, !tbaa !800\l  %71 = load i64, i64* %8, align 8, !dbg !835, !tbaa !813\l  %72 = call i64* @mpz_realloc(%struct.__mpz_struct* noundef %70, i64 noundef\l... %71), !dbg !835\l  br label %77, !dbg !835\l}"];
	Node0x1bf9ca0 -> Node0x1bf9d40;
	Node0x1bf9cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%73:\l73:                                               \l  %74 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !835, !tbaa !800\l  %75 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %74, i32 0, i32 2, !dbg !835\l  %76 = load i64*, i64** %75, align 8, !dbg !835, !tbaa !824\l  br label %77, !dbg !835\l}"];
	Node0x1bf9cf0 -> Node0x1bf9d40;
	Node0x1bf9d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%77:\l77:                                               \l  %78 = phi i64* [ %72, %69 ], [ %76, %73 ], !dbg !835\l  store i64* %78, i64** %11, align 8, !dbg !837, !tbaa !800\l  br label %79, !dbg !838\l}"];
	Node0x1bf9d40 -> Node0x1bf9d90;
	Node0x1bf9d90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%79:\l79:                                               \l  %80 = bitcast i64* %12 to i8*, !dbg !839\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %80) #23, !dbg !839\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !792, metadata\l... !DIExpression()), !dbg !839\l  %81 = load i64*, i64** %11, align 8, !dbg !839, !tbaa !800\l  %82 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !839, !tbaa !800\l  %83 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %82, i32 0, i32 2, !dbg !839\l  %84 = load i64*, i64** %83, align 8, !dbg !839, !tbaa !824\l  %85 = load i64, i64* %8, align 8, !dbg !839, !tbaa !813\l  %86 = load %struct.__mpz_struct*, %struct.__mpz_struct** %7, align 8, !dbg\l... !839, !tbaa !800\l  %87 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %86, i32 0, i32 2, !dbg !839\l  %88 = load i64*, i64** %87, align 8, !dbg !839, !tbaa !824\l  %89 = load i64, i64* %9, align 8, !dbg !839, !tbaa !813\l  %90 = call i64 @mpn_sub(i64* noundef %81, i64* noundef %84, i64 noundef %85,\l... i64* noundef %88, i64 noundef %89), !dbg !839\l  store i64 %90, i64* %12, align 8, !dbg !839, !tbaa !813\l  %91 = load i64, i64* %12, align 8, !dbg !840, !tbaa !813\l  %92 = icmp eq i64 %91, 0, !dbg !840\l  br i1 %92, label %93, label %94, !dbg !843\l|{<s0>T|<s1>F}}"];
	Node0x1bf9d90:s0 -> Node0x1bf9de0;
	Node0x1bf9d90:s1 -> Node0x1bf9e30;
	Node0x1bf9de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%93:\l93:                                               \l  br label %95, !dbg !843\l}"];
	Node0x1bf9de0 -> Node0x1bf9e80;
	Node0x1bf9e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%94:\l94:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([10 x i8], [10\l... x i8]* @.str.13.113, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 2014, i8* noundef\l... getelementptr inbounds ([82 x i8], [82 x i8]*\l... @__PRETTY_FUNCTION__.mpz_abs_sub, i64 0, i64 0)) #24, !dbg !840\l  unreachable, !dbg !840\l}"];
	Node0x1bf9e80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%95:\l95:                                               \l  %96 = load i64, i64* %12, align 8, !dbg !839, !tbaa !813\l  %97 = bitcast i64* %12 to i8*, !dbg !838\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %97) #23, !dbg !838\l  br label %98, !dbg !839\l}"];
	Node0x1bf9e80 -> Node0x1bf9ed0;
	Node0x1bf9ed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%98:\l98:                                               \l  br label %99, !dbg !839\l}"];
	Node0x1bf9ed0 -> Node0x1bf9f20;
	Node0x1bf9f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%99:\l99:                                               \l  %100 = load i64*, i64** %11, align 8, !dbg !844, !tbaa !800\l  %101 = load i64, i64* %8, align 8, !dbg !845, !tbaa !813\l  %102 = call i64 @mpn_normalized_size(i64* noundef %100, i64 noundef %101),\l... !dbg !846\l  store i64 %102, i64* %4, align 8, !dbg !847\l  store i32 1, i32* %13, align 4\l  br label %149, !dbg !847\l}"];
	Node0x1bf9f20 -> Node0x1bfa330;
	Node0x1bf9f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%103:\l103:                                              \l  %104 = load i32, i32* %10, align 4, !dbg !848, !tbaa !831\l  %105 = icmp slt i32 %104, 0, !dbg !849\l  br i1 %105, label %106, label %148, !dbg !850\l|{<s0>T|<s1>F}}"];
	Node0x1bf9f70:s0 -> Node0x1bf9fc0;
	Node0x1bf9f70:s1 -> Node0x1bfa2e0;
	Node0x1bf9fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%106:\l106:                                              \l  %107 = load i64, i64* %9, align 8, !dbg !851, !tbaa !813\l  %108 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !851, !tbaa !800\l  %109 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %108, i32 0, i32 0, !dbg !851\l  %110 = load i32, i32* %109, align 8, !dbg !851, !tbaa !836\l  %111 = sext i32 %110 to i64, !dbg !851\l  %112 = icmp sgt i64 %107, %111, !dbg !851\l  br i1 %112, label %113, label %117, !dbg !851\l|{<s0>T|<s1>F}}"];
	Node0x1bf9fc0:s0 -> Node0x1bfa010;
	Node0x1bf9fc0:s1 -> Node0x1bfa060;
	Node0x1bfa010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%113:\l113:                                              \l  %114 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !851, !tbaa !800\l  %115 = load i64, i64* %9, align 8, !dbg !851, !tbaa !813\l  %116 = call i64* @mpz_realloc(%struct.__mpz_struct* noundef %114, i64\l... noundef %115), !dbg !851\l  br label %121, !dbg !851\l}"];
	Node0x1bfa010 -> Node0x1bfa0b0;
	Node0x1bfa060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%117:\l117:                                              \l  %118 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !851, !tbaa !800\l  %119 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %118, i32 0, i32 2, !dbg !851\l  %120 = load i64*, i64** %119, align 8, !dbg !851, !tbaa !824\l  br label %121, !dbg !851\l}"];
	Node0x1bfa060 -> Node0x1bfa0b0;
	Node0x1bfa0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%121:\l121:                                              \l  %122 = phi i64* [ %116, %113 ], [ %120, %117 ], !dbg !851\l  store i64* %122, i64** %11, align 8, !dbg !852, !tbaa !800\l  br label %123, !dbg !853\l}"];
	Node0x1bfa0b0 -> Node0x1bfa100;
	Node0x1bfa100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%123:\l123:                                              \l  %124 = bitcast i64* %14 to i8*, !dbg !854\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %124) #23, !dbg !854\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !796, metadata\l... !DIExpression()), !dbg !854\l  %125 = load i64*, i64** %11, align 8, !dbg !854, !tbaa !800\l  %126 = load %struct.__mpz_struct*, %struct.__mpz_struct** %7, align 8, !dbg\l... !854, !tbaa !800\l  %127 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %126, i32 0, i32 2, !dbg !854\l  %128 = load i64*, i64** %127, align 8, !dbg !854, !tbaa !824\l  %129 = load i64, i64* %9, align 8, !dbg !854, !tbaa !813\l  %130 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !854, !tbaa !800\l  %131 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %130, i32 0, i32 2, !dbg !854\l  %132 = load i64*, i64** %131, align 8, !dbg !854, !tbaa !824\l  %133 = load i64, i64* %8, align 8, !dbg !854, !tbaa !813\l  %134 = call i64 @mpn_sub(i64* noundef %125, i64* noundef %128, i64 noundef\l... %129, i64* noundef %132, i64 noundef %133), !dbg !854\l  store i64 %134, i64* %14, align 8, !dbg !854, !tbaa !813\l  %135 = load i64, i64* %14, align 8, !dbg !855, !tbaa !813\l  %136 = icmp eq i64 %135, 0, !dbg !855\l  br i1 %136, label %137, label %138, !dbg !858\l|{<s0>T|<s1>F}}"];
	Node0x1bfa100:s0 -> Node0x1bfa150;
	Node0x1bfa100:s1 -> Node0x1bfa1a0;
	Node0x1bfa150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%137:\l137:                                              \l  br label %139, !dbg !858\l}"];
	Node0x1bfa150 -> Node0x1bfa1f0;
	Node0x1bfa1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%138:\l138:                                              \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([10 x i8], [10\l... x i8]* @.str.13.113, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 2020, i8* noundef\l... getelementptr inbounds ([82 x i8], [82 x i8]*\l... @__PRETTY_FUNCTION__.mpz_abs_sub, i64 0, i64 0)) #24, !dbg !855\l  unreachable, !dbg !855\l}"];
	Node0x1bfa1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%139:\l139:                                              \l  %140 = load i64, i64* %14, align 8, !dbg !854, !tbaa !813\l  %141 = bitcast i64* %14 to i8*, !dbg !853\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %141) #23, !dbg !853\l  br label %142, !dbg !854\l}"];
	Node0x1bfa1f0 -> Node0x1bfa240;
	Node0x1bfa240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%142:\l142:                                              \l  br label %143, !dbg !854\l}"];
	Node0x1bfa240 -> Node0x1bfa290;
	Node0x1bfa290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%143:\l143:                                              \l  %144 = load i64*, i64** %11, align 8, !dbg !859, !tbaa !800\l  %145 = load i64, i64* %9, align 8, !dbg !860, !tbaa !813\l  %146 = call i64 @mpn_normalized_size(i64* noundef %144, i64 noundef %145),\l... !dbg !861\l  %147 = sub nsw i64 0, %146, !dbg !862\l  store i64 %147, i64* %4, align 8, !dbg !863\l  store i32 1, i32* %13, align 4\l  br label %149, !dbg !863\l}"];
	Node0x1bfa290 -> Node0x1bfa330;
	Node0x1bfa2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%148:\l148:                                              \l  store i64 0, i64* %4, align 8, !dbg !864\l  store i32 1, i32* %13, align 4\l  br label %149, !dbg !864\l}"];
	Node0x1bfa2e0 -> Node0x1bfa330;
	Node0x1bfa330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%149:\l149:                                              \l  %150 = bitcast i64** %11 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %150) #23, !dbg !865\l  %151 = bitcast i32* %10 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %151) #23, !dbg !865\l  %152 = bitcast i64* %9 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %152) #23, !dbg !865\l  %153 = bitcast i64* %8 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %153) #23, !dbg !865\l  %154 = load i64, i64* %4, align 8, !dbg !865\l  ret i64 %154, !dbg !865\l}"];
}
