digraph "CFG for 'mulredc2' function" {
	label="CFG for 'mulredc2' function";

	Node0x1a3bb40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = alloca i64*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i64, align 8\l  %18 = alloca i64, align 8\l  %19 = alloca i64, align 8\l  %20 = alloca i64, align 8\l  %21 = alloca i64, align 8\l  %22 = alloca i64, align 8\l  %23 = alloca i64, align 8\l  %24 = alloca i64, align 8\l  %25 = alloca i64, align 8\l  store i64* %0, i64** %9, align 8, !tbaa !801\l  call void @llvm.dbg.declare(metadata i64** %9, metadata !784, metadata\l... !DIExpression()), !dbg !805\l  store i64 %1, i64* %10, align 8, !tbaa !806\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !785, metadata\l... !DIExpression()), !dbg !808\l  store i64 %2, i64* %11, align 8, !tbaa !806\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !786, metadata\l... !DIExpression()), !dbg !809\l  store i64 %3, i64* %12, align 8, !tbaa !806\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !787, metadata\l... !DIExpression()), !dbg !810\l  store i64 %4, i64* %13, align 8, !tbaa !806\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !788, metadata\l... !DIExpression()), !dbg !811\l  store i64 %5, i64* %14, align 8, !tbaa !806\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !789, metadata\l... !DIExpression()), !dbg !812\l  store i64 %6, i64* %15, align 8, !tbaa !806\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !790, metadata\l... !DIExpression()), !dbg !813\l  store i64 %7, i64* %16, align 8, !tbaa !806\l  call void @llvm.dbg.declare(metadata i64* %16, metadata !791, metadata\l... !DIExpression()), !dbg !814\l  %26 = bitcast i64* %17 to i8*, !dbg !815\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #23, !dbg !815\l  call void @llvm.dbg.declare(metadata i64* %17, metadata !792, metadata\l... !DIExpression()), !dbg !816\l  %27 = bitcast i64* %18 to i8*, !dbg !815\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #23, !dbg !815\l  call void @llvm.dbg.declare(metadata i64* %18, metadata !793, metadata\l... !DIExpression()), !dbg !817\l  %28 = bitcast i64* %19 to i8*, !dbg !815\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #23, !dbg !815\l  call void @llvm.dbg.declare(metadata i64* %19, metadata !794, metadata\l... !DIExpression()), !dbg !818\l  %29 = bitcast i64* %20 to i8*, !dbg !815\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #23, !dbg !815\l  call void @llvm.dbg.declare(metadata i64* %20, metadata !795, metadata\l... !DIExpression()), !dbg !819\l  %30 = bitcast i64* %21 to i8*, !dbg !815\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #23, !dbg !815\l  call void @llvm.dbg.declare(metadata i64* %21, metadata !796, metadata\l... !DIExpression()), !dbg !820\l  %31 = bitcast i64* %22 to i8*, !dbg !815\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #23, !dbg !815\l  call void @llvm.dbg.declare(metadata i64* %22, metadata !797, metadata\l... !DIExpression()), !dbg !821\l  %32 = bitcast i64* %23 to i8*, !dbg !815\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #23, !dbg !815\l  call void @llvm.dbg.declare(metadata i64* %23, metadata !798, metadata\l... !DIExpression()), !dbg !822\l  %33 = bitcast i64* %24 to i8*, !dbg !815\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #23, !dbg !815\l  call void @llvm.dbg.declare(metadata i64* %24, metadata !799, metadata\l... !DIExpression()), !dbg !823\l  %34 = bitcast i64* %25 to i8*, !dbg !824\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #23, !dbg !824\l  call void @llvm.dbg.declare(metadata i64* %25, metadata !800, metadata\l... !DIExpression()), !dbg !825\l  %35 = load i64, i64* %16, align 8, !dbg !826, !tbaa !806\l  %36 = sub i64 0, %35, !dbg !827\l  store i64 %36, i64* %16, align 8, !dbg !828, !tbaa !806\l  %37 = load i64, i64* %10, align 8, !dbg !829, !tbaa !806\l  %38 = lshr i64 %37, 63, !dbg !829\l  %39 = icmp eq i64 %38, 0, !dbg !829\l  br i1 %39, label %40, label %41, !dbg !832\l|{<s0>T|<s1>F}}"];
	Node0x1a3bb40:s0 -> Node0x19be530;
	Node0x1a3bb40:s1 -> Node0x19be580;
	Node0x19be530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  br label %42, !dbg !832\l}"];
	Node0x19be530 -> Node0x19be5d0;
	Node0x19be580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%41:\l41:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([22 x i8], [22\l... x i8]* @.str.46, i64 0, i64 0), i8* noundef getelementptr inbounds ([16 x\l... i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 noundef 994, i8* noundef\l... getelementptr inbounds ([109 x i8], [109 x i8]*\l... @__PRETTY_FUNCTION__.mulredc2, i64 0, i64 0)) #24, !dbg !829\l  unreachable, !dbg !829\l}"];
	Node0x19be5d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = load i64, i64* %12, align 8, !dbg !833, !tbaa !806\l  %44 = lshr i64 %43, 63, !dbg !833\l  %45 = icmp eq i64 %44, 0, !dbg !833\l  br i1 %45, label %46, label %47, !dbg !836\l|{<s0>T|<s1>F}}"];
	Node0x19be5d0:s0 -> Node0x19be620;
	Node0x19be5d0:s1 -> Node0x19be670;
	Node0x19be620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  br label %48, !dbg !836\l}"];
	Node0x19be620 -> Node0x19be6c0;
	Node0x19be670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%47:\l47:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([22 x i8], [22\l... x i8]* @.str.47, i64 0, i64 0), i8* noundef getelementptr inbounds ([16 x\l... i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 noundef 995, i8* noundef\l... getelementptr inbounds ([109 x i8], [109 x i8]*\l... @__PRETTY_FUNCTION__.mulredc2, i64 0, i64 0)) #24, !dbg !833\l  unreachable, !dbg !833\l}"];
	Node0x19be6c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = load i64, i64* %14, align 8, !dbg !837, !tbaa !806\l  %50 = lshr i64 %49, 63, !dbg !837\l  %51 = icmp eq i64 %50, 0, !dbg !837\l  br i1 %51, label %52, label %53, !dbg !840\l|{<s0>T|<s1>F}}"];
	Node0x19be6c0:s0 -> Node0x19be710;
	Node0x19be6c0:s1 -> Node0x19be760;
	Node0x19be710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  br label %54, !dbg !840\l}"];
	Node0x19be710 -> Node0x19be7b0;
	Node0x19be760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%53:\l53:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([22 x i8], [22\l... x i8]* @.str.48, i64 0, i64 0), i8* noundef getelementptr inbounds ([16 x\l... i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 noundef 996, i8* noundef\l... getelementptr inbounds ([109 x i8], [109 x i8]*\l... @__PRETTY_FUNCTION__.mulredc2, i64 0, i64 0)) #24, !dbg !837\l  unreachable, !dbg !837\l}"];
	Node0x19be7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = load i64, i64* %11, align 8, !dbg !841, !tbaa !806\l  %56 = load i64, i64* %13, align 8, !dbg !841, !tbaa !806\l  %57 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %55, i64 %56) #25, !dbg\l... !841, !srcloc !842\l  %58 = extractvalue \{ i64, i64 \} %57, 0, !dbg !841\l  %59 = extractvalue \{ i64, i64 \} %57, 1, !dbg !841\l  store i64 %58, i64* %22, align 8, !dbg !841, !tbaa !806\l  store i64 %59, i64* %21, align 8, !dbg !841, !tbaa !806\l  %60 = load i64, i64* %11, align 8, !dbg !843, !tbaa !806\l  %61 = load i64, i64* %12, align 8, !dbg !843, !tbaa !806\l  %62 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %60, i64 %61) #25, !dbg\l... !843, !srcloc !844\l  %63 = extractvalue \{ i64, i64 \} %62, 0, !dbg !843\l  %64 = extractvalue \{ i64, i64 \} %62, 1, !dbg !843\l  store i64 %63, i64* %18, align 8, !dbg !843, !tbaa !806\l  store i64 %64, i64* %17, align 8, !dbg !843, !tbaa !806\l  %65 = load i64, i64* %16, align 8, !dbg !845, !tbaa !806\l  %66 = load i64, i64* %22, align 8, !dbg !846, !tbaa !806\l  %67 = mul i64 %65, %66, !dbg !847\l  store i64 %67, i64* %19, align 8, !dbg !848, !tbaa !806\l  %68 = load i64, i64* %19, align 8, !dbg !849, !tbaa !806\l  %69 = load i64, i64* %15, align 8, !dbg !849, !tbaa !806\l  %70 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %68, i64 %69) #25, !dbg\l... !849, !srcloc !850\l  %71 = extractvalue \{ i64, i64 \} %70, 0, !dbg !849\l  %72 = extractvalue \{ i64, i64 \} %70, 1, !dbg !849\l  store i64 %71, i64* %25, align 8, !dbg !849, !tbaa !806\l  store i64 %72, i64* %20, align 8, !dbg !849, !tbaa !806\l  %73 = load i64, i64* %19, align 8, !dbg !851, !tbaa !806\l  %74 = load i64, i64* %14, align 8, !dbg !851, !tbaa !806\l  %75 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %73, i64 %74) #25, !dbg\l... !851, !srcloc !852\l  %76 = extractvalue \{ i64, i64 \} %75, 0, !dbg !851\l  %77 = extractvalue \{ i64, i64 \} %75, 1, !dbg !851\l  store i64 %76, i64* %24, align 8, !dbg !851, !tbaa !806\l  store i64 %77, i64* %23, align 8, !dbg !851, !tbaa !806\l  %78 = load i64, i64* %22, align 8, !dbg !853, !tbaa !806\l  %79 = icmp ne i64 %78, 0, !dbg !854\l  %80 = zext i1 %79 to i32, !dbg !854\l  %81 = sext i32 %80 to i64, !dbg !855\l  %82 = load i64, i64* %18, align 8, !dbg !856, !tbaa !806\l  %83 = add i64 %82, %81, !dbg !856\l  store i64 %83, i64* %18, align 8, !dbg !856, !tbaa !806\l  %84 = load i64, i64* %17, align 8, !dbg !857, !tbaa !806\l  %85 = load i64, i64* %18, align 8, !dbg !857, !tbaa !806\l  %86 = load i64, i64* %20, align 8, !dbg !857, !tbaa !806\l  %87 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %84, i64 0, i64 %85,\l... i64 %86) #25, !dbg !857, !srcloc !858\l  %88 = extractvalue \{ i64, i64 \} %87, 0, !dbg !857\l  %89 = extractvalue \{ i64, i64 \} %87, 1, !dbg !857\l  store i64 %88, i64* %17, align 8, !dbg !857, !tbaa !806\l  store i64 %89, i64* %18, align 8, !dbg !857, !tbaa !806\l  %90 = load i64, i64* %17, align 8, !dbg !859, !tbaa !806\l  %91 = load i64, i64* %18, align 8, !dbg !859, !tbaa !806\l  %92 = load i64, i64* %21, align 8, !dbg !859, !tbaa !806\l  %93 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %90, i64 0, i64 %91,\l... i64 %92) #25, !dbg !859, !srcloc !860\l  %94 = extractvalue \{ i64, i64 \} %93, 0, !dbg !859\l  %95 = extractvalue \{ i64, i64 \} %93, 1, !dbg !859\l  store i64 %94, i64* %17, align 8, !dbg !859, !tbaa !806\l  store i64 %95, i64* %18, align 8, !dbg !859, !tbaa !806\l  %96 = load i64, i64* %17, align 8, !dbg !861, !tbaa !806\l  %97 = load i64, i64* %23, align 8, !dbg !861, !tbaa !806\l  %98 = load i64, i64* %18, align 8, !dbg !861, !tbaa !806\l  %99 = load i64, i64* %24, align 8, !dbg !861, !tbaa !806\l  %100 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %96, i64 %97, i64 %98,\l... i64 %99) #25, !dbg !861, !srcloc !862\l  %101 = extractvalue \{ i64, i64 \} %100, 0, !dbg !861\l  %102 = extractvalue \{ i64, i64 \} %100, 1, !dbg !861\l  store i64 %101, i64* %17, align 8, !dbg !861, !tbaa !806\l  store i64 %102, i64* %18, align 8, !dbg !861, !tbaa !806\l  %103 = load i64, i64* %10, align 8, !dbg !863, !tbaa !806\l  %104 = load i64, i64* %13, align 8, !dbg !863, !tbaa !806\l  %105 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %103, i64 %104) #25, !dbg\l... !863, !srcloc !864\l  %106 = extractvalue \{ i64, i64 \} %105, 0, !dbg !863\l  %107 = extractvalue \{ i64, i64 \} %105, 1, !dbg !863\l  store i64 %106, i64* %22, align 8, !dbg !863, !tbaa !806\l  store i64 %107, i64* %21, align 8, !dbg !863, !tbaa !806\l  %108 = load i64, i64* %10, align 8, !dbg !865, !tbaa !806\l  %109 = load i64, i64* %12, align 8, !dbg !865, !tbaa !806\l  %110 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %108, i64 %109) #25, !dbg\l... !865, !srcloc !866\l  %111 = extractvalue \{ i64, i64 \} %110, 0, !dbg !865\l  %112 = extractvalue \{ i64, i64 \} %110, 1, !dbg !865\l  store i64 %111, i64* %24, align 8, !dbg !865, !tbaa !806\l  store i64 %112, i64* %23, align 8, !dbg !865, !tbaa !806\l  %113 = load i64, i64* %21, align 8, !dbg !867, !tbaa !806\l  %114 = load i64, i64* %22, align 8, !dbg !867, !tbaa !806\l  %115 = load i64, i64* %18, align 8, !dbg !867, !tbaa !806\l  %116 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %113, i64 0, i64 %114,\l... i64 %115) #25, !dbg !867, !srcloc !868\l  %117 = extractvalue \{ i64, i64 \} %116, 0, !dbg !867\l  %118 = extractvalue \{ i64, i64 \} %116, 1, !dbg !867\l  store i64 %117, i64* %21, align 8, !dbg !867, !tbaa !806\l  store i64 %118, i64* %22, align 8, !dbg !867, !tbaa !806\l  %119 = load i64, i64* %16, align 8, !dbg !869, !tbaa !806\l  %120 = load i64, i64* %22, align 8, !dbg !870, !tbaa !806\l  %121 = mul i64 %119, %120, !dbg !871\l  store i64 %121, i64* %19, align 8, !dbg !872, !tbaa !806\l  %122 = load i64, i64* %23, align 8, !dbg !873, !tbaa !806\l  %123 = load i64, i64* %24, align 8, !dbg !873, !tbaa !806\l  %124 = load i64, i64* %17, align 8, !dbg !873, !tbaa !806\l  %125 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %122, i64 0, i64 %123,\l... i64 %124) #25, !dbg !873, !srcloc !874\l  %126 = extractvalue \{ i64, i64 \} %125, 0, !dbg !873\l  %127 = extractvalue \{ i64, i64 \} %125, 1, !dbg !873\l  store i64 %126, i64* %17, align 8, !dbg !873, !tbaa !806\l  store i64 %127, i64* %18, align 8, !dbg !873, !tbaa !806\l  %128 = load i64, i64* %19, align 8, !dbg !875, !tbaa !806\l  %129 = load i64, i64* %15, align 8, !dbg !875, !tbaa !806\l  %130 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %128, i64 %129) #25, !dbg\l... !875, !srcloc !876\l  %131 = extractvalue \{ i64, i64 \} %130, 0, !dbg !875\l  %132 = extractvalue \{ i64, i64 \} %130, 1, !dbg !875\l  store i64 %131, i64* %25, align 8, !dbg !875, !tbaa !806\l  store i64 %132, i64* %20, align 8, !dbg !875, !tbaa !806\l  %133 = load i64, i64* %19, align 8, !dbg !877, !tbaa !806\l  %134 = load i64, i64* %14, align 8, !dbg !877, !tbaa !806\l  %135 = call \{ i64, i64 \} asm \"mulq\\09$3\",\l... \"=\{ax\},=\{dx\},%0,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %133, i64 %134) #25, !dbg\l... !877, !srcloc !878\l  %136 = extractvalue \{ i64, i64 \} %135, 0, !dbg !877\l  %137 = extractvalue \{ i64, i64 \} %135, 1, !dbg !877\l  store i64 %136, i64* %24, align 8, !dbg !877, !tbaa !806\l  store i64 %137, i64* %23, align 8, !dbg !877, !tbaa !806\l  %138 = load i64, i64* %22, align 8, !dbg !879, !tbaa !806\l  %139 = icmp ne i64 %138, 0, !dbg !880\l  %140 = zext i1 %139 to i32, !dbg !880\l  %141 = sext i32 %140 to i64, !dbg !881\l  %142 = load i64, i64* %18, align 8, !dbg !882, !tbaa !806\l  %143 = add i64 %142, %141, !dbg !882\l  store i64 %143, i64* %18, align 8, !dbg !882, !tbaa !806\l  %144 = load i64, i64* %17, align 8, !dbg !883, !tbaa !806\l  %145 = load i64, i64* %18, align 8, !dbg !883, !tbaa !806\l  %146 = load i64, i64* %20, align 8, !dbg !883, !tbaa !806\l  %147 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %144, i64 0, i64 %145,\l... i64 %146) #25, !dbg !883, !srcloc !884\l  %148 = extractvalue \{ i64, i64 \} %147, 0, !dbg !883\l  %149 = extractvalue \{ i64, i64 \} %147, 1, !dbg !883\l  store i64 %148, i64* %17, align 8, !dbg !883, !tbaa !806\l  store i64 %149, i64* %18, align 8, !dbg !883, !tbaa !806\l  %150 = load i64, i64* %17, align 8, !dbg !885, !tbaa !806\l  %151 = load i64, i64* %18, align 8, !dbg !885, !tbaa !806\l  %152 = load i64, i64* %21, align 8, !dbg !885, !tbaa !806\l  %153 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %150, i64 0, i64 %151,\l... i64 %152) #25, !dbg !885, !srcloc !886\l  %154 = extractvalue \{ i64, i64 \} %153, 0, !dbg !885\l  %155 = extractvalue \{ i64, i64 \} %153, 1, !dbg !885\l  store i64 %154, i64* %17, align 8, !dbg !885, !tbaa !806\l  store i64 %155, i64* %18, align 8, !dbg !885, !tbaa !806\l  %156 = load i64, i64* %17, align 8, !dbg !887, !tbaa !806\l  %157 = load i64, i64* %23, align 8, !dbg !887, !tbaa !806\l  %158 = load i64, i64* %18, align 8, !dbg !887, !tbaa !806\l  %159 = load i64, i64* %24, align 8, !dbg !887, !tbaa !806\l  %160 = call \{ i64, i64 \} asm \"addq $5,$\{1:q\}\\0A\\09adcq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,%1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %156, i64 %157, i64\l... %158, i64 %159) #25, !dbg !887, !srcloc !888\l  %161 = extractvalue \{ i64, i64 \} %160, 0, !dbg !887\l  %162 = extractvalue \{ i64, i64 \} %160, 1, !dbg !887\l  store i64 %161, i64* %17, align 8, !dbg !887, !tbaa !806\l  store i64 %162, i64* %18, align 8, !dbg !887, !tbaa !806\l  %163 = load i64, i64* %17, align 8, !dbg !889, !tbaa !806\l  %164 = load i64, i64* %14, align 8, !dbg !889, !tbaa !806\l  %165 = icmp ugt i64 %163, %164, !dbg !889\l  br i1 %165, label %174, label %166, !dbg !889\l|{<s0>T|<s1>F}}"];
	Node0x19be7b0:s0 -> Node0x19be8a0;
	Node0x19be7b0:s1 -> Node0x19be800;
	Node0x19be800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%166:\l166:                                              \l  %167 = load i64, i64* %17, align 8, !dbg !889, !tbaa !806\l  %168 = load i64, i64* %14, align 8, !dbg !889, !tbaa !806\l  %169 = icmp eq i64 %167, %168, !dbg !889\l  br i1 %169, label %170, label %182, !dbg !889\l|{<s0>T|<s1>F}}"];
	Node0x19be800:s0 -> Node0x19be850;
	Node0x19be800:s1 -> Node0x19be8f0;
	Node0x19be850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%170:\l170:                                              \l  %171 = load i64, i64* %18, align 8, !dbg !889, !tbaa !806\l  %172 = load i64, i64* %15, align 8, !dbg !889, !tbaa !806\l  %173 = icmp uge i64 %171, %172, !dbg !889\l  br i1 %173, label %174, label %182, !dbg !891\l|{<s0>T|<s1>F}}"];
	Node0x19be850:s0 -> Node0x19be8a0;
	Node0x19be850:s1 -> Node0x19be8f0;
	Node0x19be8a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%174:\l174:                                              \l  %175 = load i64, i64* %17, align 8, !dbg !892, !tbaa !806\l  %176 = load i64, i64* %14, align 8, !dbg !892, !tbaa !806\l  %177 = load i64, i64* %18, align 8, !dbg !892, !tbaa !806\l  %178 = load i64, i64* %15, align 8, !dbg !892, !tbaa !806\l  %179 = call \{ i64, i64 \} asm \"subq $5,$\{1:q\}\\0A\\09sbbq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %175, i64 %176, i64\l... %177, i64 %178) #25, !dbg !892, !srcloc !893\l  %180 = extractvalue \{ i64, i64 \} %179, 0, !dbg !892\l  %181 = extractvalue \{ i64, i64 \} %179, 1, !dbg !892\l  store i64 %180, i64* %17, align 8, !dbg !892, !tbaa !806\l  store i64 %181, i64* %18, align 8, !dbg !892, !tbaa !806\l  br label %182, !dbg !892\l}"];
	Node0x19be8a0 -> Node0x19be8f0;
	Node0x19be8f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%182:\l182:                                              \l  %183 = load i64, i64* %17, align 8, !dbg !894, !tbaa !806\l  %184 = load i64*, i64** %9, align 8, !dbg !895, !tbaa !801\l  store i64 %183, i64* %184, align 8, !dbg !896, !tbaa !806\l  %185 = load i64, i64* %18, align 8, !dbg !897, !tbaa !806\l  %186 = bitcast i64* %25 to i8*, !dbg !898\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %186) #23, !dbg !898\l  %187 = bitcast i64* %24 to i8*, !dbg !898\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %187) #23, !dbg !898\l  %188 = bitcast i64* %23 to i8*, !dbg !898\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %188) #23, !dbg !898\l  %189 = bitcast i64* %22 to i8*, !dbg !898\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %189) #23, !dbg !898\l  %190 = bitcast i64* %21 to i8*, !dbg !898\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #23, !dbg !898\l  %191 = bitcast i64* %20 to i8*, !dbg !898\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %191) #23, !dbg !898\l  %192 = bitcast i64* %19 to i8*, !dbg !898\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #23, !dbg !898\l  %193 = bitcast i64* %18 to i8*, !dbg !898\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #23, !dbg !898\l  %194 = bitcast i64* %17 to i8*, !dbg !898\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %194) #23, !dbg !898\l  ret i64 %185, !dbg !899\l}"];
}
