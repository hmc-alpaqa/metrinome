digraph "CFG for 'mpn_limb_get_str' function" {
	label="CFG for 'mpn_limb_get_str' function";

	Node0x1b4f270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca %struct.gmp_div_inverse*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i32, align 4\l  %16 = alloca i64, align 8\l  %17 = alloca i64, align 8\l  %18 = alloca i64, align 8\l  %19 = alloca i64, align 8\l  %20 = alloca i32, align 4\l  %21 = alloca i32, align 4\l  %22 = alloca i32, align 4\l  %23 = alloca i32, align 4\l  %24 = alloca i64, align 8\l  %25 = alloca i64, align 8\l  %26 = alloca i64, align 8\l  store i8* %0, i8** %4, align 8, !tbaa !823\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !791, metadata\l... !DIExpression()), !dbg !827\l  store i64 %1, i64* %5, align 8, !tbaa !828\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !792, metadata\l... !DIExpression()), !dbg !830\l  store %struct.gmp_div_inverse* %2, %struct.gmp_div_inverse** %6, align 8,\l... !tbaa !823\l  call void @llvm.dbg.declare(metadata %struct.gmp_div_inverse** %6, metadata\l... !793, metadata !DIExpression()), !dbg !831\l  %27 = bitcast i64* %7 to i8*, !dbg !832\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #23, !dbg !832\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !794, metadata\l... !DIExpression()), !dbg !833\l  store i64 0, i64* %7, align 8, !dbg !834, !tbaa !828\l  br label %28, !dbg !835\l}"];
	Node0x1b4f270 -> Node0x1b62d70;
	Node0x1b62d70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = load i64, i64* %5, align 8, !dbg !836, !tbaa !828\l  %30 = icmp ugt i64 %29, 0, !dbg !837\l  br i1 %30, label %31, label %230, !dbg !838\l|{<s0>T|<s1>F}}"];
	Node0x1b62d70:s0 -> Node0x1b62dc0;
	Node0x1b62d70:s1 -> Node0x1b63360;
	Node0x1b62dc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = bitcast i64* %8 to i8*, !dbg !839\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #23, !dbg !839\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !795, metadata\l... !DIExpression()), !dbg !840\l  %33 = bitcast i64* %9 to i8*, !dbg !839\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #23, !dbg !839\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !799, metadata\l... !DIExpression()), !dbg !841\l  %34 = bitcast i64* %10 to i8*, !dbg !839\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #23, !dbg !839\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !800, metadata\l... !DIExpression()), !dbg !842\l  %35 = load i64, i64* %5, align 8, !dbg !843, !tbaa !828\l  %36 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !844, !tbaa !823\l  %37 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %36, i32 0, i32 0, !dbg !845\l  %38 = load i32, i32* %37, align 8, !dbg !845, !tbaa !846\l  %39 = zext i32 %38 to i64, !dbg !844\l  %40 = sub i64 64, %39, !dbg !849\l  %41 = lshr i64 %35, %40, !dbg !850\l  store i64 %41, i64* %8, align 8, !dbg !851, !tbaa !828\l  %42 = load i64, i64* %5, align 8, !dbg !852, !tbaa !828\l  %43 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !853, !tbaa !823\l  %44 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %43, i32 0, i32 0, !dbg !854\l  %45 = load i32, i32* %44, align 8, !dbg !854, !tbaa !846\l  %46 = zext i32 %45 to i64, !dbg !855\l  %47 = shl i64 %42, %46, !dbg !855\l  store i64 %47, i64* %9, align 8, !dbg !856, !tbaa !828\l  br label %48, !dbg !857\l}"];
	Node0x1b62dc0 -> Node0x1b62e10;
	Node0x1b62e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = bitcast i64* %11 to i8*, !dbg !858\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #23, !dbg !858\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !801, metadata\l... !DIExpression()), !dbg !858\l  %50 = bitcast i64* %12 to i8*, !dbg !858\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #23, !dbg !858\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !803, metadata\l... !DIExpression()), !dbg !858\l  %51 = bitcast i64* %13 to i8*, !dbg !858\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #23, !dbg !858\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !804, metadata\l... !DIExpression()), !dbg !858\l  %52 = bitcast i64* %14 to i8*, !dbg !858\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #23, !dbg !858\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !805, metadata\l... !DIExpression()), !dbg !858\l  br label %53, !dbg !858\l}"];
	Node0x1b62e10 -> Node0x1b62e60;
	Node0x1b62e60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = bitcast i32* %15 to i8*, !dbg !859\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #23, !dbg !859\l  call void @llvm.dbg.declare(metadata i32* %15, metadata !806, metadata\l... !DIExpression()), !dbg !859\l  store i32 64, i32* %15, align 4, !dbg !859, !tbaa !860\l  %55 = bitcast i64* %16 to i8*, !dbg !861\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #23, !dbg !861\l  call void @llvm.dbg.declare(metadata i64* %16, metadata !808, metadata\l... !DIExpression()), !dbg !861\l  %56 = bitcast i64* %17 to i8*, !dbg !861\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #23, !dbg !861\l  call void @llvm.dbg.declare(metadata i64* %17, metadata !812, metadata\l... !DIExpression()), !dbg !861\l  %57 = bitcast i64* %18 to i8*, !dbg !861\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #23, !dbg !861\l  call void @llvm.dbg.declare(metadata i64* %18, metadata !813, metadata\l... !DIExpression()), !dbg !861\l  %58 = bitcast i64* %19 to i8*, !dbg !861\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %58) #23, !dbg !861\l  call void @llvm.dbg.declare(metadata i64* %19, metadata !814, metadata\l... !DIExpression()), !dbg !861\l  %59 = bitcast i32* %20 to i8*, !dbg !861\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %59) #23, !dbg !861\l  call void @llvm.dbg.declare(metadata i32* %20, metadata !815, metadata\l... !DIExpression()), !dbg !861\l  %60 = bitcast i32* %21 to i8*, !dbg !861\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #23, !dbg !861\l  call void @llvm.dbg.declare(metadata i32* %21, metadata !816, metadata\l... !DIExpression()), !dbg !861\l  %61 = bitcast i32* %22 to i8*, !dbg !861\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %61) #23, !dbg !861\l  call void @llvm.dbg.declare(metadata i32* %22, metadata !817, metadata\l... !DIExpression()), !dbg !861\l  %62 = bitcast i32* %23 to i8*, !dbg !861\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %62) #23, !dbg !861\l  call void @llvm.dbg.declare(metadata i32* %23, metadata !818, metadata\l... !DIExpression()), !dbg !861\l  %63 = bitcast i64* %24 to i8*, !dbg !861\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %63) #23, !dbg !861\l  call void @llvm.dbg.declare(metadata i64* %24, metadata !819, metadata\l... !DIExpression()), !dbg !861\l  %64 = load i64, i64* %8, align 8, !dbg !861, !tbaa !828\l  store i64 %64, i64* %24, align 8, !dbg !861, !tbaa !828\l  %65 = bitcast i64* %25 to i8*, !dbg !861\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %65) #23, !dbg !861\l  call void @llvm.dbg.declare(metadata i64* %25, metadata !820, metadata\l... !DIExpression()), !dbg !861\l  %66 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !861, !tbaa !823\l  %67 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %66, i32 0, i32 3, !dbg !861\l  %68 = load i64, i64* %67, align 8, !dbg !861, !tbaa !862\l  store i64 %68, i64* %25, align 8, !dbg !861, !tbaa !828\l  %69 = load i64, i64* %24, align 8, !dbg !861, !tbaa !828\l  %70 = and i64 %69, 4294967295, !dbg !861\l  %71 = trunc i64 %70 to i32, !dbg !861\l  store i32 %71, i32* %20, align 4, !dbg !861, !tbaa !860\l  %72 = load i64, i64* %24, align 8, !dbg !861, !tbaa !828\l  %73 = lshr i64 %72, 32, !dbg !861\l  %74 = trunc i64 %73 to i32, !dbg !861\l  store i32 %74, i32* %22, align 4, !dbg !861, !tbaa !860\l  %75 = load i64, i64* %25, align 8, !dbg !861, !tbaa !828\l  %76 = and i64 %75, 4294967295, !dbg !861\l  %77 = trunc i64 %76 to i32, !dbg !861\l  store i32 %77, i32* %21, align 4, !dbg !861, !tbaa !860\l  %78 = load i64, i64* %25, align 8, !dbg !861, !tbaa !828\l  %79 = lshr i64 %78, 32, !dbg !861\l  %80 = trunc i64 %79 to i32, !dbg !861\l  store i32 %80, i32* %23, align 4, !dbg !861, !tbaa !860\l  %81 = load i32, i32* %20, align 4, !dbg !861, !tbaa !860\l  %82 = zext i32 %81 to i64, !dbg !861\l  %83 = load i32, i32* %21, align 4, !dbg !861, !tbaa !860\l  %84 = zext i32 %83 to i64, !dbg !861\l  %85 = mul i64 %82, %84, !dbg !861\l  store i64 %85, i64* %16, align 8, !dbg !861, !tbaa !828\l  %86 = load i32, i32* %20, align 4, !dbg !861, !tbaa !860\l  %87 = zext i32 %86 to i64, !dbg !861\l  %88 = load i32, i32* %23, align 4, !dbg !861, !tbaa !860\l  %89 = zext i32 %88 to i64, !dbg !861\l  %90 = mul i64 %87, %89, !dbg !861\l  store i64 %90, i64* %17, align 8, !dbg !861, !tbaa !828\l  %91 = load i32, i32* %22, align 4, !dbg !861, !tbaa !860\l  %92 = zext i32 %91 to i64, !dbg !861\l  %93 = load i32, i32* %21, align 4, !dbg !861, !tbaa !860\l  %94 = zext i32 %93 to i64, !dbg !861\l  %95 = mul i64 %92, %94, !dbg !861\l  store i64 %95, i64* %18, align 8, !dbg !861, !tbaa !828\l  %96 = load i32, i32* %22, align 4, !dbg !861, !tbaa !860\l  %97 = zext i32 %96 to i64, !dbg !861\l  %98 = load i32, i32* %23, align 4, !dbg !861, !tbaa !860\l  %99 = zext i32 %98 to i64, !dbg !861\l  %100 = mul i64 %97, %99, !dbg !861\l  store i64 %100, i64* %19, align 8, !dbg !861, !tbaa !828\l  %101 = load i64, i64* %16, align 8, !dbg !861, !tbaa !828\l  %102 = lshr i64 %101, 32, !dbg !861\l  %103 = load i64, i64* %17, align 8, !dbg !861, !tbaa !828\l  %104 = add i64 %103, %102, !dbg !861\l  store i64 %104, i64* %17, align 8, !dbg !861, !tbaa !828\l  %105 = load i64, i64* %18, align 8, !dbg !861, !tbaa !828\l  %106 = load i64, i64* %17, align 8, !dbg !861, !tbaa !828\l  %107 = add i64 %106, %105, !dbg !861\l  store i64 %107, i64* %17, align 8, !dbg !861, !tbaa !828\l  %108 = load i64, i64* %17, align 8, !dbg !863, !tbaa !828\l  %109 = load i64, i64* %18, align 8, !dbg !863, !tbaa !828\l  %110 = icmp ult i64 %108, %109, !dbg !863\l  br i1 %110, label %111, label %114, !dbg !861\l|{<s0>T|<s1>F}}"];
	Node0x1b62e60:s0 -> Node0x1b62eb0;
	Node0x1b62e60:s1 -> Node0x1b62f00;
	Node0x1b62eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%111:\l111:                                              \l  %112 = load i64, i64* %19, align 8, !dbg !863, !tbaa !828\l  %113 = add i64 %112, 4294967296, !dbg !863\l  store i64 %113, i64* %19, align 8, !dbg !863, !tbaa !828\l  br label %114, !dbg !863\l}"];
	Node0x1b62eb0 -> Node0x1b62f00;
	Node0x1b62f00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  %115 = load i64, i64* %19, align 8, !dbg !861, !tbaa !828\l  %116 = load i64, i64* %17, align 8, !dbg !861, !tbaa !828\l  %117 = lshr i64 %116, 32, !dbg !861\l  %118 = add i64 %115, %117, !dbg !861\l  store i64 %118, i64* %11, align 8, !dbg !861, !tbaa !828\l  %119 = load i64, i64* %17, align 8, !dbg !861, !tbaa !828\l  %120 = shl i64 %119, 32, !dbg !861\l  %121 = load i64, i64* %16, align 8, !dbg !861, !tbaa !828\l  %122 = and i64 %121, 4294967295, !dbg !861\l  %123 = add i64 %120, %122, !dbg !861\l  store i64 %123, i64* %12, align 8, !dbg !861, !tbaa !828\l  %124 = bitcast i64* %25 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %124) #23, !dbg !865\l  %125 = bitcast i64* %24 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #23, !dbg !865\l  %126 = bitcast i32* %23 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %126) #23, !dbg !865\l  %127 = bitcast i32* %22 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %127) #23, !dbg !865\l  %128 = bitcast i32* %21 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %128) #23, !dbg !865\l  %129 = bitcast i32* %20 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %129) #23, !dbg !865\l  %130 = bitcast i64* %19 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %130) #23, !dbg !865\l  %131 = bitcast i64* %18 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %131) #23, !dbg !865\l  %132 = bitcast i64* %17 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %132) #23, !dbg !865\l  %133 = bitcast i64* %16 to i8*, !dbg !865\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %133) #23, !dbg !865\l  %134 = bitcast i32* %15 to i8*, !dbg !858\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %134) #23, !dbg !858\l  br label %135, !dbg !859\l}"];
	Node0x1b62f00 -> Node0x1b62f50;
	Node0x1b62f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%135:\l135:                                              \l  br label %136, !dbg !859\l}"];
	Node0x1b62f50 -> Node0x1b62fa0;
	Node0x1b62fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%136:\l136:                                              \l  br label %137, !dbg !858\l}"];
	Node0x1b62fa0 -> Node0x1b62ff0;
	Node0x1b62ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%137:\l137:                                              \l  %138 = bitcast i64* %26 to i8*, !dbg !866\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %138) #23, !dbg !866\l  call void @llvm.dbg.declare(metadata i64* %26, metadata !821, metadata\l... !DIExpression()), !dbg !866\l  %139 = load i64, i64* %12, align 8, !dbg !866, !tbaa !828\l  %140 = load i64, i64* %9, align 8, !dbg !866, !tbaa !828\l  %141 = add i64 %139, %140, !dbg !866\l  store i64 %141, i64* %26, align 8, !dbg !866, !tbaa !828\l  %142 = load i64, i64* %11, align 8, !dbg !866, !tbaa !828\l  %143 = load i64, i64* %8, align 8, !dbg !866, !tbaa !828\l  %144 = add i64 %143, 1, !dbg !866\l  %145 = add i64 %142, %144, !dbg !866\l  %146 = load i64, i64* %26, align 8, !dbg !866, !tbaa !828\l  %147 = load i64, i64* %12, align 8, !dbg !866, !tbaa !828\l  %148 = icmp ult i64 %146, %147, !dbg !866\l  %149 = zext i1 %148 to i32, !dbg !866\l  %150 = sext i32 %149 to i64, !dbg !866\l  %151 = add i64 %145, %150, !dbg !866\l  store i64 %151, i64* %11, align 8, !dbg !866, !tbaa !828\l  %152 = load i64, i64* %26, align 8, !dbg !866, !tbaa !828\l  store i64 %152, i64* %12, align 8, !dbg !866, !tbaa !828\l  %153 = bitcast i64* %26 to i8*, !dbg !858\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %153) #23, !dbg !858\l  br label %154, !dbg !866\l}"];
	Node0x1b62ff0 -> Node0x1b63040;
	Node0x1b63040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%154:\l154:                                              \l  br label %155, !dbg !866\l}"];
	Node0x1b63040 -> Node0x1b63090;
	Node0x1b63090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%155:\l155:                                              \l  %156 = load i64, i64* %9, align 8, !dbg !858, !tbaa !828\l  %157 = load i64, i64* %11, align 8, !dbg !858, !tbaa !828\l  %158 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !858, !tbaa !823\l  %159 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %158, i32 0, i32 1, !dbg !858\l  %160 = load i64, i64* %159, align 8, !dbg !858, !tbaa !867\l  %161 = mul i64 %157, %160, !dbg !858\l  %162 = sub i64 %156, %161, !dbg !858\l  store i64 %162, i64* %13, align 8, !dbg !858, !tbaa !828\l  %163 = load i64, i64* %13, align 8, !dbg !858, !tbaa !828\l  %164 = load i64, i64* %12, align 8, !dbg !858, !tbaa !828\l  %165 = icmp ugt i64 %163, %164, !dbg !858\l  %166 = zext i1 %165 to i32, !dbg !858\l  %167 = sext i32 %166 to i64, !dbg !858\l  %168 = sub i64 0, %167, !dbg !858\l  store i64 %168, i64* %14, align 8, !dbg !858, !tbaa !828\l  %169 = load i64, i64* %14, align 8, !dbg !858, !tbaa !828\l  %170 = load i64, i64* %11, align 8, !dbg !858, !tbaa !828\l  %171 = add i64 %170, %169, !dbg !858\l  store i64 %171, i64* %11, align 8, !dbg !858, !tbaa !828\l  %172 = load i64, i64* %14, align 8, !dbg !858, !tbaa !828\l  %173 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !858, !tbaa !823\l  %174 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %173, i32 0, i32 1, !dbg !858\l  %175 = load i64, i64* %174, align 8, !dbg !858, !tbaa !867\l  %176 = and i64 %172, %175, !dbg !858\l  %177 = load i64, i64* %13, align 8, !dbg !858, !tbaa !828\l  %178 = add i64 %177, %176, !dbg !858\l  store i64 %178, i64* %13, align 8, !dbg !858, !tbaa !828\l  %179 = load i64, i64* %13, align 8, !dbg !868, !tbaa !828\l  %180 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !868, !tbaa !823\l  %181 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %180, i32 0, i32 1, !dbg !868\l  %182 = load i64, i64* %181, align 8, !dbg !868, !tbaa !867\l  %183 = icmp uge i64 %179, %182, !dbg !868\l  br i1 %183, label %184, label %192, !dbg !858\l|{<s0>T|<s1>F}}"];
	Node0x1b63090:s0 -> Node0x1b630e0;
	Node0x1b63090:s1 -> Node0x1b63130;
	Node0x1b630e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%184:\l184:                                              \l  %185 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !870, !tbaa !823\l  %186 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %185, i32 0, i32 1, !dbg !870\l  %187 = load i64, i64* %186, align 8, !dbg !870, !tbaa !867\l  %188 = load i64, i64* %13, align 8, !dbg !870, !tbaa !828\l  %189 = sub i64 %188, %187, !dbg !870\l  store i64 %189, i64* %13, align 8, !dbg !870, !tbaa !828\l  %190 = load i64, i64* %11, align 8, !dbg !870, !tbaa !828\l  %191 = add i64 %190, 1, !dbg !870\l  store i64 %191, i64* %11, align 8, !dbg !870, !tbaa !828\l  br label %192, !dbg !870\l}"];
	Node0x1b630e0 -> Node0x1b63130;
	Node0x1b63130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%192:\l192:                                              \l  %193 = load i64, i64* %13, align 8, !dbg !858, !tbaa !828\l  store i64 %193, i64* %10, align 8, !dbg !858, !tbaa !828\l  %194 = load i64, i64* %11, align 8, !dbg !858, !tbaa !828\l  store i64 %194, i64* %5, align 8, !dbg !858, !tbaa !828\l  %195 = bitcast i64* %14 to i8*, !dbg !857\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %195) #23, !dbg !857\l  %196 = bitcast i64* %13 to i8*, !dbg !857\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #23, !dbg !857\l  %197 = bitcast i64* %12 to i8*, !dbg !857\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #23, !dbg !857\l  %198 = bitcast i64* %11 to i8*, !dbg !857\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #23, !dbg !857\l  br label %199, !dbg !858\l}"];
	Node0x1b63130 -> Node0x1b63180;
	Node0x1b63180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%199:\l199:                                              \l  br label %200, !dbg !858\l}"];
	Node0x1b63180 -> Node0x1b631d0;
	Node0x1b631d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%200:\l200:                                              \l  %201 = load i64, i64* %10, align 8, !dbg !872, !tbaa !828\l  %202 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !872, !tbaa !823\l  %203 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %202, i32 0, i32 0, !dbg !872\l  %204 = load i32, i32* %203, align 8, !dbg !872, !tbaa !846\l  %205 = zext i32 %204 to i64, !dbg !872\l  %206 = sub i64 64, %205, !dbg !872\l  %207 = lshr i64 -1, %206, !dbg !872\l  %208 = and i64 %201, %207, !dbg !872\l  %209 = icmp eq i64 %208, 0, !dbg !872\l  br i1 %209, label %210, label %211, !dbg !875\l|{<s0>T|<s1>F}}"];
	Node0x1b631d0:s0 -> Node0x1b63220;
	Node0x1b631d0:s1 -> Node0x1b63270;
	Node0x1b63220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%210:\l210:                                              \l  br label %212, !dbg !875\l}"];
	Node0x1b63220 -> Node0x1b632c0;
	Node0x1b63270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%211:\l211:                                              \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([59 x i8], [59\l... x i8]* @.str.46.89, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 1268, i8* noundef\l... getelementptr inbounds ([84 x i8], [84 x i8]*\l... @__PRETTY_FUNCTION__.mpn_limb_get_str, i64 0, i64 0)) #24, !dbg !872\l  unreachable, !dbg !872\l}"];
	Node0x1b632c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%212:\l212:                                              \l  %213 = load %struct.gmp_div_inverse*, %struct.gmp_div_inverse** %6, align 8,\l... !dbg !876, !tbaa !823\l  %214 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %213, i32 0, i32 0, !dbg !877\l  %215 = load i32, i32* %214, align 8, !dbg !877, !tbaa !846\l  %216 = load i64, i64* %10, align 8, !dbg !878, !tbaa !828\l  %217 = zext i32 %215 to i64, !dbg !878\l  %218 = lshr i64 %216, %217, !dbg !878\l  store i64 %218, i64* %10, align 8, !dbg !878, !tbaa !828\l  %219 = load i64, i64* %10, align 8, !dbg !879, !tbaa !828\l  %220 = trunc i64 %219 to i8, !dbg !879\l  %221 = load i8*, i8** %4, align 8, !dbg !880, !tbaa !823\l  %222 = load i64, i64* %7, align 8, !dbg !881, !tbaa !828\l  %223 = getelementptr inbounds i8, i8* %221, i64 %222, !dbg !880\l  store i8 %220, i8* %223, align 1, !dbg !882, !tbaa !883\l  %224 = bitcast i64* %10 to i8*, !dbg !884\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %224) #23, !dbg !884\l  %225 = bitcast i64* %9 to i8*, !dbg !884\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %225) #23, !dbg !884\l  %226 = bitcast i64* %8 to i8*, !dbg !884\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %226) #23, !dbg !884\l  br label %227, !dbg !885\l}"];
	Node0x1b632c0 -> Node0x1b63310;
	Node0x1b63310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%227:\l227:                                              \l  %228 = load i64, i64* %7, align 8, !dbg !886, !tbaa !828\l  %229 = add nsw i64 %228, 1, !dbg !886\l  store i64 %229, i64* %7, align 8, !dbg !886, !tbaa !828\l  br label %28, !dbg !887, !llvm.loop !888\l}"];
	Node0x1b63310 -> Node0x1b62d70;
	Node0x1b63360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%230:\l230:                                              \l  %231 = load i64, i64* %7, align 8, !dbg !892, !tbaa !828\l  %232 = bitcast i64* %7 to i8*, !dbg !893\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %232) #23, !dbg !893\l  ret i64 %231, !dbg !894\l}"];
}
