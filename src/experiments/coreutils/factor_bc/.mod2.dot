digraph "CFG for 'mod2' function" {
	label="CFG for 'mod2' function";

	Node0x1a609f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%5:\l  %6 = alloca i64, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i32, align 4\l  %15 = alloca i64, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  store i64* %0, i64** %7, align 8, !tbaa !798\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !784, metadata\l... !DIExpression()), !dbg !802\l  store i64 %1, i64* %8, align 8, !tbaa !803\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !785, metadata\l... !DIExpression()), !dbg !805\l  store i64 %2, i64* %9, align 8, !tbaa !803\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !786, metadata\l... !DIExpression()), !dbg !806\l  store i64 %3, i64* %10, align 8, !tbaa !803\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !787, metadata\l... !DIExpression()), !dbg !807\l  store i64 %4, i64* %11, align 8, !tbaa !803\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !788, metadata\l... !DIExpression()), !dbg !808\l  %19 = bitcast i32* %12 to i8*, !dbg !809\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #23, !dbg !809\l  call void @llvm.dbg.declare(metadata i32* %12, metadata !789, metadata\l... !DIExpression()), !dbg !810\l  %20 = bitcast i32* %13 to i8*, !dbg !809\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #23, !dbg !809\l  call void @llvm.dbg.declare(metadata i32* %13, metadata !790, metadata\l... !DIExpression()), !dbg !811\l  %21 = load i64, i64* %10, align 8, !dbg !812, !tbaa !803\l  %22 = icmp ne i64 %21, 0, !dbg !812\l  br i1 %22, label %23, label %24, !dbg !815\l|{<s0>T|<s1>F}}"];
	Node0x1a609f0:s0 -> Node0x1a60a40;
	Node0x1a609f0:s1 -> Node0x1a60a90;
	Node0x1a60a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%23:\l23:                                               \l  br label %25, !dbg !815\l}"];
	Node0x1a60a40 -> Node0x1a60ae0;
	Node0x1a60a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%24:\l24:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([8 x i8], [8 x\l... i8]* @.str.52, i64 0, i64 0), i8* noundef getelementptr inbounds ([16 x i8],\l... [16 x i8]* @.str.44, i64 0, i64 0), i32 noundef 413, i8* noundef\l... getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__.mod2, i64\l... 0, i64 0)) #24, !dbg !812\l  unreachable, !dbg !812\l}"];
	Node0x1a60ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%25:\l25:                                               \l  %26 = load i64, i64* %8, align 8, !dbg !816, !tbaa !803\l  %27 = icmp eq i64 %26, 0, !dbg !818\l  br i1 %27, label %28, label %31, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0x1a60ae0:s0 -> Node0x1a60b30;
	Node0x1a60ae0:s1 -> Node0x1a60b80;
	Node0x1a60b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%28:\l28:                                               \l  %29 = load i64*, i64** %7, align 8, !dbg !820, !tbaa !798\l  store i64 0, i64* %29, align 8, !dbg !822, !tbaa !803\l  %30 = load i64, i64* %9, align 8, !dbg !823, !tbaa !803\l  store i64 %30, i64* %6, align 8, !dbg !824\l  store i32 1, i32* %14, align 4\l  br label %119, !dbg !824\l}"];
	Node0x1a60b30 -> Node0x1a61260;
	Node0x1a60b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%31:\l31:                                               \l  br label %32, !dbg !825\l}"];
	Node0x1a60b80 -> Node0x1a60bd0;
	Node0x1a60bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%32:\l32:                                               \l  %33 = bitcast i64* %15 to i8*, !dbg !826\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #23, !dbg !826\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !791, metadata\l... !DIExpression()), !dbg !826\l  %34 = load i64, i64* %10, align 8, !dbg !826, !tbaa !803\l  %35 = call i64 asm \"bsr\\09$1,$0\", \"=r,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64\l... %34) #25, !dbg !826, !srcloc !827\l  store i64 %35, i64* %15, align 8, !dbg !826, !tbaa !828\l  %36 = load i64, i64* %15, align 8, !dbg !826, !tbaa !828\l  %37 = xor i64 %36, 63, !dbg !826\l  %38 = trunc i64 %37 to i32, !dbg !826\l  store i32 %38, i32* %12, align 4, !dbg !826, !tbaa !830\l  %39 = bitcast i64* %15 to i8*, !dbg !825\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #23, !dbg !825\l  br label %40, !dbg !826\l}"];
	Node0x1a60bd0 -> Node0x1a60c20;
	Node0x1a60c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%40:\l40:                                               \l  br label %41, !dbg !826\l}"];
	Node0x1a60c20 -> Node0x1a60c70;
	Node0x1a60c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%41:\l41:                                               \l  br label %42, !dbg !832\l}"];
	Node0x1a60c70 -> Node0x1a60cc0;
	Node0x1a60cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%42:\l42:                                               \l  %43 = bitcast i64* %16 to i8*, !dbg !833\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #23, !dbg !833\l  call void @llvm.dbg.declare(metadata i64* %16, metadata !793, metadata\l... !DIExpression()), !dbg !833\l  %44 = load i64, i64* %8, align 8, !dbg !833, !tbaa !803\l  %45 = call i64 asm \"bsr\\09$1,$0\", \"=r,rm,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64\l... %44) #25, !dbg !833, !srcloc !834\l  store i64 %45, i64* %16, align 8, !dbg !833, !tbaa !828\l  %46 = load i64, i64* %16, align 8, !dbg !833, !tbaa !828\l  %47 = xor i64 %46, 63, !dbg !833\l  %48 = trunc i64 %47 to i32, !dbg !833\l  store i32 %48, i32* %13, align 4, !dbg !833, !tbaa !830\l  %49 = bitcast i64* %16 to i8*, !dbg !832\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #23, !dbg !832\l  br label %50, !dbg !833\l}"];
	Node0x1a60cc0 -> Node0x1a60d10;
	Node0x1a60d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%50:\l50:                                               \l  br label %51, !dbg !833\l}"];
	Node0x1a60d10 -> Node0x1a60d60;
	Node0x1a60d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%51:\l51:                                               \l  %52 = bitcast i32* %17 to i8*, !dbg !835\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #23, !dbg !835\l  call void @llvm.dbg.declare(metadata i32* %17, metadata !795, metadata\l... !DIExpression()), !dbg !836\l  %53 = load i32, i32* %12, align 4, !dbg !837, !tbaa !830\l  %54 = load i32, i32* %13, align 4, !dbg !838, !tbaa !830\l  %55 = sub nsw i32 %53, %54, !dbg !839\l  store i32 %55, i32* %17, align 4, !dbg !836, !tbaa !830\l  br label %56, !dbg !840\l}"];
	Node0x1a60d60 -> Node0x1a60db0;
	Node0x1a60db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%56:\l56:                                               \l  %57 = load i64, i64* %10, align 8, !dbg !841, !tbaa !803\l  %58 = load i32, i32* %17, align 4, !dbg !841, !tbaa !830\l  %59 = zext i32 %58 to i64, !dbg !841\l  %60 = shl i64 %57, %59, !dbg !841\l  %61 = load i64, i64* %11, align 8, !dbg !841, !tbaa !803\l  %62 = load i32, i32* %17, align 4, !dbg !841, !tbaa !830\l  %63 = sub nsw i32 64, %62, !dbg !841\l  %64 = zext i32 %63 to i64, !dbg !841\l  %65 = lshr i64 %61, %64, !dbg !841\l  %66 = or i64 %60, %65, !dbg !841\l  store i64 %66, i64* %10, align 8, !dbg !841, !tbaa !803\l  %67 = load i64, i64* %11, align 8, !dbg !841, !tbaa !803\l  %68 = load i32, i32* %17, align 4, !dbg !841, !tbaa !830\l  %69 = zext i32 %68 to i64, !dbg !841\l  %70 = shl i64 %67, %69, !dbg !841\l  store i64 %70, i64* %11, align 8, !dbg !841, !tbaa !803\l  br label %71, !dbg !841\l}"];
	Node0x1a60db0 -> Node0x1a60e00;
	Node0x1a60e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%71:\l71:                                               \l  br label %72, !dbg !841\l}"];
	Node0x1a60e00 -> Node0x1a60e50;
	Node0x1a60e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%72:\l72:                                               \l  %73 = bitcast i32* %18 to i8*, !dbg !843\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %73) #23, !dbg !843\l  call void @llvm.dbg.declare(metadata i32* %18, metadata !796, metadata\l... !DIExpression()), !dbg !844\l  store i32 0, i32* %18, align 4, !dbg !844, !tbaa !830\l  br label %74, !dbg !843\l}"];
	Node0x1a60e50 -> Node0x1a60ea0;
	Node0x1a60ea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = load i32, i32* %18, align 4, !dbg !845, !tbaa !830\l  %76 = load i32, i32* %17, align 4, !dbg !847, !tbaa !830\l  %77 = icmp slt i32 %75, %76, !dbg !848\l  br i1 %77, label %80, label %78, !dbg !849\l|{<s0>T|<s1>F}}"];
	Node0x1a60ea0:s0 -> Node0x1a60f40;
	Node0x1a60ea0:s1 -> Node0x1a60ef0;
	Node0x1a60ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%78:\l78:                                               \l  store i32 8, i32* %14, align 4\l  %79 = bitcast i32* %18 to i8*, !dbg !850\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %79) #23, !dbg !850\l  br label %114\l}"];
	Node0x1a60ef0 -> Node0x1a61210;
	Node0x1a60f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = load i64, i64* %8, align 8, !dbg !851, !tbaa !803\l  %82 = load i64, i64* %10, align 8, !dbg !851, !tbaa !803\l  %83 = icmp ugt i64 %81, %82, !dbg !851\l  br i1 %83, label %92, label %84, !dbg !851\l|{<s0>T|<s1>F}}"];
	Node0x1a60f40:s0 -> Node0x1a61030;
	Node0x1a60f40:s1 -> Node0x1a60f90;
	Node0x1a60f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%84:\l84:                                               \l  %85 = load i64, i64* %8, align 8, !dbg !851, !tbaa !803\l  %86 = load i64, i64* %10, align 8, !dbg !851, !tbaa !803\l  %87 = icmp eq i64 %85, %86, !dbg !851\l  br i1 %87, label %88, label %100, !dbg !851\l|{<s0>T|<s1>F}}"];
	Node0x1a60f90:s0 -> Node0x1a60fe0;
	Node0x1a60f90:s1 -> Node0x1a61080;
	Node0x1a60fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%88:\l88:                                               \l  %89 = load i64, i64* %9, align 8, !dbg !851, !tbaa !803\l  %90 = load i64, i64* %11, align 8, !dbg !851, !tbaa !803\l  %91 = icmp uge i64 %89, %90, !dbg !851\l  br i1 %91, label %92, label %100, !dbg !854\l|{<s0>T|<s1>F}}"];
	Node0x1a60fe0:s0 -> Node0x1a61030;
	Node0x1a60fe0:s1 -> Node0x1a61080;
	Node0x1a61030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%92:\l92:                                               \l  %93 = load i64, i64* %8, align 8, !dbg !855, !tbaa !803\l  %94 = load i64, i64* %10, align 8, !dbg !855, !tbaa !803\l  %95 = load i64, i64* %9, align 8, !dbg !855, !tbaa !803\l  %96 = load i64, i64* %11, align 8, !dbg !855, !tbaa !803\l  %97 = call \{ i64, i64 \} asm \"subq $5,$\{1:q\}\\0A\\09sbbq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %93, i64 %94, i64 %95,\l... i64 %96) #25, !dbg !855, !srcloc !856\l  %98 = extractvalue \{ i64, i64 \} %97, 0, !dbg !855\l  %99 = extractvalue \{ i64, i64 \} %97, 1, !dbg !855\l  store i64 %98, i64* %8, align 8, !dbg !855, !tbaa !803\l  store i64 %99, i64* %9, align 8, !dbg !855, !tbaa !803\l  br label %100, !dbg !855\l}"];
	Node0x1a61030 -> Node0x1a61080;
	Node0x1a61080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%100:\l100:                                              \l  br label %101, !dbg !857\l}"];
	Node0x1a61080 -> Node0x1a610d0;
	Node0x1a610d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%101:\l101:                                              \l  %102 = load i64, i64* %10, align 8, !dbg !858, !tbaa !803\l  %103 = shl i64 %102, 63, !dbg !858\l  %104 = load i64, i64* %11, align 8, !dbg !858, !tbaa !803\l  %105 = lshr i64 %104, 1, !dbg !858\l  %106 = or i64 %103, %105, !dbg !858\l  store i64 %106, i64* %11, align 8, !dbg !858, !tbaa !803\l  %107 = load i64, i64* %10, align 8, !dbg !858, !tbaa !803\l  %108 = lshr i64 %107, 1, !dbg !858\l  store i64 %108, i64* %10, align 8, !dbg !858, !tbaa !803\l  br label %109, !dbg !858\l}"];
	Node0x1a610d0 -> Node0x1a61120;
	Node0x1a61120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%109:\l109:                                              \l  br label %110, !dbg !858\l}"];
	Node0x1a61120 -> Node0x1a61170;
	Node0x1a61170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%110:\l110:                                              \l  br label %111, !dbg !860\l}"];
	Node0x1a61170 -> Node0x1a611c0;
	Node0x1a611c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  %112 = load i32, i32* %18, align 4, !dbg !861, !tbaa !830\l  %113 = add nsw i32 %112, 1, !dbg !861\l  store i32 %113, i32* %18, align 4, !dbg !861, !tbaa !830\l  br label %74, !dbg !850, !llvm.loop !862\l}"];
	Node0x1a611c0 -> Node0x1a60ea0;
	Node0x1a61210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%114:\l114:                                              \l  %115 = load i64, i64* %8, align 8, !dbg !866, !tbaa !803\l  %116 = load i64*, i64** %7, align 8, !dbg !867, !tbaa !798\l  store i64 %115, i64* %116, align 8, !dbg !868, !tbaa !803\l  %117 = load i64, i64* %9, align 8, !dbg !869, !tbaa !803\l  store i64 %117, i64* %6, align 8, !dbg !870\l  store i32 1, i32* %14, align 4\l  %118 = bitcast i32* %17 to i8*, !dbg !871\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %118) #23, !dbg !871\l  br label %119\l}"];
	Node0x1a61210 -> Node0x1a61260;
	Node0x1a61260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%119:\l119:                                              \l  %120 = bitcast i32* %13 to i8*, !dbg !871\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %120) #23, !dbg !871\l  %121 = bitcast i32* %12 to i8*, !dbg !871\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %121) #23, !dbg !871\l  %122 = load i64, i64* %6, align 8, !dbg !871\l  ret i64 %122, !dbg !871\l}"];
}
