digraph "CFG for 'mpn_set_str_bits' function" {
	label="CFG for 'mpn_set_str_bits' function";

	Node0x1b79ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%4:\l  %5 = alloca i64*, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i32, align 4\l  store i64* %0, i64** %5, align 8, !tbaa !790\l  call void @llvm.dbg.declare(metadata i64** %5, metadata !783, metadata\l... !DIExpression()), !dbg !794\l  store i8* %1, i8** %6, align 8, !tbaa !790\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !784, metadata\l... !DIExpression()), !dbg !795\l  store i64 %2, i64* %7, align 8, !tbaa !796\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !785, metadata\l... !DIExpression()), !dbg !798\l  store i32 %3, i32* %8, align 4, !tbaa !799\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !786, metadata\l... !DIExpression()), !dbg !801\l  %12 = bitcast i64* %9 to i8*, !dbg !802\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #23, !dbg !802\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !787, metadata\l... !DIExpression()), !dbg !803\l  %13 = bitcast i64* %10 to i8*, !dbg !804\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #23, !dbg !804\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !788, metadata\l... !DIExpression()), !dbg !805\l  %14 = bitcast i32* %11 to i8*, !dbg !806\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #23, !dbg !806\l  call void @llvm.dbg.declare(metadata i32* %11, metadata !789, metadata\l... !DIExpression()), !dbg !807\l  store i64 0, i64* %10, align 8, !dbg !808, !tbaa !796\l  store i64 0, i64* %9, align 8, !dbg !810, !tbaa !796\l  store i32 0, i32* %11, align 4, !dbg !811, !tbaa !799\l  br label %15, !dbg !812\l}"];
	Node0x1b79ec0 -> Node0x1b79f10;
	Node0x1b79f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  %16 = load i64, i64* %7, align 8, !dbg !813, !tbaa !796\l  %17 = add i64 %16, -1, !dbg !813\l  store i64 %17, i64* %7, align 8, !dbg !813, !tbaa !796\l  %18 = icmp ugt i64 %16, 0, !dbg !815\l  br i1 %18, label %19, label %57, !dbg !816\l|{<s0>T|<s1>F}}"];
	Node0x1b79f10:s0 -> Node0x1b79f60;
	Node0x1b79f10:s1 -> Node0x1b7a050;
	Node0x1b79f60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = load i8*, i8** %6, align 8, !dbg !817, !tbaa !790\l  %21 = load i64, i64* %7, align 8, !dbg !819, !tbaa !796\l  %22 = getelementptr inbounds i8, i8* %20, i64 %21, !dbg !817\l  %23 = load i8, i8* %22, align 1, !dbg !817, !tbaa !820\l  %24 = zext i8 %23 to i64, !dbg !821\l  %25 = load i32, i32* %11, align 4, !dbg !822, !tbaa !799\l  %26 = zext i32 %25 to i64, !dbg !823\l  %27 = shl i64 %24, %26, !dbg !823\l  %28 = load i64, i64* %10, align 8, !dbg !824, !tbaa !796\l  %29 = or i64 %28, %27, !dbg !824\l  store i64 %29, i64* %10, align 8, !dbg !824, !tbaa !796\l  %30 = load i32, i32* %8, align 4, !dbg !825, !tbaa !799\l  %31 = load i32, i32* %11, align 4, !dbg !826, !tbaa !799\l  %32 = add i32 %31, %30, !dbg !826\l  store i32 %32, i32* %11, align 4, !dbg !826, !tbaa !799\l  %33 = load i32, i32* %11, align 4, !dbg !827, !tbaa !799\l  %34 = zext i32 %33 to i64, !dbg !827\l  %35 = icmp uge i64 %34, 64, !dbg !829\l  br i1 %35, label %36, label %56, !dbg !830\l|{<s0>T|<s1>F}}"];
	Node0x1b79f60:s0 -> Node0x1b79fb0;
	Node0x1b79f60:s1 -> Node0x1b7a000;
	Node0x1b79fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%36:\l36:                                               \l  %37 = load i32, i32* %11, align 4, !dbg !831, !tbaa !799\l  %38 = zext i32 %37 to i64, !dbg !831\l  %39 = sub i64 %38, 64, !dbg !831\l  %40 = trunc i64 %39 to i32, !dbg !831\l  store i32 %40, i32* %11, align 4, !dbg !831, !tbaa !799\l  %41 = load i64, i64* %10, align 8, !dbg !833, !tbaa !796\l  %42 = load i64*, i64** %5, align 8, !dbg !834, !tbaa !790\l  %43 = load i64, i64* %9, align 8, !dbg !835, !tbaa !796\l  %44 = add nsw i64 %43, 1, !dbg !835\l  store i64 %44, i64* %9, align 8, !dbg !835, !tbaa !796\l  %45 = getelementptr inbounds i64, i64* %42, i64 %43, !dbg !834\l  store i64 %41, i64* %45, align 8, !dbg !836, !tbaa !796\l  %46 = load i8*, i8** %6, align 8, !dbg !837, !tbaa !790\l  %47 = load i64, i64* %7, align 8, !dbg !838, !tbaa !796\l  %48 = getelementptr inbounds i8, i8* %46, i64 %47, !dbg !837\l  %49 = load i8, i8* %48, align 1, !dbg !837, !tbaa !820\l  %50 = zext i8 %49 to i32, !dbg !839\l  %51 = load i32, i32* %8, align 4, !dbg !840, !tbaa !799\l  %52 = load i32, i32* %11, align 4, !dbg !841, !tbaa !799\l  %53 = sub i32 %51, %52, !dbg !842\l  %54 = lshr i32 %50, %53, !dbg !843\l  %55 = zext i32 %54 to i64, !dbg !839\l  store i64 %55, i64* %10, align 8, !dbg !844, !tbaa !796\l  br label %56, !dbg !845\l}"];
	Node0x1b79fb0 -> Node0x1b7a000;
	Node0x1b7a000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  br label %15, !dbg !846, !llvm.loop !847\l}"];
	Node0x1b7a000 -> Node0x1b79f10;
	Node0x1b7a050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%57:\l57:                                               \l  %58 = load i64, i64* %10, align 8, !dbg !851, !tbaa !796\l  %59 = icmp ne i64 %58, 0, !dbg !853\l  br i1 %59, label %60, label %66, !dbg !854\l|{<s0>T|<s1>F}}"];
	Node0x1b7a050:s0 -> Node0x1b7a0a0;
	Node0x1b7a050:s1 -> Node0x1b7a0f0;
	Node0x1b7a0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%60:\l60:                                               \l  %61 = load i64, i64* %10, align 8, !dbg !855, !tbaa !796\l  %62 = load i64*, i64** %5, align 8, !dbg !856, !tbaa !790\l  %63 = load i64, i64* %9, align 8, !dbg !857, !tbaa !796\l  %64 = add nsw i64 %63, 1, !dbg !857\l  store i64 %64, i64* %9, align 8, !dbg !857, !tbaa !796\l  %65 = getelementptr inbounds i64, i64* %62, i64 %63, !dbg !856\l  store i64 %61, i64* %65, align 8, !dbg !858, !tbaa !796\l  br label %70, !dbg !856\l}"];
	Node0x1b7a0a0 -> Node0x1b7a140;
	Node0x1b7a0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%66:\l66:                                               \l  %67 = load i64*, i64** %5, align 8, !dbg !859, !tbaa !790\l  %68 = load i64, i64* %9, align 8, !dbg !860, !tbaa !796\l  %69 = call i64 @mpn_normalized_size(i64* noundef %67, i64 noundef %68), !dbg\l... !861\l  store i64 %69, i64* %9, align 8, !dbg !862, !tbaa !796\l  br label %70\l}"];
	Node0x1b7a0f0 -> Node0x1b7a140;
	Node0x1b7a140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%70:\l70:                                               \l  %71 = load i64, i64* %9, align 8, !dbg !863, !tbaa !796\l  %72 = bitcast i32* %11 to i8*, !dbg !864\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %72) #23, !dbg !864\l  %73 = bitcast i64* %10 to i8*, !dbg !864\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %73) #23, !dbg !864\l  %74 = bitcast i64* %9 to i8*, !dbg !864\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #23, !dbg !864\l  ret i64 %71, !dbg !865\l}"];
}
