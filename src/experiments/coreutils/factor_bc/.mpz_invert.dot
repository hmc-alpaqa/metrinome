digraph "CFG for 'mpz_invert' function" {
	label="CFG for 'mpz_invert' function";

	Node0x1d4b320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca %struct.__mpz_struct*, align 8\l  %6 = alloca %struct.__mpz_struct*, align 8\l  %7 = alloca %struct.__mpz_struct*, align 8\l  %8 = alloca [1 x %struct.__mpz_struct], align 16\l  %9 = alloca [1 x %struct.__mpz_struct], align 16\l  %10 = alloca i32, align 4\l  %11 = alloca i32, align 4\l  store %struct.__mpz_struct* %0, %struct.__mpz_struct** %5, align 8, !tbaa\l... !795\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %5, metadata\l... !785, metadata !DIExpression()), !dbg !799\l  store %struct.__mpz_struct* %1, %struct.__mpz_struct** %6, align 8, !tbaa\l... !795\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %6, metadata\l... !786, metadata !DIExpression()), !dbg !800\l  store %struct.__mpz_struct* %2, %struct.__mpz_struct** %7, align 8, !tbaa\l... !795\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %7, metadata\l... !787, metadata !DIExpression()), !dbg !801\l  %12 = bitcast [1 x %struct.__mpz_struct]* %8 to i8*, !dbg !802\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* %12) #23, !dbg !802\l  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %8,\l... metadata !788, metadata !DIExpression()), !dbg !803\l  %13 = bitcast [1 x %struct.__mpz_struct]* %9 to i8*, !dbg !802\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #23, !dbg !802\l  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %9,\l... metadata !793, metadata !DIExpression()), !dbg !804\l  %14 = bitcast i32* %10 to i8*, !dbg !805\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #23, !dbg !805\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !794, metadata\l... !DIExpression()), !dbg !806\l  %15 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !807, !tbaa !795\l  %16 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %15, i32 0, i32 1, !dbg !809\l  %17 = load i32, i32* %16, align 4, !dbg !809, !tbaa !810\l  %18 = icmp eq i32 %17, 0, !dbg !813\l  br i1 %18, label %23, label %19, !dbg !814\l|{<s0>T|<s1>F}}"];
	Node0x1d4b320:s0 -> Node0x1d4b430;
	Node0x1d4b320:s1 -> Node0x1d4b3e0;
	Node0x1d4b3e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%19:\l19:                                               \l  %20 = load %struct.__mpz_struct*, %struct.__mpz_struct** %7, align 8, !dbg\l... !815, !tbaa !795\l  %21 = call i32 @mpz_cmpabs_ui(%struct.__mpz_struct* noundef %20, i64 noundef\l... 1), !dbg !816\l  %22 = icmp sle i32 %21, 0, !dbg !817\l  br i1 %22, label %23, label %24, !dbg !818\l|{<s0>T|<s1>F}}"];
	Node0x1d4b3e0:s0 -> Node0x1d4b430;
	Node0x1d4b3e0:s1 -> Node0x1d4b480;
	Node0x1d4b430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%23:\l23:                                               \l  store i32 0, i32* %4, align 4, !dbg !819\l  store i32 1, i32* %11, align 4\l  br label %63, !dbg !819\l}"];
	Node0x1d4b430 -> Node0x1d4b700;
	Node0x1d4b480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%24:\l24:                                               \l  %25 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %8, i64 0, i64 0, !dbg !820\l  call void @mpz_init(%struct.__mpz_struct* noundef %25), !dbg !821\l  %26 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %9, i64 0, i64 0, !dbg !822\l  call void @mpz_init(%struct.__mpz_struct* noundef %26), !dbg !823\l  %27 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %8, i64 0, i64 0, !dbg !824\l  %28 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %9, i64 0, i64 0, !dbg !825\l  %29 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !826, !tbaa !795\l  %30 = load %struct.__mpz_struct*, %struct.__mpz_struct** %7, align 8, !dbg\l... !827, !tbaa !795\l  call void @mpz_gcdext(%struct.__mpz_struct* noundef %27,\l... %struct.__mpz_struct* noundef %28, %struct.__mpz_struct* noundef null,\l... %struct.__mpz_struct* noundef %29, %struct.__mpz_struct* noundef %30), !dbg\l... !828\l  %31 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %8, i64 0, i64 0, !dbg !829\l  %32 = call i32 @mpz_cmp_ui(%struct.__mpz_struct* noundef %31, i64 noundef\l... 1), !dbg !830\l  %33 = icmp eq i32 %32, 0, !dbg !831\l  %34 = zext i1 %33 to i32, !dbg !831\l  store i32 %34, i32* %10, align 4, !dbg !832, !tbaa !833\l  %35 = load i32, i32* %10, align 4, !dbg !834, !tbaa !833\l  %36 = icmp ne i32 %35, 0, !dbg !834\l  br i1 %36, label %37, label %59, !dbg !836\l|{<s0>T|<s1>F}}"];
	Node0x1d4b480:s0 -> Node0x1d4b4d0;
	Node0x1d4b480:s1 -> Node0x1d4b6b0;
	Node0x1d4b4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%37:\l37:                                               \l  %38 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %9, i64 0, i64 0, !dbg !837\l  %39 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %38, i32 0, i32 1, !dbg !837\l  %40 = load i32, i32* %39, align 4, !dbg !837, !tbaa !810\l  %41 = icmp slt i32 %40, 0, !dbg !840\l  br i1 %41, label %42, label %56, !dbg !841\l|{<s0>T|<s1>F}}"];
	Node0x1d4b4d0:s0 -> Node0x1d4b520;
	Node0x1d4b4d0:s1 -> Node0x1d4b660;
	Node0x1d4b520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%42:\l42:                                               \l  %43 = load %struct.__mpz_struct*, %struct.__mpz_struct** %7, align 8, !dbg\l... !842, !tbaa !795\l  %44 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %43, i32 0, i32 1, !dbg !845\l  %45 = load i32, i32* %44, align 4, !dbg !845, !tbaa !810\l  %46 = icmp sge i32 %45, 0, !dbg !846\l  br i1 %46, label %47, label %51, !dbg !847\l|{<s0>T|<s1>F}}"];
	Node0x1d4b520:s0 -> Node0x1d4b570;
	Node0x1d4b520:s1 -> Node0x1d4b5c0;
	Node0x1d4b570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%47:\l47:                                               \l  %48 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %9, i64 0, i64 0, !dbg !848\l  %49 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %9, i64 0, i64 0, !dbg !849\l  %50 = load %struct.__mpz_struct*, %struct.__mpz_struct** %7, align 8, !dbg\l... !850, !tbaa !795\l  call void @mpz_add(%struct.__mpz_struct* noundef %48, %struct.__mpz_struct*\l... noundef %49, %struct.__mpz_struct* noundef %50), !dbg !851\l  br label %55, !dbg !851\l}"];
	Node0x1d4b570 -> Node0x1d4b610;
	Node0x1d4b5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%51:\l51:                                               \l  %52 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %9, i64 0, i64 0, !dbg !852\l  %53 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %9, i64 0, i64 0, !dbg !853\l  %54 = load %struct.__mpz_struct*, %struct.__mpz_struct** %7, align 8, !dbg\l... !854, !tbaa !795\l  call void @mpz_sub(%struct.__mpz_struct* noundef %52, %struct.__mpz_struct*\l... noundef %53, %struct.__mpz_struct* noundef %54), !dbg !855\l  br label %55\l}"];
	Node0x1d4b5c0 -> Node0x1d4b610;
	Node0x1d4b610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%55:\l55:                                               \l  br label %56, !dbg !856\l}"];
	Node0x1d4b610 -> Node0x1d4b660;
	Node0x1d4b660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%56:\l56:                                               \l  %57 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !857, !tbaa !795\l  %58 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %9, i64 0, i64 0, !dbg !858\l  call void @mpz_swap(%struct.__mpz_struct* noundef %57, %struct.__mpz_struct*\l... noundef %58), !dbg !859\l  br label %59, !dbg !860\l}"];
	Node0x1d4b660 -> Node0x1d4b6b0;
	Node0x1d4b6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%59:\l59:                                               \l  %60 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %8, i64 0, i64 0, !dbg !861\l  call void @mpz_clear(%struct.__mpz_struct* noundef %60), !dbg !862\l  %61 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x\l... %struct.__mpz_struct]* %9, i64 0, i64 0, !dbg !863\l  call void @mpz_clear(%struct.__mpz_struct* noundef %61), !dbg !864\l  %62 = load i32, i32* %10, align 4, !dbg !865, !tbaa !833\l  store i32 %62, i32* %4, align 4, !dbg !866\l  store i32 1, i32* %11, align 4\l  br label %63, !dbg !866\l}"];
	Node0x1d4b6b0 -> Node0x1d4b700;
	Node0x1d4b700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = bitcast i32* %10 to i8*, !dbg !867\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %64) #23, !dbg !867\l  %65 = bitcast [1 x %struct.__mpz_struct]* %9 to i8*, !dbg !867\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* %65) #23, !dbg !867\l  %66 = bitcast [1 x %struct.__mpz_struct]* %8 to i8*, !dbg !867\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* %66) #23, !dbg !867\l  %67 = load i32, i32* %4, align 4, !dbg !867\l  ret i32 %67, !dbg !867\l}"];
}
