digraph "CFG for 'gcd2_odd' function" {
	label="CFG for 'gcd2_odd' function";

	Node0x19c5200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%5:\l  %6 = alloca i64, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  store i64* %0, i64** %7, align 8, !tbaa !789\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !784, metadata\l... !DIExpression()), !dbg !793\l  store i64 %1, i64* %8, align 8, !tbaa !794\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !785, metadata\l... !DIExpression()), !dbg !796\l  store i64 %2, i64* %9, align 8, !tbaa !794\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !786, metadata\l... !DIExpression()), !dbg !797\l  store i64 %3, i64* %10, align 8, !tbaa !794\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !787, metadata\l... !DIExpression()), !dbg !798\l  store i64 %4, i64* %11, align 8, !tbaa !794\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !788, metadata\l... !DIExpression()), !dbg !799\l  %12 = load i64, i64* %11, align 8, !dbg !800, !tbaa !794\l  %13 = and i64 %12, 1, !dbg !800\l  %14 = icmp ne i64 %13, 0, !dbg !800\l  br i1 %14, label %15, label %16, !dbg !803\l|{<s0>T|<s1>F}}"];
	Node0x19c5200:s0 -> Node0x19c5250;
	Node0x19c5200:s1 -> Node0x19cb6c0;
	Node0x19c5250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%15:\l15:                                               \l  br label %17, !dbg !803\l}"];
	Node0x19c5250 -> Node0x19cc0c0;
	Node0x19cb6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%16:\l16:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([7 x i8], [7 x\l... i8]* @.str.51, i64 0, i64 0), i8* noundef getelementptr inbounds ([16 x i8],\l... [16 x i8]* @.str.44, i64 0, i64 0), i32 noundef 478, i8* noundef\l... getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__.gcd2_odd,\l... i64 0, i64 0)) #23, !dbg !800\l  unreachable, !dbg !800\l}"];
	Node0x19cc0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%17:\l17:                                               \l  %18 = load i64, i64* %9, align 8, !dbg !804, !tbaa !794\l  %19 = load i64, i64* %8, align 8, !dbg !806, !tbaa !794\l  %20 = or i64 %18, %19, !dbg !807\l  %21 = icmp eq i64 %20, 0, !dbg !808\l  br i1 %21, label %22, label %26, !dbg !809\l|{<s0>T|<s1>F}}"];
	Node0x19cc0c0:s0 -> Node0x19cc110;
	Node0x19cc0c0:s1 -> Node0x19cc160;
	Node0x19cc110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%22:\l22:                                               \l  %23 = load i64, i64* %10, align 8, !dbg !810, !tbaa !794\l  %24 = load i64*, i64** %7, align 8, !dbg !812, !tbaa !789\l  store i64 %23, i64* %24, align 8, !dbg !813, !tbaa !794\l  %25 = load i64, i64* %11, align 8, !dbg !814, !tbaa !794\l  store i64 %25, i64* %6, align 8, !dbg !815\l  br label %129, !dbg !815\l}"];
	Node0x19cc110 -> Node0x19ccac0;
	Node0x19cc160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%26:\l26:                                               \l  br label %27, !dbg !816\l}"];
	Node0x19cc160 -> Node0x19cc1b0;
	Node0x19cc1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%27:\l27:                                               \l  %28 = load i64, i64* %9, align 8, !dbg !817, !tbaa !794\l  %29 = and i64 %28, 1, !dbg !818\l  %30 = icmp eq i64 %29, 0, !dbg !819\l  br i1 %30, label %31, label %41, !dbg !816\l|{<s0>T|<s1>F}}"];
	Node0x19cc1b0:s0 -> Node0x19cc200;
	Node0x19cc1b0:s1 -> Node0x19cc2f0;
	Node0x19cc200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%31:\l31:                                               \l  br label %32, !dbg !820\l}"];
	Node0x19cc200 -> Node0x19cc250;
	Node0x19cc250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%32:\l32:                                               \l  %33 = load i64, i64* %8, align 8, !dbg !821, !tbaa !794\l  %34 = shl i64 %33, 63, !dbg !821\l  %35 = load i64, i64* %9, align 8, !dbg !821, !tbaa !794\l  %36 = lshr i64 %35, 1, !dbg !821\l  %37 = or i64 %34, %36, !dbg !821\l  store i64 %37, i64* %9, align 8, !dbg !821, !tbaa !794\l  %38 = load i64, i64* %8, align 8, !dbg !821, !tbaa !794\l  %39 = lshr i64 %38, 1, !dbg !821\l  store i64 %39, i64* %8, align 8, !dbg !821, !tbaa !794\l  br label %40, !dbg !821\l}"];
	Node0x19cc250 -> Node0x19cc2a0;
	Node0x19cc2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%40:\l40:                                               \l  br label %27, !dbg !816, !llvm.loop !823\l}"];
	Node0x19cc2a0 -> Node0x19cc1b0;
	Node0x19cc2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%41:\l41:                                               \l  br label %42, !dbg !826\l}"];
	Node0x19cc2f0 -> Node0x19cc340;
	Node0x19cc340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%42:\l42:                                               \l  %43 = load i64, i64* %10, align 8, !dbg !827, !tbaa !794\l  %44 = load i64, i64* %8, align 8, !dbg !832, !tbaa !794\l  %45 = or i64 %43, %44, !dbg !833\l  %46 = icmp eq i64 %45, 0, !dbg !834\l  br i1 %46, label %47, label %52, !dbg !835\l|{<s0>T|<s1>F}}"];
	Node0x19cc340:s0 -> Node0x19cc390;
	Node0x19cc340:s1 -> Node0x19cc3e0;
	Node0x19cc390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%47:\l47:                                               \l  %48 = load i64*, i64** %7, align 8, !dbg !836, !tbaa !789\l  store i64 0, i64* %48, align 8, !dbg !838, !tbaa !794\l  %49 = load i64, i64* %11, align 8, !dbg !839, !tbaa !794\l  %50 = load i64, i64* %9, align 8, !dbg !840, !tbaa !794\l  %51 = call i64 @gcd_odd(i64 noundef %49, i64 noundef %50) #24, !dbg !841\l  store i64 %51, i64* %6, align 8, !dbg !842\l  br label %129, !dbg !842\l}"];
	Node0x19cc390 -> Node0x19ccac0;
	Node0x19cc3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%52:\l52:                                               \l  %53 = load i64, i64* %8, align 8, !dbg !843, !tbaa !794\l  %54 = load i64, i64* %10, align 8, !dbg !843, !tbaa !794\l  %55 = icmp ugt i64 %53, %54, !dbg !843\l  br i1 %55, label %64, label %56, !dbg !843\l|{<s0>T|<s1>F}}"];
	Node0x19cc3e0:s0 -> Node0x19cc4d0;
	Node0x19cc3e0:s1 -> Node0x19cc430;
	Node0x19cc430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%56:\l56:                                               \l  %57 = load i64, i64* %8, align 8, !dbg !843, !tbaa !794\l  %58 = load i64, i64* %10, align 8, !dbg !843, !tbaa !794\l  %59 = icmp eq i64 %57, %58, !dbg !843\l  br i1 %59, label %60, label %87, !dbg !843\l|{<s0>T|<s1>F}}"];
	Node0x19cc430:s0 -> Node0x19cc480;
	Node0x19cc430:s1 -> Node0x19cc6b0;
	Node0x19cc480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%60:\l60:                                               \l  %61 = load i64, i64* %9, align 8, !dbg !843, !tbaa !794\l  %62 = load i64, i64* %11, align 8, !dbg !843, !tbaa !794\l  %63 = icmp ugt i64 %61, %62, !dbg !843\l  br i1 %63, label %64, label %87, !dbg !845\l|{<s0>T|<s1>F}}"];
	Node0x19cc480:s0 -> Node0x19cc4d0;
	Node0x19cc480:s1 -> Node0x19cc6b0;
	Node0x19cc4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%64:\l64:                                               \l  %65 = load i64, i64* %8, align 8, !dbg !846, !tbaa !794\l  %66 = load i64, i64* %10, align 8, !dbg !846, !tbaa !794\l  %67 = load i64, i64* %9, align 8, !dbg !846, !tbaa !794\l  %68 = load i64, i64* %11, align 8, !dbg !846, !tbaa !794\l  %69 = call \{ i64, i64 \} asm \"subq $5,$\{1:q\}\\0A\\09sbbq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %65, i64 %66, i64 %67,\l... i64 %68) #25, !dbg !846, !srcloc !848\l  %70 = extractvalue \{ i64, i64 \} %69, 0, !dbg !846\l  %71 = extractvalue \{ i64, i64 \} %69, 1, !dbg !846\l  store i64 %70, i64* %8, align 8, !dbg !846, !tbaa !794\l  store i64 %71, i64* %9, align 8, !dbg !846, !tbaa !794\l  br label %72, !dbg !849\l}"];
	Node0x19cc4d0 -> Node0x19cc520;
	Node0x19cc520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  br label %73, !dbg !850\l}"];
	Node0x19cc520 -> Node0x19cc570;
	Node0x19cc570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  %74 = load i64, i64* %8, align 8, !dbg !851, !tbaa !794\l  %75 = shl i64 %74, 63, !dbg !851\l  %76 = load i64, i64* %9, align 8, !dbg !851, !tbaa !794\l  %77 = lshr i64 %76, 1, !dbg !851\l  %78 = or i64 %75, %77, !dbg !851\l  store i64 %78, i64* %9, align 8, !dbg !851, !tbaa !794\l  %79 = load i64, i64* %8, align 8, !dbg !851, !tbaa !794\l  %80 = lshr i64 %79, 1, !dbg !851\l  store i64 %80, i64* %8, align 8, !dbg !851, !tbaa !794\l  br label %81, !dbg !851\l}"];
	Node0x19cc570 -> Node0x19cc5c0;
	Node0x19cc5c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  br label %82, !dbg !851\l}"];
	Node0x19cc5c0 -> Node0x19cc610;
	Node0x19cc610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  %83 = load i64, i64* %9, align 8, !dbg !853, !tbaa !794\l  %84 = and i64 %83, 1, !dbg !854\l  %85 = icmp eq i64 %84, 0, !dbg !855\l  br i1 %85, label %72, label %86, !dbg !851, !llvm.loop !856\l|{<s0>T|<s1>F}}"];
	Node0x19cc610:s0 -> Node0x19cc520;
	Node0x19cc610:s1 -> Node0x19cc660;
	Node0x19cc660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%86:\l86:                                               \l  br label %124, !dbg !858\l}"];
	Node0x19cc660 -> Node0x19cca20;
	Node0x19cc6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%87:\l87:                                               \l  %88 = load i64, i64* %10, align 8, !dbg !859, !tbaa !794\l  %89 = load i64, i64* %8, align 8, !dbg !859, !tbaa !794\l  %90 = icmp ugt i64 %88, %89, !dbg !859\l  br i1 %90, label %99, label %91, !dbg !859\l|{<s0>T|<s1>F}}"];
	Node0x19cc6b0:s0 -> Node0x19cc7a0;
	Node0x19cc6b0:s1 -> Node0x19cc700;
	Node0x19cc700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%91:\l91:                                               \l  %92 = load i64, i64* %10, align 8, !dbg !859, !tbaa !794\l  %93 = load i64, i64* %8, align 8, !dbg !859, !tbaa !794\l  %94 = icmp eq i64 %92, %93, !dbg !859\l  br i1 %94, label %95, label %122, !dbg !859\l|{<s0>T|<s1>F}}"];
	Node0x19cc700:s0 -> Node0x19cc750;
	Node0x19cc700:s1 -> Node0x19cc980;
	Node0x19cc750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%95:\l95:                                               \l  %96 = load i64, i64* %11, align 8, !dbg !859, !tbaa !794\l  %97 = load i64, i64* %9, align 8, !dbg !859, !tbaa !794\l  %98 = icmp ugt i64 %96, %97, !dbg !859\l  br i1 %98, label %99, label %122, !dbg !861\l|{<s0>T|<s1>F}}"];
	Node0x19cc750:s0 -> Node0x19cc7a0;
	Node0x19cc750:s1 -> Node0x19cc980;
	Node0x19cc7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%99:\l99:                                               \l  %100 = load i64, i64* %10, align 8, !dbg !862, !tbaa !794\l  %101 = load i64, i64* %8, align 8, !dbg !862, !tbaa !794\l  %102 = load i64, i64* %11, align 8, !dbg !862, !tbaa !794\l  %103 = load i64, i64* %9, align 8, !dbg !862, !tbaa !794\l  %104 = call \{ i64, i64 \} asm \"subq $5,$\{1:q\}\\0A\\09sbbq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %100, i64 %101, i64\l... %102, i64 %103) #25, !dbg !862, !srcloc !864\l  %105 = extractvalue \{ i64, i64 \} %104, 0, !dbg !862\l  %106 = extractvalue \{ i64, i64 \} %104, 1, !dbg !862\l  store i64 %105, i64* %10, align 8, !dbg !862, !tbaa !794\l  store i64 %106, i64* %11, align 8, !dbg !862, !tbaa !794\l  br label %107, !dbg !865\l}"];
	Node0x19cc7a0 -> Node0x19cc7f0;
	Node0x19cc7f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%107:\l107:                                              \l  br label %108, !dbg !866\l}"];
	Node0x19cc7f0 -> Node0x19cc840;
	Node0x19cc840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%108:\l108:                                              \l  %109 = load i64, i64* %10, align 8, !dbg !867, !tbaa !794\l  %110 = shl i64 %109, 63, !dbg !867\l  %111 = load i64, i64* %11, align 8, !dbg !867, !tbaa !794\l  %112 = lshr i64 %111, 1, !dbg !867\l  %113 = or i64 %110, %112, !dbg !867\l  store i64 %113, i64* %11, align 8, !dbg !867, !tbaa !794\l  %114 = load i64, i64* %10, align 8, !dbg !867, !tbaa !794\l  %115 = lshr i64 %114, 1, !dbg !867\l  store i64 %115, i64* %10, align 8, !dbg !867, !tbaa !794\l  br label %116, !dbg !867\l}"];
	Node0x19cc840 -> Node0x19cc890;
	Node0x19cc890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%116:\l116:                                              \l  br label %117, !dbg !867\l}"];
	Node0x19cc890 -> Node0x19cc8e0;
	Node0x19cc8e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%117:\l117:                                              \l  %118 = load i64, i64* %11, align 8, !dbg !869, !tbaa !794\l  %119 = and i64 %118, 1, !dbg !870\l  %120 = icmp eq i64 %119, 0, !dbg !871\l  br i1 %120, label %107, label %121, !dbg !867, !llvm.loop !872\l|{<s0>T|<s1>F}}"];
	Node0x19cc8e0:s0 -> Node0x19cc7f0;
	Node0x19cc8e0:s1 -> Node0x19cc930;
	Node0x19cc930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%121:\l121:                                              \l  br label %123, !dbg !874\l}"];
	Node0x19cc930 -> Node0x19cc9d0;
	Node0x19cc980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%122:\l122:                                              \l  br label %125, !dbg !875\l}"];
	Node0x19cc980 -> Node0x19cca70;
	Node0x19cc9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%123:\l123:                                              \l  br label %124\l}"];
	Node0x19cc9d0 -> Node0x19cca20;
	Node0x19cca20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%124:\l124:                                              \l  br label %42, !dbg !876, !llvm.loop !877\l}"];
	Node0x19cca20 -> Node0x19cc340;
	Node0x19cca70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%125:\l125:                                              \l  %126 = load i64, i64* %8, align 8, !dbg !880, !tbaa !794\l  %127 = load i64*, i64** %7, align 8, !dbg !881, !tbaa !789\l  store i64 %126, i64* %127, align 8, !dbg !882, !tbaa !794\l  %128 = load i64, i64* %9, align 8, !dbg !883, !tbaa !794\l  store i64 %128, i64* %6, align 8, !dbg !884\l  br label %129, !dbg !884\l}"];
	Node0x19cca70 -> Node0x19ccac0;
	Node0x19ccac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%129:\l129:                                              \l  %130 = load i64, i64* %6, align 8, !dbg !885\l  ret i64 %130, !dbg !885\l}"];
}
