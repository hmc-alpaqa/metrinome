digraph "CFG for 'gcd_odd' function" {
	label="CFG for 'gcd_odd' function";

	Node0x1a7d890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i32, align 4\l  store i64 %0, i64* %4, align 8, !tbaa !793\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !783, metadata\l... !DIExpression()), !dbg !797\l  store i64 %1, i64* %5, align 8, !tbaa !793\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !784, metadata\l... !DIExpression()), !dbg !798\l  %10 = load i64, i64* %5, align 8, !dbg !799, !tbaa !793\l  %11 = and i64 %10, 1, !dbg !800\l  %12 = icmp eq i64 %11, 0, !dbg !801\l  br i1 %12, label %13, label %19, !dbg !802\l|{<s0>T|<s1>F}}"];
	Node0x1a7d890:s0 -> Node0x1a805c0;
	Node0x1a7d890:s1 -> Node0x1a81f60;
	Node0x1a805c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%13:\l13:                                               \l  %14 = bitcast i64* %6 to i8*, !dbg !803\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #23, !dbg !803\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !785, metadata\l... !DIExpression()), !dbg !804\l  %15 = load i64, i64* %5, align 8, !dbg !805, !tbaa !793\l  store i64 %15, i64* %6, align 8, !dbg !804, !tbaa !793\l  %16 = load i64, i64* %4, align 8, !dbg !806, !tbaa !793\l  store i64 %16, i64* %5, align 8, !dbg !807, !tbaa !793\l  %17 = load i64, i64* %6, align 8, !dbg !808, !tbaa !793\l  store i64 %17, i64* %4, align 8, !dbg !809, !tbaa !793\l  %18 = bitcast i64* %6 to i8*, !dbg !810\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #23, !dbg !810\l  br label %19, !dbg !811\l}"];
	Node0x1a805c0 -> Node0x1a81f60;
	Node0x1a81f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%19:\l19:                                               \l  %20 = load i64, i64* %4, align 8, !dbg !812, !tbaa !793\l  %21 = icmp eq i64 %20, 0, !dbg !814\l  br i1 %21, label %22, label %24, !dbg !815\l|{<s0>T|<s1>F}}"];
	Node0x1a81f60:s0 -> Node0x1a81fb0;
	Node0x1a81f60:s1 -> Node0x1a82000;
	Node0x1a81fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%22:\l22:                                               \l  %23 = load i64, i64* %5, align 8, !dbg !816, !tbaa !793\l  store i64 %23, i64* %3, align 8, !dbg !817\l  br label %67, !dbg !817\l}"];
	Node0x1a81fb0 -> Node0x1a822d0;
	Node0x1a82000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%24:\l24:                                               \l  %25 = load i64, i64* %5, align 8, !dbg !818, !tbaa !793\l  %26 = lshr i64 %25, 1, !dbg !818\l  store i64 %26, i64* %5, align 8, !dbg !818, !tbaa !793\l  br label %27, !dbg !819\l}"];
	Node0x1a82000 -> Node0x1a82050;
	Node0x1a82050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%27:\l27:                                               \l  %28 = bitcast i64* %7 to i8*, !dbg !820\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #23, !dbg !820\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !788, metadata\l... !DIExpression()), !dbg !821\l  %29 = bitcast i64* %8 to i8*, !dbg !822\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #23, !dbg !822\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !792, metadata\l... !DIExpression()), !dbg !823\l  br label %30, !dbg !824\l}"];
	Node0x1a82050 -> Node0x1a820a0;
	Node0x1a820a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = load i64, i64* %4, align 8, !dbg !825, !tbaa !793\l  %32 = and i64 %31, 1, !dbg !826\l  %33 = icmp eq i64 %32, 0, !dbg !827\l  br i1 %33, label %34, label %37, !dbg !824\l|{<s0>T|<s1>F}}"];
	Node0x1a820a0:s0 -> Node0x1a820f0;
	Node0x1a820a0:s1 -> Node0x1a82140;
	Node0x1a820f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = load i64, i64* %4, align 8, !dbg !828, !tbaa !793\l  %36 = lshr i64 %35, 1, !dbg !828\l  store i64 %36, i64* %4, align 8, !dbg !828, !tbaa !793\l  br label %30, !dbg !824, !llvm.loop !829\l}"];
	Node0x1a820f0 -> Node0x1a820a0;
	Node0x1a82140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%37:\l37:                                               \l  %38 = load i64, i64* %4, align 8, !dbg !833, !tbaa !793\l  %39 = lshr i64 %38, 1, !dbg !833\l  store i64 %39, i64* %4, align 8, !dbg !833, !tbaa !793\l  %40 = load i64, i64* %4, align 8, !dbg !834, !tbaa !793\l  %41 = load i64, i64* %5, align 8, !dbg !835, !tbaa !793\l  %42 = sub i64 %40, %41, !dbg !836\l  store i64 %42, i64* %7, align 8, !dbg !837, !tbaa !793\l  %43 = load i64, i64* %7, align 8, !dbg !838, !tbaa !793\l  %44 = icmp eq i64 %43, 0, !dbg !840\l  br i1 %44, label %45, label %49, !dbg !841\l|{<s0>T|<s1>F}}"];
	Node0x1a82140:s0 -> Node0x1a82190;
	Node0x1a82140:s1 -> Node0x1a821e0;
	Node0x1a82190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%45:\l45:                                               \l  %46 = load i64, i64* %4, align 8, !dbg !842, !tbaa !793\l  %47 = shl i64 %46, 1, !dbg !843\l  %48 = add i64 %47, 1, !dbg !844\l  store i64 %48, i64* %3, align 8, !dbg !845\l  store i32 1, i32* %9, align 4\l  br label %62, !dbg !845\l}"];
	Node0x1a82190 -> Node0x1a82230;
	Node0x1a821e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%49:\l49:                                               \l  %50 = load i64, i64* %7, align 8, !dbg !846, !tbaa !793\l  %51 = ashr i64 %50, 63, !dbg !846\l  store i64 %51, i64* %8, align 8, !dbg !847, !tbaa !793\l  %52 = load i64, i64* %8, align 8, !dbg !848, !tbaa !793\l  %53 = load i64, i64* %7, align 8, !dbg !849, !tbaa !793\l  %54 = and i64 %52, %53, !dbg !850\l  %55 = load i64, i64* %5, align 8, !dbg !851, !tbaa !793\l  %56 = add i64 %55, %54, !dbg !851\l  store i64 %56, i64* %5, align 8, !dbg !851, !tbaa !793\l  %57 = load i64, i64* %7, align 8, !dbg !852, !tbaa !793\l  %58 = load i64, i64* %8, align 8, !dbg !853, !tbaa !793\l  %59 = xor i64 %57, %58, !dbg !854\l  %60 = load i64, i64* %8, align 8, !dbg !855, !tbaa !793\l  %61 = sub i64 %59, %60, !dbg !856\l  store i64 %61, i64* %4, align 8, !dbg !857, !tbaa !793\l  store i32 0, i32* %9, align 4, !dbg !858\l  br label %62, !dbg !858\l}"];
	Node0x1a821e0 -> Node0x1a82230;
	Node0x1a82230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%62:\l62:                                               \l  %63 = bitcast i64* %8 to i8*, !dbg !858\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #23, !dbg !858\l  %64 = bitcast i64* %7 to i8*, !dbg !858\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #23, !dbg !858\l  %65 = load i32, i32* %9, align 4\l  switch i32 %65, label %69 [\l    i32 0, label %66\l    i32 1, label %67\l  ]\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0x1a82230:s0 -> Node0x1a82320;
	Node0x1a82230:s1 -> Node0x1a82280;
	Node0x1a82230:s2 -> Node0x1a822d0;
	Node0x1a82280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%66:\l66:                                               \l  br label %27, !dbg !859, !llvm.loop !860\l}"];
	Node0x1a82280 -> Node0x1a82050;
	Node0x1a822d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%67:\l67:                                               \l  %68 = load i64, i64* %3, align 8, !dbg !863\l  ret i64 %68, !dbg !863\l}"];
	Node0x1a82320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%69:\l69:                                               \l  unreachable\l}"];
}
