digraph "CFG for 'full_write' function" {
	label="CFG for 'full_write' function";

	Node0x1a9f530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i32, align 4\l  store i32 %0, i32* %4, align 4, !tbaa !792\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !785, metadata\l... !DIExpression()), !dbg !796\l  store i8* %1, i8** %5, align 8, !tbaa !797\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !786, metadata\l... !DIExpression()), !dbg !799\l  store i64 %2, i64* %6, align 8, !tbaa !800\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !787, metadata\l... !DIExpression()), !dbg !802\l  %11 = bitcast i64* %7 to i8*, !dbg !803\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #23, !dbg !803\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !788, metadata\l... !DIExpression()), !dbg !804\l  store i64 0, i64* %7, align 8, !dbg !804, !tbaa !800\l  %12 = bitcast i8** %8 to i8*, !dbg !805\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #23, !dbg !805\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !789, metadata\l... !DIExpression()), !dbg !806\l  %13 = load i8*, i8** %5, align 8, !dbg !807, !tbaa !797\l  store i8* %13, i8** %8, align 8, !dbg !806, !tbaa !797\l  br label %14, !dbg !808\l}"];
	Node0x1a9f530 -> Node0x1aa0df0;
	Node0x1aa0df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l14:                                               \l  %15 = load i64, i64* %6, align 8, !dbg !809, !tbaa !800\l  %16 = icmp ugt i64 %15, 0, !dbg !810\l  br i1 %16, label %17, label %45, !dbg !808\l|{<s0>T|<s1>F}}"];
	Node0x1aa0df0:s0 -> Node0x1aa0e40;
	Node0x1aa0df0:s1 -> Node0x1aa1070;
	Node0x1aa0e40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = bitcast i64* %9 to i8*, !dbg !811\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #23, !dbg !811\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !790, metadata\l... !DIExpression()), !dbg !812\l  %19 = load i32, i32* %4, align 4, !dbg !813, !tbaa !792\l  %20 = load i8*, i8** %8, align 8, !dbg !814, !tbaa !797\l  %21 = load i64, i64* %6, align 8, !dbg !815, !tbaa !800\l  %22 = call i64 @safe_write(i32 noundef %19, i8* noundef %20, i64 noundef\l... %21), !dbg !816\l  store i64 %22, i64* %9, align 8, !dbg !812, !tbaa !800\l  %23 = load i64, i64* %9, align 8, !dbg !817, !tbaa !800\l  %24 = icmp eq i64 %23, -1, !dbg !819\l  br i1 %24, label %25, label %26, !dbg !820\l|{<s0>T|<s1>F}}"];
	Node0x1aa0e40:s0 -> Node0x1aa0e90;
	Node0x1aa0e40:s1 -> Node0x1aa0ee0;
	Node0x1aa0e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%25:\l25:                                               \l  store i32 3, i32* %10, align 4\l  br label %41, !dbg !821\l}"];
	Node0x1aa0e90 -> Node0x1aa0fd0;
	Node0x1aa0ee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%26:\l26:                                               \l  %27 = load i64, i64* %9, align 8, !dbg !822, !tbaa !800\l  %28 = icmp eq i64 %27, 0, !dbg !824\l  br i1 %28, label %29, label %31, !dbg !825\l|{<s0>T|<s1>F}}"];
	Node0x1aa0ee0:s0 -> Node0x1aa0f30;
	Node0x1aa0ee0:s1 -> Node0x1aa0f80;
	Node0x1aa0f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%29:\l29:                                               \l  %30 = call i32* @__errno_location() #24, !dbg !826\l  store i32 28, i32* %30, align 4, !dbg !828, !tbaa !792\l  store i32 3, i32* %10, align 4\l  br label %41, !dbg !829\l}"];
	Node0x1aa0f30 -> Node0x1aa0fd0;
	Node0x1aa0f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%31:\l31:                                               \l  %32 = load i64, i64* %9, align 8, !dbg !830, !tbaa !800\l  %33 = load i64, i64* %7, align 8, !dbg !831, !tbaa !800\l  %34 = add i64 %33, %32, !dbg !831\l  store i64 %34, i64* %7, align 8, !dbg !831, !tbaa !800\l  %35 = load i64, i64* %9, align 8, !dbg !832, !tbaa !800\l  %36 = load i8*, i8** %8, align 8, !dbg !833, !tbaa !797\l  %37 = getelementptr inbounds i8, i8* %36, i64 %35, !dbg !833\l  store i8* %37, i8** %8, align 8, !dbg !833, !tbaa !797\l  %38 = load i64, i64* %9, align 8, !dbg !834, !tbaa !800\l  %39 = load i64, i64* %6, align 8, !dbg !835, !tbaa !800\l  %40 = sub i64 %39, %38, !dbg !835\l  store i64 %40, i64* %6, align 8, !dbg !835, !tbaa !800\l  store i32 0, i32* %10, align 4, !dbg !836\l  br label %41, !dbg !836\l}"];
	Node0x1aa0f80 -> Node0x1aa0fd0;
	Node0x1aa0fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = bitcast i64* %9 to i8*, !dbg !836\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #23, !dbg !836\l  %43 = load i32, i32* %10, align 4\l  switch i32 %43, label %49 [\l    i32 0, label %44\l    i32 3, label %45\l  ]\l|{<s0>def|<s1>0|<s2>3}}"];
	Node0x1aa0fd0:s0 -> Node0x1aa10c0;
	Node0x1aa0fd0:s1 -> Node0x1aa1020;
	Node0x1aa0fd0:s2 -> Node0x1aa1070;
	Node0x1aa1020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  br label %14, !dbg !808, !llvm.loop !837\l}"];
	Node0x1aa1020 -> Node0x1aa0df0;
	Node0x1aa1070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%45:\l45:                                               \l  %46 = load i64, i64* %7, align 8, !dbg !840, !tbaa !800\l  store i32 1, i32* %10, align 4\l  %47 = bitcast i8** %8 to i8*, !dbg !841\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %47) #23, !dbg !841\l  %48 = bitcast i64* %7 to i8*, !dbg !841\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48) #23, !dbg !841\l  ret i64 %46, !dbg !842\l}"];
	Node0x1aa10c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%49:\l49:                                               \l  unreachable\l}"];
}
