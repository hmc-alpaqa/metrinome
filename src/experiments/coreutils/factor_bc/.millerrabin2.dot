digraph "CFG for 'millerrabin2' function" {
	label="CFG for 'millerrabin2' function";

	Node0x1a86c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%6:\l  %7 = alloca i1, align 1\l  %8 = alloca i64*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64*, align 8\l  %11 = alloca i64*, align 8\l  %12 = alloca i32, align 4\l  %13 = alloca i64*, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i64, align 8\l  %18 = alloca i64, align 8\l  %19 = alloca i32, align 4\l  %20 = alloca i32, align 4\l  store i64* %0, i64** %8, align 8, !tbaa !798\l  call void @llvm.dbg.declare(metadata i64** %8, metadata !785, metadata\l... !DIExpression()), !dbg !802\l  store i64 %1, i64* %9, align 8, !tbaa !803\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !786, metadata\l... !DIExpression()), !dbg !805\l  store i64* %2, i64** %10, align 8, !tbaa !798\l  call void @llvm.dbg.declare(metadata i64** %10, metadata !787, metadata\l... !DIExpression()), !dbg !806\l  store i64* %3, i64** %11, align 8, !tbaa !798\l  call void @llvm.dbg.declare(metadata i64** %11, metadata !788, metadata\l... !DIExpression()), !dbg !807\l  store i32 %4, i32* %12, align 4, !tbaa !808\l  call void @llvm.dbg.declare(metadata i32* %12, metadata !789, metadata\l... !DIExpression()), !dbg !810\l  store i64* %5, i64** %13, align 8, !tbaa !798\l  call void @llvm.dbg.declare(metadata i64** %13, metadata !790, metadata\l... !DIExpression()), !dbg !811\l  %21 = bitcast i64* %14 to i8*, !dbg !812\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #23, !dbg !812\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !791, metadata\l... !DIExpression()), !dbg !813\l  %22 = bitcast i64* %15 to i8*, !dbg !812\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #23, !dbg !812\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !792, metadata\l... !DIExpression()), !dbg !814\l  %23 = bitcast i64* %16 to i8*, !dbg !812\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #23, !dbg !812\l  call void @llvm.dbg.declare(metadata i64* %16, metadata !793, metadata\l... !DIExpression()), !dbg !815\l  %24 = bitcast i64* %17 to i8*, !dbg !812\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #23, !dbg !812\l  call void @llvm.dbg.declare(metadata i64* %17, metadata !794, metadata\l... !DIExpression()), !dbg !816\l  %25 = bitcast i64* %18 to i8*, !dbg !812\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #23, !dbg !812\l  call void @llvm.dbg.declare(metadata i64* %18, metadata !795, metadata\l... !DIExpression()), !dbg !817\l  %26 = load i64*, i64** %10, align 8, !dbg !818, !tbaa !798\l  %27 = load i64*, i64** %11, align 8, !dbg !819, !tbaa !798\l  %28 = load i64*, i64** %8, align 8, !dbg !820, !tbaa !798\l  %29 = load i64, i64* %9, align 8, !dbg !821, !tbaa !803\l  %30 = load i64*, i64** %13, align 8, !dbg !822, !tbaa !798\l  %31 = call i64 @powm2(i64* noundef %18, i64* noundef %26, i64* noundef %27,\l... i64* noundef %28, i64 noundef %29, i64* noundef %30), !dbg !823\l  store i64 %31, i64* %15, align 8, !dbg !824, !tbaa !803\l  %32 = load i64, i64* %18, align 8, !dbg !825, !tbaa !803\l  store i64 %32, i64* %14, align 8, !dbg !826, !tbaa !803\l  %33 = load i64, i64* %15, align 8, !dbg !827, !tbaa !803\l  %34 = load i64*, i64** %13, align 8, !dbg !829, !tbaa !798\l  %35 = getelementptr inbounds i64, i64* %34, i64 0, !dbg !829\l  %36 = load i64, i64* %35, align 8, !dbg !829, !tbaa !803\l  %37 = icmp eq i64 %33, %36, !dbg !830\l  br i1 %37, label %38, label %45, !dbg !831\l|{<s0>T|<s1>F}}"];
	Node0x1a86c20:s0 -> Node0x1a86d20;
	Node0x1a86c20:s1 -> Node0x1a86dc0;
	Node0x1a86d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%38:\l38:                                               \l  %39 = load i64, i64* %14, align 8, !dbg !832, !tbaa !803\l  %40 = load i64*, i64** %13, align 8, !dbg !833, !tbaa !798\l  %41 = getelementptr inbounds i64, i64* %40, i64 1, !dbg !833\l  %42 = load i64, i64* %41, align 8, !dbg !833, !tbaa !803\l  %43 = icmp eq i64 %39, %42, !dbg !834\l  br i1 %43, label %44, label %45, !dbg !835\l|{<s0>T|<s1>F}}"];
	Node0x1a86d20:s0 -> Node0x1a86d70;
	Node0x1a86d20:s1 -> Node0x1a86dc0;
	Node0x1a86d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%44:\l44:                                               \l  store i1 true, i1* %7, align 1, !dbg !836\l  store i32 1, i32* %19, align 4\l  br label %119, !dbg !836\l}"];
	Node0x1a86d70 -> Node0x1a872c0;
	Node0x1a86dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%45:\l45:                                               \l  %46 = load i64*, i64** %8, align 8, !dbg !837, !tbaa !798\l  %47 = getelementptr inbounds i64, i64* %46, i64 1, !dbg !837\l  %48 = load i64, i64* %47, align 8, !dbg !837, !tbaa !803\l  %49 = load i64*, i64** %13, align 8, !dbg !837, !tbaa !798\l  %50 = getelementptr inbounds i64, i64* %49, i64 1, !dbg !837\l  %51 = load i64, i64* %50, align 8, !dbg !837, !tbaa !803\l  %52 = load i64*, i64** %8, align 8, !dbg !837, !tbaa !798\l  %53 = getelementptr inbounds i64, i64* %52, i64 0, !dbg !837\l  %54 = load i64, i64* %53, align 8, !dbg !837, !tbaa !803\l  %55 = load i64*, i64** %13, align 8, !dbg !837, !tbaa !798\l  %56 = getelementptr inbounds i64, i64* %55, i64 0, !dbg !837\l  %57 = load i64, i64* %56, align 8, !dbg !837, !tbaa !803\l  %58 = call \{ i64, i64 \} asm \"subq $5,$\{1:q\}\\0A\\09sbbq $3,$\{0:q\}\",\l... \"=r,=&r,0,rme,1,rme,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %48, i64 %51, i64 %54,\l... i64 %57) #24, !dbg !837, !srcloc !838\l  %59 = extractvalue \{ i64, i64 \} %58, 0, !dbg !837\l  %60 = extractvalue \{ i64, i64 \} %58, 1, !dbg !837\l  store i64 %59, i64* %16, align 8, !dbg !837, !tbaa !803\l  store i64 %60, i64* %17, align 8, !dbg !837, !tbaa !803\l  %61 = load i64, i64* %15, align 8, !dbg !839, !tbaa !803\l  %62 = load i64, i64* %17, align 8, !dbg !841, !tbaa !803\l  %63 = icmp eq i64 %61, %62, !dbg !842\l  br i1 %63, label %64, label %69, !dbg !843\l|{<s0>T|<s1>F}}"];
	Node0x1a86dc0:s0 -> Node0x1a86e10;
	Node0x1a86dc0:s1 -> Node0x1a86eb0;
	Node0x1a86e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%64:\l64:                                               \l  %65 = load i64, i64* %14, align 8, !dbg !844, !tbaa !803\l  %66 = load i64, i64* %16, align 8, !dbg !845, !tbaa !803\l  %67 = icmp eq i64 %65, %66, !dbg !846\l  br i1 %67, label %68, label %69, !dbg !847\l|{<s0>T|<s1>F}}"];
	Node0x1a86e10:s0 -> Node0x1a86e60;
	Node0x1a86e10:s1 -> Node0x1a86eb0;
	Node0x1a86e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%68:\l68:                                               \l  store i1 true, i1* %7, align 1, !dbg !848\l  store i32 1, i32* %19, align 4\l  br label %119, !dbg !848\l}"];
	Node0x1a86e60 -> Node0x1a872c0;
	Node0x1a86eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%69:\l69:                                               \l  %70 = bitcast i32* %20 to i8*, !dbg !849\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %70) #23, !dbg !849\l  call void @llvm.dbg.declare(metadata i32* %20, metadata !796, metadata\l... !DIExpression()), !dbg !850\l  store i32 1, i32* %20, align 4, !dbg !850, !tbaa !808\l  br label %71, !dbg !849\l}"];
	Node0x1a86eb0 -> Node0x1a86f00;
	Node0x1a86f00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = load i32, i32* %20, align 4, !dbg !851, !tbaa !808\l  %73 = load i32, i32* %12, align 4, !dbg !853, !tbaa !808\l  %74 = icmp slt i32 %72, %73, !dbg !854\l  br i1 %74, label %76, label %75, !dbg !855\l|{<s0>T|<s1>F}}"];
	Node0x1a86f00:s0 -> Node0x1a86fa0;
	Node0x1a86f00:s1 -> Node0x1a86f50;
	Node0x1a86f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%75:\l75:                                               \l  store i32 2, i32* %19, align 4\l  br label %115, !dbg !855\l}"];
	Node0x1a86f50 -> Node0x1a87220;
	Node0x1a86fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  %77 = load i64, i64* %14, align 8, !dbg !856, !tbaa !803\l  %78 = load i64, i64* %15, align 8, !dbg !858, !tbaa !803\l  %79 = load i64, i64* %14, align 8, !dbg !859, !tbaa !803\l  %80 = load i64, i64* %15, align 8, !dbg !860, !tbaa !803\l  %81 = load i64*, i64** %8, align 8, !dbg !861, !tbaa !798\l  %82 = getelementptr inbounds i64, i64* %81, i64 1, !dbg !861\l  %83 = load i64, i64* %82, align 8, !dbg !861, !tbaa !803\l  %84 = load i64*, i64** %8, align 8, !dbg !862, !tbaa !798\l  %85 = getelementptr inbounds i64, i64* %84, i64 0, !dbg !862\l  %86 = load i64, i64* %85, align 8, !dbg !862, !tbaa !803\l  %87 = load i64, i64* %9, align 8, !dbg !863, !tbaa !803\l  %88 = call i64 @mulredc2(i64* noundef %18, i64 noundef %77, i64 noundef %78,\l... i64 noundef %79, i64 noundef %80, i64 noundef %83, i64 noundef %86, i64\l... noundef %87), !dbg !864\l  store i64 %88, i64* %15, align 8, !dbg !865, !tbaa !803\l  %89 = load i64, i64* %18, align 8, !dbg !866, !tbaa !803\l  store i64 %89, i64* %14, align 8, !dbg !867, !tbaa !803\l  %90 = load i64, i64* %15, align 8, !dbg !868, !tbaa !803\l  %91 = load i64, i64* %17, align 8, !dbg !870, !tbaa !803\l  %92 = icmp eq i64 %90, %91, !dbg !871\l  br i1 %92, label %93, label %98, !dbg !872\l|{<s0>T|<s1>F}}"];
	Node0x1a86fa0:s0 -> Node0x1a86ff0;
	Node0x1a86fa0:s1 -> Node0x1a87090;
	Node0x1a86ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%93:\l93:                                               \l  %94 = load i64, i64* %14, align 8, !dbg !873, !tbaa !803\l  %95 = load i64, i64* %16, align 8, !dbg !874, !tbaa !803\l  %96 = icmp eq i64 %94, %95, !dbg !875\l  br i1 %96, label %97, label %98, !dbg !876\l|{<s0>T|<s1>F}}"];
	Node0x1a86ff0:s0 -> Node0x1a87040;
	Node0x1a86ff0:s1 -> Node0x1a87090;
	Node0x1a87040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%97:\l97:                                               \l  store i1 true, i1* %7, align 1, !dbg !877\l  store i32 1, i32* %19, align 4\l  br label %115, !dbg !877\l}"];
	Node0x1a87040 -> Node0x1a87220;
	Node0x1a87090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%98:\l98:                                               \l  %99 = load i64, i64* %15, align 8, !dbg !878, !tbaa !803\l  %100 = load i64*, i64** %13, align 8, !dbg !880, !tbaa !798\l  %101 = getelementptr inbounds i64, i64* %100, i64 0, !dbg !880\l  %102 = load i64, i64* %101, align 8, !dbg !880, !tbaa !803\l  %103 = icmp eq i64 %99, %102, !dbg !881\l  br i1 %103, label %104, label %111, !dbg !882\l|{<s0>T|<s1>F}}"];
	Node0x1a87090:s0 -> Node0x1a870e0;
	Node0x1a87090:s1 -> Node0x1a87180;
	Node0x1a870e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%104:\l104:                                              \l  %105 = load i64, i64* %14, align 8, !dbg !883, !tbaa !803\l  %106 = load i64*, i64** %13, align 8, !dbg !884, !tbaa !798\l  %107 = getelementptr inbounds i64, i64* %106, i64 1, !dbg !884\l  %108 = load i64, i64* %107, align 8, !dbg !884, !tbaa !803\l  %109 = icmp eq i64 %105, %108, !dbg !885\l  br i1 %109, label %110, label %111, !dbg !886\l|{<s0>T|<s1>F}}"];
	Node0x1a870e0:s0 -> Node0x1a87130;
	Node0x1a870e0:s1 -> Node0x1a87180;
	Node0x1a87130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%110:\l110:                                              \l  store i1 false, i1* %7, align 1, !dbg !887\l  store i32 1, i32* %19, align 4\l  br label %115, !dbg !887\l}"];
	Node0x1a87130 -> Node0x1a87220;
	Node0x1a87180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%111:\l111:                                              \l  br label %112, !dbg !888\l}"];
	Node0x1a87180 -> Node0x1a871d0;
	Node0x1a871d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%112:\l112:                                              \l  %113 = load i32, i32* %20, align 4, !dbg !889, !tbaa !808\l  %114 = add nsw i32 %113, 1, !dbg !889\l  store i32 %114, i32* %20, align 4, !dbg !889, !tbaa !808\l  br label %71, !dbg !890, !llvm.loop !891\l}"];
	Node0x1a871d0 -> Node0x1a86f00;
	Node0x1a87220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%115:\l115:                                              \l  %116 = bitcast i32* %20 to i8*, !dbg !890\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %116) #23, !dbg !890\l  %117 = load i32, i32* %19, align 4\l  switch i32 %117, label %119 [\l    i32 2, label %118\l  ]\l|{<s0>def|<s1>2}}"];
	Node0x1a87220:s0 -> Node0x1a872c0;
	Node0x1a87220:s1 -> Node0x1a87270;
	Node0x1a87270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%118:\l118:                                              \l  store i1 false, i1* %7, align 1, !dbg !895\l  store i32 1, i32* %19, align 4\l  br label %119, !dbg !895\l}"];
	Node0x1a87270 -> Node0x1a872c0;
	Node0x1a872c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%119:\l119:                                              \l  %120 = bitcast i64* %18 to i8*, !dbg !896\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %120) #23, !dbg !896\l  %121 = bitcast i64* %17 to i8*, !dbg !896\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %121) #23, !dbg !896\l  %122 = bitcast i64* %16 to i8*, !dbg !896\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %122) #23, !dbg !896\l  %123 = bitcast i64* %15 to i8*, !dbg !896\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %123) #23, !dbg !896\l  %124 = bitcast i64* %14 to i8*, !dbg !896\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %124) #23, !dbg !896\l  %125 = load i1, i1* %7, align 1, !dbg !896\l  ret i1 %125, !dbg !896\l}"];
}
