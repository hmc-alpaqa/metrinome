digraph "CFG for 'mpz_sizeinbase' function" {
	label="CFG for 'mpz_sizeinbase' function";

	Node0x1d769d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca %struct.__mpz_struct*, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64*, align 8\l  %9 = alloca i64*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca %struct.gmp_div_inverse, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i32, align 4\l  store %struct.__mpz_struct* %0, %struct.__mpz_struct** %4, align 8, !tbaa\l... !802\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %4, metadata\l... !785, metadata !DIExpression()), !dbg !806\l  store i32 %1, i32* %5, align 4, !tbaa !807\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !786, metadata\l... !DIExpression()), !dbg !809\l  %14 = bitcast i64* %6 to i8*, !dbg !810\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #23, !dbg !810\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !787, metadata\l... !DIExpression()), !dbg !811\l  %15 = bitcast i64* %7 to i8*, !dbg !810\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #23, !dbg !810\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !788, metadata\l... !DIExpression()), !dbg !812\l  %16 = bitcast i64** %8 to i8*, !dbg !813\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #23, !dbg !813\l  call void @llvm.dbg.declare(metadata i64** %8, metadata !789, metadata\l... !DIExpression()), !dbg !814\l  %17 = bitcast i64** %9 to i8*, !dbg !815\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #23, !dbg !815\l  call void @llvm.dbg.declare(metadata i64** %9, metadata !792, metadata\l... !DIExpression()), !dbg !816\l  %18 = bitcast i64* %10 to i8*, !dbg !817\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #23, !dbg !817\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !793, metadata\l... !DIExpression()), !dbg !818\l  %19 = bitcast %struct.gmp_div_inverse* %11 to i8*, !dbg !819\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* %19) #23, !dbg !819\l  call void @llvm.dbg.declare(metadata %struct.gmp_div_inverse* %11, metadata\l... !794, metadata !DIExpression()), !dbg !820\l  %20 = bitcast i64* %12 to i8*, !dbg !821\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #23, !dbg !821\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !801, metadata\l... !DIExpression()), !dbg !822\l  %21 = load i32, i32* %5, align 4, !dbg !823, !tbaa !807\l  %22 = icmp sge i32 %21, 2, !dbg !823\l  br i1 %22, label %23, label %24, !dbg !826\l|{<s0>T|<s1>F}}"];
	Node0x1d769d0:s0 -> Node0x1d76ae0;
	Node0x1d769d0:s1 -> Node0x1d76b30;
	Node0x1d76ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%23:\l23:                                               \l  br label %25, !dbg !826\l}"];
	Node0x1d76ae0 -> Node0x1d76b80;
	Node0x1d76b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%24:\l24:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([10 x i8], [10\l... x i8]* @.str.25.153, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 4199, i8* noundef\l... getelementptr inbounds ([49 x i8], [49 x i8]*\l... @__PRETTY_FUNCTION__.mpz_sizeinbase, i64 0, i64 0)) #24, !dbg !823\l  unreachable, !dbg !823\l}"];
	Node0x1d76b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%25:\l25:                                               \l  %26 = load i32, i32* %5, align 4, !dbg !827, !tbaa !807\l  %27 = icmp sle i32 %26, 62, !dbg !827\l  br i1 %27, label %28, label %29, !dbg !830\l|{<s0>T|<s1>F}}"];
	Node0x1d76b80:s0 -> Node0x1d76bd0;
	Node0x1d76b80:s1 -> Node0x1d76c20;
	Node0x1d76bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%28:\l28:                                               \l  br label %30, !dbg !830\l}"];
	Node0x1d76bd0 -> Node0x1d76c70;
	Node0x1d76c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%29:\l29:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([11 x i8], [11\l... x i8]* @.str.26.154, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 4200, i8* noundef\l... getelementptr inbounds ([49 x i8], [49 x i8]*\l... @__PRETTY_FUNCTION__.mpz_sizeinbase, i64 0, i64 0)) #24, !dbg !827\l  unreachable, !dbg !827\l}"];
	Node0x1d76c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%30:\l30:                                               \l  %31 = load %struct.__mpz_struct*, %struct.__mpz_struct** %4, align 8, !dbg\l... !831, !tbaa !802\l  %32 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %31, i32 0, i32 1, !dbg !831\l  %33 = load i32, i32* %32, align 4, !dbg !831, !tbaa !832\l  %34 = icmp sge i32 %33, 0, !dbg !831\l  br i1 %34, label %35, label %39, !dbg !831\l|{<s0>T|<s1>F}}"];
	Node0x1d76c70:s0 -> Node0x1d76cc0;
	Node0x1d76c70:s1 -> Node0x1d76d10;
	Node0x1d76cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%35:\l35:                                               \l  %36 = load %struct.__mpz_struct*, %struct.__mpz_struct** %4, align 8, !dbg\l... !831, !tbaa !802\l  %37 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %36, i32 0, i32 1, !dbg !831\l  %38 = load i32, i32* %37, align 4, !dbg !831, !tbaa !832\l  br label %44, !dbg !831\l}"];
	Node0x1d76cc0 -> Node0x1d76d60;
	Node0x1d76d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%39:\l39:                                               \l  %40 = load %struct.__mpz_struct*, %struct.__mpz_struct** %4, align 8, !dbg\l... !831, !tbaa !802\l  %41 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %40, i32 0, i32 1, !dbg !831\l  %42 = load i32, i32* %41, align 4, !dbg !831, !tbaa !832\l  %43 = sub nsw i32 0, %42, !dbg !831\l  br label %44, !dbg !831\l}"];
	Node0x1d76d10 -> Node0x1d76d60;
	Node0x1d76d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%44:\l44:                                               \l  %45 = phi i32 [ %38, %35 ], [ %43, %39 ], !dbg !831\l  %46 = sext i32 %45 to i64, !dbg !831\l  store i64 %46, i64* %6, align 8, !dbg !834, !tbaa !835\l  %47 = load i64, i64* %6, align 8, !dbg !837, !tbaa !835\l  %48 = icmp eq i64 %47, 0, !dbg !839\l  br i1 %48, label %49, label %50, !dbg !840\l|{<s0>T|<s1>F}}"];
	Node0x1d76d60:s0 -> Node0x1d76db0;
	Node0x1d76d60:s1 -> Node0x1d76e00;
	Node0x1d76db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%49:\l49:                                               \l  store i64 1, i64* %3, align 8, !dbg !841\l  store i32 1, i32* %13, align 4\l  br label %116, !dbg !841\l}"];
	Node0x1d76db0 -> Node0x1d77120;
	Node0x1d76e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%50:\l50:                                               \l  %51 = load %struct.__mpz_struct*, %struct.__mpz_struct** %4, align 8, !dbg\l... !842, !tbaa !802\l  %52 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %51, i32 0, i32 2, !dbg !843\l  %53 = load i64*, i64** %52, align 8, !dbg !843, !tbaa !844\l  store i64* %53, i64** %8, align 8, !dbg !845, !tbaa !802\l  %54 = load i64, i64* %6, align 8, !dbg !846, !tbaa !835\l  %55 = sub nsw i64 %54, 1, !dbg !847\l  %56 = mul i64 %55, 64, !dbg !848\l  %57 = load i64*, i64** %8, align 8, !dbg !849, !tbaa !802\l  %58 = load i64, i64* %6, align 8, !dbg !850, !tbaa !835\l  %59 = sub nsw i64 %58, 1, !dbg !851\l  %60 = getelementptr inbounds i64, i64* %57, i64 %59, !dbg !849\l  %61 = load i64, i64* %60, align 8, !dbg !849, !tbaa !835\l  %62 = call i64 @mpn_limb_size_in_base_2(i64 noundef %61), !dbg !852\l  %63 = add i64 %56, %62, !dbg !853\l  store i64 %63, i64* %10, align 8, !dbg !854, !tbaa !835\l  %64 = load i32, i32* %5, align 4, !dbg !855, !tbaa !807\l  switch i32 %64, label %83 [\l    i32 2, label %65\l    i32 4, label %67\l    i32 8, label %71\l    i32 16, label %75\l    i32 32, label %79\l  ], !dbg !856\l|{<s0>def|<s1>2|<s2>4|<s3>8|<s4>16|<s5>32}}"];
	Node0x1d76e00:s0 -> Node0x1d76fe0;
	Node0x1d76e00:s1 -> Node0x1d76e50;
	Node0x1d76e00:s2 -> Node0x1d76ea0;
	Node0x1d76e00:s3 -> Node0x1d76ef0;
	Node0x1d76e00:s4 -> Node0x1d76f40;
	Node0x1d76e00:s5 -> Node0x1d76f90;
	Node0x1d76e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%65:\l65:                                               \l  %66 = load i64, i64* %10, align 8, !dbg !857, !tbaa !835\l  store i64 %66, i64* %3, align 8, !dbg !859\l  store i32 1, i32* %13, align 4\l  br label %116, !dbg !859\l}"];
	Node0x1d76e50 -> Node0x1d77120;
	Node0x1d76ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%67:\l67:                                               \l  %68 = load i64, i64* %10, align 8, !dbg !860, !tbaa !835\l  %69 = add i64 %68, 1, !dbg !861\l  %70 = udiv i64 %69, 2, !dbg !862\l  store i64 %70, i64* %3, align 8, !dbg !863\l  store i32 1, i32* %13, align 4\l  br label %116, !dbg !863\l}"];
	Node0x1d76ea0 -> Node0x1d77120;
	Node0x1d76ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%71:\l71:                                               \l  %72 = load i64, i64* %10, align 8, !dbg !864, !tbaa !835\l  %73 = add i64 %72, 2, !dbg !865\l  %74 = udiv i64 %73, 3, !dbg !866\l  store i64 %74, i64* %3, align 8, !dbg !867\l  store i32 1, i32* %13, align 4\l  br label %116, !dbg !867\l}"];
	Node0x1d76ef0 -> Node0x1d77120;
	Node0x1d76f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%75:\l75:                                               \l  %76 = load i64, i64* %10, align 8, !dbg !868, !tbaa !835\l  %77 = add i64 %76, 3, !dbg !869\l  %78 = udiv i64 %77, 4, !dbg !870\l  store i64 %78, i64* %3, align 8, !dbg !871\l  store i32 1, i32* %13, align 4\l  br label %116, !dbg !871\l}"];
	Node0x1d76f40 -> Node0x1d77120;
	Node0x1d76f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%79:\l79:                                               \l  %80 = load i64, i64* %10, align 8, !dbg !872, !tbaa !835\l  %81 = add i64 %80, 4, !dbg !873\l  %82 = udiv i64 %81, 5, !dbg !874\l  store i64 %82, i64* %3, align 8, !dbg !875\l  store i32 1, i32* %13, align 4\l  br label %116, !dbg !875\l}"];
	Node0x1d76f90 -> Node0x1d77120;
	Node0x1d76fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%83:\l83:                                               \l  %84 = load i64, i64* %6, align 8, !dbg !876, !tbaa !835\l  %85 = call i64* @gmp_alloc_limbs(i64 noundef %84), !dbg !877\l  store i64* %85, i64** %9, align 8, !dbg !878, !tbaa !802\l  %86 = load i64*, i64** %9, align 8, !dbg !879, !tbaa !802\l  %87 = load i64*, i64** %8, align 8, !dbg !880, !tbaa !802\l  %88 = load i64, i64* %6, align 8, !dbg !881, !tbaa !835\l  call void @mpn_copyi(i64* noundef %86, i64* noundef %87, i64 noundef %88),\l... !dbg !882\l  %89 = load i32, i32* %5, align 4, !dbg !883, !tbaa !807\l  %90 = sext i32 %89 to i64, !dbg !883\l  call void @mpn_div_qr_1_invert(%struct.gmp_div_inverse* noundef %11, i64\l... noundef %90), !dbg !884\l  %91 = load i64, i64* %6, align 8, !dbg !885, !tbaa !835\l  store i64 %91, i64* %7, align 8, !dbg !886, !tbaa !835\l  store i64 0, i64* %12, align 8, !dbg !887, !tbaa !835\l  br label %92, !dbg !888\l}"];
	Node0x1d76fe0 -> Node0x1d77030;
	Node0x1d77030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%92:\l92:                                               \l  %93 = load i64, i64* %12, align 8, !dbg !889, !tbaa !835\l  %94 = add i64 %93, 1, !dbg !889\l  store i64 %94, i64* %12, align 8, !dbg !889, !tbaa !835\l  %95 = load i64*, i64** %9, align 8, !dbg !891, !tbaa !802\l  %96 = load i64*, i64** %9, align 8, !dbg !892, !tbaa !802\l  %97 = load i64, i64* %7, align 8, !dbg !893, !tbaa !835\l  %98 = call i64 @mpn_div_qr_1_preinv(i64* noundef %95, i64* noundef %96, i64\l... noundef %97, %struct.gmp_div_inverse* noundef %11), !dbg !894\l  %99 = load i64*, i64** %9, align 8, !dbg !895, !tbaa !802\l  %100 = load i64, i64* %7, align 8, !dbg !896, !tbaa !835\l  %101 = sub nsw i64 %100, 1, !dbg !897\l  %102 = getelementptr inbounds i64, i64* %99, i64 %101, !dbg !895\l  %103 = load i64, i64* %102, align 8, !dbg !895, !tbaa !835\l  %104 = icmp eq i64 %103, 0, !dbg !898\l  %105 = zext i1 %104 to i32, !dbg !898\l  %106 = sext i32 %105 to i64, !dbg !899\l  %107 = load i64, i64* %7, align 8, !dbg !900, !tbaa !835\l  %108 = sub nsw i64 %107, %106, !dbg !900\l  store i64 %108, i64* %7, align 8, !dbg !900, !tbaa !835\l  br label %109, !dbg !901\l}"];
	Node0x1d77030 -> Node0x1d77080;
	Node0x1d77080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%109:\l109:                                              \l  %110 = load i64, i64* %7, align 8, !dbg !902, !tbaa !835\l  %111 = icmp sgt i64 %110, 0, !dbg !903\l  br i1 %111, label %92, label %112, !dbg !901, !llvm.loop !904\l|{<s0>T|<s1>F}}"];
	Node0x1d77080:s0 -> Node0x1d77030;
	Node0x1d77080:s1 -> Node0x1d770d0;
	Node0x1d770d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%112:\l112:                                              \l  %113 = load i64*, i64** %9, align 8, !dbg !908, !tbaa !802\l  %114 = load i64, i64* %6, align 8, !dbg !909, !tbaa !835\l  call void @gmp_free_limbs(i64* noundef %113, i64 noundef %114), !dbg !910\l  %115 = load i64, i64* %12, align 8, !dbg !911, !tbaa !835\l  store i64 %115, i64* %3, align 8, !dbg !912\l  store i32 1, i32* %13, align 4\l  br label %116, !dbg !912\l}"];
	Node0x1d770d0 -> Node0x1d77120;
	Node0x1d77120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%116:\l116:                                              \l  %117 = bitcast i64* %12 to i8*, !dbg !913\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117) #23, !dbg !913\l  %118 = bitcast %struct.gmp_div_inverse* %11 to i8*, !dbg !913\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* %118) #23, !dbg !913\l  %119 = bitcast i64* %10 to i8*, !dbg !913\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %119) #23, !dbg !913\l  %120 = bitcast i64** %9 to i8*, !dbg !913\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %120) #23, !dbg !913\l  %121 = bitcast i64** %8 to i8*, !dbg !913\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %121) #23, !dbg !913\l  %122 = bitcast i64* %7 to i8*, !dbg !913\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %122) #23, !dbg !913\l  %123 = bitcast i64* %6 to i8*, !dbg !913\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %123) #23, !dbg !913\l  %124 = load i64, i64* %3, align 8, !dbg !913\l  ret i64 %124, !dbg !913\l}"];
}
