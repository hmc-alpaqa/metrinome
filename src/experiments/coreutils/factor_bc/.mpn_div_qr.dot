digraph "CFG for 'mpn_div_qr' function" {
	label="CFG for 'mpn_div_qr' function";

	Node0x1ab9a10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = alloca i64*, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64*, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca %struct.gmp_div_inverse, align 8\l  %12 = alloca i64*, align 8\l  %13 = alloca i64, align 8\l  store i64* %0, i64** %6, align 8, !tbaa !802\l  call void @llvm.dbg.declare(metadata i64** %6, metadata !785, metadata\l... !DIExpression()), !dbg !806\l  store i64* %1, i64** %7, align 8, !tbaa !802\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !786, metadata\l... !DIExpression()), !dbg !807\l  store i64 %2, i64* %8, align 8, !tbaa !808\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !787, metadata\l... !DIExpression()), !dbg !810\l  store i64* %3, i64** %9, align 8, !tbaa !802\l  call void @llvm.dbg.declare(metadata i64** %9, metadata !788, metadata\l... !DIExpression()), !dbg !811\l  store i64 %4, i64* %10, align 8, !tbaa !808\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !789, metadata\l... !DIExpression()), !dbg !812\l  %14 = bitcast %struct.gmp_div_inverse* %11 to i8*, !dbg !813\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* %14) #23, !dbg !813\l  call void @llvm.dbg.declare(metadata %struct.gmp_div_inverse* %11, metadata\l... !790, metadata !DIExpression()), !dbg !814\l  %15 = bitcast i64** %12 to i8*, !dbg !815\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #23, !dbg !815\l  call void @llvm.dbg.declare(metadata i64** %12, metadata !797, metadata\l... !DIExpression()), !dbg !816\l  store i64* null, i64** %12, align 8, !dbg !816, !tbaa !802\l  %16 = load i64, i64* %10, align 8, !dbg !817, !tbaa !808\l  %17 = icmp sgt i64 %16, 0, !dbg !817\l  br i1 %17, label %18, label %19, !dbg !820\l|{<s0>T|<s1>F}}"];
	Node0x1ab9a10:s0 -> Node0x1ab9b00;
	Node0x1ab9a10:s1 -> Node0x1ab9b50;
	Node0x1ab9b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%18:\l18:                                               \l  br label %20, !dbg !820\l}"];
	Node0x1ab9b00 -> Node0x1ab9ba0;
	Node0x1ab9b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%19:\l19:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([7 x i8], [7 x\l... i8]* @.str.50.121, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 1157, i8* noundef\l... getelementptr inbounds ([65 x i8], [65 x i8]*\l... @__PRETTY_FUNCTION__.mpn_div_qr, i64 0, i64 0)) #24, !dbg !817\l  unreachable, !dbg !817\l}"];
	Node0x1ab9ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = load i64, i64* %8, align 8, !dbg !821, !tbaa !808\l  %22 = load i64, i64* %10, align 8, !dbg !821, !tbaa !808\l  %23 = icmp sge i64 %21, %22, !dbg !821\l  br i1 %23, label %24, label %25, !dbg !824\l|{<s0>T|<s1>F}}"];
	Node0x1ab9ba0:s0 -> Node0x1ab9bf0;
	Node0x1ab9ba0:s1 -> Node0x1ab9c40;
	Node0x1ab9bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  br label %26, !dbg !824\l}"];
	Node0x1ab9bf0 -> Node0x1ab9c90;
	Node0x1ab9c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%25:\l25:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([9 x i8], [9 x\l... i8]* @.str.51.122, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 1158, i8* noundef\l... getelementptr inbounds ([65 x i8], [65 x i8]*\l... @__PRETTY_FUNCTION__.mpn_div_qr, i64 0, i64 0)) #24, !dbg !821\l  unreachable, !dbg !821\l}"];
	Node0x1ab9c90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i64*, i64** %9, align 8, !dbg !825, !tbaa !802\l  %28 = load i64, i64* %10, align 8, !dbg !826, !tbaa !808\l  call void @mpn_div_qr_invert(%struct.gmp_div_inverse* noundef %11, i64*\l... noundef %27, i64 noundef %28), !dbg !827\l  %29 = load i64, i64* %10, align 8, !dbg !828, !tbaa !808\l  %30 = icmp sgt i64 %29, 2, !dbg !829\l  br i1 %30, label %31, label %56, !dbg !830\l|{<s0>T|<s1>F}}"];
	Node0x1ab9c90:s0 -> Node0x1ab9ce0;
	Node0x1ab9c90:s1 -> Node0x1ab9f60;
	Node0x1ab9ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%31:\l31:                                               \l  %32 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %11, i32 0, i32 0, !dbg !831\l  %33 = load i32, i32* %32, align 8, !dbg !831, !tbaa !832\l  %34 = icmp ugt i32 %33, 0, !dbg !835\l  br i1 %34, label %35, label %56, !dbg !836\l|{<s0>T|<s1>F}}"];
	Node0x1ab9ce0:s0 -> Node0x1ab9d30;
	Node0x1ab9ce0:s1 -> Node0x1ab9f60;
	Node0x1ab9d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%35:\l35:                                               \l  %36 = load i64, i64* %10, align 8, !dbg !837, !tbaa !808\l  %37 = call i64* @gmp_alloc_limbs(i64 noundef %36), !dbg !838\l  store i64* %37, i64** %12, align 8, !dbg !839, !tbaa !802\l  br label %38, !dbg !840\l}"];
	Node0x1ab9d30 -> Node0x1ab9d80;
	Node0x1ab9d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%38:\l38:                                               \l  %39 = bitcast i64* %13 to i8*, !dbg !841\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #23, !dbg !841\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !798, metadata\l... !DIExpression()), !dbg !841\l  %40 = load i64*, i64** %12, align 8, !dbg !841, !tbaa !802\l  %41 = load i64*, i64** %9, align 8, !dbg !841, !tbaa !802\l  %42 = load i64, i64* %10, align 8, !dbg !841, !tbaa !808\l  %43 = getelementptr inbounds %struct.gmp_div_inverse,\l... %struct.gmp_div_inverse* %11, i32 0, i32 0, !dbg !841\l  %44 = load i32, i32* %43, align 8, !dbg !841, !tbaa !832\l  %45 = call i64 @mpn_lshift(i64* noundef %40, i64* noundef %41, i64 noundef\l... %42, i32 noundef %44), !dbg !841\l  store i64 %45, i64* %13, align 8, !dbg !841, !tbaa !808\l  %46 = load i64, i64* %13, align 8, !dbg !842, !tbaa !808\l  %47 = icmp eq i64 %46, 0, !dbg !842\l  br i1 %47, label %48, label %49, !dbg !845\l|{<s0>T|<s1>F}}"];
	Node0x1ab9d80:s0 -> Node0x1ab9dd0;
	Node0x1ab9d80:s1 -> Node0x1ab9e20;
	Node0x1ab9dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%48:\l48:                                               \l  br label %50, !dbg !845\l}"];
	Node0x1ab9dd0 -> Node0x1ab9e70;
	Node0x1ab9e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%49:\l49:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([10 x i8], [10\l... x i8]* @.str.13.113, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x\l... i8], [18 x i8]* @.str.1.74, i64 0, i64 0), i32 noundef 1164, i8* noundef\l... getelementptr inbounds ([65 x i8], [65 x i8]*\l... @__PRETTY_FUNCTION__.mpn_div_qr, i64 0, i64 0)) #24, !dbg !842\l  unreachable, !dbg !842\l}"];
	Node0x1ab9e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%50:\l50:                                               \l  %51 = load i64, i64* %13, align 8, !dbg !841, !tbaa !808\l  %52 = bitcast i64* %13 to i8*, !dbg !840\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %52) #23, !dbg !840\l  br label %53, !dbg !841\l}"];
	Node0x1ab9e70 -> Node0x1ab9ec0;
	Node0x1ab9ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%53:\l53:                                               \l  br label %54, !dbg !841\l}"];
	Node0x1ab9ec0 -> Node0x1ab9f10;
	Node0x1ab9f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%54:\l54:                                               \l  %55 = load i64*, i64** %12, align 8, !dbg !846, !tbaa !802\l  store i64* %55, i64** %9, align 8, !dbg !847, !tbaa !802\l  br label %56, !dbg !848\l}"];
	Node0x1ab9f10 -> Node0x1ab9f60;
	Node0x1ab9f60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  %57 = load i64*, i64** %6, align 8, !dbg !849, !tbaa !802\l  %58 = load i64*, i64** %7, align 8, !dbg !850, !tbaa !802\l  %59 = load i64, i64* %8, align 8, !dbg !851, !tbaa !808\l  %60 = load i64*, i64** %9, align 8, !dbg !852, !tbaa !802\l  %61 = load i64, i64* %10, align 8, !dbg !853, !tbaa !808\l  call void @mpn_div_qr_preinv(i64* noundef %57, i64* noundef %58, i64 noundef\l... %59, i64* noundef %60, i64 noundef %61, %struct.gmp_div_inverse* noundef\l... %11), !dbg !854\l  %62 = load i64*, i64** %12, align 8, !dbg !855, !tbaa !802\l  %63 = icmp ne i64* %62, null, !dbg !855\l  br i1 %63, label %64, label %67, !dbg !857\l|{<s0>T|<s1>F}}"];
	Node0x1ab9f60:s0 -> Node0x1ab9fb0;
	Node0x1ab9f60:s1 -> Node0x1aba000;
	Node0x1ab9fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%64:\l64:                                               \l  %65 = load i64*, i64** %12, align 8, !dbg !858, !tbaa !802\l  %66 = load i64, i64* %10, align 8, !dbg !859, !tbaa !808\l  call void @gmp_free_limbs(i64* noundef %65, i64 noundef %66), !dbg !860\l  br label %67, !dbg !860\l}"];
	Node0x1ab9fb0 -> Node0x1aba000;
	Node0x1aba000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = bitcast i64** %12 to i8*, !dbg !861\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %68) #23, !dbg !861\l  %69 = bitcast %struct.gmp_div_inverse* %11 to i8*, !dbg !861\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* %69) #23, !dbg !861\l  ret void, !dbg !861\l}"];
}
