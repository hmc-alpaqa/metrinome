digraph "CFG for 'readtoken' function" {
	label="CFG for 'readtoken' function";

	Node0x1c212f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca %struct._IO_FILE*, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca %struct.tokenbuffer*, align 8\l  %10 = alloca i32, align 4\l  %11 = alloca i64, align 8\l  %12 = alloca [4 x i64], align 16\l  %13 = alloca i8, align 1\l  %14 = alloca i8*, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i32, align 4\l  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8, !tbaa !858\l  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !843,\l... metadata !DIExpression()), !dbg !862\l  store i8* %1, i8** %7, align 8, !tbaa !858\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !844, metadata\l... !DIExpression()), !dbg !863\l  store i64 %2, i64* %8, align 8, !tbaa !864\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !845, metadata\l... !DIExpression()), !dbg !866\l  store %struct.tokenbuffer* %3, %struct.tokenbuffer** %9, align 8, !tbaa !858\l  call void @llvm.dbg.declare(metadata %struct.tokenbuffer** %9, metadata\l... !846, metadata !DIExpression()), !dbg !867\l  %17 = bitcast i32* %10 to i8*, !dbg !868\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #23, !dbg !868\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !847, metadata\l... !DIExpression()), !dbg !869\l  %18 = bitcast i64* %11 to i8*, !dbg !870\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #23, !dbg !870\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !848, metadata\l... !DIExpression()), !dbg !871\l  %19 = bitcast [4 x i64]* %12 to i8*, !dbg !872\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* %19) #23, !dbg !872\l  call void @llvm.dbg.declare(metadata [4 x i64]* %12, metadata !849, metadata\l... !DIExpression()), !dbg !873\l  %20 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 0, !dbg\l... !874\l  %21 = bitcast i64* %20 to i8*, !dbg !874\l  call void @llvm.memset.p0i8.i64(i8* align 16 %21, i8 0, i64 32, i1 false),\l... !dbg !874\l  store i64 0, i64* %11, align 8, !dbg !875, !tbaa !864\l  br label %22, !dbg !876\l}"];
	Node0x1c212f0 -> Node0x1c21400;
	Node0x1c21400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = load i64, i64* %11, align 8, !dbg !877, !tbaa !864\l  %24 = load i64, i64* %8, align 8, !dbg !878, !tbaa !864\l  %25 = icmp ult i64 %23, %24, !dbg !879\l  br i1 %25, label %26, label %37, !dbg !880\l|{<s0>T|<s1>F}}"];
	Node0x1c21400:s0 -> Node0x1c21450;
	Node0x1c21400:s1 -> Node0x1c214f0;
	Node0x1c21450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #23, !dbg !881\l  call void @llvm.dbg.declare(metadata i8* %13, metadata !852, metadata\l... !DIExpression()), !dbg !882\l  %27 = load i8*, i8** %7, align 8, !dbg !883, !tbaa !858\l  %28 = load i64, i64* %11, align 8, !dbg !884, !tbaa !864\l  %29 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !883\l  %30 = load i8, i8* %29, align 1, !dbg !883, !tbaa !885\l  store i8 %30, i8* %13, align 1, !dbg !882, !tbaa !885\l  %31 = load i8, i8* %13, align 1, !dbg !886, !tbaa !885\l  %32 = zext i8 %31 to i64, !dbg !886\l  %33 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 0, !dbg\l... !887\l  call void @set_nth_bit(i64 noundef %32, i64* noundef %33), !dbg !888\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #23, !dbg !889\l  br label %34, !dbg !890\l}"];
	Node0x1c21450 -> Node0x1c214a0;
	Node0x1c214a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = load i64, i64* %11, align 8, !dbg !891, !tbaa !864\l  %36 = add nsw i64 %35, 1, !dbg !891\l  store i64 %36, i64* %11, align 8, !dbg !891, !tbaa !864\l  br label %22, !dbg !892, !llvm.loop !893\l}"];
	Node0x1c214a0 -> Node0x1c21400;
	Node0x1c214f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%37:\l37:                                               \l  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !897,\l... !tbaa !858\l  %39 = call i32 @getc_unlocked(%struct._IO_FILE* noundef %38), !dbg !897\l  store i32 %39, i32* %10, align 4, !dbg !899, !tbaa !900\l  br label %40, !dbg !902\l}"];
	Node0x1c214f0 -> Node0x1c21540;
	Node0x1c21540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = load i32, i32* %10, align 4, !dbg !903, !tbaa !900\l  %42 = icmp sge i32 %41, 0, !dbg !905\l  br i1 %42, label %43, label %48, !dbg !906\l|{<s0>T|<s1>F}}"];
	Node0x1c21540:s0 -> Node0x1c21590;
	Node0x1c21540:s1 -> Node0x1c215e0;
	Node0x1c21590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%43:\l43:                                               \l  %44 = load i32, i32* %10, align 4, !dbg !907, !tbaa !900\l  %45 = sext i32 %44 to i64, !dbg !907\l  %46 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 0, !dbg\l... !908\l  %47 = call zeroext i1 @get_nth_bit(i64 noundef %45, i64* noundef %46), !dbg\l... !909\l  br label %48\l}"];
	Node0x1c21590 -> Node0x1c215e0;
	Node0x1c215e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i1 [ false, %40 ], [ %47, %43 ], !dbg !910\l  br i1 %49, label %50, label %54, !dbg !911\l|{<s0>T|<s1>F}}"];
	Node0x1c215e0:s0 -> Node0x1c21630;
	Node0x1c215e0:s1 -> Node0x1c216d0;
	Node0x1c21630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  br label %51, !dbg !912\l}"];
	Node0x1c21630 -> Node0x1c21680;
	Node0x1c21680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !914,\l... !tbaa !858\l  %53 = call i32 @getc_unlocked(%struct._IO_FILE* noundef %52), !dbg !914\l  store i32 %53, i32* %10, align 4, !dbg !915, !tbaa !900\l  br label %40, !dbg !916, !llvm.loop !917\l}"];
	Node0x1c21680 -> Node0x1c21540;
	Node0x1c216d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%54:\l54:                                               \l  %55 = bitcast i8** %14 to i8*, !dbg !919\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #23, !dbg !919\l  call void @llvm.dbg.declare(metadata i8** %14, metadata !856, metadata\l... !DIExpression()), !dbg !920\l  %56 = load %struct.tokenbuffer*, %struct.tokenbuffer** %9, align 8, !dbg\l... !921, !tbaa !858\l  %57 = getelementptr inbounds %struct.tokenbuffer, %struct.tokenbuffer* %56,\l... i32 0, i32 1, !dbg !922\l  %58 = load i8*, i8** %57, align 8, !dbg !922, !tbaa !923\l  store i8* %58, i8** %14, align 8, !dbg !920, !tbaa !858\l  %59 = bitcast i64* %15 to i8*, !dbg !925\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #23, !dbg !925\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !857, metadata\l... !DIExpression()), !dbg !926\l  %60 = load %struct.tokenbuffer*, %struct.tokenbuffer** %9, align 8, !dbg\l... !927, !tbaa !858\l  %61 = getelementptr inbounds %struct.tokenbuffer, %struct.tokenbuffer* %60,\l... i32 0, i32 0, !dbg !928\l  %62 = load i64, i64* %61, align 8, !dbg !928, !tbaa !929\l  store i64 %62, i64* %15, align 8, !dbg !926, !tbaa !864\l  store i64 0, i64* %11, align 8, !dbg !930, !tbaa !864\l  br label %63, !dbg !931\l}"];
	Node0x1c216d0 -> Node0x1c21720;
	Node0x1c21720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%63:\l63:                                               \l  %64 = load i32, i32* %10, align 4, !dbg !932, !tbaa !900\l  %65 = icmp slt i32 %64, 0, !dbg !937\l  br i1 %65, label %66, label %70, !dbg !938\l|{<s0>T|<s1>F}}"];
	Node0x1c21720:s0 -> Node0x1c21770;
	Node0x1c21720:s1 -> Node0x1c21810;
	Node0x1c21770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%66:\l66:                                               \l  %67 = load i64, i64* %11, align 8, !dbg !939, !tbaa !864\l  %68 = icmp eq i64 %67, 0, !dbg !940\l  br i1 %68, label %69, label %70, !dbg !941\l|{<s0>T|<s1>F}}"];
	Node0x1c21770:s0 -> Node0x1c217c0;
	Node0x1c21770:s1 -> Node0x1c21810;
	Node0x1c217c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%69:\l69:                                               \l  store i64 -1, i64* %5, align 8, !dbg !942\l  store i32 1, i32* %16, align 4\l  br label %110, !dbg !942\l}"];
	Node0x1c217c0 -> Node0x1c21a90;
	Node0x1c21810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%70:\l70:                                               \l  %71 = load i64, i64* %11, align 8, !dbg !943, !tbaa !864\l  %72 = load i64, i64* %15, align 8, !dbg !945, !tbaa !864\l  %73 = icmp eq i64 %71, %72, !dbg !946\l  br i1 %73, label %74, label %77, !dbg !947\l|{<s0>T|<s1>F}}"];
	Node0x1c21810:s0 -> Node0x1c21860;
	Node0x1c21810:s1 -> Node0x1c218b0;
	Node0x1c21860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%74:\l74:                                               \l  %75 = load i8*, i8** %14, align 8, !dbg !948, !tbaa !858\l  %76 = call nonnull i8* @xpalloc(i8* noundef %75, i64* noundef %15, i64\l... noundef 1, i64 noundef -1, i64 noundef 1), !dbg !949\l  store i8* %76, i8** %14, align 8, !dbg !950, !tbaa !858\l  br label %77, !dbg !951\l}"];
	Node0x1c21860 -> Node0x1c218b0;
	Node0x1c218b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%77:\l77:                                               \l  %78 = load i32, i32* %10, align 4, !dbg !952, !tbaa !900\l  %79 = icmp slt i32 %78, 0, !dbg !954\l  br i1 %79, label %80, label %84, !dbg !955\l|{<s0>T|<s1>F}}"];
	Node0x1c218b0:s0 -> Node0x1c21900;
	Node0x1c218b0:s1 -> Node0x1c21950;
	Node0x1c21900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%80:\l80:                                               \l  %81 = load i8*, i8** %14, align 8, !dbg !956, !tbaa !858\l  %82 = load i64, i64* %11, align 8, !dbg !958, !tbaa !864\l  %83 = getelementptr inbounds i8, i8* %81, i64 %82, !dbg !956\l  store i8 0, i8* %83, align 1, !dbg !959, !tbaa !885\l  br label %102, !dbg !960\l}"];
	Node0x1c21900 -> Node0x1c21a40;
	Node0x1c21950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%84:\l84:                                               \l  %85 = load i32, i32* %10, align 4, !dbg !961, !tbaa !900\l  %86 = sext i32 %85 to i64, !dbg !961\l  %87 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 0, !dbg\l... !963\l  %88 = call zeroext i1 @get_nth_bit(i64 noundef %86, i64* noundef %87), !dbg\l... !964\l  br i1 %88, label %89, label %93, !dbg !965\l|{<s0>T|<s1>F}}"];
	Node0x1c21950:s0 -> Node0x1c219a0;
	Node0x1c21950:s1 -> Node0x1c219f0;
	Node0x1c219a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%89:\l89:                                               \l  %90 = load i8*, i8** %14, align 8, !dbg !966, !tbaa !858\l  %91 = load i64, i64* %11, align 8, !dbg !968, !tbaa !864\l  %92 = getelementptr inbounds i8, i8* %90, i64 %91, !dbg !966\l  store i8 0, i8* %92, align 1, !dbg !969, !tbaa !885\l  br label %102, !dbg !970\l}"];
	Node0x1c219a0 -> Node0x1c21a40;
	Node0x1c219f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%93:\l93:                                               \l  %94 = load i32, i32* %10, align 4, !dbg !971, !tbaa !900\l  %95 = trunc i32 %94 to i8, !dbg !971\l  %96 = load i8*, i8** %14, align 8, !dbg !972, !tbaa !858\l  %97 = load i64, i64* %11, align 8, !dbg !973, !tbaa !864\l  %98 = add nsw i64 %97, 1, !dbg !973\l  store i64 %98, i64* %11, align 8, !dbg !973, !tbaa !864\l  %99 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !972\l  store i8 %95, i8* %99, align 1, !dbg !974, !tbaa !885\l  %100 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !975,\l... !tbaa !858\l  %101 = call i32 @getc_unlocked(%struct._IO_FILE* noundef %100), !dbg !975\l  store i32 %101, i32* %10, align 4, !dbg !976, !tbaa !900\l  br label %63, !dbg !977, !llvm.loop !978\l}"];
	Node0x1c219f0 -> Node0x1c21720;
	Node0x1c21a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%102:\l102:                                              \l  %103 = load i8*, i8** %14, align 8, !dbg !981, !tbaa !858\l  %104 = load %struct.tokenbuffer*, %struct.tokenbuffer** %9, align 8, !dbg\l... !982, !tbaa !858\l  %105 = getelementptr inbounds %struct.tokenbuffer, %struct.tokenbuffer*\l... %104, i32 0, i32 1, !dbg !983\l  store i8* %103, i8** %105, align 8, !dbg !984, !tbaa !923\l  %106 = load i64, i64* %15, align 8, !dbg !985, !tbaa !864\l  %107 = load %struct.tokenbuffer*, %struct.tokenbuffer** %9, align 8, !dbg\l... !986, !tbaa !858\l  %108 = getelementptr inbounds %struct.tokenbuffer, %struct.tokenbuffer*\l... %107, i32 0, i32 0, !dbg !987\l  store i64 %106, i64* %108, align 8, !dbg !988, !tbaa !929\l  %109 = load i64, i64* %11, align 8, !dbg !989, !tbaa !864\l  store i64 %109, i64* %5, align 8, !dbg !990\l  store i32 1, i32* %16, align 4\l  br label %110, !dbg !990\l}"];
	Node0x1c21a40 -> Node0x1c21a90;
	Node0x1c21a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%110:\l110:                                              \l  %111 = bitcast i64* %15 to i8*, !dbg !991\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %111) #23, !dbg !991\l  %112 = bitcast i8** %14 to i8*, !dbg !991\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %112) #23, !dbg !991\l  %113 = bitcast [4 x i64]* %12 to i8*, !dbg !991\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* %113) #23, !dbg !991\l  %114 = bitcast i64* %11 to i8*, !dbg !991\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %114) #23, !dbg !991\l  %115 = bitcast i32* %10 to i8*, !dbg !991\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %115) #23, !dbg !991\l  %116 = load i64, i64* %5, align 8, !dbg !991\l  ret i64 %116, !dbg !991\l}"];
}
