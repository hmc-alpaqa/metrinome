digraph "CFG for 'mpz_div_q_2exp' function" {
	label="CFG for 'mpz_div_q_2exp' function";

	Node0x1cc8000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = alloca %struct.__mpz_struct*, align 8\l  %6 = alloca %struct.__mpz_struct*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64*, align 8\l  %13 = alloca i32, align 4\l  %14 = alloca i32, align 4\l  store %struct.__mpz_struct* %0, %struct.__mpz_struct** %5, align 8, !tbaa\l... !794\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %5, metadata\l... !785, metadata !DIExpression()), !dbg !798\l  store %struct.__mpz_struct* %1, %struct.__mpz_struct** %6, align 8, !tbaa\l... !794\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %6, metadata\l... !786, metadata !DIExpression()), !dbg !799\l  store i64 %2, i64* %7, align 8, !tbaa !800\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !787, metadata\l... !DIExpression()), !dbg !802\l  store i32 %3, i32* %8, align 4, !tbaa !803\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !788, metadata\l... !DIExpression()), !dbg !804\l  %15 = bitcast i64* %9 to i8*, !dbg !805\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #23, !dbg !805\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !789, metadata\l... !DIExpression()), !dbg !806\l  %16 = bitcast i64* %10 to i8*, !dbg !805\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #23, !dbg !805\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !790, metadata\l... !DIExpression()), !dbg !807\l  %17 = bitcast i64* %11 to i8*, !dbg !808\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #23, !dbg !808\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !791, metadata\l... !DIExpression()), !dbg !809\l  %18 = bitcast i64** %12 to i8*, !dbg !810\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #23, !dbg !810\l  call void @llvm.dbg.declare(metadata i64** %12, metadata !792, metadata\l... !DIExpression()), !dbg !811\l  %19 = bitcast i32* %13 to i8*, !dbg !812\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #23, !dbg !812\l  call void @llvm.dbg.declare(metadata i32* %13, metadata !793, metadata\l... !DIExpression()), !dbg !813\l  %20 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !814, !tbaa !794\l  %21 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %20, i32 0, i32 1, !dbg !815\l  %22 = load i32, i32* %21, align 4, !dbg !815, !tbaa !816\l  %23 = sext i32 %22 to i64, !dbg !814\l  store i64 %23, i64* %9, align 8, !dbg !819, !tbaa !800\l  %24 = load i64, i64* %9, align 8, !dbg !820, !tbaa !800\l  %25 = icmp eq i64 %24, 0, !dbg !822\l  br i1 %25, label %26, label %29, !dbg !823\l|{<s0>T|<s1>F}}"];
	Node0x1cc8000:s0 -> Node0x1cc8050;
	Node0x1cc8000:s1 -> Node0x1cc80a0;
	Node0x1cc8050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%26:\l26:                                               \l  %27 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !824, !tbaa !794\l  %28 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %27, i32 0, i32 1, !dbg !826\l  store i32 0, i32* %28, align 4, !dbg !827, !tbaa !816\l  store i32 1, i32* %14, align 4\l  br label %147, !dbg !828\l}"];
	Node0x1cc8050 -> Node0x1cc87d0;
	Node0x1cc80a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%29:\l29:                                               \l  %30 = load i64, i64* %7, align 8, !dbg !829, !tbaa !800\l  %31 = udiv i64 %30, 64, !dbg !830\l  store i64 %31, i64* %11, align 8, !dbg !831, !tbaa !800\l  %32 = load i64, i64* %9, align 8, !dbg !832, !tbaa !800\l  %33 = icmp sge i64 %32, 0, !dbg !832\l  br i1 %33, label %34, label %36, !dbg !832\l|{<s0>T|<s1>F}}"];
	Node0x1cc80a0:s0 -> Node0x1cc80f0;
	Node0x1cc80a0:s1 -> Node0x1cc8140;
	Node0x1cc80f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%34:\l34:                                               \l  %35 = load i64, i64* %9, align 8, !dbg !832, !tbaa !800\l  br label %39, !dbg !832\l}"];
	Node0x1cc80f0 -> Node0x1cc8190;
	Node0x1cc8140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%36:\l36:                                               \l  %37 = load i64, i64* %9, align 8, !dbg !832, !tbaa !800\l  %38 = sub nsw i64 0, %37, !dbg !832\l  br label %39, !dbg !832\l}"];
	Node0x1cc8140 -> Node0x1cc8190;
	Node0x1cc8190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%39:\l39:                                               \l  %40 = phi i64 [ %35, %34 ], [ %38, %36 ], !dbg !832\l  %41 = load i64, i64* %11, align 8, !dbg !833, !tbaa !800\l  %42 = sub nsw i64 %40, %41, !dbg !834\l  store i64 %42, i64* %10, align 8, !dbg !835, !tbaa !800\l  %43 = load i64, i64* %7, align 8, !dbg !836, !tbaa !800\l  %44 = urem i64 %43, 64, !dbg !836\l  store i64 %44, i64* %7, align 8, !dbg !836, !tbaa !800\l  %45 = load i32, i32* %8, align 4, !dbg !837, !tbaa !803\l  %46 = load i64, i64* %9, align 8, !dbg !839, !tbaa !800\l  %47 = icmp sgt i64 %46, 0, !dbg !840\l  %48 = zext i1 %47 to i64, !dbg !841\l  %49 = select i1 %47, i32 1, i32 0, !dbg !841\l  %50 = icmp eq i32 %45, %49, !dbg !842\l  br i1 %50, label %51, label %76, !dbg !843\l|{<s0>T|<s1>F}}"];
	Node0x1cc8190:s0 -> Node0x1cc81e0;
	Node0x1cc8190:s1 -> Node0x1cc8320;
	Node0x1cc81e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%51:\l51:                                               \l  %52 = load i64, i64* %10, align 8, !dbg !844, !tbaa !800\l  %53 = icmp sle i64 %52, 0, !dbg !845\l  br i1 %53, label %73, label %54, !dbg !846\l|{<s0>T|<s1>F}}"];
	Node0x1cc81e0:s0 -> Node0x1cc82d0;
	Node0x1cc81e0:s1 -> Node0x1cc8230;
	Node0x1cc8230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%54:\l54:                                               \l  %55 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !847, !tbaa !794\l  %56 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %55, i32 0, i32 2, !dbg !848\l  %57 = load i64*, i64** %56, align 8, !dbg !848, !tbaa !849\l  %58 = load i64, i64* %11, align 8, !dbg !850, !tbaa !800\l  %59 = call i32 @mpn_zero_p(i64* noundef %57, i64 noundef %58), !dbg !851\l  %60 = icmp ne i32 %59, 0, !dbg !851\l  br i1 %60, label %61, label %73, !dbg !852\l|{<s0>T|<s1>F}}"];
	Node0x1cc8230:s0 -> Node0x1cc8280;
	Node0x1cc8230:s1 -> Node0x1cc82d0;
	Node0x1cc8280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%61:\l61:                                               \l  %62 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !853, !tbaa !794\l  %63 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %62, i32 0, i32 2, !dbg !854\l  %64 = load i64*, i64** %63, align 8, !dbg !854, !tbaa !849\l  %65 = load i64, i64* %11, align 8, !dbg !855, !tbaa !800\l  %66 = getelementptr inbounds i64, i64* %64, i64 %65, !dbg !853\l  %67 = load i64, i64* %66, align 8, !dbg !853, !tbaa !800\l  %68 = load i64, i64* %7, align 8, !dbg !856, !tbaa !800\l  %69 = shl i64 1, %68, !dbg !857\l  %70 = sub i64 %69, 1, !dbg !858\l  %71 = and i64 %67, %70, !dbg !859\l  %72 = icmp ne i64 %71, 0, !dbg !852\l  br label %73, !dbg !852\l}"];
	Node0x1cc8280 -> Node0x1cc82d0;
	Node0x1cc82d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%73:\l73:                                               \l  %74 = phi i1 [ true, %54 ], [ true, %51 ], [ %72, %61 ]\l  %75 = zext i1 %74 to i32, !dbg !852\l  store i32 %75, i32* %13, align 4, !dbg !860, !tbaa !861\l  br label %77, !dbg !862\l}"];
	Node0x1cc82d0 -> Node0x1cc8370;
	Node0x1cc8320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%76:\l76:                                               \l  store i32 0, i32* %13, align 4, !dbg !863, !tbaa !861\l  br label %77\l}"];
	Node0x1cc8320 -> Node0x1cc8370;
	Node0x1cc8370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%77:\l77:                                               \l  %78 = load i64, i64* %10, align 8, !dbg !864, !tbaa !800\l  %79 = icmp sle i64 %78, 0, !dbg !866\l  br i1 %79, label %80, label %81, !dbg !867\l|{<s0>T|<s1>F}}"];
	Node0x1cc8370:s0 -> Node0x1cc83c0;
	Node0x1cc8370:s1 -> Node0x1cc8410;
	Node0x1cc83c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%80:\l80:                                               \l  store i64 0, i64* %10, align 8, !dbg !868, !tbaa !800\l  br label %130, !dbg !869\l}"];
	Node0x1cc83c0 -> Node0x1cc8640;
	Node0x1cc8410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%81:\l81:                                               \l  %82 = load i64, i64* %10, align 8, !dbg !870, !tbaa !800\l  %83 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !870, !tbaa !794\l  %84 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %83, i32 0, i32 0, !dbg !870\l  %85 = load i32, i32* %84, align 8, !dbg !870, !tbaa !872\l  %86 = sext i32 %85 to i64, !dbg !870\l  %87 = icmp sgt i64 %82, %86, !dbg !870\l  br i1 %87, label %88, label %92, !dbg !870\l|{<s0>T|<s1>F}}"];
	Node0x1cc8410:s0 -> Node0x1cc8460;
	Node0x1cc8410:s1 -> Node0x1cc84b0;
	Node0x1cc8460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%88:\l88:                                               \l  %89 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !870, !tbaa !794\l  %90 = load i64, i64* %10, align 8, !dbg !870, !tbaa !800\l  %91 = call i64* @mpz_realloc(%struct.__mpz_struct* noundef %89, i64 noundef\l... %90), !dbg !870\l  br label %96, !dbg !870\l}"];
	Node0x1cc8460 -> Node0x1cc8500;
	Node0x1cc84b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%92:\l92:                                               \l  %93 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !870, !tbaa !794\l  %94 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %93, i32 0, i32 2, !dbg !870\l  %95 = load i64*, i64** %94, align 8, !dbg !870, !tbaa !849\l  br label %96, !dbg !870\l}"];
	Node0x1cc84b0 -> Node0x1cc8500;
	Node0x1cc8500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%96:\l96:                                               \l  %97 = phi i64* [ %91, %88 ], [ %95, %92 ], !dbg !870\l  store i64* %97, i64** %12, align 8, !dbg !873, !tbaa !794\l  %98 = load i64, i64* %7, align 8, !dbg !874, !tbaa !800\l  %99 = icmp ne i64 %98, 0, !dbg !876\l  br i1 %99, label %100, label %121, !dbg !877\l|{<s0>T|<s1>F}}"];
	Node0x1cc8500:s0 -> Node0x1cc8550;
	Node0x1cc8500:s1 -> Node0x1cc85a0;
	Node0x1cc8550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%100:\l100:                                              \l  %101 = load i64*, i64** %12, align 8, !dbg !878, !tbaa !794\l  %102 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !880, !tbaa !794\l  %103 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %102, i32 0, i32 2, !dbg !881\l  %104 = load i64*, i64** %103, align 8, !dbg !881, !tbaa !849\l  %105 = load i64, i64* %11, align 8, !dbg !882, !tbaa !800\l  %106 = getelementptr inbounds i64, i64* %104, i64 %105, !dbg !883\l  %107 = load i64, i64* %10, align 8, !dbg !884, !tbaa !800\l  %108 = load i64, i64* %7, align 8, !dbg !885, !tbaa !800\l  %109 = trunc i64 %108 to i32, !dbg !885\l  %110 = call i64 @mpn_rshift(i64* noundef %101, i64* noundef %106, i64\l... noundef %107, i32 noundef %109), !dbg !886\l  %111 = load i64*, i64** %12, align 8, !dbg !887, !tbaa !794\l  %112 = load i64, i64* %10, align 8, !dbg !888, !tbaa !800\l  %113 = sub nsw i64 %112, 1, !dbg !889\l  %114 = getelementptr inbounds i64, i64* %111, i64 %113, !dbg !887\l  %115 = load i64, i64* %114, align 8, !dbg !887, !tbaa !800\l  %116 = icmp eq i64 %115, 0, !dbg !890\l  %117 = zext i1 %116 to i32, !dbg !890\l  %118 = sext i32 %117 to i64, !dbg !887\l  %119 = load i64, i64* %10, align 8, !dbg !891, !tbaa !800\l  %120 = sub nsw i64 %119, %118, !dbg !891\l  store i64 %120, i64* %10, align 8, !dbg !891, !tbaa !800\l  br label %129, !dbg !892\l}"];
	Node0x1cc8550 -> Node0x1cc85f0;
	Node0x1cc85a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%121:\l121:                                              \l  %122 = load i64*, i64** %12, align 8, !dbg !893, !tbaa !794\l  %123 = load %struct.__mpz_struct*, %struct.__mpz_struct** %6, align 8, !dbg\l... !895, !tbaa !794\l  %124 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %123, i32 0, i32 2, !dbg !896\l  %125 = load i64*, i64** %124, align 8, !dbg !896, !tbaa !849\l  %126 = load i64, i64* %11, align 8, !dbg !897, !tbaa !800\l  %127 = getelementptr inbounds i64, i64* %125, i64 %126, !dbg !898\l  %128 = load i64, i64* %10, align 8, !dbg !899, !tbaa !800\l  call void @mpn_copyi(i64* noundef %122, i64* noundef %127, i64 noundef\l... %128), !dbg !900\l  br label %129\l}"];
	Node0x1cc85a0 -> Node0x1cc85f0;
	Node0x1cc85f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%129:\l129:                                              \l  br label %130\l}"];
	Node0x1cc85f0 -> Node0x1cc8640;
	Node0x1cc8640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%130:\l130:                                              \l  %131 = load i64, i64* %10, align 8, !dbg !901, !tbaa !800\l  %132 = trunc i64 %131 to i32, !dbg !901\l  %133 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !902, !tbaa !794\l  %134 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %133, i32 0, i32 1, !dbg !903\l  store i32 %132, i32* %134, align 4, !dbg !904, !tbaa !816\l  %135 = load i32, i32* %13, align 4, !dbg !905, !tbaa !861\l  %136 = icmp ne i32 %135, 0, !dbg !905\l  br i1 %136, label %137, label %140, !dbg !907\l|{<s0>T|<s1>F}}"];
	Node0x1cc8640:s0 -> Node0x1cc8690;
	Node0x1cc8640:s1 -> Node0x1cc86e0;
	Node0x1cc8690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%137:\l137:                                              \l  %138 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !908, !tbaa !794\l  %139 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !909, !tbaa !794\l  call void @mpz_add_ui(%struct.__mpz_struct* noundef %138,\l... %struct.__mpz_struct* noundef %139, i64 noundef 1), !dbg !910\l  br label %140, !dbg !910\l}"];
	Node0x1cc8690 -> Node0x1cc86e0;
	Node0x1cc86e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%140:\l140:                                              \l  %141 = load i64, i64* %9, align 8, !dbg !911, !tbaa !800\l  %142 = icmp slt i64 %141, 0, !dbg !913\l  br i1 %142, label %143, label %146, !dbg !914\l|{<s0>T|<s1>F}}"];
	Node0x1cc86e0:s0 -> Node0x1cc8730;
	Node0x1cc86e0:s1 -> Node0x1cc8780;
	Node0x1cc8730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%143:\l143:                                              \l  %144 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !915, !tbaa !794\l  %145 = load %struct.__mpz_struct*, %struct.__mpz_struct** %5, align 8, !dbg\l... !916, !tbaa !794\l  call void @mpz_neg(%struct.__mpz_struct* noundef %144, %struct.__mpz_struct*\l... noundef %145), !dbg !917\l  br label %146, !dbg !917\l}"];
	Node0x1cc8730 -> Node0x1cc8780;
	Node0x1cc8780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%146:\l146:                                              \l  store i32 0, i32* %14, align 4, !dbg !918\l  br label %147, !dbg !918\l}"];
	Node0x1cc8780 -> Node0x1cc87d0;
	Node0x1cc87d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%147:\l147:                                              \l  %148 = bitcast i32* %13 to i8*, !dbg !918\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %148) #23, !dbg !918\l  %149 = bitcast i64** %12 to i8*, !dbg !918\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %149) #23, !dbg !918\l  %150 = bitcast i64* %11 to i8*, !dbg !918\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %150) #23, !dbg !918\l  %151 = bitcast i64* %10 to i8*, !dbg !918\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %151) #23, !dbg !918\l  %152 = bitcast i64* %9 to i8*, !dbg !918\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %152) #23, !dbg !918\l  %153 = load i32, i32* %14, align 4\l  switch i32 %153, label %155 [\l    i32 0, label %154\l    i32 1, label %154\l  ]\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0x1cc87d0:s0 -> Node0x1cc8870;
	Node0x1cc87d0:s1 -> Node0x1cc8820;
	Node0x1cc87d0:s2 -> Node0x1cc8820;
	Node0x1cc8820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%154:\l154:                                              \l  ret void, !dbg !918\l}"];
	Node0x1cc8870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%155:\l155:                                              \l  unreachable\l}"];
}
