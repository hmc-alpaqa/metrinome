digraph "CFG for 'mpz_scan0' function" {
	label="CFG for 'mpz_scan0' function";

	Node0x1e208c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca %struct.__mpz_struct*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i32, align 4\l  store %struct.__mpz_struct* %0, %struct.__mpz_struct** %4, align 8, !tbaa\l... !793\l  call void @llvm.dbg.declare(metadata %struct.__mpz_struct** %4, metadata\l... !785, metadata !DIExpression()), !dbg !797\l  store i64 %1, i64* %5, align 8, !tbaa !798\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !786, metadata\l... !DIExpression()), !dbg !800\l  %13 = bitcast i64** %6 to i8*, !dbg !801\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #23, !dbg !801\l  call void @llvm.dbg.declare(metadata i64** %6, metadata !787, metadata\l... !DIExpression()), !dbg !802\l  %14 = bitcast i64* %7 to i8*, !dbg !803\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #23, !dbg !803\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !788, metadata\l... !DIExpression()), !dbg !804\l  %15 = bitcast i64* %8 to i8*, !dbg !803\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #23, !dbg !803\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !789, metadata\l... !DIExpression()), !dbg !805\l  %16 = bitcast i64* %9 to i8*, !dbg !803\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #23, !dbg !803\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !790, metadata\l... !DIExpression()), !dbg !806\l  %17 = bitcast i64* %10 to i8*, !dbg !807\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #23, !dbg !807\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !791, metadata\l... !DIExpression()), !dbg !808\l  %18 = bitcast i64* %11 to i8*, !dbg !807\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #23, !dbg !807\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !792, metadata\l... !DIExpression()), !dbg !809\l  %19 = load %struct.__mpz_struct*, %struct.__mpz_struct** %4, align 8, !dbg\l... !810, !tbaa !793\l  %20 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %19, i32 0, i32 1, !dbg !811\l  %21 = load i32, i32* %20, align 4, !dbg !811, !tbaa !812\l  %22 = sext i32 %21 to i64, !dbg !810\l  store i64 %22, i64* %7, align 8, !dbg !815, !tbaa !798\l  %23 = load i64, i64* %7, align 8, !dbg !816, !tbaa !798\l  %24 = icmp sge i64 %23, 0, !dbg !817\l  %25 = zext i1 %24 to i32, !dbg !817\l  %26 = sext i32 %25 to i64, !dbg !818\l  %27 = sub i64 0, %26, !dbg !819\l  store i64 %27, i64* %11, align 8, !dbg !820, !tbaa !798\l  %28 = load i64, i64* %7, align 8, !dbg !821, !tbaa !798\l  %29 = icmp sge i64 %28, 0, !dbg !821\l  br i1 %29, label %30, label %32, !dbg !821\l|{<s0>T|<s1>F}}"];
	Node0x1e208c0:s0 -> Node0x1e20980;
	Node0x1e208c0:s1 -> Node0x1e209d0;
	Node0x1e20980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%30:\l30:                                               \l  %31 = load i64, i64* %7, align 8, !dbg !821, !tbaa !798\l  br label %35, !dbg !821\l}"];
	Node0x1e20980 -> Node0x1e20a20;
	Node0x1e209d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%32:\l32:                                               \l  %33 = load i64, i64* %7, align 8, !dbg !821, !tbaa !798\l  %34 = sub nsw i64 0, %33, !dbg !821\l  br label %35, !dbg !821\l}"];
	Node0x1e209d0 -> Node0x1e20a20;
	Node0x1e20a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i64 [ %31, %30 ], [ %34, %32 ], !dbg !821\l  store i64 %36, i64* %8, align 8, !dbg !822, !tbaa !798\l  %37 = load i64, i64* %5, align 8, !dbg !823, !tbaa !798\l  %38 = udiv i64 %37, 64, !dbg !824\l  store i64 %38, i64* %9, align 8, !dbg !825, !tbaa !798\l  %39 = load i64, i64* %9, align 8, !dbg !826, !tbaa !798\l  %40 = load i64, i64* %8, align 8, !dbg !828, !tbaa !798\l  %41 = icmp sge i64 %39, %40, !dbg !829\l  br i1 %41, label %42, label %50, !dbg !830\l|{<s0>T|<s1>F}}"];
	Node0x1e20a20:s0 -> Node0x1e20a70;
	Node0x1e20a20:s1 -> Node0x1e20bb0;
	Node0x1e20a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%42:\l42:                                               \l  %43 = load i64, i64* %11, align 8, !dbg !831, !tbaa !798\l  %44 = icmp ne i64 %43, 0, !dbg !831\l  br i1 %44, label %45, label %47, !dbg !831\l|{<s0>T|<s1>F}}"];
	Node0x1e20a70:s0 -> Node0x1e20ac0;
	Node0x1e20a70:s1 -> Node0x1e20b10;
	Node0x1e20ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%45:\l45:                                               \l  %46 = load i64, i64* %5, align 8, !dbg !832, !tbaa !798\l  br label %48, !dbg !831\l}"];
	Node0x1e20ac0 -> Node0x1e20b60;
	Node0x1e20b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%47:\l47:                                               \l  br label %48, !dbg !831\l}"];
	Node0x1e20b10 -> Node0x1e20b60;
	Node0x1e20b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%48:\l48:                                               \l  %49 = phi i64 [ %46, %45 ], [ -1, %47 ], !dbg !831\l  store i64 %49, i64* %3, align 8, !dbg !833\l  store i32 1, i32* %12, align 4\l  br label %81, !dbg !833\l}"];
	Node0x1e20b60 -> Node0x1e20ca0;
	Node0x1e20bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%50:\l50:                                               \l  %51 = load %struct.__mpz_struct*, %struct.__mpz_struct** %4, align 8, !dbg\l... !834, !tbaa !793\l  %52 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct*\l... %51, i32 0, i32 2, !dbg !835\l  %53 = load i64*, i64** %52, align 8, !dbg !835, !tbaa !836\l  store i64* %53, i64** %6, align 8, !dbg !837, !tbaa !793\l  %54 = load i64*, i64** %6, align 8, !dbg !838, !tbaa !793\l  %55 = load i64, i64* %9, align 8, !dbg !839, !tbaa !798\l  %56 = getelementptr inbounds i64, i64* %54, i64 %55, !dbg !838\l  %57 = load i64, i64* %56, align 8, !dbg !838, !tbaa !798\l  %58 = load i64, i64* %11, align 8, !dbg !840, !tbaa !798\l  %59 = xor i64 %57, %58, !dbg !841\l  store i64 %59, i64* %10, align 8, !dbg !842, !tbaa !798\l  %60 = load i64, i64* %11, align 8, !dbg !843, !tbaa !798\l  %61 = icmp eq i64 %60, 0, !dbg !845\l  br i1 %61, label %62, label %69, !dbg !846\l|{<s0>T|<s1>F}}"];
	Node0x1e20bb0:s0 -> Node0x1e20c00;
	Node0x1e20bb0:s1 -> Node0x1e20c50;
	Node0x1e20c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%62:\l62:                                               \l  %63 = load i64*, i64** %6, align 8, !dbg !847, !tbaa !793\l  %64 = load i64, i64* %9, align 8, !dbg !848, !tbaa !798\l  %65 = call i32 @mpn_zero_p(i64* noundef %63, i64 noundef %64), !dbg !849\l  %66 = sext i32 %65 to i64, !dbg !849\l  %67 = load i64, i64* %10, align 8, !dbg !850, !tbaa !798\l  %68 = sub i64 %67, %66, !dbg !850\l  store i64 %68, i64* %10, align 8, !dbg !850, !tbaa !798\l  br label %69, !dbg !851\l}"];
	Node0x1e20c00 -> Node0x1e20c50;
	Node0x1e20c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%69:\l69:                                               \l  %70 = load i64, i64* %5, align 8, !dbg !852, !tbaa !798\l  %71 = urem i64 %70, 64, !dbg !853\l  %72 = shl i64 -1, %71, !dbg !854\l  %73 = load i64, i64* %10, align 8, !dbg !855, !tbaa !798\l  %74 = and i64 %73, %72, !dbg !855\l  store i64 %74, i64* %10, align 8, !dbg !855, !tbaa !798\l  %75 = load i64, i64* %10, align 8, !dbg !856, !tbaa !798\l  %76 = load i64, i64* %9, align 8, !dbg !857, !tbaa !798\l  %77 = load i64*, i64** %6, align 8, !dbg !858, !tbaa !793\l  %78 = load i64, i64* %8, align 8, !dbg !859, !tbaa !798\l  %79 = load i64, i64* %11, align 8, !dbg !860, !tbaa !798\l  %80 = call i64 @mpn_common_scan(i64 noundef %75, i64 noundef %76, i64*\l... noundef %77, i64 noundef %78, i64 noundef %79), !dbg !861\l  store i64 %80, i64* %3, align 8, !dbg !862\l  store i32 1, i32* %12, align 4\l  br label %81, !dbg !862\l}"];
	Node0x1e20c50 -> Node0x1e20ca0;
	Node0x1e20ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = bitcast i64* %11 to i8*, !dbg !863\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #23, !dbg !863\l  %83 = bitcast i64* %10 to i8*, !dbg !863\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #23, !dbg !863\l  %84 = bitcast i64* %9 to i8*, !dbg !863\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #23, !dbg !863\l  %85 = bitcast i64* %8 to i8*, !dbg !863\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #23, !dbg !863\l  %86 = bitcast i64* %7 to i8*, !dbg !863\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #23, !dbg !863\l  %87 = bitcast i64** %6 to i8*, !dbg !863\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87) #23, !dbg !863\l  %88 = load i64, i64* %3, align 8, !dbg !863\l  ret i64 %88, !dbg !863\l}"];
}
