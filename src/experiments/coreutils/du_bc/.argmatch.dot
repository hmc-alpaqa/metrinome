digraph "CFG for 'argmatch' function" {
	label="CFG for 'argmatch' function";

	Node0x23a4680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i8**, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i8, align 1\l  %14 = alloca i32, align 4\l  store i8* %0, i8** %6, align 8, !tbaa !1525\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1517, metadata\l... !DIExpression()), !dbg !1529\l  store i8** %1, i8*** %7, align 8, !tbaa !1525\l  call void @llvm.dbg.declare(metadata i8*** %7, metadata !1518, metadata\l... !DIExpression()), !dbg !1530\l  store i8* %2, i8** %8, align 8, !tbaa !1525\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1519, metadata\l... !DIExpression()), !dbg !1531\l  store i64 %3, i64* %9, align 8, !tbaa !1532\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1520, metadata\l... !DIExpression()), !dbg !1534\l  %15 = bitcast i64* %10 to i8*, !dbg !1535\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #24, !dbg !1535\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1521, metadata\l... !DIExpression()), !dbg !1536\l  %16 = bitcast i64* %11 to i8*, !dbg !1537\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #24, !dbg !1537\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1522, metadata\l... !DIExpression()), !dbg !1538\l  %17 = bitcast i64* %12 to i8*, !dbg !1539\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #24, !dbg !1539\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1523, metadata\l... !DIExpression()), !dbg !1540\l  store i64 -1, i64* %12, align 8, !dbg !1540, !tbaa !1532\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #24, !dbg !1541\l  call void @llvm.dbg.declare(metadata i8* %13, metadata !1524, metadata\l... !DIExpression()), !dbg !1542\l  store i8 0, i8* %13, align 1, !dbg !1542, !tbaa !1543\l  %18 = load i8*, i8** %6, align 8, !dbg !1545, !tbaa !1525\l  %19 = call i64 @strlen(i8* noundef %18) #25, !dbg !1546\l  store i64 %19, i64* %11, align 8, !dbg !1547, !tbaa !1532\l  store i64 0, i64* %10, align 8, !dbg !1548, !tbaa !1532\l  br label %20, !dbg !1550\l}"];
	Node0x23a4680 -> Node0x23a4770;
	Node0x23a4770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = load i8**, i8*** %7, align 8, !dbg !1551, !tbaa !1525\l  %22 = load i64, i64* %10, align 8, !dbg !1553, !tbaa !1532\l  %23 = getelementptr inbounds i8*, i8** %21, i64 %22, !dbg !1551\l  %24 = load i8*, i8** %23, align 8, !dbg !1551, !tbaa !1525\l  %25 = icmp ne i8* %24, null, !dbg !1554\l  br i1 %25, label %26, label %75, !dbg !1554\l|{<s0>T|<s1>F}}"];
	Node0x23a4770:s0 -> Node0x23a47c0;
	Node0x23a4770:s1 -> Node0x23a4bd0;
	Node0x23a47c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i8**, i8*** %7, align 8, !dbg !1555, !tbaa !1525\l  %28 = load i64, i64* %10, align 8, !dbg !1558, !tbaa !1532\l  %29 = getelementptr inbounds i8*, i8** %27, i64 %28, !dbg !1555\l  %30 = load i8*, i8** %29, align 8, !dbg !1555, !tbaa !1525\l  %31 = load i8*, i8** %6, align 8, !dbg !1559, !tbaa !1525\l  %32 = load i64, i64* %11, align 8, !dbg !1560, !tbaa !1532\l  %33 = call i32 @strncmp(i8* noundef %30, i8* noundef %31, i64 noundef %32)\l... #25, !dbg !1561\l  %34 = icmp ne i32 %33, 0, !dbg !1561\l  br i1 %34, label %71, label %35, !dbg !1562\l|{<s0>T|<s1>F}}"];
	Node0x23a47c0:s0 -> Node0x23a4b30;
	Node0x23a47c0:s1 -> Node0x23a4810;
	Node0x23a4810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%35:\l35:                                               \l  %36 = load i8**, i8*** %7, align 8, !dbg !1563, !tbaa !1525\l  %37 = load i64, i64* %10, align 8, !dbg !1566, !tbaa !1532\l  %38 = getelementptr inbounds i8*, i8** %36, i64 %37, !dbg !1563\l  %39 = load i8*, i8** %38, align 8, !dbg !1563, !tbaa !1525\l  %40 = call i64 @strlen(i8* noundef %39) #25, !dbg !1567\l  %41 = load i64, i64* %11, align 8, !dbg !1568, !tbaa !1532\l  %42 = icmp eq i64 %40, %41, !dbg !1569\l  br i1 %42, label %43, label %45, !dbg !1570\l|{<s0>T|<s1>F}}"];
	Node0x23a4810:s0 -> Node0x23a4860;
	Node0x23a4810:s1 -> Node0x23a48b0;
	Node0x23a4860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%43:\l43:                                               \l  %44 = load i64, i64* %10, align 8, !dbg !1571, !tbaa !1532\l  store i64 %44, i64* %5, align 8, !dbg !1572\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1572\l}"];
	Node0x23a4860 -> Node0x23a4cc0;
	Node0x23a48b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%45:\l45:                                               \l  %46 = load i64, i64* %12, align 8, !dbg !1573, !tbaa !1532\l  %47 = icmp eq i64 %46, -1, !dbg !1575\l  br i1 %47, label %48, label %50, !dbg !1576\l|{<s0>T|<s1>F}}"];
	Node0x23a48b0:s0 -> Node0x23a4900;
	Node0x23a48b0:s1 -> Node0x23a4950;
	Node0x23a4900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%48:\l48:                                               \l  %49 = load i64, i64* %10, align 8, !dbg !1577, !tbaa !1532\l  store i64 %49, i64* %12, align 8, !dbg !1578, !tbaa !1532\l  br label %69, !dbg !1579\l}"];
	Node0x23a4900 -> Node0x23a4a90;
	Node0x23a4950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%50:\l50:                                               \l  %51 = load i8*, i8** %8, align 8, !dbg !1580, !tbaa !1525\l  %52 = icmp eq i8* %51, null, !dbg !1583\l  br i1 %52, label %67, label %53, !dbg !1584\l|{<s0>T|<s1>F}}"];
	Node0x23a4950:s0 -> Node0x23a49f0;
	Node0x23a4950:s1 -> Node0x23a49a0;
	Node0x23a49a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%53:\l53:                                               \l  %54 = load i8*, i8** %8, align 8, !dbg !1585, !tbaa !1525\l  %55 = load i64, i64* %9, align 8, !dbg !1586, !tbaa !1532\l  %56 = load i64, i64* %12, align 8, !dbg !1587, !tbaa !1532\l  %57 = mul i64 %55, %56, !dbg !1588\l  %58 = getelementptr inbounds i8, i8* %54, i64 %57, !dbg !1589\l  %59 = load i8*, i8** %8, align 8, !dbg !1590, !tbaa !1525\l  %60 = load i64, i64* %9, align 8, !dbg !1591, !tbaa !1532\l  %61 = load i64, i64* %10, align 8, !dbg !1592, !tbaa !1532\l  %62 = mul i64 %60, %61, !dbg !1593\l  %63 = getelementptr inbounds i8, i8* %59, i64 %62, !dbg !1594\l  %64 = load i64, i64* %9, align 8, !dbg !1595, !tbaa !1532\l  %65 = call i32 @memcmp(i8* noundef %58, i8* noundef %63, i64 noundef %64)\l... #25, !dbg !1596\l  %66 = icmp ne i32 %65, 0, !dbg !1596\l  br i1 %66, label %67, label %68, !dbg !1597\l|{<s0>T|<s1>F}}"];
	Node0x23a49a0:s0 -> Node0x23a49f0;
	Node0x23a49a0:s1 -> Node0x23a4a40;
	Node0x23a49f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%67:\l67:                                               \l  store i8 1, i8* %13, align 1, !dbg !1598, !tbaa !1543\l  br label %68, !dbg !1600\l}"];
	Node0x23a49f0 -> Node0x23a4a40;
	Node0x23a4a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%68:\l68:                                               \l  br label %69\l}"];
	Node0x23a4a40 -> Node0x23a4a90;
	Node0x23a4a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%69:\l69:                                               \l  br label %70\l}"];
	Node0x23a4a90 -> Node0x23a4ae0;
	Node0x23a4ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%70:\l70:                                               \l  br label %71, !dbg !1601\l}"];
	Node0x23a4ae0 -> Node0x23a4b30;
	Node0x23a4b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%71:\l71:                                               \l  br label %72, !dbg !1602\l}"];
	Node0x23a4b30 -> Node0x23a4b80;
	Node0x23a4b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%72:\l72:                                               \l  %73 = load i64, i64* %10, align 8, !dbg !1603, !tbaa !1532\l  %74 = add i64 %73, 1, !dbg !1603\l  store i64 %74, i64* %10, align 8, !dbg !1603, !tbaa !1532\l  br label %20, !dbg !1604, !llvm.loop !1605\l}"];
	Node0x23a4b80 -> Node0x23a4770;
	Node0x23a4bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%75:\l75:                                               \l  %76 = load i8, i8* %13, align 1, !dbg !1609, !tbaa !1543, !range !1611\l  %77 = trunc i8 %76 to i1, !dbg !1609\l  br i1 %77, label %78, label %79, !dbg !1612\l|{<s0>T|<s1>F}}"];
	Node0x23a4bd0:s0 -> Node0x23a4c20;
	Node0x23a4bd0:s1 -> Node0x23a4c70;
	Node0x23a4c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%78:\l78:                                               \l  store i64 -2, i64* %5, align 8, !dbg !1613\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1613\l}"];
	Node0x23a4c20 -> Node0x23a4cc0;
	Node0x23a4c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%79:\l79:                                               \l  %80 = load i64, i64* %12, align 8, !dbg !1614, !tbaa !1532\l  store i64 %80, i64* %5, align 8, !dbg !1615\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1615\l}"];
	Node0x23a4c70 -> Node0x23a4cc0;
	Node0x23a4cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%81:\l81:                                               \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #24, !dbg !1616\l  %82 = bitcast i64* %12 to i8*, !dbg !1616\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #24, !dbg !1616\l  %83 = bitcast i64* %11 to i8*, !dbg !1616\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #24, !dbg !1616\l  %84 = bitcast i64* %10 to i8*, !dbg !1616\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #24, !dbg !1616\l  %85 = load i64, i64* %5, align 8, !dbg !1616\l  ret i64 %85, !dbg !1616\l}"];
}
