digraph "CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function" {
	label="CFG for 'rpl_fcntl_DUPFD_CLOEXEC' function";

	Node0x28dc9f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4, !tbaa !1779\l  call void @llvm.dbg.declare(metadata i32* %3, metadata !1293, metadata\l... !DIExpression()), !dbg !1783\l  store i32 %1, i32* %4, align 4, !tbaa !1779\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !1294, metadata\l... !DIExpression()), !dbg !1784\l  %8 = bitcast i32* %5 to i8*, !dbg !1785\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #24, !dbg !1785\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !1295, metadata\l... !DIExpression()), !dbg !1786\l  %9 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1787, !tbaa !1779\l  %10 = icmp sle i32 0, %9, !dbg !1789\l  br i1 %10, label %11, label %31, !dbg !1790\l|{<s0>T|<s1>F}}"];
	Node0x28dc9f0:s0 -> Node0x28ddc30;
	Node0x28dc9f0:s1 -> Node0x28dde60;
	Node0x28ddc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%11:\l11:                                               \l  %12 = load i32, i32* %3, align 4, !dbg !1791, !tbaa !1779\l  %13 = load i32, i32* %4, align 4, !dbg !1793, !tbaa !1779\l  %14 = call i32 (i32, i32, ...) @fcntl(i32 noundef %12, i32 noundef 1030, i32\l... noundef %13), !dbg !1794\l  store i32 %14, i32* %5, align 4, !dbg !1795, !tbaa !1779\l  %15 = load i32, i32* %5, align 4, !dbg !1796, !tbaa !1779\l  %16 = icmp sle i32 0, %15, !dbg !1798\l  br i1 %16, label %21, label %17, !dbg !1799\l|{<s0>T|<s1>F}}"];
	Node0x28ddc30:s0 -> Node0x28ddcd0;
	Node0x28ddc30:s1 -> Node0x28ddc80;
	Node0x28ddc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%17:\l17:                                               \l  %18 = call i32* @__errno_location() #25, !dbg !1800\l  %19 = load i32, i32* %18, align 4, !dbg !1800, !tbaa !1779\l  %20 = icmp ne i32 %19, 22, !dbg !1801\l  br i1 %20, label %21, label %22, !dbg !1802\l|{<s0>T|<s1>F}}"];
	Node0x28ddc80:s0 -> Node0x28ddcd0;
	Node0x28ddc80:s1 -> Node0x28ddd20;
	Node0x28ddcd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%21:\l21:                                               \l  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg\l... !1803, !tbaa !1779\l  br label %30, !dbg !1805\l}"];
	Node0x28ddcd0 -> Node0x28dde10;
	Node0x28ddd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%22:\l22:                                               \l  %23 = load i32, i32* %3, align 4, !dbg !1806, !tbaa !1779\l  %24 = load i32, i32* %4, align 4, !dbg !1808, !tbaa !1779\l  %25 = call i32 @rpl_fcntl_DUPFD(i32 noundef %23, i32 noundef %24), !dbg !1809\l  store i32 %25, i32* %5, align 4, !dbg !1810, !tbaa !1779\l  %26 = load i32, i32* %5, align 4, !dbg !1811, !tbaa !1779\l  %27 = icmp sge i32 %26, 0, !dbg !1813\l  br i1 %27, label %28, label %29, !dbg !1814\l|{<s0>T|<s1>F}}"];
	Node0x28ddd20:s0 -> Node0x28ddd70;
	Node0x28ddd20:s1 -> Node0x28dddc0;
	Node0x28ddd70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%28:\l28:                                               \l  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1815, !tbaa !1779\l  br label %29, !dbg !1816\l}"];
	Node0x28ddd70 -> Node0x28dddc0;
	Node0x28dddc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%29:\l29:                                               \l  br label %30\l}"];
	Node0x28dddc0 -> Node0x28dde10;
	Node0x28dde10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%30:\l30:                                               \l  br label %35, !dbg !1817\l}"];
	Node0x28dde10 -> Node0x28ddeb0;
	Node0x28dde60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%31:\l31:                                               \l  %32 = load i32, i32* %3, align 4, !dbg !1818, !tbaa !1779\l  %33 = load i32, i32* %4, align 4, !dbg !1819, !tbaa !1779\l  %34 = call i32 @rpl_fcntl_DUPFD(i32 noundef %32, i32 noundef %33), !dbg !1820\l  store i32 %34, i32* %5, align 4, !dbg !1821, !tbaa !1779\l  br label %35\l}"];
	Node0x28dde60 -> Node0x28ddeb0;
	Node0x28ddeb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = load i32, i32* %5, align 4, !dbg !1822, !tbaa !1779\l  %37 = icmp sle i32 0, %36, !dbg !1823\l  br i1 %37, label %38, label %64, !dbg !1824\l|{<s0>T|<s1>F}}"];
	Node0x28ddeb0:s0 -> Node0x28ddf00;
	Node0x28ddeb0:s1 -> Node0x28de090;
	Node0x28ddf00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%38:\l38:                                               \l  %39 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4,\l... !dbg !1825, !tbaa !1779\l  %40 = icmp eq i32 %39, -1, !dbg !1826\l  br i1 %40, label %41, label %64, !dbg !1827\l|{<s0>T|<s1>F}}"];
	Node0x28ddf00:s0 -> Node0x28ddf50;
	Node0x28ddf00:s1 -> Node0x28de090;
	Node0x28ddf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = bitcast i32* %6 to i8*, !dbg !1828\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #24, !dbg !1828\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !1296, metadata\l... !DIExpression()), !dbg !1829\l  %43 = load i32, i32* %5, align 4, !dbg !1830, !tbaa !1779\l  %44 = call i32 (i32, i32, ...) @fcntl(i32 noundef %43, i32 noundef 1), !dbg\l... !1831\l  store i32 %44, i32* %6, align 4, !dbg !1829, !tbaa !1779\l  %45 = load i32, i32* %6, align 4, !dbg !1832, !tbaa !1779\l  %46 = icmp slt i32 %45, 0, !dbg !1833\l  br i1 %46, label %53, label %47, !dbg !1834\l|{<s0>T|<s1>F}}"];
	Node0x28ddf50:s0 -> Node0x28ddff0;
	Node0x28ddf50:s1 -> Node0x28ddfa0;
	Node0x28ddfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%47:\l47:                                               \l  %48 = load i32, i32* %5, align 4, !dbg !1835, !tbaa !1779\l  %49 = load i32, i32* %6, align 4, !dbg !1836, !tbaa !1779\l  %50 = or i32 %49, 1, !dbg !1837\l  %51 = call i32 (i32, i32, ...) @fcntl(i32 noundef %48, i32 noundef 2, i32\l... noundef %50), !dbg !1838\l  %52 = icmp eq i32 %51, -1, !dbg !1839\l  br i1 %52, label %53, label %62, !dbg !1840\l|{<s0>T|<s1>F}}"];
	Node0x28ddfa0:s0 -> Node0x28ddff0;
	Node0x28ddfa0:s1 -> Node0x28de040;
	Node0x28ddff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%53:\l53:                                               \l  %54 = bitcast i32* %7 to i8*, !dbg !1841\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #24, !dbg !1841\l  call void @llvm.dbg.declare(metadata i32* %7, metadata !1299, metadata\l... !DIExpression()), !dbg !1842\l  %55 = call i32* @__errno_location() #25, !dbg !1843\l  %56 = load i32, i32* %55, align 4, !dbg !1843, !tbaa !1779\l  store i32 %56, i32* %7, align 4, !dbg !1842, !tbaa !1779\l  %57 = load i32, i32* %5, align 4, !dbg !1844, !tbaa !1779\l  %58 = call i32 @close(i32 noundef %57), !dbg !1845\l  %59 = load i32, i32* %7, align 4, !dbg !1846, !tbaa !1779\l  %60 = call i32* @__errno_location() #25, !dbg !1847\l  store i32 %59, i32* %60, align 4, !dbg !1848, !tbaa !1779\l  store i32 -1, i32* %5, align 4, !dbg !1849, !tbaa !1779\l  %61 = bitcast i32* %7 to i8*, !dbg !1850\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #24, !dbg !1850\l  br label %62, !dbg !1851\l}"];
	Node0x28ddff0 -> Node0x28de040;
	Node0x28de040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%62:\l62:                                               \l  %63 = bitcast i32* %6 to i8*, !dbg !1852\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %63) #24, !dbg !1852\l  br label %64, !dbg !1853\l}"];
	Node0x28de040 -> Node0x28de090;
	Node0x28de090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = load i32, i32* %5, align 4, !dbg !1854, !tbaa !1779\l  %66 = bitcast i32* %5 to i8*, !dbg !1855\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #24, !dbg !1855\l  ret i32 %65, !dbg !1856\l}"];
}
