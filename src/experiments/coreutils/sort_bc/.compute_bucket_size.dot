digraph "CFG for 'compute_bucket_size' function" {
	label="CFG for 'compute_bucket_size' function";

	Node0x265b320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca %struct.hash_tuning*, align 8\l  %6 = alloca float, align 4\l  %7 = alloca i32, align 4\l  store i64 %0, i64* %4, align 8, !tbaa !1790\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !1784, metadata\l... !DIExpression()), !dbg !1794\l  store %struct.hash_tuning* %1, %struct.hash_tuning** %5, align 8, !tbaa !1795\l  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %5, metadata\l... !1785, metadata !DIExpression()), !dbg !1797\l  %8 = load %struct.hash_tuning*, %struct.hash_tuning** %5, align 8, !dbg\l... !1798, !tbaa !1795\l  %9 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %8,\l... i32 0, i32 4, !dbg !1799\l  %10 = load i8, i8* %9, align 4, !dbg !1799, !tbaa !1800, !range !1804\l  %11 = trunc i8 %10 to i1, !dbg !1799\l  br i1 %11, label %30, label %12, !dbg !1805\l|{<s0>T|<s1>F}}"];
	Node0x265b320:s0 -> Node0x265f7c0;
	Node0x265b320:s1 -> Node0x265f630;
	Node0x265f630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%12:\l12:                                               \l  %13 = bitcast float* %6 to i8*, !dbg !1806\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #24, !dbg !1806\l  call void @llvm.dbg.declare(metadata float* %6, metadata !1786, metadata\l... !DIExpression()), !dbg !1807\l  %14 = load i64, i64* %4, align 8, !dbg !1808, !tbaa !1790\l  %15 = uitofp i64 %14 to float, !dbg !1808\l  %16 = load %struct.hash_tuning*, %struct.hash_tuning** %5, align 8, !dbg\l... !1809, !tbaa !1795\l  %17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %16,\l... i32 0, i32 2, !dbg !1810\l  %18 = load float, float* %17, align 4, !dbg !1810, !tbaa !1811\l  %19 = fdiv float %15, %18, !dbg !1812\l  store float %19, float* %6, align 4, !dbg !1807, !tbaa !1813\l  %20 = load float, float* %6, align 4, !dbg !1814, !tbaa !1813\l  %21 = fcmp ole float 0x43F0000000000000, %20, !dbg !1816\l  br i1 %21, label %22, label %23, !dbg !1817\l|{<s0>T|<s1>F}}"];
	Node0x265f630:s0 -> Node0x265f680;
	Node0x265f630:s1 -> Node0x265f6d0;
	Node0x265f680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%22:\l22:                                               \l  store i32 2, i32* %7, align 4\l  br label %26, !dbg !1818\l}"];
	Node0x265f680 -> Node0x265f720;
	Node0x265f6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%23:\l23:                                               \l  %24 = load float, float* %6, align 4, !dbg !1819, !tbaa !1813\l  %25 = fptoui float %24 to i64, !dbg !1819\l  store i64 %25, i64* %4, align 8, !dbg !1820, !tbaa !1790\l  store i32 0, i32* %7, align 4, !dbg !1821\l  br label %26, !dbg !1821\l}"];
	Node0x265f6d0 -> Node0x265f720;
	Node0x265f720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%26:\l26:                                               \l  %27 = bitcast float* %6 to i8*, !dbg !1821\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %27) #24, !dbg !1821\l  %28 = load i32, i32* %7, align 4\l  switch i32 %28, label %42 [\l    i32 0, label %29\l    i32 2, label %38\l  ]\l|{<s0>def|<s1>0|<s2>2}}"];
	Node0x265f720:s0 -> Node0x265f950;
	Node0x265f720:s1 -> Node0x265f770;
	Node0x265f720:s2 -> Node0x265f8b0;
	Node0x265f770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%29:\l29:                                               \l  br label %30, !dbg !1822\l}"];
	Node0x265f770 -> Node0x265f7c0;
	Node0x265f7c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%30:\l30:                                               \l  %31 = load i64, i64* %4, align 8, !dbg !1823, !tbaa !1790\l  %32 = call i64 @next_prime(i64 noundef %31) #25, !dbg !1824\l  store i64 %32, i64* %4, align 8, !dbg !1825, !tbaa !1790\l  %33 = load i64, i64* %4, align 8, !dbg !1826, !tbaa !1790\l  %34 = icmp ult i64 1152921504606846975, %33, !dbg !1826\l  br i1 %34, label %35, label %36, !dbg !1828\l|{<s0>T|<s1>F}}"];
	Node0x265f7c0:s0 -> Node0x265f810;
	Node0x265f7c0:s1 -> Node0x265f860;
	Node0x265f810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%35:\l35:                                               \l  br label %38, !dbg !1829\l}"];
	Node0x265f810 -> Node0x265f8b0;
	Node0x265f860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%36:\l36:                                               \l  %37 = load i64, i64* %4, align 8, !dbg !1830, !tbaa !1790\l  store i64 %37, i64* %3, align 8, !dbg !1831\l  br label %40, !dbg !1831\l}"];
	Node0x265f860 -> Node0x265f900;
	Node0x265f8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%38:\l38:                                               \l  call void @llvm.dbg.label(metadata !1789), !dbg !1832\l  %39 = call i32* @__errno_location() #25, !dbg !1833\l  store i32 12, i32* %39, align 4, !dbg !1834, !tbaa !1835\l  store i64 0, i64* %3, align 8, !dbg !1837\l  br label %40, !dbg !1837\l}"];
	Node0x265f8b0 -> Node0x265f900;
	Node0x265f900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = load i64, i64* %3, align 8, !dbg !1838\l  ret i64 %41, !dbg !1838\l}"];
	Node0x265f950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%42:\l42:                                               \l  unreachable\l}"];
}
