digraph "CFG for 'general_numcompare' function" {
	label="CFG for 'general_numcompare' function";

	Node0x2485630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i8*, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca x86_fp80, align 16\l  %9 = alloca x86_fp80, align 16\l  %10 = alloca i32, align 4\l  store i8* %0, i8** %4, align 8, !tbaa !1790\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !1783, metadata\l... !DIExpression()), !dbg !1794\l  store i8* %1, i8** %5, align 8, !tbaa !1790\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !1784, metadata\l... !DIExpression()), !dbg !1795\l  %11 = bitcast i8** %6 to i8*, !dbg !1796\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #24, !dbg !1796\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1785, metadata\l... !DIExpression()), !dbg !1797\l  %12 = bitcast i8** %7 to i8*, !dbg !1798\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #24, !dbg !1798\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !1786, metadata\l... !DIExpression()), !dbg !1799\l  %13 = bitcast x86_fp80* %8 to i8*, !dbg !1800\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #24, !dbg !1800\l  call void @llvm.dbg.declare(metadata x86_fp80* %8, metadata !1787, metadata\l... !DIExpression()), !dbg !1801\l  %14 = load i8*, i8** %4, align 8, !dbg !1802, !tbaa !1790\l  %15 = call x86_fp80 @strtold(i8* noundef %14, i8** noundef %6) #24, !dbg\l... !1803\l  store x86_fp80 %15, x86_fp80* %8, align 16, !dbg !1801, !tbaa !1804\l  %16 = bitcast x86_fp80* %9 to i8*, !dbg !1806\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* %16) #24, !dbg !1806\l  call void @llvm.dbg.declare(metadata x86_fp80* %9, metadata !1789, metadata\l... !DIExpression()), !dbg !1807\l  %17 = load i8*, i8** %5, align 8, !dbg !1808, !tbaa !1790\l  %18 = call x86_fp80 @strtold(i8* noundef %17, i8** noundef %7) #24, !dbg\l... !1809\l  store x86_fp80 %18, x86_fp80* %9, align 16, !dbg !1807, !tbaa !1804\l  %19 = load i8*, i8** %4, align 8, !dbg !1810, !tbaa !1790\l  %20 = load i8*, i8** %6, align 8, !dbg !1812, !tbaa !1790\l  %21 = icmp eq i8* %19, %20, !dbg !1813\l  br i1 %21, label %22, label %28, !dbg !1814\l|{<s0>T|<s1>F}}"];
	Node0x2485630:s0 -> Node0x2487410;
	Node0x2485630:s1 -> Node0x2487460;
	Node0x2487410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%22:\l22:                                               \l  %23 = load i8*, i8** %5, align 8, !dbg !1815, !tbaa !1790\l  %24 = load i8*, i8** %7, align 8, !dbg !1816, !tbaa !1790\l  %25 = icmp eq i8* %23, %24, !dbg !1817\l  %26 = zext i1 %25 to i64, !dbg !1815\l  %27 = select i1 %25, i32 0, i32 -1, !dbg !1815\l  store i32 %27, i32* %3, align 4, !dbg !1818\l  store i32 1, i32* %10, align 4\l  br label %72, !dbg !1818\l}"];
	Node0x2487410 -> Node0x2487a00;
	Node0x2487460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%28:\l28:                                               \l  %29 = load i8*, i8** %5, align 8, !dbg !1819, !tbaa !1790\l  %30 = load i8*, i8** %7, align 8, !dbg !1821, !tbaa !1790\l  %31 = icmp eq i8* %29, %30, !dbg !1822\l  br i1 %31, label %32, label %33, !dbg !1823\l|{<s0>T|<s1>F}}"];
	Node0x2487460:s0 -> Node0x24874b0;
	Node0x2487460:s1 -> Node0x2487500;
	Node0x24874b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%32:\l32:                                               \l  store i32 1, i32* %3, align 4, !dbg !1824\l  store i32 1, i32* %10, align 4\l  br label %72, !dbg !1824\l}"];
	Node0x24874b0 -> Node0x2487a00;
	Node0x2487500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%33:\l33:                                               \l  %34 = load x86_fp80, x86_fp80* %8, align 16, !dbg !1825, !tbaa !1804\l  %35 = load x86_fp80, x86_fp80* %9, align 16, !dbg !1826, !tbaa !1804\l  %36 = fcmp olt x86_fp80 %34, %35, !dbg !1827\l  br i1 %36, label %37, label %38, !dbg !1825\l|{<s0>T|<s1>F}}"];
	Node0x2487500:s0 -> Node0x2487550;
	Node0x2487500:s1 -> Node0x24875a0;
	Node0x2487550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%37:\l37:                                               \l  br label %70, !dbg !1825\l}"];
	Node0x2487550 -> Node0x24879b0;
	Node0x24875a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%38:\l38:                                               \l  %39 = load x86_fp80, x86_fp80* %8, align 16, !dbg !1828, !tbaa !1804\l  %40 = load x86_fp80, x86_fp80* %9, align 16, !dbg !1829, !tbaa !1804\l  %41 = fcmp ogt x86_fp80 %39, %40, !dbg !1830\l  br i1 %41, label %42, label %43, !dbg !1828\l|{<s0>T|<s1>F}}"];
	Node0x24875a0:s0 -> Node0x24875f0;
	Node0x24875a0:s1 -> Node0x2487640;
	Node0x24875f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%42:\l42:                                               \l  br label %68, !dbg !1828\l}"];
	Node0x24875f0 -> Node0x2487960;
	Node0x2487640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%43:\l43:                                               \l  %44 = load x86_fp80, x86_fp80* %8, align 16, !dbg !1831, !tbaa !1804\l  %45 = load x86_fp80, x86_fp80* %9, align 16, !dbg !1832, !tbaa !1804\l  %46 = fcmp oeq x86_fp80 %44, %45, !dbg !1833\l  br i1 %46, label %47, label %48, !dbg !1831\l|{<s0>T|<s1>F}}"];
	Node0x2487640:s0 -> Node0x2487690;
	Node0x2487640:s1 -> Node0x24876e0;
	Node0x2487690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%47:\l47:                                               \l  br label %66, !dbg !1831\l}"];
	Node0x2487690 -> Node0x2487910;
	Node0x24876e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%48:\l48:                                               \l  %49 = load x86_fp80, x86_fp80* %9, align 16, !dbg !1834, !tbaa !1804\l  %50 = load x86_fp80, x86_fp80* %9, align 16, !dbg !1835, !tbaa !1804\l  %51 = fcmp oeq x86_fp80 %49, %50, !dbg !1836\l  br i1 %51, label %52, label %53, !dbg !1834\l|{<s0>T|<s1>F}}"];
	Node0x24876e0:s0 -> Node0x2487730;
	Node0x24876e0:s1 -> Node0x2487780;
	Node0x2487730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%52:\l52:                                               \l  br label %64, !dbg !1834\l}"];
	Node0x2487730 -> Node0x24878c0;
	Node0x2487780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%53:\l53:                                               \l  %54 = load x86_fp80, x86_fp80* %8, align 16, !dbg !1837, !tbaa !1804\l  %55 = load x86_fp80, x86_fp80* %8, align 16, !dbg !1838, !tbaa !1804\l  %56 = fcmp oeq x86_fp80 %54, %55, !dbg !1839\l  br i1 %56, label %57, label %58, !dbg !1837\l|{<s0>T|<s1>F}}"];
	Node0x2487780:s0 -> Node0x24877d0;
	Node0x2487780:s1 -> Node0x2487820;
	Node0x24877d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%57:\l57:                                               \l  br label %62, !dbg !1837\l}"];
	Node0x24877d0 -> Node0x2487870;
	Node0x2487820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%58:\l58:                                               \l  %59 = load x86_fp80, x86_fp80* %8, align 16, !dbg !1840, !tbaa !1804\l  %60 = load x86_fp80, x86_fp80* %9, align 16, !dbg !1841, !tbaa !1804\l  %61 = call i32 @nan_compare(x86_fp80 noundef %59, x86_fp80 noundef %60),\l... !dbg !1842\l  br label %62, !dbg !1837\l}"];
	Node0x2487820 -> Node0x2487870;
	Node0x2487870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%62:\l62:                                               \l  %63 = phi i32 [ 1, %57 ], [ %61, %58 ], !dbg !1837\l  br label %64, !dbg !1834\l}"];
	Node0x2487870 -> Node0x24878c0;
	Node0x24878c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%64:\l64:                                               \l  %65 = phi i32 [ -1, %52 ], [ %63, %62 ], !dbg !1834\l  br label %66, !dbg !1831\l}"];
	Node0x24878c0 -> Node0x2487910;
	Node0x2487910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%66:\l66:                                               \l  %67 = phi i32 [ 0, %47 ], [ %65, %64 ], !dbg !1831\l  br label %68, !dbg !1828\l}"];
	Node0x2487910 -> Node0x2487960;
	Node0x2487960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%68:\l68:                                               \l  %69 = phi i32 [ 1, %42 ], [ %67, %66 ], !dbg !1828\l  br label %70, !dbg !1825\l}"];
	Node0x2487960 -> Node0x24879b0;
	Node0x24879b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%70:\l70:                                               \l  %71 = phi i32 [ -1, %37 ], [ %69, %68 ], !dbg !1825\l  store i32 %71, i32* %3, align 4, !dbg !1843\l  store i32 1, i32* %10, align 4\l  br label %72, !dbg !1843\l}"];
	Node0x24879b0 -> Node0x2487a00;
	Node0x2487a00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  %73 = bitcast x86_fp80* %9 to i8*, !dbg !1844\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* %73) #24, !dbg !1844\l  %74 = bitcast x86_fp80* %8 to i8*, !dbg !1844\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* %74) #24, !dbg !1844\l  %75 = bitcast i8** %7 to i8*, !dbg !1844\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #24, !dbg !1844\l  %76 = bitcast i8** %6 to i8*, !dbg !1844\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #24, !dbg !1844\l  %77 = load i32, i32* %3, align 4, !dbg !1844\l  ret i32 %77, !dbg !1844\l}"];
}
