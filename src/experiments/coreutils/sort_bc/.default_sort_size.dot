digraph "CFG for 'default_sort_size' function" {
	label="CFG for 'default_sort_size' function";

	Node0x250ba60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%0:\l  %1 = alloca i64, align 8\l  %2 = alloca %struct.timespec, align 8\l  %3 = alloca double, align 8\l  %4 = alloca double, align 8\l  %5 = alloca double, align 8\l  %6 = bitcast i64* %1 to i8*, !dbg !1794\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #24, !dbg !1794\l  call void @llvm.dbg.declare(metadata i64* %1, metadata !1783, metadata\l... !DIExpression()), !dbg !1795\l  store i64 -1, i64* %1, align 8, !dbg !1795, !tbaa !1796\l  %7 = bitcast %struct.timespec* %2 to i8*, !dbg !1800\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* %7) #24, !dbg !1800\l  call void @llvm.dbg.declare(metadata %struct.timespec* %2, metadata !1784,\l... metadata !DIExpression()), !dbg !1801\l  %8 = call i32 @getrlimit(i32 noundef 2, %struct.timespec* noundef %2) #24,\l... !dbg !1802\l  %9 = icmp eq i32 %8, 0, !dbg !1804\l  br i1 %9, label %10, label %18, !dbg !1805\l|{<s0>T|<s1>F}}"];
	Node0x250ba60:s0 -> Node0x250bb60;
	Node0x250ba60:s1 -> Node0x250bc00;
	Node0x250bb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%10:\l10:                                               \l  %11 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0,\l... i32 0, !dbg !1806\l  %12 = load i64, i64* %11, align 8, !dbg !1806, !tbaa !1807\l  %13 = load i64, i64* %1, align 8, !dbg !1809, !tbaa !1796\l  %14 = icmp ult i64 %12, %13, !dbg !1810\l  br i1 %14, label %15, label %18, !dbg !1811\l|{<s0>T|<s1>F}}"];
	Node0x250bb60:s0 -> Node0x250bbb0;
	Node0x250bb60:s1 -> Node0x250bc00;
	Node0x250bbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%15:\l15:                                               \l  %16 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0,\l... i32 0, !dbg !1812\l  %17 = load i64, i64* %16, align 8, !dbg !1812, !tbaa !1807\l  store i64 %17, i64* %1, align 8, !dbg !1813, !tbaa !1796\l  br label %18, !dbg !1814\l}"];
	Node0x250bbb0 -> Node0x250bc00;
	Node0x250bc00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%18:\l18:                                               \l  %19 = call i32 @getrlimit(i32 noundef 9, %struct.timespec* noundef %2) #24,\l... !dbg !1815\l  %20 = icmp eq i32 %19, 0, !dbg !1817\l  br i1 %20, label %21, label %29, !dbg !1818\l|{<s0>T|<s1>F}}"];
	Node0x250bc00:s0 -> Node0x250bc50;
	Node0x250bc00:s1 -> Node0x250bcf0;
	Node0x250bc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%21:\l21:                                               \l  %22 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0,\l... i32 0, !dbg !1819\l  %23 = load i64, i64* %22, align 8, !dbg !1819, !tbaa !1807\l  %24 = load i64, i64* %1, align 8, !dbg !1820, !tbaa !1796\l  %25 = icmp ult i64 %23, %24, !dbg !1821\l  br i1 %25, label %26, label %29, !dbg !1822\l|{<s0>T|<s1>F}}"];
	Node0x250bc50:s0 -> Node0x250bca0;
	Node0x250bc50:s1 -> Node0x250bcf0;
	Node0x250bca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%26:\l26:                                               \l  %27 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0,\l... i32 0, !dbg !1823\l  %28 = load i64, i64* %27, align 8, !dbg !1823, !tbaa !1807\l  store i64 %28, i64* %1, align 8, !dbg !1824, !tbaa !1796\l  br label %29, !dbg !1825\l}"];
	Node0x250bca0 -> Node0x250bcf0;
	Node0x250bcf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = load i64, i64* %1, align 8, !dbg !1826, !tbaa !1796\l  %31 = udiv i64 %30, 2, !dbg !1826\l  store i64 %31, i64* %1, align 8, !dbg !1826, !tbaa !1796\l  %32 = call i32 @getrlimit(i32 noundef 5, %struct.timespec* noundef %2) #24,\l... !dbg !1827\l  %33 = icmp eq i32 %32, 0, !dbg !1829\l  br i1 %33, label %34, label %46, !dbg !1830\l|{<s0>T|<s1>F}}"];
	Node0x250bcf0:s0 -> Node0x250bd40;
	Node0x250bcf0:s1 -> Node0x250bde0;
	Node0x250bd40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0,\l... i32 0, !dbg !1831\l  %36 = load i64, i64* %35, align 8, !dbg !1831, !tbaa !1807\l  %37 = udiv i64 %36, 16, !dbg !1832\l  %38 = mul i64 %37, 15, !dbg !1833\l  %39 = load i64, i64* %1, align 8, !dbg !1834, !tbaa !1796\l  %40 = icmp ult i64 %38, %39, !dbg !1835\l  br i1 %40, label %41, label %46, !dbg !1836\l|{<s0>T|<s1>F}}"];
	Node0x250bd40:s0 -> Node0x250bd90;
	Node0x250bd40:s1 -> Node0x250bde0;
	Node0x250bd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%41:\l41:                                               \l  %42 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0,\l... i32 0, !dbg !1837\l  %43 = load i64, i64* %42, align 8, !dbg !1837, !tbaa !1807\l  %44 = udiv i64 %43, 16, !dbg !1838\l  %45 = mul i64 %44, 15, !dbg !1839\l  store i64 %45, i64* %1, align 8, !dbg !1840, !tbaa !1796\l  br label %46, !dbg !1841\l}"];
	Node0x250bd90 -> Node0x250bde0;
	Node0x250bde0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = bitcast double* %3 to i8*, !dbg !1842\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #24, !dbg !1842\l  call void @llvm.dbg.declare(metadata double* %3, metadata !1791, metadata\l... !DIExpression()), !dbg !1843\l  %48 = call double @physmem_available(), !dbg !1844\l  store double %48, double* %3, align 8, !dbg !1843, !tbaa !1845\l  %49 = bitcast double* %4 to i8*, !dbg !1847\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #24, !dbg !1847\l  call void @llvm.dbg.declare(metadata double* %4, metadata !1792, metadata\l... !DIExpression()), !dbg !1848\l  %50 = call double @physmem_total(), !dbg !1849\l  store double %50, double* %4, align 8, !dbg !1848, !tbaa !1845\l  %51 = bitcast double* %5 to i8*, !dbg !1850\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #24, !dbg !1850\l  call void @llvm.dbg.declare(metadata double* %5, metadata !1793, metadata\l... !DIExpression()), !dbg !1851\l  %52 = load double, double* %3, align 8, !dbg !1852, !tbaa !1845\l  %53 = load double, double* %4, align 8, !dbg !1852, !tbaa !1845\l  %54 = fdiv double %53, 8.000000e+00, !dbg !1852\l  %55 = fcmp ogt double %52, %54, !dbg !1852\l  br i1 %55, label %56, label %58, !dbg !1852\l|{<s0>T|<s1>F}}"];
	Node0x250bde0:s0 -> Node0x250be30;
	Node0x250bde0:s1 -> Node0x250be80;
	Node0x250be30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%56:\l56:                                               \l  %57 = load double, double* %3, align 8, !dbg !1852, !tbaa !1845\l  br label %61, !dbg !1852\l}"];
	Node0x250be30 -> Node0x250bed0;
	Node0x250be80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%58:\l58:                                               \l  %59 = load double, double* %4, align 8, !dbg !1852, !tbaa !1845\l  %60 = fdiv double %59, 8.000000e+00, !dbg !1852\l  br label %61, !dbg !1852\l}"];
	Node0x250be80 -> Node0x250bed0;
	Node0x250bed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = phi double [ %57, %56 ], [ %60, %58 ], !dbg !1852\l  store double %62, double* %5, align 8, !dbg !1851, !tbaa !1845\l  %63 = load double, double* %4, align 8, !dbg !1853, !tbaa !1845\l  %64 = fmul double %63, 7.500000e-01, !dbg !1855\l  %65 = load i64, i64* %1, align 8, !dbg !1856, !tbaa !1796\l  %66 = uitofp i64 %65 to double, !dbg !1856\l  %67 = fcmp olt double %64, %66, !dbg !1857\l  br i1 %67, label %68, label %72, !dbg !1858\l|{<s0>T|<s1>F}}"];
	Node0x250bed0:s0 -> Node0x250bf20;
	Node0x250bed0:s1 -> Node0x250bf70;
	Node0x250bf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%68:\l68:                                               \l  %69 = load double, double* %4, align 8, !dbg !1859, !tbaa !1845\l  %70 = fmul double %69, 7.500000e-01, !dbg !1860\l  %71 = fptoui double %70 to i64, !dbg !1859\l  store i64 %71, i64* %1, align 8, !dbg !1861, !tbaa !1796\l  br label %72, !dbg !1862\l}"];
	Node0x250bf20 -> Node0x250bf70;
	Node0x250bf70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  %73 = load double, double* %5, align 8, !dbg !1863, !tbaa !1845\l  %74 = load i64, i64* %1, align 8, !dbg !1865, !tbaa !1796\l  %75 = uitofp i64 %74 to double, !dbg !1865\l  %76 = fcmp olt double %73, %75, !dbg !1866\l  br i1 %76, label %77, label %80, !dbg !1867\l|{<s0>T|<s1>F}}"];
	Node0x250bf70:s0 -> Node0x250bfc0;
	Node0x250bf70:s1 -> Node0x250c010;
	Node0x250bfc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%77:\l77:                                               \l  %78 = load double, double* %5, align 8, !dbg !1868, !tbaa !1845\l  %79 = fptoui double %78 to i64, !dbg !1868\l  store i64 %79, i64* %1, align 8, !dbg !1869, !tbaa !1796\l  br label %80, !dbg !1870\l}"];
	Node0x250bfc0 -> Node0x250c010;
	Node0x250c010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = load i64, i64* %1, align 8, !dbg !1871, !tbaa !1796\l  %82 = load i32, i32* @nmerge, align 4, !dbg !1871, !tbaa !1872\l  %83 = zext i32 %82 to i64, !dbg !1871\l  %84 = mul i64 %83, 34, !dbg !1871\l  %85 = icmp ugt i64 %81, %84, !dbg !1871\l  br i1 %85, label %86, label %88, !dbg !1871\l|{<s0>T|<s1>F}}"];
	Node0x250c010:s0 -> Node0x250c060;
	Node0x250c010:s1 -> Node0x250c0b0;
	Node0x250c060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%86:\l86:                                               \l  %87 = load i64, i64* %1, align 8, !dbg !1871, !tbaa !1796\l  br label %92, !dbg !1871\l}"];
	Node0x250c060 -> Node0x250c100;
	Node0x250c0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%88:\l88:                                               \l  %89 = load i32, i32* @nmerge, align 4, !dbg !1871, !tbaa !1872\l  %90 = zext i32 %89 to i64, !dbg !1871\l  %91 = mul i64 %90, 34, !dbg !1871\l  br label %92, !dbg !1871\l}"];
	Node0x250c0b0 -> Node0x250c100;
	Node0x250c100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%92:\l92:                                               \l  %93 = phi i64 [ %87, %86 ], [ %91, %88 ], !dbg !1871\l  %94 = bitcast double* %5 to i8*, !dbg !1874\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %94) #24, !dbg !1874\l  %95 = bitcast double* %4 to i8*, !dbg !1874\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %95) #24, !dbg !1874\l  %96 = bitcast double* %3 to i8*, !dbg !1874\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %96) #24, !dbg !1874\l  %97 = bitcast %struct.timespec* %2 to i8*, !dbg !1874\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* %97) #24, !dbg !1874\l  %98 = bitcast i64* %1 to i8*, !dbg !1874\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #24, !dbg !1874\l  ret i64 %93, !dbg !1875\l}"];
}
