digraph "CFG for 'hash_do_for_each' function" {
	label="CFG for 'hash_do_for_each' function";

	Node0x2646d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%3:\l  %4 = alloca i64, align 8\l  %5 = alloca %struct.hash_table*, align 8\l  %6 = alloca i1 (i8*, i8*)*, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca %struct.hash_entry*, align 8\l  %10 = alloca %struct.hash_entry*, align 8\l  %11 = alloca i32, align 4\l  store %struct.hash_table* %0, %struct.hash_table** %5, align 8, !tbaa !1825\l  call void @llvm.dbg.declare(metadata %struct.hash_table** %5, metadata\l... !1819, metadata !DIExpression()), !dbg !1829\l  store i1 (i8*, i8*)* %1, i1 (i8*, i8*)** %6, align 8, !tbaa !1825\l  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %6, metadata !1820,\l... metadata !DIExpression()), !dbg !1830\l  store i8* %2, i8** %7, align 8, !tbaa !1825\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !1821, metadata\l... !DIExpression()), !dbg !1831\l  %12 = bitcast i64* %8 to i8*, !dbg !1832\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #24, !dbg !1832\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1822, metadata\l... !DIExpression()), !dbg !1833\l  store i64 0, i64* %8, align 8, !dbg !1833, !tbaa !1834\l  %13 = bitcast %struct.hash_entry** %9 to i8*, !dbg !1836\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #24, !dbg !1836\l  call void @llvm.dbg.declare(metadata %struct.hash_entry** %9, metadata\l... !1823, metadata !DIExpression()), !dbg !1837\l  %14 = bitcast %struct.hash_entry** %10 to i8*, !dbg !1838\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #24, !dbg !1838\l  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata\l... !1824, metadata !DIExpression()), !dbg !1839\l  %15 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg\l... !1840, !tbaa !1825\l  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15,\l... i32 0, i32 0, !dbg !1842\l  %17 = load %struct.hash_entry*, %struct.hash_entry** %16, align 8, !dbg\l... !1842, !tbaa !1843\l  store %struct.hash_entry* %17, %struct.hash_entry** %9, align 8, !dbg !1845,\l... !tbaa !1825\l  br label %18, !dbg !1846\l}"];
	Node0x2646d80 -> Node0x264b300;
	Node0x264b300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%18:\l18:                                               \l  %19 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg\l... !1847, !tbaa !1825\l  %20 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg\l... !1849, !tbaa !1825\l  %21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20,\l... i32 0, i32 1, !dbg !1850\l  %22 = load %struct.hash_entry*, %struct.hash_entry** %21, align 8, !dbg\l... !1850, !tbaa !1851\l  %23 = icmp ult %struct.hash_entry* %19, %22, !dbg !1852\l  br i1 %23, label %24, label %55, !dbg !1853\l|{<s0>T|<s1>F}}"];
	Node0x264b300:s0 -> Node0x264b350;
	Node0x264b300:s1 -> Node0x264b670;
	Node0x264b350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%24:\l24:                                               \l  %25 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg\l... !1854, !tbaa !1825\l  %26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25,\l... i32 0, i32 0, !dbg !1857\l  %27 = load i8*, i8** %26, align 8, !dbg !1857, !tbaa !1858\l  %28 = icmp ne i8* %27, null, !dbg !1854\l  br i1 %28, label %29, label %51, !dbg !1860\l|{<s0>T|<s1>F}}"];
	Node0x264b350:s0 -> Node0x264b3a0;
	Node0x264b350:s1 -> Node0x264b5d0;
	Node0x264b3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%29:\l29:                                               \l  %30 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg\l... !1861, !tbaa !1825\l  store %struct.hash_entry* %30, %struct.hash_entry** %10, align 8, !dbg\l... !1864, !tbaa !1825\l  br label %31, !dbg !1865\l}"];
	Node0x264b3a0 -> Node0x264b3f0;
	Node0x264b3f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg\l... !1866, !tbaa !1825\l  %33 = icmp ne %struct.hash_entry* %32, null, !dbg !1868\l  br i1 %33, label %34, label %50, !dbg !1868\l|{<s0>T|<s1>F}}"];
	Node0x264b3f0:s0 -> Node0x264b440;
	Node0x264b3f0:s1 -> Node0x264b580;
	Node0x264b440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %6, align 8, !dbg !1869, !tbaa\l... !1825\l  %36 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg\l... !1872, !tbaa !1825\l  %37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36,\l... i32 0, i32 0, !dbg !1873\l  %38 = load i8*, i8** %37, align 8, !dbg !1873, !tbaa !1858\l  %39 = load i8*, i8** %7, align 8, !dbg !1874, !tbaa !1825\l  %40 = call zeroext i1 %35(i8* noundef %38, i8* noundef %39), !dbg !1869\l  br i1 %40, label %43, label %41, !dbg !1875\l|{<s0>T|<s1>F}}"];
	Node0x264b440:s0 -> Node0x264b4e0;
	Node0x264b440:s1 -> Node0x264b490;
	Node0x264b490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%41:\l41:                                               \l  %42 = load i64, i64* %8, align 8, !dbg !1876, !tbaa !1834\l  store i64 %42, i64* %4, align 8, !dbg !1877\l  store i32 1, i32* %11, align 4\l  br label %57, !dbg !1877\l}"];
	Node0x264b490 -> Node0x264b6c0;
	Node0x264b4e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%43:\l43:                                               \l  %44 = load i64, i64* %8, align 8, !dbg !1878, !tbaa !1834\l  %45 = add i64 %44, 1, !dbg !1878\l  store i64 %45, i64* %8, align 8, !dbg !1878, !tbaa !1834\l  br label %46, !dbg !1879\l}"];
	Node0x264b4e0 -> Node0x264b530;
	Node0x264b530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%46:\l46:                                               \l  %47 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg\l... !1880, !tbaa !1825\l  %48 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %47,\l... i32 0, i32 1, !dbg !1881\l  %49 = load %struct.hash_entry*, %struct.hash_entry** %48, align 8, !dbg\l... !1881, !tbaa !1882\l  store %struct.hash_entry* %49, %struct.hash_entry** %10, align 8, !dbg\l... !1883, !tbaa !1825\l  br label %31, !dbg !1884, !llvm.loop !1885\l}"];
	Node0x264b530 -> Node0x264b3f0;
	Node0x264b580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%50:\l50:                                               \l  br label %51, !dbg !1889\l}"];
	Node0x264b580 -> Node0x264b5d0;
	Node0x264b5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%51:\l51:                                               \l  br label %52, !dbg !1890\l}"];
	Node0x264b5d0 -> Node0x264b620;
	Node0x264b620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%52:\l52:                                               \l  %53 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg\l... !1891, !tbaa !1825\l  %54 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %53,\l... i32 1, !dbg !1891\l  store %struct.hash_entry* %54, %struct.hash_entry** %9, align 8, !dbg !1891,\l... !tbaa !1825\l  br label %18, !dbg !1892, !llvm.loop !1893\l}"];
	Node0x264b620 -> Node0x264b300;
	Node0x264b670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%55:\l55:                                               \l  %56 = load i64, i64* %8, align 8, !dbg !1895, !tbaa !1834\l  store i64 %56, i64* %4, align 8, !dbg !1896\l  store i32 1, i32* %11, align 4\l  br label %57, !dbg !1896\l}"];
	Node0x264b670 -> Node0x264b6c0;
	Node0x264b6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%57:\l57:                                               \l  %58 = bitcast %struct.hash_entry** %10 to i8*, !dbg !1897\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58) #24, !dbg !1897\l  %59 = bitcast %struct.hash_entry** %9 to i8*, !dbg !1897\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %59) #24, !dbg !1897\l  %60 = bitcast i64* %8 to i8*, !dbg !1897\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %60) #24, !dbg !1897\l  %61 = load i64, i64* %4, align 8, !dbg !1897\l  ret i64 %61, !dbg !1897\l}"];
}
