digraph "CFG for '_obstack_begin_worker' function" {
	label="CFG for '_obstack_begin_worker' function";

	Node0x290fe00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca %struct.obstack*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca %struct._obstack_chunk*, align 8\l  %8 = alloca i32, align 4\l  store %struct.obstack* %0, %struct.obstack** %4, align 8, !tbaa !1824\l  call void @llvm.dbg.declare(metadata %struct.obstack** %4, metadata !1817,\l... metadata !DIExpression()), !dbg !1828\l  store i64 %1, i64* %5, align 8, !tbaa !1829\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !1818, metadata\l... !DIExpression()), !dbg !1831\l  store i64 %2, i64* %6, align 8, !tbaa !1829\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1819, metadata\l... !DIExpression()), !dbg !1832\l  %9 = bitcast %struct._obstack_chunk** %7 to i8*, !dbg !1833\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #24, !dbg !1833\l  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %7, metadata\l... !1820, metadata !DIExpression()), !dbg !1834\l  %10 = load i64, i64* %6, align 8, !dbg !1835, !tbaa !1829\l  %11 = icmp eq i64 %10, 0, !dbg !1837\l  br i1 %11, label %12, label %13, !dbg !1838\l|{<s0>T|<s1>F}}"];
	Node0x290fe00:s0 -> Node0x2911fb0;
	Node0x290fe00:s1 -> Node0x2912000;
	Node0x2911fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%12:\l12:                                               \l  store i64 16, i64* %6, align 8, !dbg !1839, !tbaa !1829\l  br label %13, !dbg !1840\l}"];
	Node0x2911fb0 -> Node0x2912000;
	Node0x2912000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%13:\l13:                                               \l  %14 = load i64, i64* %5, align 8, !dbg !1841, !tbaa !1829\l  %15 = icmp eq i64 %14, 0, !dbg !1842\l  br i1 %15, label %16, label %22, !dbg !1843\l|{<s0>T|<s1>F}}"];
	Node0x2912000:s0 -> Node0x2912050;
	Node0x2912000:s1 -> Node0x29120a0;
	Node0x2912050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%16:\l16:                                               \l  %17 = bitcast i32* %8 to i8*, !dbg !1844\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #24, !dbg !1844\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !1821, metadata\l... !DIExpression()), !dbg !1845\l  store i32 32, i32* %8, align 4, !dbg !1845, !tbaa !1846\l  %18 = load i32, i32* %8, align 4, !dbg !1848, !tbaa !1846\l  %19 = sub nsw i32 4096, %18, !dbg !1849\l  %20 = sext i32 %19 to i64, !dbg !1850\l  store i64 %20, i64* %5, align 8, !dbg !1851, !tbaa !1829\l  %21 = bitcast i32* %8 to i8*, !dbg !1852\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %21) #24, !dbg !1852\l  br label %22, !dbg !1853\l}"];
	Node0x2912050 -> Node0x29120a0;
	Node0x29120a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = load i64, i64* %5, align 8, !dbg !1854, !tbaa !1829\l  %24 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1855,\l... !tbaa !1824\l  %25 = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0,\l... i32 0, !dbg !1856\l  store i64 %23, i64* %25, align 8, !dbg !1857, !tbaa !1858\l  %26 = load i64, i64* %6, align 8, !dbg !1860, !tbaa !1829\l  %27 = sub i64 %26, 1, !dbg !1861\l  %28 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1862,\l... !tbaa !1824\l  %29 = getelementptr inbounds %struct.obstack, %struct.obstack* %28, i32 0,\l... i32 6, !dbg !1863\l  store i64 %27, i64* %29, align 8, !dbg !1864, !tbaa !1865\l  %30 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1866,\l... !tbaa !1824\l  %31 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1867,\l... !tbaa !1824\l  %32 = getelementptr inbounds %struct.obstack, %struct.obstack* %31, i32 0,\l... i32 0, !dbg !1868\l  %33 = load i64, i64* %32, align 8, !dbg !1868, !tbaa !1858\l  %34 = call i8* @call_chunkfun(%struct.obstack* noundef %30, i64 noundef\l... %33), !dbg !1869\l  %35 = bitcast i8* %34 to %struct._obstack_chunk*, !dbg !1869\l  %36 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1870,\l... !tbaa !1824\l  %37 = getelementptr inbounds %struct.obstack, %struct.obstack* %36, i32 0,\l... i32 1, !dbg !1871\l  store %struct._obstack_chunk* %35, %struct._obstack_chunk** %37, align 8,\l... !dbg !1872, !tbaa !1873\l  store %struct._obstack_chunk* %35, %struct._obstack_chunk** %7, align 8,\l... !dbg !1874, !tbaa !1824\l  %38 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8,\l... !dbg !1875, !tbaa !1824\l  %39 = icmp ne %struct._obstack_chunk* %38, null, !dbg !1875\l  br i1 %39, label %42, label %40, !dbg !1877\l|{<s0>T|<s1>F}}"];
	Node0x29120a0:s0 -> Node0x2912140;
	Node0x29120a0:s1 -> Node0x29120f0;
	Node0x29120f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%40:\l40:                                               \l  %41 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg\l... !1878, !tbaa !1824\l  call void %41() #25, !dbg !1879\l  unreachable, !dbg !1879\l}"];
	Node0x2912140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8,\l... !dbg !1880, !tbaa !1824\l  %44 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %43, i32 0, i32 2, !dbg !1880\l  %45 = getelementptr inbounds [0 x i8], [0 x i8]* %44, i64 0, i64 0, !dbg\l... !1880\l  %46 = ptrtoint i8* %45 to i64, !dbg !1880\l  %47 = sub i64 %46, 0, !dbg !1880\l  %48 = load i64, i64* %6, align 8, !dbg !1880, !tbaa !1829\l  %49 = sub i64 %48, 1, !dbg !1880\l  %50 = add i64 %47, %49, !dbg !1880\l  %51 = load i64, i64* %6, align 8, !dbg !1880, !tbaa !1829\l  %52 = sub i64 %51, 1, !dbg !1880\l  %53 = xor i64 %52, -1, !dbg !1880\l  %54 = and i64 %50, %53, !dbg !1880\l  %55 = getelementptr inbounds i8, i8* null, i64 %54, !dbg !1880\l  %56 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1881,\l... !tbaa !1824\l  %57 = getelementptr inbounds %struct.obstack, %struct.obstack* %56, i32 0,\l... i32 2, !dbg !1882\l  store i8* %55, i8** %57, align 8, !dbg !1883, !tbaa !1884\l  %58 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1885,\l... !tbaa !1824\l  %59 = getelementptr inbounds %struct.obstack, %struct.obstack* %58, i32 0,\l... i32 3, !dbg !1886\l  store i8* %55, i8** %59, align 8, !dbg !1887, !tbaa !1888\l  %60 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8,\l... !dbg !1889, !tbaa !1824\l  %61 = bitcast %struct._obstack_chunk* %60 to i8*, !dbg !1890\l  %62 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1891,\l... !tbaa !1824\l  %63 = getelementptr inbounds %struct.obstack, %struct.obstack* %62, i32 0,\l... i32 0, !dbg !1892\l  %64 = load i64, i64* %63, align 8, !dbg !1892, !tbaa !1858\l  %65 = getelementptr inbounds i8, i8* %61, i64 %64, !dbg !1893\l  %66 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8,\l... !dbg !1894, !tbaa !1824\l  %67 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %66, i32 0, i32 0, !dbg !1895\l  store i8* %65, i8** %67, align 8, !dbg !1896, !tbaa !1824\l  %68 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1897,\l... !tbaa !1824\l  %69 = getelementptr inbounds %struct.obstack, %struct.obstack* %68, i32 0,\l... i32 4, !dbg !1898\l  store i8* %65, i8** %69, align 8, !dbg !1899, !tbaa !1900\l  %70 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8,\l... !dbg !1901, !tbaa !1824\l  %71 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %70, i32 0, i32 1, !dbg !1902\l  store %struct._obstack_chunk* null, %struct._obstack_chunk** %71, align 8,\l... !dbg !1903, !tbaa !1824\l  %72 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1904,\l... !tbaa !1824\l  %73 = getelementptr inbounds %struct.obstack, %struct.obstack* %72, i32 0,\l... i32 10, !dbg !1905\l  %74 = load i8, i8* %73, align 8, !dbg !1906\l  %75 = and i8 %74, -3, !dbg !1906\l  %76 = or i8 %75, 0, !dbg !1906\l  store i8 %76, i8* %73, align 8, !dbg !1906\l  %77 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !1907,\l... !tbaa !1824\l  %78 = getelementptr inbounds %struct.obstack, %struct.obstack* %77, i32 0,\l... i32 10, !dbg !1908\l  %79 = load i8, i8* %78, align 8, !dbg !1909\l  %80 = and i8 %79, -5, !dbg !1909\l  %81 = or i8 %80, 0, !dbg !1909\l  store i8 %81, i8* %78, align 8, !dbg !1909\l  %82 = bitcast %struct._obstack_chunk** %7 to i8*, !dbg !1910\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #24, !dbg !1910\l  ret i32 1, !dbg !1911\l}"];
}
