digraph "CFG for '_obstack_newchunk' function" {
	label="CFG for '_obstack_newchunk' function";

	Node0x2919040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca %struct.obstack*, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca %struct._obstack_chunk*, align 8\l  %6 = alloca %struct._obstack_chunk*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  store %struct.obstack* %0, %struct.obstack** %3, align 8, !tbaa !1826\l  call void @llvm.dbg.declare(metadata %struct.obstack** %3, metadata !1817,\l... metadata !DIExpression()), !dbg !1830\l  store i64 %1, i64* %4, align 8, !tbaa !1831\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !1818, metadata\l... !DIExpression()), !dbg !1833\l  %12 = bitcast %struct._obstack_chunk** %5 to i8*, !dbg !1834\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #24, !dbg !1834\l  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %5, metadata\l... !1819, metadata !DIExpression()), !dbg !1835\l  %13 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1836,\l... !tbaa !1826\l  %14 = getelementptr inbounds %struct.obstack, %struct.obstack* %13, i32 0,\l... i32 1, !dbg !1837\l  %15 = load %struct._obstack_chunk*, %struct._obstack_chunk** %14, align 8,\l... !dbg !1837, !tbaa !1838\l  store %struct._obstack_chunk* %15, %struct._obstack_chunk** %5, align 8,\l... !dbg !1835, !tbaa !1826\l  %16 = bitcast %struct._obstack_chunk** %6 to i8*, !dbg !1841\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #24, !dbg !1841\l  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %6, metadata\l... !1820, metadata !DIExpression()), !dbg !1842\l  store %struct._obstack_chunk* null, %struct._obstack_chunk** %6, align 8,\l... !dbg !1842, !tbaa !1826\l  %17 = bitcast i64* %7 to i8*, !dbg !1843\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #24, !dbg !1843\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1821, metadata\l... !DIExpression()), !dbg !1844\l  %18 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1845,\l... !tbaa !1826\l  %19 = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0,\l... i32 3, !dbg !1846\l  %20 = load i8*, i8** %19, align 8, !dbg !1846, !tbaa !1847\l  %21 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1848,\l... !tbaa !1826\l  %22 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0,\l... i32 2, !dbg !1849\l  %23 = load i8*, i8** %22, align 8, !dbg !1849, !tbaa !1850\l  %24 = ptrtoint i8* %20 to i64, !dbg !1851\l  %25 = ptrtoint i8* %23 to i64, !dbg !1851\l  %26 = sub i64 %24, %25, !dbg !1851\l  store i64 %26, i64* %7, align 8, !dbg !1844, !tbaa !1831\l  %27 = bitcast i8** %8 to i8*, !dbg !1852\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #24, !dbg !1852\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1822, metadata\l... !DIExpression()), !dbg !1853\l  %28 = bitcast i64* %9 to i8*, !dbg !1854\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #24, !dbg !1854\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1823, metadata\l... !DIExpression()), !dbg !1855\l  %29 = load i64, i64* %7, align 8, !dbg !1856, !tbaa !1831\l  %30 = load i64, i64* %4, align 8, !dbg !1857, !tbaa !1831\l  %31 = add i64 %29, %30, !dbg !1858\l  store i64 %31, i64* %9, align 8, !dbg !1855, !tbaa !1831\l  %32 = bitcast i64* %10 to i8*, !dbg !1859\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #24, !dbg !1859\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1824, metadata\l... !DIExpression()), !dbg !1860\l  %33 = load i64, i64* %9, align 8, !dbg !1861, !tbaa !1831\l  %34 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1862,\l... !tbaa !1826\l  %35 = getelementptr inbounds %struct.obstack, %struct.obstack* %34, i32 0,\l... i32 6, !dbg !1863\l  %36 = load i64, i64* %35, align 8, !dbg !1863, !tbaa !1864\l  %37 = add i64 %33, %36, !dbg !1865\l  store i64 %37, i64* %10, align 8, !dbg !1860, !tbaa !1831\l  %38 = bitcast i64* %11 to i8*, !dbg !1866\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #24, !dbg !1866\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1825, metadata\l... !DIExpression()), !dbg !1867\l  %39 = load i64, i64* %10, align 8, !dbg !1868, !tbaa !1831\l  %40 = load i64, i64* %7, align 8, !dbg !1869, !tbaa !1831\l  %41 = lshr i64 %40, 3, !dbg !1870\l  %42 = add i64 %39, %41, !dbg !1871\l  %43 = add i64 %42, 100, !dbg !1872\l  store i64 %43, i64* %11, align 8, !dbg !1867, !tbaa !1831\l  %44 = load i64, i64* %11, align 8, !dbg !1873, !tbaa !1831\l  %45 = load i64, i64* %10, align 8, !dbg !1875, !tbaa !1831\l  %46 = icmp ult i64 %44, %45, !dbg !1876\l  br i1 %46, label %47, label %49, !dbg !1877\l|{<s0>T|<s1>F}}"];
	Node0x2919040:s0 -> Node0x291b840;
	Node0x2919040:s1 -> Node0x291b890;
	Node0x291b840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%47:\l47:                                               \l  %48 = load i64, i64* %10, align 8, !dbg !1878, !tbaa !1831\l  store i64 %48, i64* %11, align 8, !dbg !1879, !tbaa !1831\l  br label %49, !dbg !1880\l}"];
	Node0x291b840 -> Node0x291b890;
	Node0x291b890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = load i64, i64* %11, align 8, !dbg !1881, !tbaa !1831\l  %51 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1883,\l... !tbaa !1826\l  %52 = getelementptr inbounds %struct.obstack, %struct.obstack* %51, i32 0,\l... i32 0, !dbg !1884\l  %53 = load i64, i64* %52, align 8, !dbg !1884, !tbaa !1885\l  %54 = icmp ult i64 %50, %53, !dbg !1886\l  br i1 %54, label %55, label %59, !dbg !1887\l|{<s0>T|<s1>F}}"];
	Node0x291b890:s0 -> Node0x291b8e0;
	Node0x291b890:s1 -> Node0x291b930;
	Node0x291b8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%55:\l55:                                               \l  %56 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1888,\l... !tbaa !1826\l  %57 = getelementptr inbounds %struct.obstack, %struct.obstack* %56, i32 0,\l... i32 0, !dbg !1889\l  %58 = load i64, i64* %57, align 8, !dbg !1889, !tbaa !1885\l  store i64 %58, i64* %11, align 8, !dbg !1890, !tbaa !1831\l  br label %59, !dbg !1891\l}"];
	Node0x291b8e0 -> Node0x291b930;
	Node0x291b930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = load i64, i64* %7, align 8, !dbg !1892, !tbaa !1831\l  %61 = load i64, i64* %9, align 8, !dbg !1894, !tbaa !1831\l  %62 = icmp ule i64 %60, %61, !dbg !1895\l  br i1 %62, label %63, label %72, !dbg !1896\l|{<s0>T|<s1>F}}"];
	Node0x291b930:s0 -> Node0x291b980;
	Node0x291b930:s1 -> Node0x291ba20;
	Node0x291b980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%63:\l63:                                               \l  %64 = load i64, i64* %9, align 8, !dbg !1897, !tbaa !1831\l  %65 = load i64, i64* %10, align 8, !dbg !1898, !tbaa !1831\l  %66 = icmp ule i64 %64, %65, !dbg !1899\l  br i1 %66, label %67, label %72, !dbg !1900\l|{<s0>T|<s1>F}}"];
	Node0x291b980:s0 -> Node0x291b9d0;
	Node0x291b980:s1 -> Node0x291ba20;
	Node0x291b9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%67:\l67:                                               \l  %68 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1901,\l... !tbaa !1826\l  %69 = load i64, i64* %11, align 8, !dbg !1902, !tbaa !1831\l  %70 = call i8* @call_chunkfun(%struct.obstack* noundef %68, i64 noundef\l... %69), !dbg !1903\l  %71 = bitcast i8* %70 to %struct._obstack_chunk*, !dbg !1903\l  store %struct._obstack_chunk* %71, %struct._obstack_chunk** %6, align 8,\l... !dbg !1904, !tbaa !1826\l  br label %72, !dbg !1905\l}"];
	Node0x291b9d0 -> Node0x291ba20;
	Node0x291ba20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  %73 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8,\l... !dbg !1906, !tbaa !1826\l  %74 = icmp ne %struct._obstack_chunk* %73, null, !dbg !1906\l  br i1 %74, label %77, label %75, !dbg !1908\l|{<s0>T|<s1>F}}"];
	Node0x291ba20:s0 -> Node0x291bac0;
	Node0x291ba20:s1 -> Node0x291ba70;
	Node0x291ba70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%75:\l75:                                               \l  %76 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg\l... !1909, !tbaa !1826\l  call void %76() #25, !dbg !1910\l  unreachable, !dbg !1910\l}"];
	Node0x291bac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8,\l... !dbg !1911, !tbaa !1826\l  %79 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1912,\l... !tbaa !1826\l  %80 = getelementptr inbounds %struct.obstack, %struct.obstack* %79, i32 0,\l... i32 1, !dbg !1913\l  store %struct._obstack_chunk* %78, %struct._obstack_chunk** %80, align 8,\l... !dbg !1914, !tbaa !1838\l  %81 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8,\l... !dbg !1915, !tbaa !1826\l  %82 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8,\l... !dbg !1916, !tbaa !1826\l  %83 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %82, i32 0, i32 1, !dbg !1917\l  store %struct._obstack_chunk* %81, %struct._obstack_chunk** %83, align 8,\l... !dbg !1918, !tbaa !1826\l  %84 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8,\l... !dbg !1919, !tbaa !1826\l  %85 = bitcast %struct._obstack_chunk* %84 to i8*, !dbg !1920\l  %86 = load i64, i64* %11, align 8, !dbg !1921, !tbaa !1831\l  %87 = getelementptr inbounds i8, i8* %85, i64 %86, !dbg !1922\l  %88 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1923,\l... !tbaa !1826\l  %89 = getelementptr inbounds %struct.obstack, %struct.obstack* %88, i32 0,\l... i32 4, !dbg !1924\l  store i8* %87, i8** %89, align 8, !dbg !1925, !tbaa !1926\l  %90 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8,\l... !dbg !1927, !tbaa !1826\l  %91 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %90, i32 0, i32 0, !dbg !1928\l  store i8* %87, i8** %91, align 8, !dbg !1929, !tbaa !1826\l  %92 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8,\l... !dbg !1930, !tbaa !1826\l  %93 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %92, i32 0, i32 2, !dbg !1930\l  %94 = getelementptr inbounds [0 x i8], [0 x i8]* %93, i64 0, i64 0, !dbg\l... !1930\l  %95 = ptrtoint i8* %94 to i64, !dbg !1930\l  %96 = sub i64 %95, 0, !dbg !1930\l  %97 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1930,\l... !tbaa !1826\l  %98 = getelementptr inbounds %struct.obstack, %struct.obstack* %97, i32 0,\l... i32 6, !dbg !1930\l  %99 = load i64, i64* %98, align 8, !dbg !1930, !tbaa !1864\l  %100 = add i64 %96, %99, !dbg !1930\l  %101 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1930,\l... !tbaa !1826\l  %102 = getelementptr inbounds %struct.obstack, %struct.obstack* %101, i32 0,\l... i32 6, !dbg !1930\l  %103 = load i64, i64* %102, align 8, !dbg !1930, !tbaa !1864\l  %104 = xor i64 %103, -1, !dbg !1930\l  %105 = and i64 %100, %104, !dbg !1930\l  %106 = getelementptr inbounds i8, i8* null, i64 %105, !dbg !1930\l  store i8* %106, i8** %8, align 8, !dbg !1931, !tbaa !1826\l  %107 = load i8*, i8** %8, align 8, !dbg !1932, !tbaa !1826\l  %108 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1933,\l... !tbaa !1826\l  %109 = getelementptr inbounds %struct.obstack, %struct.obstack* %108, i32 0,\l... i32 2, !dbg !1934\l  %110 = load i8*, i8** %109, align 8, !dbg !1934, !tbaa !1850\l  %111 = load i64, i64* %7, align 8, !dbg !1935, !tbaa !1831\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %107, i8* align 1 %110, i64\l... %111, i1 false), !dbg !1936\l  %112 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1937,\l... !tbaa !1826\l  %113 = getelementptr inbounds %struct.obstack, %struct.obstack* %112, i32 0,\l... i32 10, !dbg !1939\l  %114 = load i8, i8* %113, align 8, !dbg !1939\l  %115 = lshr i8 %114, 1, !dbg !1939\l  %116 = and i8 %115, 1, !dbg !1939\l  %117 = zext i8 %116 to i32, !dbg !1939\l  %118 = icmp ne i32 %117, 0, !dbg !1937\l  br i1 %118, label %148, label %119, !dbg !1940\l|{<s0>T|<s1>F}}"];
	Node0x291bac0:s0 -> Node0x291bbb0;
	Node0x291bac0:s1 -> Node0x291bb10;
	Node0x291bb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%119:\l119:                                              \l  %120 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1941,\l... !tbaa !1826\l  %121 = getelementptr inbounds %struct.obstack, %struct.obstack* %120, i32 0,\l... i32 2, !dbg !1942\l  %122 = load i8*, i8** %121, align 8, !dbg !1942, !tbaa !1850\l  %123 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8,\l... !dbg !1943, !tbaa !1826\l  %124 = getelementptr inbounds %struct._obstack_chunk,\l... %struct._obstack_chunk* %123, i32 0, i32 2, !dbg !1943\l  %125 = getelementptr inbounds [0 x i8], [0 x i8]* %124, i64 0, i64 0, !dbg\l... !1943\l  %126 = ptrtoint i8* %125 to i64, !dbg !1943\l  %127 = sub i64 %126, 0, !dbg !1943\l  %128 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1943,\l... !tbaa !1826\l  %129 = getelementptr inbounds %struct.obstack, %struct.obstack* %128, i32 0,\l... i32 6, !dbg !1943\l  %130 = load i64, i64* %129, align 8, !dbg !1943, !tbaa !1864\l  %131 = add i64 %127, %130, !dbg !1943\l  %132 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1943,\l... !tbaa !1826\l  %133 = getelementptr inbounds %struct.obstack, %struct.obstack* %132, i32 0,\l... i32 6, !dbg !1943\l  %134 = load i64, i64* %133, align 8, !dbg !1943, !tbaa !1864\l  %135 = xor i64 %134, -1, !dbg !1943\l  %136 = and i64 %131, %135, !dbg !1943\l  %137 = getelementptr inbounds i8, i8* null, i64 %136, !dbg !1943\l  %138 = icmp eq i8* %122, %137, !dbg !1944\l  br i1 %138, label %139, label %148, !dbg !1945\l|{<s0>T|<s1>F}}"];
	Node0x291bb10:s0 -> Node0x291bb60;
	Node0x291bb10:s1 -> Node0x291bbb0;
	Node0x291bb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%139:\l139:                                              \l  %140 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8,\l... !dbg !1946, !tbaa !1826\l  %141 = getelementptr inbounds %struct._obstack_chunk,\l... %struct._obstack_chunk* %140, i32 0, i32 1, !dbg !1948\l  %142 = load %struct._obstack_chunk*, %struct._obstack_chunk** %141, align 8,\l... !dbg !1948, !tbaa !1826\l  %143 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8,\l... !dbg !1949, !tbaa !1826\l  %144 = getelementptr inbounds %struct._obstack_chunk,\l... %struct._obstack_chunk* %143, i32 0, i32 1, !dbg !1950\l  store %struct._obstack_chunk* %142, %struct._obstack_chunk** %144, align 8,\l... !dbg !1951, !tbaa !1826\l  %145 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1952,\l... !tbaa !1826\l  %146 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8,\l... !dbg !1953, !tbaa !1826\l  %147 = bitcast %struct._obstack_chunk* %146 to i8*, !dbg !1953\l  call void @call_freefun(%struct.obstack* noundef %145, i8* noundef %147),\l... !dbg !1954\l  br label %148, !dbg !1955\l}"];
	Node0x291bb60 -> Node0x291bbb0;
	Node0x291bbb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%148:\l148:                                              \l  %149 = load i8*, i8** %8, align 8, !dbg !1956, !tbaa !1826\l  %150 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1957,\l... !tbaa !1826\l  %151 = getelementptr inbounds %struct.obstack, %struct.obstack* %150, i32 0,\l... i32 2, !dbg !1958\l  store i8* %149, i8** %151, align 8, !dbg !1959, !tbaa !1850\l  %152 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1960,\l... !tbaa !1826\l  %153 = getelementptr inbounds %struct.obstack, %struct.obstack* %152, i32 0,\l... i32 2, !dbg !1961\l  %154 = load i8*, i8** %153, align 8, !dbg !1961, !tbaa !1850\l  %155 = load i64, i64* %7, align 8, !dbg !1962, !tbaa !1831\l  %156 = getelementptr inbounds i8, i8* %154, i64 %155, !dbg !1963\l  %157 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1964,\l... !tbaa !1826\l  %158 = getelementptr inbounds %struct.obstack, %struct.obstack* %157, i32 0,\l... i32 3, !dbg !1965\l  store i8* %156, i8** %158, align 8, !dbg !1966, !tbaa !1847\l  %159 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1967,\l... !tbaa !1826\l  %160 = getelementptr inbounds %struct.obstack, %struct.obstack* %159, i32 0,\l... i32 10, !dbg !1968\l  %161 = load i8, i8* %160, align 8, !dbg !1969\l  %162 = and i8 %161, -3, !dbg !1969\l  %163 = or i8 %162, 0, !dbg !1969\l  store i8 %163, i8* %160, align 8, !dbg !1969\l  %164 = bitcast i64* %11 to i8*, !dbg !1970\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164) #24, !dbg !1970\l  %165 = bitcast i64* %10 to i8*, !dbg !1970\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #24, !dbg !1970\l  %166 = bitcast i64* %9 to i8*, !dbg !1970\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %166) #24, !dbg !1970\l  %167 = bitcast i8** %8 to i8*, !dbg !1970\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %167) #24, !dbg !1970\l  %168 = bitcast i64* %7 to i8*, !dbg !1970\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %168) #24, !dbg !1970\l  %169 = bitcast %struct._obstack_chunk** %6 to i8*, !dbg !1970\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %169) #24, !dbg !1970\l  %170 = bitcast %struct._obstack_chunk** %5 to i8*, !dbg !1970\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %170) #24, !dbg !1970\l  ret void, !dbg !1970\l}"];
}
