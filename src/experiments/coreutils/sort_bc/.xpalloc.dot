digraph "CFG for 'xpalloc' function" {
	label="CFG for 'xpalloc' function";

	Node0x286a5a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = alloca i8*, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  store i8* %0, i8** %6, align 8, !tbaa !1779\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1698, metadata\l... !DIExpression()), !dbg !1783\l  store i64* %1, i64** %7, align 8, !tbaa !1779\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !1699, metadata\l... !DIExpression()), !dbg !1784\l  store i64 %2, i64* %8, align 8, !tbaa !1785\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1700, metadata\l... !DIExpression()), !dbg !1787\l  store i64 %3, i64* %9, align 8, !tbaa !1785\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1701, metadata\l... !DIExpression()), !dbg !1788\l  store i64 %4, i64* %10, align 8, !tbaa !1785\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1702, metadata\l... !DIExpression()), !dbg !1789\l  %15 = bitcast i64* %11 to i8*, !dbg !1790\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #24, !dbg !1790\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1703, metadata\l... !DIExpression()), !dbg !1791\l  %16 = load i64*, i64** %7, align 8, !dbg !1792, !tbaa !1779\l  %17 = load i64, i64* %16, align 8, !dbg !1793, !tbaa !1785\l  store i64 %17, i64* %11, align 8, !dbg !1791, !tbaa !1785\l  %18 = bitcast i64* %12 to i8*, !dbg !1794\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #24, !dbg !1794\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1704, metadata\l... !DIExpression()), !dbg !1795\l  %19 = load i64, i64* %11, align 8, !dbg !1796, !tbaa !1785\l  %20 = load i64, i64* %11, align 8, !dbg !1796, !tbaa !1785\l  %21 = ashr i64 %20, 1, !dbg !1796\l  %22 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %19, i64 %21), !dbg\l... !1796\l  %23 = extractvalue \{ i64, i1 \} %22, 1, !dbg !1796\l  %24 = extractvalue \{ i64, i1 \} %22, 0, !dbg !1796\l  store i64 %24, i64* %12, align 8, !dbg !1796\l  br i1 %23, label %25, label %26, !dbg !1798\l|{<s0>T|<s1>F}}"];
	Node0x286a5a0:s0 -> Node0x286dee0;
	Node0x286a5a0:s1 -> Node0x286dfd0;
	Node0x286dee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%25:\l25:                                               \l  store i64 9223372036854775807, i64* %12, align 8, !dbg !1799, !tbaa !1785\l  br label %26, !dbg !1800\l}"];
	Node0x286dee0 -> Node0x286dfd0;
	Node0x286dfd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i64, i64* %9, align 8, !dbg !1801, !tbaa !1785\l  %28 = icmp sle i64 0, %27, !dbg !1803\l  br i1 %28, label %29, label %35, !dbg !1804\l|{<s0>T|<s1>F}}"];
	Node0x286dfd0:s0 -> Node0x286e020;
	Node0x286dfd0:s1 -> Node0x286e0c0;
	Node0x286e020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%29:\l29:                                               \l  %30 = load i64, i64* %9, align 8, !dbg !1805, !tbaa !1785\l  %31 = load i64, i64* %12, align 8, !dbg !1806, !tbaa !1785\l  %32 = icmp slt i64 %30, %31, !dbg !1807\l  br i1 %32, label %33, label %35, !dbg !1808\l|{<s0>T|<s1>F}}"];
	Node0x286e020:s0 -> Node0x286e070;
	Node0x286e020:s1 -> Node0x286e0c0;
	Node0x286e070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%33:\l33:                                               \l  %34 = load i64, i64* %9, align 8, !dbg !1809, !tbaa !1785\l  store i64 %34, i64* %12, align 8, !dbg !1810, !tbaa !1785\l  br label %35, !dbg !1811\l}"];
	Node0x286e070 -> Node0x286e0c0;
	Node0x286e0c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = bitcast i64* %13 to i8*, !dbg !1812\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #24, !dbg !1812\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !1705, metadata\l... !DIExpression()), !dbg !1813\l  %37 = bitcast i64* %14 to i8*, !dbg !1814\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #24, !dbg !1814\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !1706, metadata\l... !DIExpression()), !dbg !1815\l  %38 = load i64, i64* %12, align 8, !dbg !1816, !tbaa !1785\l  %39 = load i64, i64* %10, align 8, !dbg !1816, !tbaa !1785\l  %40 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %38, i64 %39), !dbg\l... !1816\l  %41 = extractvalue \{ i64, i1 \} %40, 1, !dbg !1816\l  %42 = extractvalue \{ i64, i1 \} %40, 0, !dbg !1816\l  store i64 %42, i64* %13, align 8, !dbg !1816\l  br i1 %41, label %43, label %44, !dbg !1816\l|{<s0>T|<s1>F}}"];
	Node0x286e0c0:s0 -> Node0x286e110;
	Node0x286e0c0:s1 -> Node0x286e160;
	Node0x286e110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%43:\l43:                                               \l  br label %50, !dbg !1816\l}"];
	Node0x286e110 -> Node0x286e1b0;
	Node0x286e160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%44:\l44:                                               \l  %45 = load i64, i64* %13, align 8, !dbg !1817, !tbaa !1785\l  %46 = icmp slt i64 %45, 128, !dbg !1818\l  %47 = zext i1 %46 to i64, !dbg !1817\l  %48 = select i1 %46, i32 128, i32 0, !dbg !1817\l  %49 = sext i32 %48 to i64, !dbg !1817\l  br label %50, !dbg !1816\l}"];
	Node0x286e160 -> Node0x286e1b0;
	Node0x286e1b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i64 [ 9223372036854775807, %43 ], [ %49, %44 ], !dbg !1816\l  store i64 %51, i64* %14, align 8, !dbg !1815, !tbaa !1785\l  %52 = load i64, i64* %14, align 8, !dbg !1819, !tbaa !1785\l  %53 = icmp ne i64 %52, 0, !dbg !1819\l  br i1 %53, label %54, label %63, !dbg !1821\l|{<s0>T|<s1>F}}"];
	Node0x286e1b0:s0 -> Node0x286e200;
	Node0x286e1b0:s1 -> Node0x286e250;
	Node0x286e200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%54:\l54:                                               \l  %55 = load i64, i64* %14, align 8, !dbg !1822, !tbaa !1785\l  %56 = load i64, i64* %10, align 8, !dbg !1824, !tbaa !1785\l  %57 = sdiv i64 %55, %56, !dbg !1825\l  store i64 %57, i64* %12, align 8, !dbg !1826, !tbaa !1785\l  %58 = load i64, i64* %14, align 8, !dbg !1827, !tbaa !1785\l  %59 = load i64, i64* %14, align 8, !dbg !1828, !tbaa !1785\l  %60 = load i64, i64* %10, align 8, !dbg !1829, !tbaa !1785\l  %61 = srem i64 %59, %60, !dbg !1830\l  %62 = sub nsw i64 %58, %61, !dbg !1831\l  store i64 %62, i64* %13, align 8, !dbg !1832, !tbaa !1785\l  br label %63, !dbg !1833\l}"];
	Node0x286e200 -> Node0x286e250;
	Node0x286e250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = load i8*, i8** %6, align 8, !dbg !1834, !tbaa !1779\l  %65 = icmp ne i8* %64, null, !dbg !1834\l  br i1 %65, label %68, label %66, !dbg !1836\l|{<s0>T|<s1>F}}"];
	Node0x286e250:s0 -> Node0x286e2f0;
	Node0x286e250:s1 -> Node0x286e2a0;
	Node0x286e2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%66:\l66:                                               \l  %67 = load i64*, i64** %7, align 8, !dbg !1837, !tbaa !1779\l  store i64 0, i64* %67, align 8, !dbg !1838, !tbaa !1785\l  br label %68, !dbg !1839\l}"];
	Node0x286e2a0 -> Node0x286e2f0;
	Node0x286e2f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = load i64, i64* %12, align 8, !dbg !1840, !tbaa !1785\l  %70 = load i64, i64* %11, align 8, !dbg !1842, !tbaa !1785\l  %71 = sub nsw i64 %69, %70, !dbg !1843\l  %72 = load i64, i64* %8, align 8, !dbg !1844, !tbaa !1785\l  %73 = icmp slt i64 %71, %72, !dbg !1845\l  br i1 %73, label %74, label %94, !dbg !1846\l|{<s0>T|<s1>F}}"];
	Node0x286e2f0:s0 -> Node0x286e340;
	Node0x286e2f0:s1 -> Node0x286e4d0;
	Node0x286e340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%74:\l74:                                               \l  %75 = load i64, i64* %11, align 8, !dbg !1847, !tbaa !1785\l  %76 = load i64, i64* %8, align 8, !dbg !1847, !tbaa !1785\l  %77 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %75, i64 %76), !dbg\l... !1847\l  %78 = extractvalue \{ i64, i1 \} %77, 1, !dbg !1847\l  %79 = extractvalue \{ i64, i1 \} %77, 0, !dbg !1847\l  store i64 %79, i64* %12, align 8, !dbg !1847\l  br i1 %78, label %93, label %80, !dbg !1848\l|{<s0>T|<s1>F}}"];
	Node0x286e340:s0 -> Node0x286e480;
	Node0x286e340:s1 -> Node0x286e390;
	Node0x286e390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%80:\l80:                                               \l  %81 = load i64, i64* %9, align 8, !dbg !1849, !tbaa !1785\l  %82 = icmp sle i64 0, %81, !dbg !1850\l  br i1 %82, label %83, label %87, !dbg !1851\l|{<s0>T|<s1>F}}"];
	Node0x286e390:s0 -> Node0x286e3e0;
	Node0x286e390:s1 -> Node0x286e430;
	Node0x286e3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%83:\l83:                                               \l  %84 = load i64, i64* %9, align 8, !dbg !1852, !tbaa !1785\l  %85 = load i64, i64* %12, align 8, !dbg !1853, !tbaa !1785\l  %86 = icmp slt i64 %84, %85, !dbg !1854\l  br i1 %86, label %93, label %87, !dbg !1855\l|{<s0>T|<s1>F}}"];
	Node0x286e3e0:s0 -> Node0x286e480;
	Node0x286e3e0:s1 -> Node0x286e430;
	Node0x286e430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%87:\l87:                                               \l  %88 = load i64, i64* %12, align 8, !dbg !1856, !tbaa !1785\l  %89 = load i64, i64* %10, align 8, !dbg !1856, !tbaa !1785\l  %90 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %88, i64 %89), !dbg\l... !1856\l  %91 = extractvalue \{ i64, i1 \} %90, 1, !dbg !1856\l  %92 = extractvalue \{ i64, i1 \} %90, 0, !dbg !1856\l  store i64 %92, i64* %13, align 8, !dbg !1856\l  br i1 %91, label %93, label %94, !dbg !1857\l|{<s0>T|<s1>F}}"];
	Node0x286e430:s0 -> Node0x286e480;
	Node0x286e430:s1 -> Node0x286e4d0;
	Node0x286e480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%93:\l93:                                               \l  call void @xalloc_die() #25, !dbg !1858\l  unreachable, !dbg !1858\l}"];
	Node0x286e4d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  %95 = load i8*, i8** %6, align 8, !dbg !1859, !tbaa !1779\l  %96 = load i64, i64* %13, align 8, !dbg !1860, !tbaa !1785\l  %97 = call i8* @xrealloc(i8* noundef %95, i64 noundef %96) #26, !dbg !1861\l  store i8* %97, i8** %6, align 8, !dbg !1862, !tbaa !1779\l  %98 = load i64, i64* %12, align 8, !dbg !1863, !tbaa !1785\l  %99 = load i64*, i64** %7, align 8, !dbg !1864, !tbaa !1779\l  store i64 %98, i64* %99, align 8, !dbg !1865, !tbaa !1785\l  %100 = load i8*, i8** %6, align 8, !dbg !1866, !tbaa !1779\l  %101 = bitcast i64* %14 to i8*, !dbg !1867\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #24, !dbg !1867\l  %102 = bitcast i64* %13 to i8*, !dbg !1867\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #24, !dbg !1867\l  %103 = bitcast i64* %12 to i8*, !dbg !1867\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #24, !dbg !1867\l  %104 = bitcast i64* %11 to i8*, !dbg !1867\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %104) #24, !dbg !1867\l  ret i8* %100, !dbg !1868\l}"];
}
