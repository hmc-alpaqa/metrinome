digraph "CFG for 'xpalloc' function" {
	label="CFG for 'xpalloc' function";

	Node0x9672b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = alloca i8*, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  store i8* %0, i8** %6, align 8, !tbaa !754\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !282, metadata\l... !DIExpression()), !dbg !758\l  store i64* %1, i64** %7, align 8, !tbaa !754\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !283, metadata\l... !DIExpression()), !dbg !759\l  store i64 %2, i64* %8, align 8, !tbaa !760\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !284, metadata\l... !DIExpression()), !dbg !762\l  store i64 %3, i64* %9, align 8, !tbaa !760\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !285, metadata\l... !DIExpression()), !dbg !763\l  store i64 %4, i64* %10, align 8, !tbaa !760\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !286, metadata\l... !DIExpression()), !dbg !764\l  %15 = bitcast i64* %11 to i8*, !dbg !765\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #21, !dbg !765\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !287, metadata\l... !DIExpression()), !dbg !766\l  %16 = load i64*, i64** %7, align 8, !dbg !767, !tbaa !754\l  %17 = load i64, i64* %16, align 8, !dbg !768, !tbaa !760\l  store i64 %17, i64* %11, align 8, !dbg !766, !tbaa !760\l  %18 = bitcast i64* %12 to i8*, !dbg !769\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #21, !dbg !769\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !288, metadata\l... !DIExpression()), !dbg !770\l  %19 = load i64, i64* %11, align 8, !dbg !771, !tbaa !760\l  %20 = load i64, i64* %11, align 8, !dbg !771, !tbaa !760\l  %21 = ashr i64 %20, 1, !dbg !771\l  %22 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %19, i64 %21), !dbg\l... !771\l  %23 = extractvalue \{ i64, i1 \} %22, 1, !dbg !771\l  %24 = extractvalue \{ i64, i1 \} %22, 0, !dbg !771\l  store i64 %24, i64* %12, align 8, !dbg !771\l  br i1 %23, label %25, label %26, !dbg !773\l|{<s0>T|<s1>F}}"];
	Node0x9672b0:s0 -> Node0xa80930;
	Node0x9672b0:s1 -> Node0xa80a20;
	Node0xa80930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%25:\l25:                                               \l  store i64 9223372036854775807, i64* %12, align 8, !dbg !774, !tbaa !760\l  br label %26, !dbg !775\l}"];
	Node0xa80930 -> Node0xa80a20;
	Node0xa80a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i64, i64* %9, align 8, !dbg !776, !tbaa !760\l  %28 = icmp sle i64 0, %27, !dbg !778\l  br i1 %28, label %29, label %35, !dbg !779\l|{<s0>T|<s1>F}}"];
	Node0xa80a20:s0 -> Node0xa80a70;
	Node0xa80a20:s1 -> Node0xa80b10;
	Node0xa80a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%29:\l29:                                               \l  %30 = load i64, i64* %9, align 8, !dbg !780, !tbaa !760\l  %31 = load i64, i64* %12, align 8, !dbg !781, !tbaa !760\l  %32 = icmp slt i64 %30, %31, !dbg !782\l  br i1 %32, label %33, label %35, !dbg !783\l|{<s0>T|<s1>F}}"];
	Node0xa80a70:s0 -> Node0xa80ac0;
	Node0xa80a70:s1 -> Node0xa80b10;
	Node0xa80ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%33:\l33:                                               \l  %34 = load i64, i64* %9, align 8, !dbg !784, !tbaa !760\l  store i64 %34, i64* %12, align 8, !dbg !785, !tbaa !760\l  br label %35, !dbg !786\l}"];
	Node0xa80ac0 -> Node0xa80b10;
	Node0xa80b10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = bitcast i64* %13 to i8*, !dbg !787\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #21, !dbg !787\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !289, metadata\l... !DIExpression()), !dbg !788\l  %37 = bitcast i64* %14 to i8*, !dbg !789\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #21, !dbg !789\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !290, metadata\l... !DIExpression()), !dbg !790\l  %38 = load i64, i64* %12, align 8, !dbg !791, !tbaa !760\l  %39 = load i64, i64* %10, align 8, !dbg !791, !tbaa !760\l  %40 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %38, i64 %39), !dbg\l... !791\l  %41 = extractvalue \{ i64, i1 \} %40, 1, !dbg !791\l  %42 = extractvalue \{ i64, i1 \} %40, 0, !dbg !791\l  store i64 %42, i64* %13, align 8, !dbg !791\l  br i1 %41, label %43, label %44, !dbg !791\l|{<s0>T|<s1>F}}"];
	Node0xa80b10:s0 -> Node0xa80b60;
	Node0xa80b10:s1 -> Node0xa80bb0;
	Node0xa80b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%43:\l43:                                               \l  br label %50, !dbg !791\l}"];
	Node0xa80b60 -> Node0xa80c00;
	Node0xa80bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%44:\l44:                                               \l  %45 = load i64, i64* %13, align 8, !dbg !792, !tbaa !760\l  %46 = icmp slt i64 %45, 128, !dbg !793\l  %47 = zext i1 %46 to i64, !dbg !792\l  %48 = select i1 %46, i32 128, i32 0, !dbg !792\l  %49 = sext i32 %48 to i64, !dbg !792\l  br label %50, !dbg !791\l}"];
	Node0xa80bb0 -> Node0xa80c00;
	Node0xa80c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i64 [ 9223372036854775807, %43 ], [ %49, %44 ], !dbg !791\l  store i64 %51, i64* %14, align 8, !dbg !790, !tbaa !760\l  %52 = load i64, i64* %14, align 8, !dbg !794, !tbaa !760\l  %53 = icmp ne i64 %52, 0, !dbg !794\l  br i1 %53, label %54, label %63, !dbg !796\l|{<s0>T|<s1>F}}"];
	Node0xa80c00:s0 -> Node0xa80c50;
	Node0xa80c00:s1 -> Node0xa80ca0;
	Node0xa80c50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%54:\l54:                                               \l  %55 = load i64, i64* %14, align 8, !dbg !797, !tbaa !760\l  %56 = load i64, i64* %10, align 8, !dbg !799, !tbaa !760\l  %57 = sdiv i64 %55, %56, !dbg !800\l  store i64 %57, i64* %12, align 8, !dbg !801, !tbaa !760\l  %58 = load i64, i64* %14, align 8, !dbg !802, !tbaa !760\l  %59 = load i64, i64* %14, align 8, !dbg !803, !tbaa !760\l  %60 = load i64, i64* %10, align 8, !dbg !804, !tbaa !760\l  %61 = srem i64 %59, %60, !dbg !805\l  %62 = sub nsw i64 %58, %61, !dbg !806\l  store i64 %62, i64* %13, align 8, !dbg !807, !tbaa !760\l  br label %63, !dbg !808\l}"];
	Node0xa80c50 -> Node0xa80ca0;
	Node0xa80ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = load i8*, i8** %6, align 8, !dbg !809, !tbaa !754\l  %65 = icmp ne i8* %64, null, !dbg !809\l  br i1 %65, label %68, label %66, !dbg !811\l|{<s0>T|<s1>F}}"];
	Node0xa80ca0:s0 -> Node0xa80d40;
	Node0xa80ca0:s1 -> Node0xa80cf0;
	Node0xa80cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%66:\l66:                                               \l  %67 = load i64*, i64** %7, align 8, !dbg !812, !tbaa !754\l  store i64 0, i64* %67, align 8, !dbg !813, !tbaa !760\l  br label %68, !dbg !814\l}"];
	Node0xa80cf0 -> Node0xa80d40;
	Node0xa80d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = load i64, i64* %12, align 8, !dbg !815, !tbaa !760\l  %70 = load i64, i64* %11, align 8, !dbg !817, !tbaa !760\l  %71 = sub nsw i64 %69, %70, !dbg !818\l  %72 = load i64, i64* %8, align 8, !dbg !819, !tbaa !760\l  %73 = icmp slt i64 %71, %72, !dbg !820\l  br i1 %73, label %74, label %94, !dbg !821\l|{<s0>T|<s1>F}}"];
	Node0xa80d40:s0 -> Node0xa80d90;
	Node0xa80d40:s1 -> Node0xa80f20;
	Node0xa80d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%74:\l74:                                               \l  %75 = load i64, i64* %11, align 8, !dbg !822, !tbaa !760\l  %76 = load i64, i64* %8, align 8, !dbg !822, !tbaa !760\l  %77 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %75, i64 %76), !dbg\l... !822\l  %78 = extractvalue \{ i64, i1 \} %77, 1, !dbg !822\l  %79 = extractvalue \{ i64, i1 \} %77, 0, !dbg !822\l  store i64 %79, i64* %12, align 8, !dbg !822\l  br i1 %78, label %93, label %80, !dbg !823\l|{<s0>T|<s1>F}}"];
	Node0xa80d90:s0 -> Node0xa80ed0;
	Node0xa80d90:s1 -> Node0xa80de0;
	Node0xa80de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%80:\l80:                                               \l  %81 = load i64, i64* %9, align 8, !dbg !824, !tbaa !760\l  %82 = icmp sle i64 0, %81, !dbg !825\l  br i1 %82, label %83, label %87, !dbg !826\l|{<s0>T|<s1>F}}"];
	Node0xa80de0:s0 -> Node0xa80e30;
	Node0xa80de0:s1 -> Node0xa80e80;
	Node0xa80e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%83:\l83:                                               \l  %84 = load i64, i64* %9, align 8, !dbg !827, !tbaa !760\l  %85 = load i64, i64* %12, align 8, !dbg !828, !tbaa !760\l  %86 = icmp slt i64 %84, %85, !dbg !829\l  br i1 %86, label %93, label %87, !dbg !830\l|{<s0>T|<s1>F}}"];
	Node0xa80e30:s0 -> Node0xa80ed0;
	Node0xa80e30:s1 -> Node0xa80e80;
	Node0xa80e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%87:\l87:                                               \l  %88 = load i64, i64* %12, align 8, !dbg !831, !tbaa !760\l  %89 = load i64, i64* %10, align 8, !dbg !831, !tbaa !760\l  %90 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %88, i64 %89), !dbg\l... !831\l  %91 = extractvalue \{ i64, i1 \} %90, 1, !dbg !831\l  %92 = extractvalue \{ i64, i1 \} %90, 0, !dbg !831\l  store i64 %92, i64* %13, align 8, !dbg !831\l  br i1 %91, label %93, label %94, !dbg !832\l|{<s0>T|<s1>F}}"];
	Node0xa80e80:s0 -> Node0xa80ed0;
	Node0xa80e80:s1 -> Node0xa80f20;
	Node0xa80ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%93:\l93:                                               \l  call void @xalloc_die() #22, !dbg !833\l  unreachable, !dbg !833\l}"];
	Node0xa80f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  %95 = load i8*, i8** %6, align 8, !dbg !834, !tbaa !754\l  %96 = load i64, i64* %13, align 8, !dbg !835, !tbaa !760\l  %97 = call i8* @xrealloc(i8* noundef %95, i64 noundef %96) #23, !dbg !836\l  store i8* %97, i8** %6, align 8, !dbg !837, !tbaa !754\l  %98 = load i64, i64* %12, align 8, !dbg !838, !tbaa !760\l  %99 = load i64*, i64** %7, align 8, !dbg !839, !tbaa !754\l  store i64 %98, i64* %99, align 8, !dbg !840, !tbaa !760\l  %100 = load i8*, i8** %6, align 8, !dbg !841, !tbaa !754\l  %101 = bitcast i64* %14 to i8*, !dbg !842\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #21, !dbg !842\l  %102 = bitcast i64* %13 to i8*, !dbg !842\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #21, !dbg !842\l  %103 = bitcast i64* %12 to i8*, !dbg !842\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #21, !dbg !842\l  %104 = bitcast i64* %11 to i8*, !dbg !842\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %104) #21, !dbg !842\l  ret i8* %100, !dbg !843\l}"];
}
