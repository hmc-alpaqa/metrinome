digraph "CFG for 'base64_encode_alloc' function" {
	label="CFG for 'base64_encode_alloc' function";

	Node0xe0ef40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca i64, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i8**, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i32, align 4\l  store i8* %0, i8** %5, align 8, !tbaa !800\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !795, metadata\l... !DIExpression()), !dbg !804\l  store i64 %1, i64* %6, align 8, !tbaa !805\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !796, metadata\l... !DIExpression()), !dbg !807\l  store i8** %2, i8*** %7, align 8, !tbaa !800\l  call void @llvm.dbg.declare(metadata i8*** %7, metadata !797, metadata\l... !DIExpression()), !dbg !808\l  %11 = bitcast i64* %8 to i8*, !dbg !809\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #22, !dbg !809\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !798, metadata\l... !DIExpression()), !dbg !810\l  %12 = load i64, i64* %6, align 8, !dbg !811, !tbaa !805\l  %13 = sdiv i64 %12, 3, !dbg !812\l  %14 = load i64, i64* %6, align 8, !dbg !813, !tbaa !805\l  %15 = srem i64 %14, 3, !dbg !814\l  %16 = icmp ne i64 %15, 0, !dbg !815\l  %17 = zext i1 %16 to i32, !dbg !815\l  %18 = sext i32 %17 to i64, !dbg !816\l  %19 = add nsw i64 %13, %18, !dbg !817\l  store i64 %19, i64* %8, align 8, !dbg !810, !tbaa !805\l  %20 = bitcast i64* %9 to i8*, !dbg !809\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #22, !dbg !809\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !799, metadata\l... !DIExpression()), !dbg !818\l  br i1 false, label %21, label %78, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0ef40:s0 -> Node0xe0f4b0;
	Node0xe0ef40:s1 -> Node0xe0fd20;
	Node0xe0f4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%21:\l21:                                               \l  br i1 false, label %22, label %52, !dbg !821\l|{<s0>T|<s1>F}}"];
	Node0xe0f4b0:s0 -> Node0xe0f500;
	Node0xe0f4b0:s1 -> Node0xe0f910;
	Node0xe0f500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%22:\l22:                                               \l  %23 = load i64, i64* %8, align 8, !dbg !819, !tbaa !805\l  %24 = icmp slt i64 %23, 0, !dbg !819\l  br i1 %24, label %25, label %33, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0f500:s0 -> Node0xe0f550;
	Node0xe0f500:s1 -> Node0xe0f640;
	Node0xe0f550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%25:\l25:                                               \l  br i1 true, label %26, label %29, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0f550:s0 -> Node0xe0f5a0;
	Node0xe0f550:s1 -> Node0xe0f5f0;
	Node0xe0f5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%26:\l26:                                               \l  %27 = load i64, i64* %8, align 8, !dbg !819, !tbaa !805\l  %28 = icmp slt i64 %27, 0, !dbg !819\l  br i1 %28, label %73, label %78, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0f5a0:s0 -> Node0xe0fcd0;
	Node0xe0f5a0:s1 -> Node0xe0fd20;
	Node0xe0f5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%29:\l29:                                               \l  %30 = load i64, i64* %8, align 8, !dbg !819, !tbaa !805\l  %31 = sub nsw i64 -1, %30, !dbg !819\l  %32 = icmp sle i64 0, %31, !dbg !819\l  br i1 %32, label %73, label %78, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0f5f0:s0 -> Node0xe0fcd0;
	Node0xe0f5f0:s1 -> Node0xe0fd20;
	Node0xe0f640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%33:\l33:                                               \l  br i1 true, label %34, label %35, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0f640:s0 -> Node0xe0f690;
	Node0xe0f640:s1 -> Node0xe0f6e0;
	Node0xe0f690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%34:\l34:                                               \l  br i1 false, label %36, label %49, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0f690:s0 -> Node0xe0f730;
	Node0xe0f690:s1 -> Node0xe0f8c0;
	Node0xe0f6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%35:\l35:                                               \l  br i1 false, label %36, label %49, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0f6e0:s0 -> Node0xe0f730;
	Node0xe0f6e0:s1 -> Node0xe0f8c0;
	Node0xe0f730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%36:\l36:                                               \l  br i1 false, label %37, label %49, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0f730:s0 -> Node0xe0f780;
	Node0xe0f730:s1 -> Node0xe0f8c0;
	Node0xe0f780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%37:\l37:                                               \l  br i1 true, label %38, label %42, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0f780:s0 -> Node0xe0f7d0;
	Node0xe0f780:s1 -> Node0xe0f820;
	Node0xe0f7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%38:\l38:                                               \l  %39 = load i64, i64* %8, align 8, !dbg !819, !tbaa !805\l  %40 = add nsw i64 %39, 0, !dbg !819\l  %41 = icmp slt i64 0, %40, !dbg !819\l  br i1 %41, label %73, label %78, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0f7d0:s0 -> Node0xe0fcd0;
	Node0xe0f7d0:s1 -> Node0xe0fd20;
	Node0xe0f820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%42:\l42:                                               \l  %43 = load i64, i64* %8, align 8, !dbg !819, !tbaa !805\l  %44 = icmp slt i64 0, %43, !dbg !819\l  br i1 %44, label %45, label %78, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0f820:s0 -> Node0xe0f870;
	Node0xe0f820:s1 -> Node0xe0fd20;
	Node0xe0f870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%45:\l45:                                               \l  %46 = load i64, i64* %8, align 8, !dbg !819, !tbaa !805\l  %47 = sub nsw i64 %46, 1, !dbg !819\l  %48 = icmp slt i64 -1, %47, !dbg !819\l  br i1 %48, label %73, label %78, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0f870:s0 -> Node0xe0fcd0;
	Node0xe0f870:s1 -> Node0xe0fd20;
	Node0xe0f8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%49:\l49:                                               \l  %50 = load i64, i64* %8, align 8, !dbg !819, !tbaa !805\l  %51 = icmp slt i64 0, %50, !dbg !819\l  br i1 %51, label %73, label %78, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0f8c0:s0 -> Node0xe0fcd0;
	Node0xe0f8c0:s1 -> Node0xe0fd20;
	Node0xe0f910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%52:\l52:                                               \l  br i1 false, label %53, label %54, !dbg !821\l|{<s0>T|<s1>F}}"];
	Node0xe0f910:s0 -> Node0xe0f960;
	Node0xe0f910:s1 -> Node0xe0f9b0;
	Node0xe0f960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%53:\l53:                                               \l  br i1 false, label %73, label %78, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0f960:s0 -> Node0xe0fcd0;
	Node0xe0f960:s1 -> Node0xe0fd20;
	Node0xe0f9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%54:\l54:                                               \l  %55 = load i64, i64* %8, align 8, !dbg !819, !tbaa !805\l  %56 = icmp slt i64 %55, 0, !dbg !819\l  br i1 %56, label %57, label %70, !dbg !821\l|{<s0>T|<s1>F}}"];
	Node0xe0f9b0:s0 -> Node0xe0fa00;
	Node0xe0f9b0:s1 -> Node0xe0fc80;
	Node0xe0fa00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%57:\l57:                                               \l  br i1 true, label %58, label %59, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0fa00:s0 -> Node0xe0fa50;
	Node0xe0fa00:s1 -> Node0xe0faa0;
	Node0xe0fa50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%58:\l58:                                               \l  br i1 false, label %60, label %66, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0fa50:s0 -> Node0xe0faf0;
	Node0xe0fa50:s1 -> Node0xe0fc30;
	Node0xe0faa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%59:\l59:                                               \l  br i1 false, label %60, label %66, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0faa0:s0 -> Node0xe0faf0;
	Node0xe0faa0:s1 -> Node0xe0fc30;
	Node0xe0faf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%60:\l60:                                               \l  %61 = load i64, i64* %8, align 8, !dbg !819, !tbaa !805\l  %62 = icmp eq i64 %61, -1, !dbg !819\l  br i1 %62, label %63, label %66, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0faf0:s0 -> Node0xe0fb40;
	Node0xe0faf0:s1 -> Node0xe0fc30;
	Node0xe0fb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%63:\l63:                                               \l  br i1 true, label %64, label %65, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0fb40:s0 -> Node0xe0fb90;
	Node0xe0fb40:s1 -> Node0xe0fbe0;
	Node0xe0fb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%64:\l64:                                               \l  br i1 true, label %73, label %78, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0fb90:s0 -> Node0xe0fcd0;
	Node0xe0fb90:s1 -> Node0xe0fd20;
	Node0xe0fbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%65:\l65:                                               \l  br i1 true, label %73, label %78, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0fbe0:s0 -> Node0xe0fcd0;
	Node0xe0fbe0:s1 -> Node0xe0fd20;
	Node0xe0fc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%66:\l66:                                               \l  %67 = load i64, i64* %8, align 8, !dbg !819, !tbaa !805\l  %68 = sdiv i64 0, %67, !dbg !819\l  %69 = icmp slt i64 %68, 4, !dbg !819\l  br i1 %69, label %73, label %78, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0fc30:s0 -> Node0xe0fcd0;
	Node0xe0fc30:s1 -> Node0xe0fd20;
	Node0xe0fc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%70:\l70:                                               \l  %71 = load i64, i64* %8, align 8, !dbg !819, !tbaa !805\l  %72 = icmp slt i64 0, %71, !dbg !819\l  br i1 %72, label %73, label %78, !dbg !821\l|{<s0>T|<s1>F}}"];
	Node0xe0fc80:s0 -> Node0xe0fcd0;
	Node0xe0fc80:s1 -> Node0xe0fd20;
	Node0xe0fcd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%73:\l73:                                               \l  %74 = load i64, i64* %8, align 8, !dbg !819, !tbaa !805\l  %75 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %74, i64 4), !dbg\l... !819\l  %76 = extractvalue \{ i64, i1 \} %75, 1, !dbg !819\l  %77 = extractvalue \{ i64, i1 \} %75, 0, !dbg !819\l  store i64 %77, i64* %9, align 8, !dbg !819\l  br i1 true, label %86, label %83, !dbg !819\l|{<s0>T|<s1>F}}"];
	Node0xe0fcd0:s0 -> Node0xe0fdc0;
	Node0xe0fcd0:s1 -> Node0xe0fd70;
	Node0xe0fd20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%78:\l78:                                               \l  %79 = load i64, i64* %8, align 8, !dbg !819, !tbaa !805\l  %80 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %79, i64 4), !dbg\l... !819\l  %81 = extractvalue \{ i64, i1 \} %80, 1, !dbg !819\l  %82 = extractvalue \{ i64, i1 \} %80, 0, !dbg !819\l  store i64 %82, i64* %9, align 8, !dbg !819\l  br i1 %81, label %86, label %83, !dbg !821\l|{<s0>T|<s1>F}}"];
	Node0xe0fd20:s0 -> Node0xe0fdc0;
	Node0xe0fd20:s1 -> Node0xe0fd70;
	Node0xe0fd70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%83:\l83:                                               \l  %84 = load i64, i64* %6, align 8, !dbg !822, !tbaa !805\l  %85 = icmp slt i64 %84, 0, !dbg !823\l  br i1 %85, label %86, label %88, !dbg !824\l|{<s0>T|<s1>F}}"];
	Node0xe0fd70:s0 -> Node0xe0fdc0;
	Node0xe0fd70:s1 -> Node0xe0fe10;
	Node0xe0fdc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%86:\l86:                                               \l  %87 = load i8**, i8*** %7, align 8, !dbg !825, !tbaa !800\l  store i8* null, i8** %87, align 8, !dbg !827, !tbaa !800\l  store i64 0, i64* %4, align 8, !dbg !828\l  store i32 1, i32* %10, align 4\l  br label %107, !dbg !828\l}"];
	Node0xe0fdc0 -> Node0xe0ff00;
	Node0xe0fe10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%88:\l88:                                               \l  %89 = load i64, i64* %9, align 8, !dbg !829, !tbaa !805\l  %90 = add nsw i64 %89, 1, !dbg !829\l  store i64 %90, i64* %9, align 8, !dbg !829, !tbaa !805\l  %91 = load i64, i64* %9, align 8, !dbg !830, !tbaa !805\l  %92 = call noalias i8* @imalloc(i64 noundef %91), !dbg !831\l  %93 = load i8**, i8*** %7, align 8, !dbg !832, !tbaa !800\l  store i8* %92, i8** %93, align 8, !dbg !833, !tbaa !800\l  %94 = load i8**, i8*** %7, align 8, !dbg !834, !tbaa !800\l  %95 = load i8*, i8** %94, align 8, !dbg !836, !tbaa !800\l  %96 = icmp ne i8* %95, null, !dbg !836\l  br i1 %96, label %99, label %97, !dbg !837\l|{<s0>T|<s1>F}}"];
	Node0xe0fe10:s0 -> Node0xe0feb0;
	Node0xe0fe10:s1 -> Node0xe0fe60;
	Node0xe0fe60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%97:\l97:                                               \l  %98 = load i64, i64* %9, align 8, !dbg !838, !tbaa !805\l  store i64 %98, i64* %4, align 8, !dbg !839\l  store i32 1, i32* %10, align 4\l  br label %107, !dbg !839\l}"];
	Node0xe0fe60 -> Node0xe0ff00;
	Node0xe0feb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%99:\l99:                                               \l  %100 = load i8*, i8** %5, align 8, !dbg !840, !tbaa !800\l  %101 = load i64, i64* %6, align 8, !dbg !841, !tbaa !805\l  %102 = load i8**, i8*** %7, align 8, !dbg !842, !tbaa !800\l  %103 = load i8*, i8** %102, align 8, !dbg !843, !tbaa !800\l  %104 = load i64, i64* %9, align 8, !dbg !844, !tbaa !805\l  call void @base64_encode(i8* noundef %100, i64 noundef %101, i8* noundef\l... %103, i64 noundef %104), !dbg !845\l  %105 = load i64, i64* %9, align 8, !dbg !846, !tbaa !805\l  %106 = sub nsw i64 %105, 1, !dbg !847\l  store i64 %106, i64* %4, align 8, !dbg !848\l  store i32 1, i32* %10, align 4\l  br label %107, !dbg !848\l}"];
	Node0xe0feb0 -> Node0xe0ff00;
	Node0xe0ff00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  %108 = bitcast i64* %9 to i8*, !dbg !849\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %108) #22, !dbg !849\l  %109 = bitcast i64* %8 to i8*, !dbg !849\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %109) #22, !dbg !849\l  %110 = load i64, i64* %4, align 8, !dbg !849\l  ret i64 %110, !dbg !849\l}"];
}
