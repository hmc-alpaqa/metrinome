digraph "CFG for 'base16_encode' function" {
	label="CFG for 'base16_encode' function";

	Node0xdaaea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%4:\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i8, align 1\l  store i8* %0, i8** %5, align 8, !tbaa !798\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !792, metadata\l... !DIExpression()), !dbg !802\l  store i64 %1, i64* %6, align 8, !tbaa !803\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !793, metadata\l... !DIExpression()), !dbg !805\l  store i8* %2, i8** %7, align 8, !tbaa !798\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !794, metadata\l... !DIExpression()), !dbg !806\l  store i64 %3, i64* %8, align 8, !tbaa !803\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !795, metadata\l... !DIExpression()), !dbg !807\l  br label %10, !dbg !808\l}"];
	Node0xdaaea0 -> Node0xdaaf20;
	Node0xdaaf20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l10:                                               \l  %11 = load i64, i64* %6, align 8, !dbg !809, !tbaa !803\l  %12 = add nsw i64 %11, -1, !dbg !809\l  store i64 %12, i64* %6, align 8, !dbg !809, !tbaa !803\l  %13 = icmp ne i64 %11, 0, !dbg !808\l  br i1 %13, label %14, label %35, !dbg !808\l|{<s0>T|<s1>F}}"];
	Node0xdaaf20:s0 -> Node0xdaaf70;
	Node0xdaaf20:s1 -> Node0xdaafc0;
	Node0xdaaf70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%14:\l14:                                               \l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %9) #22, !dbg !810\l  call void @llvm.dbg.declare(metadata i8* %9, metadata !796, metadata\l... !DIExpression()), !dbg !811\l  %15 = load i8*, i8** %5, align 8, !dbg !812, !tbaa !798\l  %16 = load i8, i8* %15, align 1, !dbg !813, !tbaa !814\l  store i8 %16, i8* %9, align 1, !dbg !811, !tbaa !814\l  %17 = load i8, i8* %9, align 1, !dbg !815, !tbaa !814\l  %18 = zext i8 %17 to i32, !dbg !815\l  %19 = ashr i32 %18, 4, !dbg !816\l  %20 = sext i32 %19 to i64, !dbg !817\l  %21 = getelementptr inbounds [16 x i8], [16 x i8]* @base16, i64 0, i64 %20,\l... !dbg !817\l  %22 = load i8, i8* %21, align 1, !dbg !817, !tbaa !814\l  %23 = load i8*, i8** %7, align 8, !dbg !818, !tbaa !798\l  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !818\l  store i8* %24, i8** %7, align 8, !dbg !818, !tbaa !798\l  store i8 %22, i8* %23, align 1, !dbg !819, !tbaa !814\l  %25 = load i8, i8* %9, align 1, !dbg !820, !tbaa !814\l  %26 = zext i8 %25 to i32, !dbg !820\l  %27 = and i32 %26, 15, !dbg !821\l  %28 = sext i32 %27 to i64, !dbg !822\l  %29 = getelementptr inbounds [16 x i8], [16 x i8]* @base16, i64 0, i64 %28,\l... !dbg !822\l  %30 = load i8, i8* %29, align 1, !dbg !822, !tbaa !814\l  %31 = load i8*, i8** %7, align 8, !dbg !823, !tbaa !798\l  %32 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !823\l  store i8* %32, i8** %7, align 8, !dbg !823, !tbaa !798\l  store i8 %30, i8* %31, align 1, !dbg !824, !tbaa !814\l  %33 = load i8*, i8** %5, align 8, !dbg !825, !tbaa !798\l  %34 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !825\l  store i8* %34, i8** %5, align 8, !dbg !825, !tbaa !798\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #22, !dbg !826\l  br label %10, !dbg !808, !llvm.loop !827\l}"];
	Node0xdaaf70 -> Node0xdaaf20;
	Node0xdaafc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%35:\l35:                                               \l  ret void, !dbg !830\l}"];
}
