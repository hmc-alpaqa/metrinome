digraph "CFG for 'base64_encode_fast' function" {
	label="CFG for 'base64_encode_fast' function";

	Node0xe7fe10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i8*, align 8\l  store i8* %0, i8** %4, align 8, !tbaa !797\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !794, metadata\l... !DIExpression()), !dbg !801\l  store i64 %1, i64* %5, align 8, !tbaa !802\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !795, metadata\l... !DIExpression()), !dbg !804\l  store i8* %2, i8** %6, align 8, !tbaa !797\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !796, metadata\l... !DIExpression()), !dbg !805\l  br label %7, !dbg !806\l}"];
	Node0xe7fe10 -> Node0xe0af60;
	Node0xe0af60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l7:                                                \l  %8 = load i64, i64* %5, align 8, !dbg !807, !tbaa !802\l  %9 = icmp ne i64 %8, 0, !dbg !806\l  br i1 %9, label %10, label %76, !dbg !806\l|{<s0>T|<s1>F}}"];
	Node0xe0af60:s0 -> Node0xe0afb0;
	Node0xe0af60:s1 -> Node0xe0b000;
	Node0xe0afb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%10:\l10:                                               \l  %11 = load i8*, i8** %4, align 8, !dbg !808, !tbaa !797\l  %12 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !808\l  %13 = load i8, i8* %12, align 1, !dbg !808, !tbaa !810\l  %14 = call zeroext i8 @to_uchar.79(i8 noundef signext %13), !dbg !811\l  %15 = zext i8 %14 to i32, !dbg !811\l  %16 = ashr i32 %15, 2, !dbg !812\l  %17 = and i32 %16, 63, !dbg !813\l  %18 = sext i32 %17 to i64, !dbg !814\l  %19 = getelementptr inbounds [64 x i8], [64 x i8]* @b64c, i64 0, i64 %18,\l... !dbg !814\l  %20 = load i8, i8* %19, align 1, !dbg !814, !tbaa !810\l  %21 = load i8*, i8** %6, align 8, !dbg !815, !tbaa !797\l  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !815\l  store i8* %22, i8** %6, align 8, !dbg !815, !tbaa !797\l  store i8 %20, i8* %21, align 1, !dbg !816, !tbaa !810\l  %23 = load i8*, i8** %4, align 8, !dbg !817, !tbaa !797\l  %24 = getelementptr inbounds i8, i8* %23, i64 0, !dbg !817\l  %25 = load i8, i8* %24, align 1, !dbg !817, !tbaa !810\l  %26 = call zeroext i8 @to_uchar.79(i8 noundef signext %25), !dbg !818\l  %27 = zext i8 %26 to i32, !dbg !818\l  %28 = shl i32 %27, 4, !dbg !819\l  %29 = load i8*, i8** %4, align 8, !dbg !820, !tbaa !797\l  %30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !820\l  %31 = load i8, i8* %30, align 1, !dbg !820, !tbaa !810\l  %32 = call zeroext i8 @to_uchar.79(i8 noundef signext %31), !dbg !821\l  %33 = zext i8 %32 to i32, !dbg !821\l  %34 = ashr i32 %33, 4, !dbg !822\l  %35 = add nsw i32 %28, %34, !dbg !823\l  %36 = and i32 %35, 63, !dbg !824\l  %37 = sext i32 %36 to i64, !dbg !825\l  %38 = getelementptr inbounds [64 x i8], [64 x i8]* @b64c, i64 0, i64 %37,\l... !dbg !825\l  %39 = load i8, i8* %38, align 1, !dbg !825, !tbaa !810\l  %40 = load i8*, i8** %6, align 8, !dbg !826, !tbaa !797\l  %41 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !826\l  store i8* %41, i8** %6, align 8, !dbg !826, !tbaa !797\l  store i8 %39, i8* %40, align 1, !dbg !827, !tbaa !810\l  %42 = load i8*, i8** %4, align 8, !dbg !828, !tbaa !797\l  %43 = getelementptr inbounds i8, i8* %42, i64 1, !dbg !828\l  %44 = load i8, i8* %43, align 1, !dbg !828, !tbaa !810\l  %45 = call zeroext i8 @to_uchar.79(i8 noundef signext %44), !dbg !829\l  %46 = zext i8 %45 to i32, !dbg !829\l  %47 = shl i32 %46, 2, !dbg !830\l  %48 = load i8*, i8** %4, align 8, !dbg !831, !tbaa !797\l  %49 = getelementptr inbounds i8, i8* %48, i64 2, !dbg !831\l  %50 = load i8, i8* %49, align 1, !dbg !831, !tbaa !810\l  %51 = call zeroext i8 @to_uchar.79(i8 noundef signext %50), !dbg !832\l  %52 = zext i8 %51 to i32, !dbg !832\l  %53 = ashr i32 %52, 6, !dbg !833\l  %54 = add nsw i32 %47, %53, !dbg !834\l  %55 = and i32 %54, 63, !dbg !835\l  %56 = sext i32 %55 to i64, !dbg !836\l  %57 = getelementptr inbounds [64 x i8], [64 x i8]* @b64c, i64 0, i64 %56,\l... !dbg !836\l  %58 = load i8, i8* %57, align 1, !dbg !836, !tbaa !810\l  %59 = load i8*, i8** %6, align 8, !dbg !837, !tbaa !797\l  %60 = getelementptr inbounds i8, i8* %59, i32 1, !dbg !837\l  store i8* %60, i8** %6, align 8, !dbg !837, !tbaa !797\l  store i8 %58, i8* %59, align 1, !dbg !838, !tbaa !810\l  %61 = load i8*, i8** %4, align 8, !dbg !839, !tbaa !797\l  %62 = getelementptr inbounds i8, i8* %61, i64 2, !dbg !839\l  %63 = load i8, i8* %62, align 1, !dbg !839, !tbaa !810\l  %64 = call zeroext i8 @to_uchar.79(i8 noundef signext %63), !dbg !840\l  %65 = zext i8 %64 to i32, !dbg !840\l  %66 = and i32 %65, 63, !dbg !841\l  %67 = sext i32 %66 to i64, !dbg !842\l  %68 = getelementptr inbounds [64 x i8], [64 x i8]* @b64c, i64 0, i64 %67,\l... !dbg !842\l  %69 = load i8, i8* %68, align 1, !dbg !842, !tbaa !810\l  %70 = load i8*, i8** %6, align 8, !dbg !843, !tbaa !797\l  %71 = getelementptr inbounds i8, i8* %70, i32 1, !dbg !843\l  store i8* %71, i8** %6, align 8, !dbg !843, !tbaa !797\l  store i8 %69, i8* %70, align 1, !dbg !844, !tbaa !810\l  %72 = load i64, i64* %5, align 8, !dbg !845, !tbaa !802\l  %73 = sub nsw i64 %72, 3, !dbg !845\l  store i64 %73, i64* %5, align 8, !dbg !845, !tbaa !802\l  %74 = load i8*, i8** %4, align 8, !dbg !846, !tbaa !797\l  %75 = getelementptr inbounds i8, i8* %74, i64 3, !dbg !846\l  store i8* %75, i8** %4, align 8, !dbg !846, !tbaa !797\l  br label %7, !dbg !806, !llvm.loop !847\l}"];
	Node0xe0afb0 -> Node0xe0af60;
	Node0xe0b000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%76:\l76:                                               \l  ret void, !dbg !851\l}"];
}
