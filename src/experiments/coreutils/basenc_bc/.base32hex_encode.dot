digraph "CFG for 'base32hex_encode' function" {
	label="CFG for 'base32hex_encode' function";

	Node0xdc0f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%4:\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i8*, align 8\l  store i8* %0, i8** %5, align 8, !tbaa !798\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !792, metadata\l... !DIExpression()), !dbg !802\l  store i64 %1, i64* %6, align 8, !tbaa !803\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !793, metadata\l... !DIExpression()), !dbg !805\l  store i8* %2, i8** %7, align 8, !tbaa !798\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !794, metadata\l... !DIExpression()), !dbg !806\l  store i64 %3, i64* %8, align 8, !tbaa !803\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !795, metadata\l... !DIExpression()), !dbg !807\l  %10 = load i8*, i8** %5, align 8, !dbg !808, !tbaa !798\l  %11 = load i64, i64* %6, align 8, !dbg !809, !tbaa !803\l  %12 = load i8*, i8** %7, align 8, !dbg !810, !tbaa !798\l  %13 = load i64, i64* %8, align 8, !dbg !811, !tbaa !803\l  call void @base32_encode(i8* noundef %10, i64 noundef %11, i8* noundef %12,\l... i64 noundef %13), !dbg !812\l  %14 = bitcast i8** %9 to i8*, !dbg !813\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #22, !dbg !813\l  call void @llvm.dbg.declare(metadata i8** %9, metadata !796, metadata\l... !DIExpression()), !dbg !814\l  %15 = load i8*, i8** %7, align 8, !dbg !815, !tbaa !798\l  store i8* %15, i8** %9, align 8, !dbg !814, !tbaa !798\l  br label %16, !dbg !813\l}"];
	Node0xdc0f20 -> Node0xdc0fd0;
	Node0xdc0fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  %17 = load i64, i64* %8, align 8, !dbg !816, !tbaa !803\l  %18 = add nsw i64 %17, -1, !dbg !816\l  store i64 %18, i64* %8, align 8, !dbg !816, !tbaa !803\l  %19 = icmp ne i64 %17, 0, !dbg !818\l  br i1 %19, label %22, label %20, !dbg !818\l|{<s0>T|<s1>F}}"];
	Node0xdc0fd0:s0 -> Node0xdc1070;
	Node0xdc0fd0:s1 -> Node0xdc1020;
	Node0xdc1020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%20:\l20:                                               \l  %21 = bitcast i8** %9 to i8*, !dbg !819\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #22, !dbg !819\l  br label %46\l}"];
	Node0xdc1020 -> Node0xdc1250;
	Node0xdc1070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = load i8*, i8** %9, align 8, !dbg !820, !tbaa !798\l  %24 = load i8, i8* %23, align 1, !dbg !820, !tbaa !824\l  %25 = sext i8 %24 to i32, !dbg !820\l  %26 = icmp sle i32 50, %25, !dbg !820\l  br i1 %26, label %27, label %33, !dbg !820\l|{<s0>T|<s1>F}}"];
	Node0xdc1070:s0 -> Node0xdc10c0;
	Node0xdc1070:s1 -> Node0xdc1160;
	Node0xdc10c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = load i8*, i8** %9, align 8, !dbg !820, !tbaa !798\l  %29 = load i8, i8* %28, align 1, !dbg !820, !tbaa !824\l  %30 = sext i8 %29 to i32, !dbg !820\l  %31 = icmp sle i32 %30, 90, !dbg !820\l  br i1 %31, label %32, label %33, !dbg !825\l|{<s0>T|<s1>F}}"];
	Node0xdc10c0:s0 -> Node0xdc1110;
	Node0xdc10c0:s1 -> Node0xdc1160;
	Node0xdc1110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  br label %34, !dbg !825\l}"];
	Node0xdc1110 -> Node0xdc11b0;
	Node0xdc1160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%33:\l33:                                               \l  call void @__assert_fail(i8* noundef getelementptr inbounds ([25 x i8], [25\l... x i8]* @.str.60, i64 0, i64 0), i8* noundef getelementptr inbounds ([16 x\l... i8], [16 x i8]* @.str.61, i64 0, i64 0), i32 noundef 449, i8* noundef\l... getelementptr inbounds ([74 x i8], [74 x i8]*\l... @__PRETTY_FUNCTION__.base32hex_encode, i64 0, i64 0)) #23, !dbg !820\l  unreachable, !dbg !820\l}"];
	Node0xdc11b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = load i8*, i8** %9, align 8, !dbg !826, !tbaa !798\l  %36 = load i8, i8* %35, align 1, !dbg !827, !tbaa !824\l  %37 = sext i8 %36 to i32, !dbg !827\l  %38 = sub nsw i32 %37, 50, !dbg !828\l  %39 = sext i32 %38 to i64, !dbg !829\l  %40 = getelementptr inbounds [41 x i8], [41 x i8]* @base32_norm_to_hex, i64\l... 0, i64 %39, !dbg !829\l  %41 = load i8, i8* %40, align 1, !dbg !829, !tbaa !824\l  %42 = load i8*, i8** %9, align 8, !dbg !830, !tbaa !798\l  store i8 %41, i8* %42, align 1, !dbg !831, !tbaa !824\l  br label %43, !dbg !832\l}"];
	Node0xdc11b0 -> Node0xdc1200;
	Node0xdc1200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = load i8*, i8** %9, align 8, !dbg !833, !tbaa !798\l  %45 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !833\l  store i8* %45, i8** %9, align 8, !dbg !833, !tbaa !798\l  br label %16, !dbg !819, !llvm.loop !834\l}"];
	Node0xdc1200 -> Node0xdc0fd0;
	Node0xdc1250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%46:\l46:                                               \l  ret void, !dbg !838\l}"];
}
