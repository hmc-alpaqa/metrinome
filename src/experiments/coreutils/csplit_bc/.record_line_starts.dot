digraph "CFG for 'record_line_starts' function" {
	label="CFG for 'record_line_starts' function";

	Node0x238b180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%1:\l  %2 = alloca i64, align 8\l  %3 = alloca %struct.buffer_record*, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca i8*, align 8\l  %9 = alloca i8*, align 8\l  %10 = alloca i64, align 8\l  store %struct.buffer_record* %0, %struct.buffer_record** %3, align 8, !tbaa\l... !1036\l  call void @llvm.dbg.declare(metadata %struct.buffer_record** %3, metadata\l... !1028, metadata !DIExpression()), !dbg !1040\l  %11 = bitcast i8** %4 to i8*, !dbg !1041\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #22, !dbg !1041\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !1029, metadata\l... !DIExpression()), !dbg !1042\l  %12 = bitcast i64* %5 to i8*, !dbg !1043\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #22, !dbg !1043\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !1030, metadata\l... !DIExpression()), !dbg !1044\l  %13 = bitcast i64* %6 to i8*, !dbg !1045\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #22, !dbg !1045\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !1031, metadata\l... !DIExpression()), !dbg !1046\l  %14 = load %struct.buffer_record*, %struct.buffer_record** %3, align 8, !dbg\l... !1047, !tbaa !1036\l  %15 = getelementptr inbounds %struct.buffer_record, %struct.buffer_record*\l... %14, i32 0, i32 1, !dbg !1049\l  %16 = load i64, i64* %15, align 8, !dbg !1049, !tbaa !1050\l  %17 = icmp eq i64 %16, 0, !dbg !1053\l  br i1 %17, label %18, label %19, !dbg !1054\l|{<s0>T|<s1>F}}"];
	Node0x238b180:s0 -> Node0x238fd50;
	Node0x238b180:s1 -> Node0x238fe30;
	Node0x238fd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%18:\l18:                                               \l  store i64 0, i64* %2, align 8, !dbg !1055\l  store i32 1, i32* %7, align 4\l  br label %97, !dbg !1055\l}"];
	Node0x238fd50 -> Node0x2390240;
	Node0x238fe30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%19:\l19:                                               \l  store i64 0, i64* %5, align 8, !dbg !1056, !tbaa !1057\l  %20 = load %struct.buffer_record*, %struct.buffer_record** %3, align 8, !dbg\l... !1058, !tbaa !1036\l  %21 = getelementptr inbounds %struct.buffer_record, %struct.buffer_record*\l... %20, i32 0, i32 5, !dbg !1059\l  %22 = load i8*, i8** %21, align 8, !dbg !1059, !tbaa !1060\l  store i8* %22, i8** %4, align 8, !dbg !1061, !tbaa !1036\l  %23 = bitcast i8** %8 to i8*, !dbg !1062\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #22, !dbg !1062\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1032, metadata\l... !DIExpression()), !dbg !1063\l  %24 = load i8*, i8** %4, align 8, !dbg !1064, !tbaa !1036\l  %25 = load %struct.buffer_record*, %struct.buffer_record** %3, align 8, !dbg\l... !1065, !tbaa !1036\l  %26 = getelementptr inbounds %struct.buffer_record, %struct.buffer_record*\l... %25, i32 0, i32 1, !dbg !1066\l  %27 = load i64, i64* %26, align 8, !dbg !1066, !tbaa !1050\l  %28 = getelementptr inbounds i8, i8* %24, i64 %27, !dbg !1067\l  store i8* %28, i8** %8, align 8, !dbg !1063, !tbaa !1036\l  %29 = load i8*, i8** %8, align 8, !dbg !1068, !tbaa !1036\l  store i8 10, i8* %29, align 1, !dbg !1069, !tbaa !1070\l  br label %30, !dbg !1071\l}"];
	Node0x238fe30 -> Node0x238fe80;
	Node0x238fe80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  br label %31, !dbg !1071\l}"];
	Node0x238fe80 -> Node0x238fed0;
	Node0x238fed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = bitcast i8** %9 to i8*, !dbg !1072\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #22, !dbg !1072\l  call void @llvm.dbg.declare(metadata i8** %9, metadata !1033, metadata\l... !DIExpression()), !dbg !1073\l  %33 = load i8*, i8** %4, align 8, !dbg !1074, !tbaa !1036\l  %34 = call i8* @rawmemchr(i8* noundef %33, i32 noundef 10) #23, !dbg !1075\l  store i8* %34, i8** %9, align 8, !dbg !1073, !tbaa !1036\l  %35 = load i8*, i8** %9, align 8, !dbg !1076, !tbaa !1036\l  %36 = load i8*, i8** %8, align 8, !dbg !1078, !tbaa !1036\l  %37 = icmp eq i8* %35, %36, !dbg !1079\l  br i1 %37, label %38, label %39, !dbg !1080\l|{<s0>T|<s1>F}}"];
	Node0x238fed0:s0 -> Node0x238ff20;
	Node0x238fed0:s1 -> Node0x238ff70;
	Node0x238ff20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%38:\l38:                                               \l  store i32 3, i32* %7, align 4\l  br label %53, !dbg !1081\l}"];
	Node0x238ff20 -> Node0x238ffc0;
	Node0x238ff70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%39:\l39:                                               \l  %40 = load i8*, i8** %9, align 8, !dbg !1082, !tbaa !1036\l  %41 = load i8*, i8** %4, align 8, !dbg !1083, !tbaa !1036\l  %42 = ptrtoint i8* %40 to i64, !dbg !1084\l  %43 = ptrtoint i8* %41 to i64, !dbg !1084\l  %44 = sub i64 %42, %43, !dbg !1084\l  %45 = add nsw i64 %44, 1, !dbg !1085\l  store i64 %45, i64* %6, align 8, !dbg !1086, !tbaa !1057\l  %46 = load %struct.buffer_record*, %struct.buffer_record** %3, align 8, !dbg\l... !1087, !tbaa !1036\l  %47 = load i8*, i8** %4, align 8, !dbg !1088, !tbaa !1036\l  %48 = load i64, i64* %6, align 8, !dbg !1089, !tbaa !1057\l  call void @keep_new_line(%struct.buffer_record* noundef %46, i8* noundef\l... %47, i64 noundef %48), !dbg !1090\l  %49 = load i8*, i8** %9, align 8, !dbg !1091, !tbaa !1036\l  %50 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !1092\l  store i8* %50, i8** %4, align 8, !dbg !1093, !tbaa !1036\l  %51 = load i64, i64* %5, align 8, !dbg !1094, !tbaa !1057\l  %52 = add nsw i64 %51, 1, !dbg !1094\l  store i64 %52, i64* %5, align 8, !dbg !1094, !tbaa !1057\l  store i32 0, i32* %7, align 4, !dbg !1095\l  br label %53, !dbg !1095\l}"];
	Node0x238ff70 -> Node0x238ffc0;
	Node0x238ffc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = bitcast i8** %9 to i8*, !dbg !1095\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %54) #22, !dbg !1095\l  %55 = load i32, i32* %7, align 4\l  switch i32 %55, label %102 [\l    i32 0, label %56\l    i32 3, label %57\l  ]\l|{<s0>def|<s1>0|<s2>3}}"];
	Node0x238ffc0:s0 -> Node0x2390290;
	Node0x238ffc0:s1 -> Node0x2390010;
	Node0x238ffc0:s2 -> Node0x2390060;
	Node0x2390010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  br label %30, !dbg !1071, !llvm.loop !1096\l}"];
	Node0x2390010 -> Node0x238fe80;
	Node0x2390060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%57:\l57:                                               \l  %58 = bitcast i64* %10 to i8*, !dbg !1098\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %58) #22, !dbg !1098\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1035, metadata\l... !DIExpression()), !dbg !1099\l  %59 = load i8*, i8** %8, align 8, !dbg !1100, !tbaa !1036\l  %60 = load i8*, i8** %4, align 8, !dbg !1101, !tbaa !1036\l  %61 = ptrtoint i8* %59 to i64, !dbg !1102\l  %62 = ptrtoint i8* %60 to i64, !dbg !1102\l  %63 = sub i64 %61, %62, !dbg !1102\l  store i64 %63, i64* %10, align 8, !dbg !1099, !tbaa !1057\l  %64 = load i64, i64* %10, align 8, !dbg !1103, !tbaa !1057\l  %65 = icmp ne i64 %64, 0, !dbg !1103\l  br i1 %65, label %66, label %81, !dbg !1105\l|{<s0>T|<s1>F}}"];
	Node0x2390060:s0 -> Node0x23900b0;
	Node0x2390060:s1 -> Node0x23901f0;
	Node0x23900b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%66:\l66:                                               \l  %67 = load i8, i8* @have_read_eof, align 1, !dbg !1106, !tbaa !1109, !range\l... !1111\l  %68 = trunc i8 %67 to i1, !dbg !1106\l  br i1 %68, label %69, label %75, !dbg !1112\l|{<s0>T|<s1>F}}"];
	Node0x23900b0:s0 -> Node0x2390100;
	Node0x23900b0:s1 -> Node0x2390150;
	Node0x2390100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%69:\l69:                                               \l  %70 = load %struct.buffer_record*, %struct.buffer_record** %3, align 8, !dbg\l... !1113, !tbaa !1036\l  %71 = load i8*, i8** %4, align 8, !dbg !1115, !tbaa !1036\l  %72 = load i64, i64* %10, align 8, !dbg !1116, !tbaa !1057\l  call void @keep_new_line(%struct.buffer_record* noundef %70, i8* noundef\l... %71, i64 noundef %72), !dbg !1117\l  %73 = load i64, i64* %5, align 8, !dbg !1118, !tbaa !1057\l  %74 = add nsw i64 %73, 1, !dbg !1118\l  store i64 %74, i64* %5, align 8, !dbg !1118, !tbaa !1057\l  br label %80, !dbg !1119\l}"];
	Node0x2390100 -> Node0x23901a0;
	Node0x2390150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%75:\l75:                                               \l  %76 = load i8*, i8** %4, align 8, !dbg !1120, !tbaa !1036\l  %77 = load i64, i64* %10, align 8, !dbg !1121, !tbaa !1057\l  %78 = call noalias nonnull i8* @ximemdup(i8* noundef %76, i64 noundef %77)\l... #24, !dbg !1122\l  %79 = load i64, i64* %10, align 8, !dbg !1123, !tbaa !1057\l  call void @save_to_hold_area(i8* noundef %78, i64 noundef %79), !dbg !1124\l  br label %80\l}"];
	Node0x2390150 -> Node0x23901a0;
	Node0x23901a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%80:\l80:                                               \l  br label %81, !dbg !1125\l}"];
	Node0x23901a0 -> Node0x23901f0;
	Node0x23901f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%81:\l81:                                               \l  %82 = load i64, i64* %5, align 8, !dbg !1126, !tbaa !1057\l  %83 = load %struct.buffer_record*, %struct.buffer_record** %3, align 8, !dbg\l... !1127, !tbaa !1036\l  %84 = getelementptr inbounds %struct.buffer_record, %struct.buffer_record*\l... %83, i32 0, i32 4, !dbg !1128\l  store i64 %82, i64* %84, align 8, !dbg !1129, !tbaa !1130\l  %85 = load i64, i64* @last_line_number, align 8, !dbg !1131, !tbaa !1057\l  %86 = add nsw i64 %85, 1, !dbg !1132\l  %87 = load %struct.buffer_record*, %struct.buffer_record** %3, align 8, !dbg\l... !1133, !tbaa !1036\l  %88 = getelementptr inbounds %struct.buffer_record, %struct.buffer_record*\l... %87, i32 0, i32 2, !dbg !1134\l  store i64 %86, i64* %88, align 8, !dbg !1135, !tbaa !1136\l  %89 = load %struct.buffer_record*, %struct.buffer_record** %3, align 8, !dbg\l... !1137, !tbaa !1036\l  %90 = getelementptr inbounds %struct.buffer_record, %struct.buffer_record*\l... %89, i32 0, i32 3, !dbg !1138\l  store i64 %86, i64* %90, align 8, !dbg !1139, !tbaa !1140\l  %91 = load i64, i64* %5, align 8, !dbg !1141, !tbaa !1057\l  %92 = load i64, i64* @last_line_number, align 8, !dbg !1142, !tbaa !1057\l  %93 = add nsw i64 %92, %91, !dbg !1142\l  store i64 %93, i64* @last_line_number, align 8, !dbg !1142, !tbaa !1057\l  %94 = load i64, i64* %5, align 8, !dbg !1143, !tbaa !1057\l  store i64 %94, i64* %2, align 8, !dbg !1144\l  store i32 1, i32* %7, align 4\l  %95 = bitcast i64* %10 to i8*, !dbg !1145\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %95) #22, !dbg !1145\l  %96 = bitcast i8** %8 to i8*, !dbg !1145\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %96) #22, !dbg !1145\l  br label %97\l}"];
	Node0x23901f0 -> Node0x2390240;
	Node0x2390240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%97:\l97:                                               \l  %98 = bitcast i64* %6 to i8*, !dbg !1145\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #22, !dbg !1145\l  %99 = bitcast i64* %5 to i8*, !dbg !1145\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #22, !dbg !1145\l  %100 = bitcast i8** %4 to i8*, !dbg !1145\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %100) #22, !dbg !1145\l  %101 = load i64, i64* %2, align 8, !dbg !1145\l  ret i64 %101, !dbg !1145\l}"];
	Node0x2390290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%102:\l102:                                              \l  unreachable\l}"];
}
