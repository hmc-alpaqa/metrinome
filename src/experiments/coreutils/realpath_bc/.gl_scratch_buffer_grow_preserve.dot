digraph "CFG for 'gl_scratch_buffer_grow_preserve' function" {
	label="CFG for 'gl_scratch_buffer_grow_preserve' function";

	Node0x96a7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = alloca i1, align 1\l  %3 = alloca %struct.scratch_buffer*, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i32, align 4\l  store %struct.scratch_buffer* %0, %struct.scratch_buffer** %3, align 8,\l... !tbaa !722\l  call void @llvm.dbg.declare(metadata %struct.scratch_buffer** %3, metadata\l... !719, metadata !DIExpression()), !dbg !726\l  %7 = bitcast i64* %4 to i8*, !dbg !727\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #24, !dbg !727\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !720, metadata\l... !DIExpression()), !dbg !728\l  %8 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !729, !tbaa !722\l  %9 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %8, i32 0, i32 1, !dbg !730\l  %10 = load i64, i64* %9, align 8, !dbg !730, !tbaa !731\l  %11 = mul i64 2, %10, !dbg !734\l  store i64 %11, i64* %4, align 8, !dbg !728, !tbaa !735\l  %12 = bitcast i8** %5 to i8*, !dbg !736\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #24, !dbg !736\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !721, metadata\l... !DIExpression()), !dbg !737\l  %13 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !738, !tbaa !722\l  %14 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %13, i32 0, i32 0, !dbg !740\l  %15 = load i8*, i8** %14, align 16, !dbg !740, !tbaa !741\l  %16 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !742, !tbaa !722\l  %17 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %16, i32 0, i32 2, !dbg !743\l  %18 = bitcast %union.anon* %17 to [1024 x i8]*, !dbg !744\l  %19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %18, i64 0, i64 0,\l... !dbg !742\l  %20 = icmp eq i8* %15, %19, !dbg !745\l  br i1 %20, label %21, label %36, !dbg !746\l|{<s0>T|<s1>F}}"];
	Node0x96a7b0:s0 -> Node0x96a870;
	Node0x96a7b0:s1 -> Node0x96a960;
	Node0x96a870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%21:\l21:                                               \l  %22 = load i64, i64* %4, align 8, !dbg !747, !tbaa !735\l  %23 = call noalias i8* @malloc(i64 noundef %22) #24, !dbg !749\l  store i8* %23, i8** %5, align 8, !dbg !750, !tbaa !722\l  %24 = load i8*, i8** %5, align 8, !dbg !751, !tbaa !722\l  %25 = icmp eq i8* %24, null, !dbg !753\l  br i1 %25, label %26, label %27, !dbg !754\l|{<s0>T|<s1>F}}"];
	Node0x96a870:s0 -> Node0x96a8c0;
	Node0x96a870:s1 -> Node0x96a910;
	Node0x96a8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%26:\l26:                                               \l  store i1 false, i1* %2, align 1, !dbg !755\l  store i32 1, i32* %6, align 4\l  br label %74, !dbg !755\l}"];
	Node0x96a8c0 -> Node0x96ab90;
	Node0x96a910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%27:\l27:                                               \l  %28 = load i8*, i8** %5, align 8, !dbg !756, !tbaa !722\l  %29 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !757, !tbaa !722\l  %30 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %29, i32 0, i32 2, !dbg !758\l  %31 = bitcast %union.anon* %30 to [1024 x i8]*, !dbg !759\l  %32 = getelementptr inbounds [1024 x i8], [1024 x i8]* %31, i64 0, i64 0,\l... !dbg !760\l  %33 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !761, !tbaa !722\l  %34 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %33, i32 0, i32 1, !dbg !762\l  %35 = load i64, i64* %34, align 8, !dbg !762, !tbaa !731\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 16 %32, i64\l... %35, i1 false), !dbg !760\l  br label %67, !dbg !763\l}"];
	Node0x96a910 -> Node0x96ab40;
	Node0x96a960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%36:\l36:                                               \l  %37 = load i64, i64* %4, align 8, !dbg !764, !tbaa !735\l  %38 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !764, !tbaa !722\l  %39 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %38, i32 0, i32 1, !dbg !764\l  %40 = load i64, i64* %39, align 8, !dbg !764, !tbaa !731\l  %41 = icmp uge i64 %37, %40, !dbg !764\l  %42 = zext i1 %41 to i32, !dbg !764\l  %43 = sext i32 %42 to i64, !dbg !764\l  %44 = call i64 @llvm.expect.i64(i64 %43, i64 1), !dbg !764\l  %45 = icmp ne i64 %44, 0, !dbg !764\l  br i1 %45, label %46, label %52, !dbg !767\l|{<s0>T|<s1>F}}"];
	Node0x96a960:s0 -> Node0x96a9b0;
	Node0x96a960:s1 -> Node0x96aa00;
	Node0x96a9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%46:\l46:                                               \l  %47 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !768, !tbaa !722\l  %48 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %47, i32 0, i32 0, !dbg !769\l  %49 = load i8*, i8** %48, align 16, !dbg !769, !tbaa !741\l  %50 = load i64, i64* %4, align 8, !dbg !770, !tbaa !735\l  %51 = call i8* @realloc(i8* noundef %49, i64 noundef %50) #24, !dbg !771\l  store i8* %51, i8** %5, align 8, !dbg !772, !tbaa !722\l  br label %54, !dbg !773\l}"];
	Node0x96a9b0 -> Node0x96aa50;
	Node0x96aa00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%52:\l52:                                               \l  %53 = call i32* @__errno_location() #25, !dbg !774\l  store i32 12, i32* %53, align 4, !dbg !774, !tbaa !776\l  store i8* null, i8** %5, align 8, !dbg !778, !tbaa !722\l  br label %54\l}"];
	Node0x96aa00 -> Node0x96aa50;
	Node0x96aa50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%54:\l54:                                               \l  %55 = load i8*, i8** %5, align 8, !dbg !779, !tbaa !722\l  %56 = icmp eq i8* %55, null, !dbg !779\l  %57 = zext i1 %56 to i32, !dbg !779\l  %58 = sext i32 %57 to i64, !dbg !779\l  %59 = call i64 @llvm.expect.i64(i64 %58, i64 0), !dbg !779\l  %60 = icmp ne i64 %59, 0, !dbg !779\l  br i1 %60, label %61, label %66, !dbg !781\l|{<s0>T|<s1>F}}"];
	Node0x96aa50:s0 -> Node0x96aaa0;
	Node0x96aa50:s1 -> Node0x96aaf0;
	Node0x96aaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%61:\l61:                                               \l  %62 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !782, !tbaa !722\l  %63 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %62, i32 0, i32 0, !dbg !784\l  %64 = load i8*, i8** %63, align 16, !dbg !784, !tbaa !741\l  call void @free(i8* noundef %64) #24, !dbg !785\l  %65 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !786, !tbaa !722\l  call void @scratch_buffer_init.74(%struct.scratch_buffer* noundef %65), !dbg\l... !787\l  store i1 false, i1* %2, align 1, !dbg !788\l  store i32 1, i32* %6, align 4\l  br label %74, !dbg !788\l}"];
	Node0x96aaa0 -> Node0x96ab90;
	Node0x96aaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%66:\l66:                                               \l  br label %67\l}"];
	Node0x96aaf0 -> Node0x96ab40;
	Node0x96ab40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%67:\l67:                                               \l  %68 = load i8*, i8** %5, align 8, !dbg !789, !tbaa !722\l  %69 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !790, !tbaa !722\l  %70 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %69, i32 0, i32 0, !dbg !791\l  store i8* %68, i8** %70, align 16, !dbg !792, !tbaa !741\l  %71 = load i64, i64* %4, align 8, !dbg !793, !tbaa !735\l  %72 = load %struct.scratch_buffer*, %struct.scratch_buffer** %3, align 8,\l... !dbg !794, !tbaa !722\l  %73 = getelementptr inbounds %struct.scratch_buffer, %struct.scratch_buffer*\l... %72, i32 0, i32 1, !dbg !795\l  store i64 %71, i64* %73, align 8, !dbg !796, !tbaa !731\l  store i1 true, i1* %2, align 1, !dbg !797\l  store i32 1, i32* %6, align 4\l  br label %74, !dbg !797\l}"];
	Node0x96ab40 -> Node0x96ab90;
	Node0x96ab90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = bitcast i8** %5 to i8*, !dbg !798\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #24, !dbg !798\l  %76 = bitcast i64* %4 to i8*, !dbg !798\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #24, !dbg !798\l  %77 = load i1, i1* %2, align 1, !dbg !798\l  ret i1 %77, !dbg !798\l}"];
}
