digraph "CFG for 'elide_tail_lines_seekable' function" {
	label="CFG for 'elide_tail_lines_seekable' function";

	Node0x919940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%5:\l  %6 = alloca i1, align 1\l  %7 = alloca i8*, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca [8192 x i8], align 16\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i32, align 4\l  %16 = alloca i8, align 1\l  %17 = alloca i64, align 8\l  %18 = alloca i8*, align 8\l  %19 = alloca i32, align 4\l  store i8* %0, i8** %7, align 8, !tbaa !765\l  call void @llvm.dbg.declare(metadata i8** %7, metadata !741, metadata\l... !DIExpression()), !dbg !769\l  store i32 %1, i32* %8, align 4, !tbaa !770\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !742, metadata\l... !DIExpression()), !dbg !772\l  store i64 %2, i64* %9, align 8, !tbaa !773\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !743, metadata\l... !DIExpression()), !dbg !775\l  store i64 %3, i64* %10, align 8, !tbaa !773\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !744, metadata\l... !DIExpression()), !dbg !776\l  store i64 %4, i64* %11, align 8, !tbaa !773\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !745, metadata\l... !DIExpression()), !dbg !777\l  %20 = bitcast [8192 x i8]* %12 to i8*, !dbg !778\l  call void @llvm.lifetime.start.p0i8(i64 8192, i8* %20) #22, !dbg !778\l  call void @llvm.dbg.declare(metadata [8192 x i8]* %12, metadata !746,\l... metadata !DIExpression()), !dbg !779\l  %21 = bitcast i64* %13 to i8*, !dbg !780\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #22, !dbg !780\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !750, metadata\l... !DIExpression()), !dbg !781\l  %22 = bitcast i64* %14 to i8*, !dbg !782\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #22, !dbg !782\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !751, metadata\l... !DIExpression()), !dbg !783\l  %23 = load i64, i64* %11, align 8, !dbg !784, !tbaa !773\l  store i64 %23, i64* %14, align 8, !dbg !783, !tbaa !773\l  %24 = load i64, i64* %14, align 8, !dbg !785, !tbaa !773\l  %25 = load i64, i64* %10, align 8, !dbg !786, !tbaa !773\l  %26 = sub nsw i64 %24, %25, !dbg !787\l  %27 = srem i64 %26, 8192, !dbg !788\l  store i64 %27, i64* %13, align 8, !dbg !789, !tbaa !773\l  %28 = load i64, i64* %13, align 8, !dbg !790, !tbaa !773\l  %29 = icmp eq i64 %28, 0, !dbg !792\l  br i1 %29, label %30, label %31, !dbg !793\l|{<s0>T|<s1>F}}"];
	Node0x919940:s0 -> Node0x8cc660;
	Node0x919940:s1 -> Node0x8cc6b0;
	Node0x8cc660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%30:\l30:                                               \l  store i64 8192, i64* %13, align 8, !dbg !794, !tbaa !773\l  br label %31, !dbg !795\l}"];
	Node0x8cc660 -> Node0x8cc6b0;
	Node0x8cc6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%31:\l31:                                               \l  %32 = load i64, i64* %13, align 8, !dbg !796, !tbaa !773\l  %33 = load i64, i64* %14, align 8, !dbg !797, !tbaa !773\l  %34 = sub i64 %33, %32, !dbg !797\l  store i64 %34, i64* %14, align 8, !dbg !797, !tbaa !773\l  %35 = load i32, i32* %8, align 4, !dbg !798, !tbaa !770\l  %36 = load i64, i64* %14, align 8, !dbg !800, !tbaa !773\l  %37 = load i8*, i8** %7, align 8, !dbg !801, !tbaa !765\l  %38 = call i64 @elseek(i32 noundef %35, i64 noundef %36, i32 noundef 0, i8*\l... noundef %37), !dbg !802\l  %39 = icmp slt i64 %38, 0, !dbg !803\l  br i1 %39, label %40, label %41, !dbg !804\l|{<s0>T|<s1>F}}"];
	Node0x8cc6b0:s0 -> Node0x8cc700;
	Node0x8cc6b0:s1 -> Node0x8cc750;
	Node0x8cc700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%40:\l40:                                               \l  store i1 false, i1* %6, align 1, !dbg !805\l  store i32 1, i32* %15, align 4\l  br label %189, !dbg !805\l}"];
	Node0x8cc700 -> Node0x8cd3d0;
	Node0x8cc750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%41:\l41:                                               \l  %42 = load i32, i32* %8, align 4, !dbg !806, !tbaa !770\l  %43 = getelementptr inbounds [8192 x i8], [8192 x i8]* %12, i64 0, i64 0,\l... !dbg !807\l  %44 = load i64, i64* %13, align 8, !dbg !808, !tbaa !773\l  %45 = call i64 @safe_read(i32 noundef %42, i8* noundef %43, i64 noundef\l... %44), !dbg !809\l  store i64 %45, i64* %13, align 8, !dbg !810, !tbaa !773\l  %46 = load i64, i64* %13, align 8, !dbg !811, !tbaa !773\l  %47 = icmp eq i64 %46, -1, !dbg !813\l  br i1 %47, label %48, label %53, !dbg !814\l|{<s0>T|<s1>F}}"];
	Node0x8cc750:s0 -> Node0x8cc7a0;
	Node0x8cc750:s1 -> Node0x8cc7f0;
	Node0x8cc7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%48:\l48:                                               \l  %49 = call i32* @__errno_location() #23, !dbg !815\l  %50 = load i32, i32* %49, align 4, !dbg !815, !tbaa !770\l  %51 = load i8*, i8** %7, align 8, !dbg !815, !tbaa !765\l  %52 = call i8* @quotearg_style(i32 noundef 4, i8* noundef %51), !dbg !815\l  call void (i32, i32, i8*, ...) @error(i32 noundef 0, i32 noundef %50, i8*\l... noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64\l... 0), i8* noundef %52), !dbg !815\l  store i1 false, i1* %6, align 1, !dbg !817\l  store i32 1, i32* %15, align 4\l  br label %189, !dbg !817\l}"];
	Node0x8cc7a0 -> Node0x8cd3d0;
	Node0x8cc7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%53:\l53:                                               \l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #22, !dbg !818\l  call void @llvm.dbg.declare(metadata i8* %16, metadata !752, metadata\l... !DIExpression()), !dbg !819\l  %54 = load i64, i64* %9, align 8, !dbg !820, !tbaa !773\l  %55 = icmp ne i64 %54, 0, !dbg !821\l  %56 = xor i1 %55, true, !dbg !821\l  %57 = zext i1 %56 to i8, !dbg !819\l  store i8 %57, i8* %16, align 1, !dbg !819, !tbaa !822\l  %58 = load i64, i64* %9, align 8, !dbg !824, !tbaa !773\l  %59 = icmp ne i64 %58, 0, !dbg !824\l  br i1 %59, label %60, label %75, !dbg !826\l|{<s0>T|<s1>F}}"];
	Node0x8cc7f0:s0 -> Node0x8cc840;
	Node0x8cc7f0:s1 -> Node0x8cc930;
	Node0x8cc840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%60:\l60:                                               \l  %61 = load i64, i64* %13, align 8, !dbg !827, !tbaa !773\l  %62 = icmp ne i64 %61, 0, !dbg !827\l  br i1 %62, label %63, label %75, !dbg !828\l|{<s0>T|<s1>F}}"];
	Node0x8cc840:s0 -> Node0x8cc890;
	Node0x8cc840:s1 -> Node0x8cc930;
	Node0x8cc890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%63:\l63:                                               \l  %64 = load i64, i64* %13, align 8, !dbg !829, !tbaa !773\l  %65 = sub i64 %64, 1, !dbg !830\l  %66 = getelementptr inbounds [8192 x i8], [8192 x i8]* %12, i64 0, i64 %65,\l... !dbg !831\l  %67 = load i8, i8* %66, align 1, !dbg !831, !tbaa !832\l  %68 = sext i8 %67 to i32, !dbg !831\l  %69 = load i8, i8* @line_end, align 1, !dbg !833, !tbaa !832\l  %70 = sext i8 %69 to i32, !dbg !833\l  %71 = icmp ne i32 %68, %70, !dbg !834\l  br i1 %71, label %72, label %75, !dbg !835\l|{<s0>T|<s1>F}}"];
	Node0x8cc890:s0 -> Node0x8cc8e0;
	Node0x8cc890:s1 -> Node0x8cc930;
	Node0x8cc8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%72:\l72:                                               \l  %73 = load i64, i64* %9, align 8, !dbg !836, !tbaa !773\l  %74 = add i64 %73, -1, !dbg !836\l  store i64 %74, i64* %9, align 8, !dbg !836, !tbaa !773\l  br label %75, !dbg !836\l}"];
	Node0x8cc8e0 -> Node0x8cc930;
	Node0x8cc930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%75:\l75:                                               \l  br label %76, !dbg !837\l}"];
	Node0x8cc930 -> Node0x8cc980;
	Node0x8cc980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%76:\l76:                                               \l  br label %77, !dbg !837\l}"];
	Node0x8cc980 -> Node0x8cc9d0;
	Node0x8cc9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%77:\l77:                                               \l  %78 = bitcast i64* %17 to i8*, !dbg !838\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %78) #22, !dbg !838\l  call void @llvm.dbg.declare(metadata i64* %17, metadata !754, metadata\l... !DIExpression()), !dbg !839\l  %79 = load i64, i64* %13, align 8, !dbg !840, !tbaa !773\l  store i64 %79, i64* %17, align 8, !dbg !839, !tbaa !773\l  br label %80, !dbg !841\l}"];
	Node0x8cc9d0 -> Node0x8cca20;
	Node0x8cca20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = load i64, i64* %17, align 8, !dbg !842, !tbaa !773\l  %82 = icmp ne i64 %81, 0, !dbg !841\l  br i1 %82, label %83, label %154, !dbg !841\l|{<s0>T|<s1>F}}"];
	Node0x8cca20:s0 -> Node0x8cca70;
	Node0x8cca20:s1 -> Node0x8cd010;
	Node0x8cca70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  %84 = load i8, i8* %16, align 1, !dbg !843, !tbaa !822, !range !844\l  %85 = trunc i8 %84 to i1, !dbg !843\l  br i1 %85, label %86, label %89, !dbg !845\l|{<s0>T|<s1>F}}"];
	Node0x8cca70:s0 -> Node0x8ccac0;
	Node0x8cca70:s1 -> Node0x8ccb10;
	Node0x8ccac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%86:\l86:                                               \l  %87 = load i64, i64* %17, align 8, !dbg !846, !tbaa !773\l  %88 = sub i64 %87, 1, !dbg !846\l  store i64 %88, i64* %17, align 8, !dbg !846, !tbaa !773\l  br label %109, !dbg !847\l}"];
	Node0x8ccac0 -> Node0x8ccca0;
	Node0x8ccb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%89:\l89:                                               \l  %90 = bitcast i8** %18 to i8*, !dbg !848\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %90) #22, !dbg !848\l  call void @llvm.dbg.declare(metadata i8** %18, metadata !756, metadata\l... !DIExpression()), !dbg !849\l  %91 = getelementptr inbounds [8192 x i8], [8192 x i8]* %12, i64 0, i64 0,\l... !dbg !850\l  %92 = load i8, i8* @line_end, align 1, !dbg !851, !tbaa !832\l  %93 = sext i8 %92 to i32, !dbg !851\l  %94 = load i64, i64* %17, align 8, !dbg !852, !tbaa !773\l  %95 = call i8* @memrchr(i8* noundef %91, i32 noundef %93, i64 noundef %94)\l... #24, !dbg !853\l  store i8* %95, i8** %18, align 8, !dbg !854, !tbaa !765\l  %96 = load i8*, i8** %18, align 8, !dbg !855, !tbaa !765\l  %97 = icmp eq i8* %96, null, !dbg !857\l  br i1 %97, label %98, label %99, !dbg !858\l|{<s0>T|<s1>F}}"];
	Node0x8ccb10:s0 -> Node0x8ccb60;
	Node0x8ccb10:s1 -> Node0x8ccbb0;
	Node0x8ccb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%98:\l98:                                               \l  store i32 5, i32* %15, align 4\l  br label %105, !dbg !859\l}"];
	Node0x8ccb60 -> Node0x8ccc00;
	Node0x8ccbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%99:\l99:                                               \l  %100 = load i8*, i8** %18, align 8, !dbg !860, !tbaa !765\l  %101 = getelementptr inbounds [8192 x i8], [8192 x i8]* %12, i64 0, i64 0,\l... !dbg !861\l  %102 = ptrtoint i8* %100 to i64, !dbg !862\l  %103 = ptrtoint i8* %101 to i64, !dbg !862\l  %104 = sub i64 %102, %103, !dbg !862\l  store i64 %104, i64* %17, align 8, !dbg !863, !tbaa !773\l  store i32 0, i32* %15, align 4, !dbg !864\l  br label %105, !dbg !864\l}"];
	Node0x8ccbb0 -> Node0x8ccc00;
	Node0x8ccc00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%105:\l105:                                              \l  %106 = bitcast i8** %18 to i8*, !dbg !864\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %106) #22, !dbg !864\l  %107 = load i32, i32* %15, align 4\l  switch i32 %107, label %194 [\l    i32 0, label %108\l    i32 5, label %154\l  ]\l|{<s0>def|<s1>0|<s2>5}}"];
	Node0x8ccc00:s0 -> Node0x8cd420;
	Node0x8ccc00:s1 -> Node0x8ccc50;
	Node0x8ccc00:s2 -> Node0x8cd010;
	Node0x8ccc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%108:\l108:                                              \l  br label %109\l}"];
	Node0x8ccc50 -> Node0x8ccca0;
	Node0x8ccca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%109:\l109:                                              \l  %110 = load i64, i64* %9, align 8, !dbg !865, !tbaa !773\l  %111 = add i64 %110, -1, !dbg !865\l  store i64 %111, i64* %9, align 8, !dbg !865, !tbaa !773\l  %112 = icmp eq i64 %110, 0, !dbg !866\l  br i1 %112, label %113, label %153, !dbg !867\l|{<s0>T|<s1>F}}"];
	Node0x8ccca0:s0 -> Node0x8cccf0;
	Node0x8ccca0:s1 -> Node0x8ccfc0;
	Node0x8cccf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%113:\l113:                                              \l  %114 = load i64, i64* %10, align 8, !dbg !868, !tbaa !773\l  %115 = load i64, i64* %14, align 8, !dbg !869, !tbaa !773\l  %116 = icmp slt i64 %114, %115, !dbg !870\l  br i1 %116, label %117, label %141, !dbg !871\l|{<s0>T|<s1>F}}"];
	Node0x8cccf0:s0 -> Node0x8ccd40;
	Node0x8cccf0:s1 -> Node0x8ccf70;
	Node0x8ccd40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%117:\l117:                                              \l  %118 = bitcast i32* %19 to i8*, !dbg !872\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %118) #22, !dbg !872\l  call void @llvm.dbg.declare(metadata i32* %19, metadata !760, metadata\l... !DIExpression()), !dbg !873\l  %119 = load i32, i32* %8, align 4, !dbg !874, !tbaa !770\l  %120 = load i64, i64* %10, align 8, !dbg !876, !tbaa !773\l  %121 = load i8*, i8** %7, align 8, !dbg !877, !tbaa !765\l  %122 = call i64 @elseek(i32 noundef %119, i64 noundef %120, i32 noundef 0,\l... i8* noundef %121), !dbg !878\l  %123 = icmp slt i64 %122, 0, !dbg !879\l  br i1 %123, label %124, label %125, !dbg !880\l|{<s0>T|<s1>F}}"];
	Node0x8ccd40:s0 -> Node0x8ccd90;
	Node0x8ccd40:s1 -> Node0x8ccde0;
	Node0x8ccd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%124:\l124:                                              \l  store i1 false, i1* %6, align 1, !dbg !881\l  store i32 1, i32* %15, align 4\l  br label %137, !dbg !881\l}"];
	Node0x8ccd90 -> Node0x8cced0;
	Node0x8ccde0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%125:\l125:                                              \l  %126 = load i32, i32* %8, align 4, !dbg !882, !tbaa !770\l  %127 = load i64, i64* %14, align 8, !dbg !883, !tbaa !773\l  %128 = load i64, i64* %10, align 8, !dbg !884, !tbaa !773\l  %129 = sub nsw i64 %127, %128, !dbg !885\l  %130 = call i32 @copy_fd(i32 noundef %126, i64 noundef %129), !dbg !886\l  store i32 %130, i32* %19, align 4, !dbg !887, !tbaa !832\l  %131 = load i32, i32* %19, align 4, !dbg !888, !tbaa !832\l  %132 = icmp ne i32 %131, 0, !dbg !890\l  br i1 %132, label %133, label %136, !dbg !891\l|{<s0>T|<s1>F}}"];
	Node0x8ccde0:s0 -> Node0x8cce30;
	Node0x8ccde0:s1 -> Node0x8cce80;
	Node0x8cce30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%133:\l133:                                              \l  %134 = load i32, i32* %19, align 4, !dbg !892, !tbaa !832\l  %135 = load i8*, i8** %7, align 8, !dbg !894, !tbaa !765\l  call void @diagnose_copy_fd_failure(i32 noundef %134, i8* noundef %135),\l... !dbg !895\l  store i1 false, i1* %6, align 1, !dbg !896\l  store i32 1, i32* %15, align 4\l  br label %137, !dbg !896\l}"];
	Node0x8cce30 -> Node0x8cced0;
	Node0x8cce80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%136:\l136:                                              \l  store i32 0, i32* %15, align 4, !dbg !897\l  br label %137, !dbg !897\l}"];
	Node0x8cce80 -> Node0x8cced0;
	Node0x8cced0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%137:\l137:                                              \l  %138 = bitcast i32* %19 to i8*, !dbg !897\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %138) #22, !dbg !897\l  %139 = load i32, i32* %15, align 4\l  switch i32 %139, label %184 [\l    i32 0, label %140\l  ]\l|{<s0>def|<s1>0}}"];
	Node0x8cced0:s0 -> Node0x8cd2e0;
	Node0x8cced0:s1 -> Node0x8ccf20;
	Node0x8ccf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%140:\l140:                                              \l  br label %141, !dbg !898\l}"];
	Node0x8ccf20 -> Node0x8ccf70;
	Node0x8ccf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%141:\l141:                                              \l  %142 = getelementptr inbounds [8192 x i8], [8192 x i8]* %12, i64 0, i64 0,\l... !dbg !899\l  %143 = load i64, i64* %17, align 8, !dbg !900, !tbaa !773\l  %144 = add i64 %143, 1, !dbg !901\l  call void @xwrite_stdout(i8* noundef %142, i64 noundef %144), !dbg !902\l  %145 = load i32, i32* %8, align 4, !dbg !903, !tbaa !770\l  %146 = load i64, i64* %14, align 8, !dbg !904, !tbaa !773\l  %147 = load i64, i64* %17, align 8, !dbg !905, !tbaa !773\l  %148 = add i64 %146, %147, !dbg !906\l  %149 = add i64 %148, 1, !dbg !907\l  %150 = load i8*, i8** %7, align 8, !dbg !908, !tbaa !765\l  %151 = call i64 @elseek(i32 noundef %145, i64 noundef %149, i32 noundef 0,\l... i8* noundef %150), !dbg !909\l  %152 = icmp sle i64 0, %151, !dbg !910\l  store i1 %152, i1* %6, align 1, !dbg !911\l  store i32 1, i32* %15, align 4\l  br label %184, !dbg !911\l}"];
	Node0x8ccf70 -> Node0x8cd2e0;
	Node0x8ccfc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%153:\l153:                                              \l  br label %80, !dbg !841, !llvm.loop !912\l}"];
	Node0x8ccfc0 -> Node0x8cca20;
	Node0x8cd010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%154:\l154:                                              \l  %155 = load i64, i64* %14, align 8, !dbg !916, !tbaa !773\l  %156 = load i64, i64* %10, align 8, !dbg !918, !tbaa !773\l  %157 = icmp eq i64 %155, %156, !dbg !919\l  br i1 %157, label %158, label %159, !dbg !920\l|{<s0>T|<s1>F}}"];
	Node0x8cd010:s0 -> Node0x8cd060;
	Node0x8cd010:s1 -> Node0x8cd0b0;
	Node0x8cd060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%158:\l158:                                              \l  store i1 true, i1* %6, align 1, !dbg !921\l  store i32 1, i32* %15, align 4\l  br label %184, !dbg !921\l}"];
	Node0x8cd060 -> Node0x8cd2e0;
	Node0x8cd0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%159:\l159:                                              \l  %160 = load i64, i64* %14, align 8, !dbg !923, !tbaa !773\l  %161 = sub nsw i64 %160, 8192, !dbg !923\l  store i64 %161, i64* %14, align 8, !dbg !923, !tbaa !773\l  %162 = load i32, i32* %8, align 4, !dbg !924, !tbaa !770\l  %163 = load i64, i64* %14, align 8, !dbg !926, !tbaa !773\l  %164 = load i8*, i8** %7, align 8, !dbg !927, !tbaa !765\l  %165 = call i64 @elseek(i32 noundef %162, i64 noundef %163, i32 noundef 0,\l... i8* noundef %164), !dbg !928\l  %166 = icmp slt i64 %165, 0, !dbg !929\l  br i1 %166, label %167, label %168, !dbg !930\l|{<s0>T|<s1>F}}"];
	Node0x8cd0b0:s0 -> Node0x8cd100;
	Node0x8cd0b0:s1 -> Node0x8cd150;
	Node0x8cd100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%167:\l167:                                              \l  store i1 false, i1* %6, align 1, !dbg !931\l  store i32 1, i32* %15, align 4\l  br label %184, !dbg !931\l}"];
	Node0x8cd100 -> Node0x8cd2e0;
	Node0x8cd150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%168:\l168:                                              \l  %169 = load i32, i32* %8, align 4, !dbg !932, !tbaa !770\l  %170 = getelementptr inbounds [8192 x i8], [8192 x i8]* %12, i64 0, i64 0,\l... !dbg !933\l  %171 = call i64 @safe_read(i32 noundef %169, i8* noundef %170, i64 noundef\l... 8192), !dbg !934\l  store i64 %171, i64* %13, align 8, !dbg !935, !tbaa !773\l  %172 = load i64, i64* %13, align 8, !dbg !936, !tbaa !773\l  %173 = icmp eq i64 %172, -1, !dbg !938\l  br i1 %173, label %174, label %179, !dbg !939\l|{<s0>T|<s1>F}}"];
	Node0x8cd150:s0 -> Node0x8cd1a0;
	Node0x8cd150:s1 -> Node0x8cd1f0;
	Node0x8cd1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%174:\l174:                                              \l  %175 = call i32* @__errno_location() #23, !dbg !940\l  %176 = load i32, i32* %175, align 4, !dbg !940, !tbaa !770\l  %177 = load i8*, i8** %7, align 8, !dbg !940, !tbaa !765\l  %178 = call i8* @quotearg_style(i32 noundef 4, i8* noundef %177), !dbg !940\l  call void (i32, i32, i8*, ...) @error(i32 noundef 0, i32 noundef %176, i8*\l... noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64\l... 0), i8* noundef %178), !dbg !940\l  store i1 false, i1* %6, align 1, !dbg !942\l  store i32 1, i32* %15, align 4\l  br label %184, !dbg !942\l}"];
	Node0x8cd1a0 -> Node0x8cd2e0;
	Node0x8cd1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%179:\l179:                                              \l  %180 = load i64, i64* %13, align 8, !dbg !943, !tbaa !773\l  %181 = icmp eq i64 %180, 0, !dbg !945\l  br i1 %181, label %182, label %183, !dbg !946\l|{<s0>T|<s1>F}}"];
	Node0x8cd1f0:s0 -> Node0x8cd240;
	Node0x8cd1f0:s1 -> Node0x8cd290;
	Node0x8cd240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%182:\l182:                                              \l  store i1 true, i1* %6, align 1, !dbg !947\l  store i32 1, i32* %15, align 4\l  br label %184, !dbg !947\l}"];
	Node0x8cd240 -> Node0x8cd2e0;
	Node0x8cd290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%183:\l183:                                              \l  store i32 0, i32* %15, align 4, !dbg !948\l  br label %184, !dbg !948\l}"];
	Node0x8cd290 -> Node0x8cd2e0;
	Node0x8cd2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%184:\l184:                                              \l  %185 = bitcast i64* %17 to i8*, !dbg !948\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %185) #22, !dbg !948\l  %186 = load i32, i32* %15, align 4\l  switch i32 %186, label %188 [\l    i32 0, label %187\l  ]\l|{<s0>def|<s1>0}}"];
	Node0x8cd2e0:s0 -> Node0x8cd380;
	Node0x8cd2e0:s1 -> Node0x8cd330;
	Node0x8cd330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%187:\l187:                                              \l  br label %76, !dbg !837, !llvm.loop !949\l}"];
	Node0x8cd330 -> Node0x8cc980;
	Node0x8cd380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%188:\l188:                                              \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #22, !dbg !950\l  br label %189\l}"];
	Node0x8cd380 -> Node0x8cd3d0;
	Node0x8cd3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%189:\l189:                                              \l  %190 = bitcast i64* %14 to i8*, !dbg !950\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #22, !dbg !950\l  %191 = bitcast i64* %13 to i8*, !dbg !950\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %191) #22, !dbg !950\l  %192 = bitcast [8192 x i8]* %12 to i8*, !dbg !950\l  call void @llvm.lifetime.end.p0i8(i64 8192, i8* %192) #22, !dbg !950\l  %193 = load i1, i1* %6, align 1, !dbg !950\l  ret i1 %193, !dbg !950\l}"];
	Node0x8cd420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%194:\l194:                                              \l  unreachable\l}"];
}
