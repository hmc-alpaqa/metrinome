digraph "CFG for '_obstack_begin_1' function" {
	label="CFG for '_obstack_begin_1' function";

	Node0x2022a10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = alloca %struct.obstack*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i8* (i8*, i64)*, align 8\l  %11 = alloca void (i8*, i8*)*, align 8\l  %12 = alloca i8*, align 8\l  store %struct.obstack* %0, %struct.obstack** %7, align 8, !tbaa !1335\l  call void @llvm.dbg.declare(metadata %struct.obstack** %7, metadata !1329,\l... metadata !DIExpression()), !dbg !1339\l  store i64 %1, i64* %8, align 8, !tbaa !1340\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1330, metadata\l... !DIExpression()), !dbg !1342\l  store i64 %2, i64* %9, align 8, !tbaa !1340\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1331, metadata\l... !DIExpression()), !dbg !1343\l  store i8* (i8*, i64)* %3, i8* (i8*, i64)** %10, align 8, !tbaa !1335\l  call void @llvm.dbg.declare(metadata i8* (i8*, i64)** %10, metadata !1332,\l... metadata !DIExpression()), !dbg !1344\l  store void (i8*, i8*)* %4, void (i8*, i8*)** %11, align 8, !tbaa !1335\l  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %11, metadata !1333,\l... metadata !DIExpression()), !dbg !1345\l  store i8* %5, i8** %12, align 8, !tbaa !1335\l  call void @llvm.dbg.declare(metadata i8** %12, metadata !1334, metadata\l... !DIExpression()), !dbg !1346\l  %13 = load i8* (i8*, i64)*, i8* (i8*, i64)** %10, align 8, !dbg !1347, !tbaa\l... !1335\l  %14 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !1348,\l... !tbaa !1335\l  %15 = getelementptr inbounds %struct.obstack, %struct.obstack* %14, i32 0,\l... i32 7, !dbg !1349\l  %16 = bitcast %union.anon.0* %15 to i8* (i8*, i64)**, !dbg !1350\l  store i8* (i8*, i64)* %13, i8* (i8*, i64)** %16, align 8, !dbg !1351, !tbaa\l... !1352\l  %17 = load void (i8*, i8*)*, void (i8*, i8*)** %11, align 8, !dbg !1353,\l... !tbaa !1335\l  %18 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !1354,\l... !tbaa !1335\l  %19 = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0,\l... i32 8, !dbg !1355\l  %20 = bitcast %union.anon.1* %19 to void (i8*, i8*)**, !dbg !1356\l  store void (i8*, i8*)* %17, void (i8*, i8*)** %20, align 8, !dbg !1357,\l... !tbaa !1352\l  %21 = load i8*, i8** %12, align 8, !dbg !1358, !tbaa !1335\l  %22 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !1359,\l... !tbaa !1335\l  %23 = getelementptr inbounds %struct.obstack, %struct.obstack* %22, i32 0,\l... i32 9, !dbg !1360\l  store i8* %21, i8** %23, align 8, !dbg !1361, !tbaa !1362\l  %24 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !1365,\l... !tbaa !1335\l  %25 = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0,\l... i32 10, !dbg !1366\l  %26 = load i8, i8* %25, align 8, !dbg !1367\l  %27 = and i8 %26, -2, !dbg !1367\l  %28 = or i8 %27, 1, !dbg !1367\l  store i8 %28, i8* %25, align 8, !dbg !1367\l  %29 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !1368,\l... !tbaa !1335\l  %30 = load i64, i64* %8, align 8, !dbg !1369, !tbaa !1340\l  %31 = load i64, i64* %9, align 8, !dbg !1370, !tbaa !1340\l  %32 = call i32 @_obstack_begin_worker(%struct.obstack* noundef %29, i64\l... noundef %30, i64 noundef %31), !dbg !1371\l  ret i32 %32, !dbg !1372\l}"];
}
