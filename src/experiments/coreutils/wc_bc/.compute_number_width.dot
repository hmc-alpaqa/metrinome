digraph "CFG for 'compute_number_width' function" {
	label="CFG for 'compute_number_width' function";

	Node0x1e64ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca %struct.fstatus*, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  store i64 %0, i64* %3, align 8, !tbaa !1306\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !1297, metadata\l... !DIExpression()), !dbg !1310\l  store %struct.fstatus* %1, %struct.fstatus** %4, align 8, !tbaa !1311\l  call void @llvm.dbg.declare(metadata %struct.fstatus** %4, metadata !1298,\l... metadata !DIExpression()), !dbg !1313\l  %9 = bitcast i32* %5 to i8*, !dbg !1314\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #24, !dbg !1314\l  call void @llvm.dbg.declare(metadata i32* %5, metadata !1299, metadata\l... !DIExpression()), !dbg !1315\l  store i32 1, i32* %5, align 4, !dbg !1315, !tbaa !1316\l  %10 = load i64, i64* %3, align 8, !dbg !1318, !tbaa !1306\l  %11 = icmp ult i64 0, %10, !dbg !1319\l  br i1 %11, label %12, label %78, !dbg !1320\l|{<s0>T|<s1>F}}"];
	Node0x1e64ea0:s0 -> Node0x1e650e0;
	Node0x1e64ea0:s1 -> Node0x1e65680;
	Node0x1e650e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%12:\l12:                                               \l  %13 = load %struct.fstatus*, %struct.fstatus** %4, align 8, !dbg !1321,\l... !tbaa !1311\l  %14 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %13, i64 0,\l... !dbg !1321\l  %15 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %14, i32 0,\l... i32 0, !dbg !1322\l  %16 = load i32, i32* %15, align 8, !dbg !1322, !tbaa !1323\l  %17 = icmp sle i32 %16, 0, !dbg !1327\l  br i1 %17, label %18, label %78, !dbg !1328\l|{<s0>T|<s1>F}}"];
	Node0x1e650e0:s0 -> Node0x1e65130;
	Node0x1e650e0:s1 -> Node0x1e65680;
	Node0x1e65130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%18:\l18:                                               \l  %19 = bitcast i32* %6 to i8*, !dbg !1329\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #24, !dbg !1329\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !1300, metadata\l... !DIExpression()), !dbg !1330\l  store i32 1, i32* %6, align 4, !dbg !1330, !tbaa !1316\l  %20 = bitcast i64* %7 to i8*, !dbg !1331\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #24, !dbg !1331\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1303, metadata\l... !DIExpression()), !dbg !1332\l  store i64 0, i64* %7, align 8, !dbg !1332, !tbaa !1306\l  %21 = bitcast i64* %8 to i8*, !dbg !1333\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #24, !dbg !1333\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1304, metadata\l... !DIExpression()), !dbg !1334\l  store i64 0, i64* %8, align 8, !dbg !1334, !tbaa !1306\l  br label %22, !dbg !1333\l}"];
	Node0x1e65130 -> Node0x1e65180;
	Node0x1e65180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = load i64, i64* %8, align 8, !dbg !1335, !tbaa !1306\l  %24 = load i64, i64* %3, align 8, !dbg !1337, !tbaa !1306\l  %25 = icmp ult i64 %23, %24, !dbg !1338\l  br i1 %25, label %28, label %26, !dbg !1339\l|{<s0>T|<s1>F}}"];
	Node0x1e65180:s0 -> Node0x1e65220;
	Node0x1e65180:s1 -> Node0x1e651d0;
	Node0x1e651d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%26:\l26:                                               \l  %27 = bitcast i64* %8 to i8*, !dbg !1340\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #24, !dbg !1340\l  br label %59\l}"];
	Node0x1e651d0 -> Node0x1e65450;
	Node0x1e65220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%28:\l28:                                               \l  %29 = load %struct.fstatus*, %struct.fstatus** %4, align 8, !dbg !1341,\l... !tbaa !1311\l  %30 = load i64, i64* %8, align 8, !dbg !1343, !tbaa !1306\l  %31 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %29, i64 %30,\l... !dbg !1341\l  %32 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %31, i32 0,\l... i32 0, !dbg !1344\l  %33 = load i32, i32* %32, align 8, !dbg !1344, !tbaa !1323\l  %34 = icmp ne i32 %33, 0, !dbg !1341\l  br i1 %34, label %55, label %35, !dbg !1345\l|{<s0>T|<s1>F}}"];
	Node0x1e65220:s0 -> Node0x1e653b0;
	Node0x1e65220:s1 -> Node0x1e65270;
	Node0x1e65270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%35:\l35:                                               \l  %36 = load %struct.fstatus*, %struct.fstatus** %4, align 8, !dbg !1346,\l... !tbaa !1311\l  %37 = load i64, i64* %8, align 8, !dbg !1346, !tbaa !1306\l  %38 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %36, i64 %37,\l... !dbg !1346\l  %39 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %38, i32 0,\l... i32 1, !dbg !1346\l  %40 = getelementptr inbounds %struct.stat, %struct.stat* %39, i32 0, i32 3,\l... !dbg !1346\l  %41 = load i32, i32* %40, align 8, !dbg !1346, !tbaa !1349\l  %42 = and i32 %41, 61440, !dbg !1346\l  %43 = icmp eq i32 %42, 32768, !dbg !1346\l  br i1 %43, label %44, label %53, !dbg !1350\l|{<s0>T|<s1>F}}"];
	Node0x1e65270:s0 -> Node0x1e652c0;
	Node0x1e65270:s1 -> Node0x1e65310;
	Node0x1e652c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%44:\l44:                                               \l  %45 = load %struct.fstatus*, %struct.fstatus** %4, align 8, !dbg !1351,\l... !tbaa !1311\l  %46 = load i64, i64* %8, align 8, !dbg !1352, !tbaa !1306\l  %47 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %45, i64 %46,\l... !dbg !1351\l  %48 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %47, i32 0,\l... i32 1, !dbg !1353\l  %49 = getelementptr inbounds %struct.stat, %struct.stat* %48, i32 0, i32 8,\l... !dbg !1354\l  %50 = load i64, i64* %49, align 8, !dbg !1354, !tbaa !1355\l  %51 = load i64, i64* %7, align 8, !dbg !1356, !tbaa !1306\l  %52 = add i64 %51, %50, !dbg !1356\l  store i64 %52, i64* %7, align 8, !dbg !1356, !tbaa !1306\l  br label %54, !dbg !1357\l}"];
	Node0x1e652c0 -> Node0x1e65360;
	Node0x1e65310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%53:\l53:                                               \l  store i32 7, i32* %6, align 4, !dbg !1358, !tbaa !1316\l  br label %54\l}"];
	Node0x1e65310 -> Node0x1e65360;
	Node0x1e65360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%54:\l54:                                               \l  br label %55, !dbg !1359\l}"];
	Node0x1e65360 -> Node0x1e653b0;
	Node0x1e653b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%55:\l55:                                               \l  br label %56, !dbg !1344\l}"];
	Node0x1e653b0 -> Node0x1e65400;
	Node0x1e65400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%56:\l56:                                               \l  %57 = load i64, i64* %8, align 8, !dbg !1360, !tbaa !1306\l  %58 = add i64 %57, 1, !dbg !1360\l  store i64 %58, i64* %8, align 8, !dbg !1360, !tbaa !1306\l  br label %22, !dbg !1340, !llvm.loop !1361\l}"];
	Node0x1e65400 -> Node0x1e65180;
	Node0x1e65450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%59:\l59:                                               \l  br label %60, !dbg !1365\l}"];
	Node0x1e65450 -> Node0x1e654a0;
	Node0x1e654a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  %61 = load i64, i64* %7, align 8, !dbg !1366, !tbaa !1306\l  %62 = icmp ule i64 10, %61, !dbg !1369\l  br i1 %62, label %63, label %69, !dbg !1370\l|{<s0>T|<s1>F}}"];
	Node0x1e654a0:s0 -> Node0x1e654f0;
	Node0x1e654a0:s1 -> Node0x1e65590;
	Node0x1e654f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%63:\l63:                                               \l  %64 = load i32, i32* %5, align 4, !dbg !1371, !tbaa !1316\l  %65 = add nsw i32 %64, 1, !dbg !1371\l  store i32 %65, i32* %5, align 4, !dbg !1371, !tbaa !1316\l  br label %66, !dbg !1372\l}"];
	Node0x1e654f0 -> Node0x1e65540;
	Node0x1e65540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%66:\l66:                                               \l  %67 = load i64, i64* %7, align 8, !dbg !1373, !tbaa !1306\l  %68 = udiv i64 %67, 10, !dbg !1373\l  store i64 %68, i64* %7, align 8, !dbg !1373, !tbaa !1306\l  br label %60, !dbg !1374, !llvm.loop !1375\l}"];
	Node0x1e65540 -> Node0x1e654a0;
	Node0x1e65590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%69:\l69:                                               \l  %70 = load i32, i32* %5, align 4, !dbg !1377, !tbaa !1316\l  %71 = load i32, i32* %6, align 4, !dbg !1379, !tbaa !1316\l  %72 = icmp slt i32 %70, %71, !dbg !1380\l  br i1 %72, label %73, label %75, !dbg !1381\l|{<s0>T|<s1>F}}"];
	Node0x1e65590:s0 -> Node0x1e655e0;
	Node0x1e65590:s1 -> Node0x1e65630;
	Node0x1e655e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%73:\l73:                                               \l  %74 = load i32, i32* %6, align 4, !dbg !1382, !tbaa !1316\l  store i32 %74, i32* %5, align 4, !dbg !1383, !tbaa !1316\l  br label %75, !dbg !1384\l}"];
	Node0x1e655e0 -> Node0x1e65630;
	Node0x1e65630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%75:\l75:                                               \l  %76 = bitcast i64* %7 to i8*, !dbg !1385\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #24, !dbg !1385\l  %77 = bitcast i32* %6 to i8*, !dbg !1385\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %77) #24, !dbg !1385\l  br label %78, !dbg !1386\l}"];
	Node0x1e65630 -> Node0x1e65680;
	Node0x1e65680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%78:\l78:                                               \l  %79 = load i32, i32* %5, align 4, !dbg !1387, !tbaa !1316\l  %80 = bitcast i32* %5 to i8*, !dbg !1388\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %80) #24, !dbg !1388\l  ret i32 %79, !dbg !1389\l}"];
}
