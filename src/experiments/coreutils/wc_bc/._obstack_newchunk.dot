digraph "CFG for '_obstack_newchunk' function" {
	label="CFG for '_obstack_newchunk' function";

	Node0x20244a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca %struct.obstack*, align 8\l  %4 = alloca i64, align 8\l  %5 = alloca %struct._obstack_chunk*, align 8\l  %6 = alloca %struct._obstack_chunk*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  store %struct.obstack* %0, %struct.obstack** %3, align 8, !tbaa !1338\l  call void @llvm.dbg.declare(metadata %struct.obstack** %3, metadata !1329,\l... metadata !DIExpression()), !dbg !1342\l  store i64 %1, i64* %4, align 8, !tbaa !1343\l  call void @llvm.dbg.declare(metadata i64* %4, metadata !1330, metadata\l... !DIExpression()), !dbg !1345\l  %12 = bitcast %struct._obstack_chunk** %5 to i8*, !dbg !1346\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #24, !dbg !1346\l  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %5, metadata\l... !1331, metadata !DIExpression()), !dbg !1347\l  %13 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1348,\l... !tbaa !1338\l  %14 = getelementptr inbounds %struct.obstack, %struct.obstack* %13, i32 0,\l... i32 1, !dbg !1349\l  %15 = load %struct._obstack_chunk*, %struct._obstack_chunk** %14, align 8,\l... !dbg !1349, !tbaa !1350\l  store %struct._obstack_chunk* %15, %struct._obstack_chunk** %5, align 8,\l... !dbg !1347, !tbaa !1338\l  %16 = bitcast %struct._obstack_chunk** %6 to i8*, !dbg !1353\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #24, !dbg !1353\l  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %6, metadata\l... !1332, metadata !DIExpression()), !dbg !1354\l  store %struct._obstack_chunk* null, %struct._obstack_chunk** %6, align 8,\l... !dbg !1354, !tbaa !1338\l  %17 = bitcast i64* %7 to i8*, !dbg !1355\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #24, !dbg !1355\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !1333, metadata\l... !DIExpression()), !dbg !1356\l  %18 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1357,\l... !tbaa !1338\l  %19 = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0,\l... i32 3, !dbg !1358\l  %20 = load i8*, i8** %19, align 8, !dbg !1358, !tbaa !1359\l  %21 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1360,\l... !tbaa !1338\l  %22 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0,\l... i32 2, !dbg !1361\l  %23 = load i8*, i8** %22, align 8, !dbg !1361, !tbaa !1362\l  %24 = ptrtoint i8* %20 to i64, !dbg !1363\l  %25 = ptrtoint i8* %23 to i64, !dbg !1363\l  %26 = sub i64 %24, %25, !dbg !1363\l  store i64 %26, i64* %7, align 8, !dbg !1356, !tbaa !1343\l  %27 = bitcast i8** %8 to i8*, !dbg !1364\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #24, !dbg !1364\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1334, metadata\l... !DIExpression()), !dbg !1365\l  %28 = bitcast i64* %9 to i8*, !dbg !1366\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #24, !dbg !1366\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1335, metadata\l... !DIExpression()), !dbg !1367\l  %29 = load i64, i64* %7, align 8, !dbg !1368, !tbaa !1343\l  %30 = load i64, i64* %4, align 8, !dbg !1369, !tbaa !1343\l  %31 = add i64 %29, %30, !dbg !1370\l  store i64 %31, i64* %9, align 8, !dbg !1367, !tbaa !1343\l  %32 = bitcast i64* %10 to i8*, !dbg !1371\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #24, !dbg !1371\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1336, metadata\l... !DIExpression()), !dbg !1372\l  %33 = load i64, i64* %9, align 8, !dbg !1373, !tbaa !1343\l  %34 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1374,\l... !tbaa !1338\l  %35 = getelementptr inbounds %struct.obstack, %struct.obstack* %34, i32 0,\l... i32 6, !dbg !1375\l  %36 = load i64, i64* %35, align 8, !dbg !1375, !tbaa !1376\l  %37 = add i64 %33, %36, !dbg !1377\l  store i64 %37, i64* %10, align 8, !dbg !1372, !tbaa !1343\l  %38 = bitcast i64* %11 to i8*, !dbg !1378\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #24, !dbg !1378\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1337, metadata\l... !DIExpression()), !dbg !1379\l  %39 = load i64, i64* %10, align 8, !dbg !1380, !tbaa !1343\l  %40 = load i64, i64* %7, align 8, !dbg !1381, !tbaa !1343\l  %41 = lshr i64 %40, 3, !dbg !1382\l  %42 = add i64 %39, %41, !dbg !1383\l  %43 = add i64 %42, 100, !dbg !1384\l  store i64 %43, i64* %11, align 8, !dbg !1379, !tbaa !1343\l  %44 = load i64, i64* %11, align 8, !dbg !1385, !tbaa !1343\l  %45 = load i64, i64* %10, align 8, !dbg !1387, !tbaa !1343\l  %46 = icmp ult i64 %44, %45, !dbg !1388\l  br i1 %46, label %47, label %49, !dbg !1389\l|{<s0>T|<s1>F}}"];
	Node0x20244a0:s0 -> Node0x2026c80;
	Node0x20244a0:s1 -> Node0x2026cd0;
	Node0x2026c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%47:\l47:                                               \l  %48 = load i64, i64* %10, align 8, !dbg !1390, !tbaa !1343\l  store i64 %48, i64* %11, align 8, !dbg !1391, !tbaa !1343\l  br label %49, !dbg !1392\l}"];
	Node0x2026c80 -> Node0x2026cd0;
	Node0x2026cd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = load i64, i64* %11, align 8, !dbg !1393, !tbaa !1343\l  %51 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1395,\l... !tbaa !1338\l  %52 = getelementptr inbounds %struct.obstack, %struct.obstack* %51, i32 0,\l... i32 0, !dbg !1396\l  %53 = load i64, i64* %52, align 8, !dbg !1396, !tbaa !1397\l  %54 = icmp ult i64 %50, %53, !dbg !1398\l  br i1 %54, label %55, label %59, !dbg !1399\l|{<s0>T|<s1>F}}"];
	Node0x2026cd0:s0 -> Node0x2026d20;
	Node0x2026cd0:s1 -> Node0x2026d70;
	Node0x2026d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%55:\l55:                                               \l  %56 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1400,\l... !tbaa !1338\l  %57 = getelementptr inbounds %struct.obstack, %struct.obstack* %56, i32 0,\l... i32 0, !dbg !1401\l  %58 = load i64, i64* %57, align 8, !dbg !1401, !tbaa !1397\l  store i64 %58, i64* %11, align 8, !dbg !1402, !tbaa !1343\l  br label %59, !dbg !1403\l}"];
	Node0x2026d20 -> Node0x2026d70;
	Node0x2026d70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = load i64, i64* %7, align 8, !dbg !1404, !tbaa !1343\l  %61 = load i64, i64* %9, align 8, !dbg !1406, !tbaa !1343\l  %62 = icmp ule i64 %60, %61, !dbg !1407\l  br i1 %62, label %63, label %72, !dbg !1408\l|{<s0>T|<s1>F}}"];
	Node0x2026d70:s0 -> Node0x2026dc0;
	Node0x2026d70:s1 -> Node0x2026e60;
	Node0x2026dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%63:\l63:                                               \l  %64 = load i64, i64* %9, align 8, !dbg !1409, !tbaa !1343\l  %65 = load i64, i64* %10, align 8, !dbg !1410, !tbaa !1343\l  %66 = icmp ule i64 %64, %65, !dbg !1411\l  br i1 %66, label %67, label %72, !dbg !1412\l|{<s0>T|<s1>F}}"];
	Node0x2026dc0:s0 -> Node0x2026e10;
	Node0x2026dc0:s1 -> Node0x2026e60;
	Node0x2026e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%67:\l67:                                               \l  %68 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1413,\l... !tbaa !1338\l  %69 = load i64, i64* %11, align 8, !dbg !1414, !tbaa !1343\l  %70 = call i8* @call_chunkfun(%struct.obstack* noundef %68, i64 noundef\l... %69), !dbg !1415\l  %71 = bitcast i8* %70 to %struct._obstack_chunk*, !dbg !1415\l  store %struct._obstack_chunk* %71, %struct._obstack_chunk** %6, align 8,\l... !dbg !1416, !tbaa !1338\l  br label %72, !dbg !1417\l}"];
	Node0x2026e10 -> Node0x2026e60;
	Node0x2026e60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  %73 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8,\l... !dbg !1418, !tbaa !1338\l  %74 = icmp ne %struct._obstack_chunk* %73, null, !dbg !1418\l  br i1 %74, label %77, label %75, !dbg !1420\l|{<s0>T|<s1>F}}"];
	Node0x2026e60:s0 -> Node0x2026f00;
	Node0x2026e60:s1 -> Node0x2026eb0;
	Node0x2026eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%75:\l75:                                               \l  %76 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg\l... !1421, !tbaa !1338\l  call void %76() #25, !dbg !1422\l  unreachable, !dbg !1422\l}"];
	Node0x2026f00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8,\l... !dbg !1423, !tbaa !1338\l  %79 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1424,\l... !tbaa !1338\l  %80 = getelementptr inbounds %struct.obstack, %struct.obstack* %79, i32 0,\l... i32 1, !dbg !1425\l  store %struct._obstack_chunk* %78, %struct._obstack_chunk** %80, align 8,\l... !dbg !1426, !tbaa !1350\l  %81 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8,\l... !dbg !1427, !tbaa !1338\l  %82 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8,\l... !dbg !1428, !tbaa !1338\l  %83 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %82, i32 0, i32 1, !dbg !1429\l  store %struct._obstack_chunk* %81, %struct._obstack_chunk** %83, align 8,\l... !dbg !1430, !tbaa !1338\l  %84 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8,\l... !dbg !1431, !tbaa !1338\l  %85 = bitcast %struct._obstack_chunk* %84 to i8*, !dbg !1432\l  %86 = load i64, i64* %11, align 8, !dbg !1433, !tbaa !1343\l  %87 = getelementptr inbounds i8, i8* %85, i64 %86, !dbg !1434\l  %88 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1435,\l... !tbaa !1338\l  %89 = getelementptr inbounds %struct.obstack, %struct.obstack* %88, i32 0,\l... i32 4, !dbg !1436\l  store i8* %87, i8** %89, align 8, !dbg !1437, !tbaa !1438\l  %90 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8,\l... !dbg !1439, !tbaa !1338\l  %91 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %90, i32 0, i32 0, !dbg !1440\l  store i8* %87, i8** %91, align 8, !dbg !1441, !tbaa !1338\l  %92 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8,\l... !dbg !1442, !tbaa !1338\l  %93 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk*\l... %92, i32 0, i32 2, !dbg !1442\l  %94 = getelementptr inbounds [0 x i8], [0 x i8]* %93, i64 0, i64 0, !dbg\l... !1442\l  %95 = ptrtoint i8* %94 to i64, !dbg !1442\l  %96 = sub i64 %95, 0, !dbg !1442\l  %97 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1442,\l... !tbaa !1338\l  %98 = getelementptr inbounds %struct.obstack, %struct.obstack* %97, i32 0,\l... i32 6, !dbg !1442\l  %99 = load i64, i64* %98, align 8, !dbg !1442, !tbaa !1376\l  %100 = add i64 %96, %99, !dbg !1442\l  %101 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1442,\l... !tbaa !1338\l  %102 = getelementptr inbounds %struct.obstack, %struct.obstack* %101, i32 0,\l... i32 6, !dbg !1442\l  %103 = load i64, i64* %102, align 8, !dbg !1442, !tbaa !1376\l  %104 = xor i64 %103, -1, !dbg !1442\l  %105 = and i64 %100, %104, !dbg !1442\l  %106 = getelementptr inbounds i8, i8* null, i64 %105, !dbg !1442\l  store i8* %106, i8** %8, align 8, !dbg !1443, !tbaa !1338\l  %107 = load i8*, i8** %8, align 8, !dbg !1444, !tbaa !1338\l  %108 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1445,\l... !tbaa !1338\l  %109 = getelementptr inbounds %struct.obstack, %struct.obstack* %108, i32 0,\l... i32 2, !dbg !1446\l  %110 = load i8*, i8** %109, align 8, !dbg !1446, !tbaa !1362\l  %111 = load i64, i64* %7, align 8, !dbg !1447, !tbaa !1343\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %107, i8* align 1 %110, i64\l... %111, i1 false), !dbg !1448\l  %112 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1449,\l... !tbaa !1338\l  %113 = getelementptr inbounds %struct.obstack, %struct.obstack* %112, i32 0,\l... i32 10, !dbg !1451\l  %114 = load i8, i8* %113, align 8, !dbg !1451\l  %115 = lshr i8 %114, 1, !dbg !1451\l  %116 = and i8 %115, 1, !dbg !1451\l  %117 = zext i8 %116 to i32, !dbg !1451\l  %118 = icmp ne i32 %117, 0, !dbg !1449\l  br i1 %118, label %148, label %119, !dbg !1452\l|{<s0>T|<s1>F}}"];
	Node0x2026f00:s0 -> Node0x2026ff0;
	Node0x2026f00:s1 -> Node0x2026f50;
	Node0x2026f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%119:\l119:                                              \l  %120 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1453,\l... !tbaa !1338\l  %121 = getelementptr inbounds %struct.obstack, %struct.obstack* %120, i32 0,\l... i32 2, !dbg !1454\l  %122 = load i8*, i8** %121, align 8, !dbg !1454, !tbaa !1362\l  %123 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8,\l... !dbg !1455, !tbaa !1338\l  %124 = getelementptr inbounds %struct._obstack_chunk,\l... %struct._obstack_chunk* %123, i32 0, i32 2, !dbg !1455\l  %125 = getelementptr inbounds [0 x i8], [0 x i8]* %124, i64 0, i64 0, !dbg\l... !1455\l  %126 = ptrtoint i8* %125 to i64, !dbg !1455\l  %127 = sub i64 %126, 0, !dbg !1455\l  %128 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1455,\l... !tbaa !1338\l  %129 = getelementptr inbounds %struct.obstack, %struct.obstack* %128, i32 0,\l... i32 6, !dbg !1455\l  %130 = load i64, i64* %129, align 8, !dbg !1455, !tbaa !1376\l  %131 = add i64 %127, %130, !dbg !1455\l  %132 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1455,\l... !tbaa !1338\l  %133 = getelementptr inbounds %struct.obstack, %struct.obstack* %132, i32 0,\l... i32 6, !dbg !1455\l  %134 = load i64, i64* %133, align 8, !dbg !1455, !tbaa !1376\l  %135 = xor i64 %134, -1, !dbg !1455\l  %136 = and i64 %131, %135, !dbg !1455\l  %137 = getelementptr inbounds i8, i8* null, i64 %136, !dbg !1455\l  %138 = icmp eq i8* %122, %137, !dbg !1456\l  br i1 %138, label %139, label %148, !dbg !1457\l|{<s0>T|<s1>F}}"];
	Node0x2026f50:s0 -> Node0x2026fa0;
	Node0x2026f50:s1 -> Node0x2026ff0;
	Node0x2026fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%139:\l139:                                              \l  %140 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8,\l... !dbg !1458, !tbaa !1338\l  %141 = getelementptr inbounds %struct._obstack_chunk,\l... %struct._obstack_chunk* %140, i32 0, i32 1, !dbg !1460\l  %142 = load %struct._obstack_chunk*, %struct._obstack_chunk** %141, align 8,\l... !dbg !1460, !tbaa !1338\l  %143 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8,\l... !dbg !1461, !tbaa !1338\l  %144 = getelementptr inbounds %struct._obstack_chunk,\l... %struct._obstack_chunk* %143, i32 0, i32 1, !dbg !1462\l  store %struct._obstack_chunk* %142, %struct._obstack_chunk** %144, align 8,\l... !dbg !1463, !tbaa !1338\l  %145 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1464,\l... !tbaa !1338\l  %146 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8,\l... !dbg !1465, !tbaa !1338\l  %147 = bitcast %struct._obstack_chunk* %146 to i8*, !dbg !1465\l  call void @call_freefun(%struct.obstack* noundef %145, i8* noundef %147),\l... !dbg !1466\l  br label %148, !dbg !1467\l}"];
	Node0x2026fa0 -> Node0x2026ff0;
	Node0x2026ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%148:\l148:                                              \l  %149 = load i8*, i8** %8, align 8, !dbg !1468, !tbaa !1338\l  %150 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1469,\l... !tbaa !1338\l  %151 = getelementptr inbounds %struct.obstack, %struct.obstack* %150, i32 0,\l... i32 2, !dbg !1470\l  store i8* %149, i8** %151, align 8, !dbg !1471, !tbaa !1362\l  %152 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1472,\l... !tbaa !1338\l  %153 = getelementptr inbounds %struct.obstack, %struct.obstack* %152, i32 0,\l... i32 2, !dbg !1473\l  %154 = load i8*, i8** %153, align 8, !dbg !1473, !tbaa !1362\l  %155 = load i64, i64* %7, align 8, !dbg !1474, !tbaa !1343\l  %156 = getelementptr inbounds i8, i8* %154, i64 %155, !dbg !1475\l  %157 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1476,\l... !tbaa !1338\l  %158 = getelementptr inbounds %struct.obstack, %struct.obstack* %157, i32 0,\l... i32 3, !dbg !1477\l  store i8* %156, i8** %158, align 8, !dbg !1478, !tbaa !1359\l  %159 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !1479,\l... !tbaa !1338\l  %160 = getelementptr inbounds %struct.obstack, %struct.obstack* %159, i32 0,\l... i32 10, !dbg !1480\l  %161 = load i8, i8* %160, align 8, !dbg !1481\l  %162 = and i8 %161, -3, !dbg !1481\l  %163 = or i8 %162, 0, !dbg !1481\l  store i8 %163, i8* %160, align 8, !dbg !1481\l  %164 = bitcast i64* %11 to i8*, !dbg !1482\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164) #24, !dbg !1482\l  %165 = bitcast i64* %10 to i8*, !dbg !1482\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #24, !dbg !1482\l  %166 = bitcast i64* %9 to i8*, !dbg !1482\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %166) #24, !dbg !1482\l  %167 = bitcast i8** %8 to i8*, !dbg !1482\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %167) #24, !dbg !1482\l  %168 = bitcast i64* %7 to i8*, !dbg !1482\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %168) #24, !dbg !1482\l  %169 = bitcast %struct._obstack_chunk** %6 to i8*, !dbg !1482\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %169) #24, !dbg !1482\l  %170 = bitcast %struct._obstack_chunk** %5 to i8*, !dbg !1482\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %170) #24, !dbg !1482\l  ret void, !dbg !1482\l}"];
}
