digraph "CFG for 'argmatch' function" {
	label="CFG for 'argmatch' function";

	Node0x1e71b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i8**, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i8, align 1\l  %14 = alloca i32, align 4\l  store i8* %0, i8** %6, align 8, !tbaa !1304\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1296, metadata\l... !DIExpression()), !dbg !1308\l  store i8** %1, i8*** %7, align 8, !tbaa !1304\l  call void @llvm.dbg.declare(metadata i8*** %7, metadata !1297, metadata\l... !DIExpression()), !dbg !1309\l  store i8* %2, i8** %8, align 8, !tbaa !1304\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1298, metadata\l... !DIExpression()), !dbg !1310\l  store i64 %3, i64* %9, align 8, !tbaa !1311\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1299, metadata\l... !DIExpression()), !dbg !1313\l  %15 = bitcast i64* %10 to i8*, !dbg !1314\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #24, !dbg !1314\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1300, metadata\l... !DIExpression()), !dbg !1315\l  %16 = bitcast i64* %11 to i8*, !dbg !1316\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #24, !dbg !1316\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1301, metadata\l... !DIExpression()), !dbg !1317\l  %17 = bitcast i64* %12 to i8*, !dbg !1318\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #24, !dbg !1318\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1302, metadata\l... !DIExpression()), !dbg !1319\l  store i64 -1, i64* %12, align 8, !dbg !1319, !tbaa !1311\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #24, !dbg !1320\l  call void @llvm.dbg.declare(metadata i8* %13, metadata !1303, metadata\l... !DIExpression()), !dbg !1321\l  store i8 0, i8* %13, align 1, !dbg !1321, !tbaa !1322\l  %18 = load i8*, i8** %6, align 8, !dbg !1324, !tbaa !1304\l  %19 = call i64 @strlen(i8* noundef %18) #25, !dbg !1325\l  store i64 %19, i64* %11, align 8, !dbg !1326, !tbaa !1311\l  store i64 0, i64* %10, align 8, !dbg !1327, !tbaa !1311\l  br label %20, !dbg !1329\l}"];
	Node0x1e71b90 -> Node0x1e71c80;
	Node0x1e71c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = load i8**, i8*** %7, align 8, !dbg !1330, !tbaa !1304\l  %22 = load i64, i64* %10, align 8, !dbg !1332, !tbaa !1311\l  %23 = getelementptr inbounds i8*, i8** %21, i64 %22, !dbg !1330\l  %24 = load i8*, i8** %23, align 8, !dbg !1330, !tbaa !1304\l  %25 = icmp ne i8* %24, null, !dbg !1333\l  br i1 %25, label %26, label %75, !dbg !1333\l|{<s0>T|<s1>F}}"];
	Node0x1e71c80:s0 -> Node0x1e71cd0;
	Node0x1e71c80:s1 -> Node0x1e720e0;
	Node0x1e71cd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i8**, i8*** %7, align 8, !dbg !1334, !tbaa !1304\l  %28 = load i64, i64* %10, align 8, !dbg !1337, !tbaa !1311\l  %29 = getelementptr inbounds i8*, i8** %27, i64 %28, !dbg !1334\l  %30 = load i8*, i8** %29, align 8, !dbg !1334, !tbaa !1304\l  %31 = load i8*, i8** %6, align 8, !dbg !1338, !tbaa !1304\l  %32 = load i64, i64* %11, align 8, !dbg !1339, !tbaa !1311\l  %33 = call i32 @strncmp(i8* noundef %30, i8* noundef %31, i64 noundef %32)\l... #25, !dbg !1340\l  %34 = icmp ne i32 %33, 0, !dbg !1340\l  br i1 %34, label %71, label %35, !dbg !1341\l|{<s0>T|<s1>F}}"];
	Node0x1e71cd0:s0 -> Node0x1e72040;
	Node0x1e71cd0:s1 -> Node0x1e71d20;
	Node0x1e71d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%35:\l35:                                               \l  %36 = load i8**, i8*** %7, align 8, !dbg !1342, !tbaa !1304\l  %37 = load i64, i64* %10, align 8, !dbg !1345, !tbaa !1311\l  %38 = getelementptr inbounds i8*, i8** %36, i64 %37, !dbg !1342\l  %39 = load i8*, i8** %38, align 8, !dbg !1342, !tbaa !1304\l  %40 = call i64 @strlen(i8* noundef %39) #25, !dbg !1346\l  %41 = load i64, i64* %11, align 8, !dbg !1347, !tbaa !1311\l  %42 = icmp eq i64 %40, %41, !dbg !1348\l  br i1 %42, label %43, label %45, !dbg !1349\l|{<s0>T|<s1>F}}"];
	Node0x1e71d20:s0 -> Node0x1e71d70;
	Node0x1e71d20:s1 -> Node0x1e71dc0;
	Node0x1e71d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%43:\l43:                                               \l  %44 = load i64, i64* %10, align 8, !dbg !1350, !tbaa !1311\l  store i64 %44, i64* %5, align 8, !dbg !1351\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1351\l}"];
	Node0x1e71d70 -> Node0x1e721d0;
	Node0x1e71dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%45:\l45:                                               \l  %46 = load i64, i64* %12, align 8, !dbg !1352, !tbaa !1311\l  %47 = icmp eq i64 %46, -1, !dbg !1354\l  br i1 %47, label %48, label %50, !dbg !1355\l|{<s0>T|<s1>F}}"];
	Node0x1e71dc0:s0 -> Node0x1e71e10;
	Node0x1e71dc0:s1 -> Node0x1e71e60;
	Node0x1e71e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%48:\l48:                                               \l  %49 = load i64, i64* %10, align 8, !dbg !1356, !tbaa !1311\l  store i64 %49, i64* %12, align 8, !dbg !1357, !tbaa !1311\l  br label %69, !dbg !1358\l}"];
	Node0x1e71e10 -> Node0x1e71fa0;
	Node0x1e71e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%50:\l50:                                               \l  %51 = load i8*, i8** %8, align 8, !dbg !1359, !tbaa !1304\l  %52 = icmp eq i8* %51, null, !dbg !1362\l  br i1 %52, label %67, label %53, !dbg !1363\l|{<s0>T|<s1>F}}"];
	Node0x1e71e60:s0 -> Node0x1e71f00;
	Node0x1e71e60:s1 -> Node0x1e71eb0;
	Node0x1e71eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%53:\l53:                                               \l  %54 = load i8*, i8** %8, align 8, !dbg !1364, !tbaa !1304\l  %55 = load i64, i64* %9, align 8, !dbg !1365, !tbaa !1311\l  %56 = load i64, i64* %12, align 8, !dbg !1366, !tbaa !1311\l  %57 = mul i64 %55, %56, !dbg !1367\l  %58 = getelementptr inbounds i8, i8* %54, i64 %57, !dbg !1368\l  %59 = load i8*, i8** %8, align 8, !dbg !1369, !tbaa !1304\l  %60 = load i64, i64* %9, align 8, !dbg !1370, !tbaa !1311\l  %61 = load i64, i64* %10, align 8, !dbg !1371, !tbaa !1311\l  %62 = mul i64 %60, %61, !dbg !1372\l  %63 = getelementptr inbounds i8, i8* %59, i64 %62, !dbg !1373\l  %64 = load i64, i64* %9, align 8, !dbg !1374, !tbaa !1311\l  %65 = call i32 @memcmp(i8* noundef %58, i8* noundef %63, i64 noundef %64)\l... #25, !dbg !1375\l  %66 = icmp ne i32 %65, 0, !dbg !1375\l  br i1 %66, label %67, label %68, !dbg !1376\l|{<s0>T|<s1>F}}"];
	Node0x1e71eb0:s0 -> Node0x1e71f00;
	Node0x1e71eb0:s1 -> Node0x1e71f50;
	Node0x1e71f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%67:\l67:                                               \l  store i8 1, i8* %13, align 1, !dbg !1377, !tbaa !1322\l  br label %68, !dbg !1379\l}"];
	Node0x1e71f00 -> Node0x1e71f50;
	Node0x1e71f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%68:\l68:                                               \l  br label %69\l}"];
	Node0x1e71f50 -> Node0x1e71fa0;
	Node0x1e71fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%69:\l69:                                               \l  br label %70\l}"];
	Node0x1e71fa0 -> Node0x1e71ff0;
	Node0x1e71ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%70:\l70:                                               \l  br label %71, !dbg !1380\l}"];
	Node0x1e71ff0 -> Node0x1e72040;
	Node0x1e72040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%71:\l71:                                               \l  br label %72, !dbg !1381\l}"];
	Node0x1e72040 -> Node0x1e72090;
	Node0x1e72090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%72:\l72:                                               \l  %73 = load i64, i64* %10, align 8, !dbg !1382, !tbaa !1311\l  %74 = add i64 %73, 1, !dbg !1382\l  store i64 %74, i64* %10, align 8, !dbg !1382, !tbaa !1311\l  br label %20, !dbg !1383, !llvm.loop !1384\l}"];
	Node0x1e72090 -> Node0x1e71c80;
	Node0x1e720e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%75:\l75:                                               \l  %76 = load i8, i8* %13, align 1, !dbg !1388, !tbaa !1322, !range !1390\l  %77 = trunc i8 %76 to i1, !dbg !1388\l  br i1 %77, label %78, label %79, !dbg !1391\l|{<s0>T|<s1>F}}"];
	Node0x1e720e0:s0 -> Node0x1e72130;
	Node0x1e720e0:s1 -> Node0x1e72180;
	Node0x1e72130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%78:\l78:                                               \l  store i64 -2, i64* %5, align 8, !dbg !1392\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1392\l}"];
	Node0x1e72130 -> Node0x1e721d0;
	Node0x1e72180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%79:\l79:                                               \l  %80 = load i64, i64* %12, align 8, !dbg !1393, !tbaa !1311\l  store i64 %80, i64* %5, align 8, !dbg !1394\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1394\l}"];
	Node0x1e72180 -> Node0x1e721d0;
	Node0x1e721d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%81:\l81:                                               \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #24, !dbg !1395\l  %82 = bitcast i64* %12 to i8*, !dbg !1395\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #24, !dbg !1395\l  %83 = bitcast i64* %11 to i8*, !dbg !1395\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #24, !dbg !1395\l  %84 = bitcast i64* %10 to i8*, !dbg !1395\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #24, !dbg !1395\l  %85 = load i64, i64* %5, align 8, !dbg !1395\l  ret i64 %85, !dbg !1395\l}"];
}
