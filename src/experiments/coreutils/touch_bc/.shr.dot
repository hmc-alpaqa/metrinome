digraph "CFG for 'shr' function" {
	label="CFG for 'shr' function";

	Node0x109fea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca i32, align 4\l  %5 = alloca i64, align 8\l  store i64 %0, i64* %3, align 8, !tbaa !1548\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !1545, metadata\l... !DIExpression()), !dbg !1552\l  store i32 %1, i32* %4, align 4, !tbaa !1553\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !1546, metadata\l... !DIExpression()), !dbg !1555\l  %6 = bitcast i64* %5 to i8*, !dbg !1556\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #22, !dbg !1556\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !1547, metadata\l... !DIExpression()), !dbg !1557\l  store i64 1, i64* %5, align 8, !dbg !1557, !tbaa !1548\l  %7 = load i64, i64* %5, align 8, !dbg !1558, !tbaa !1548\l  %8 = sub nsw i64 0, %7, !dbg !1559\l  %9 = ashr i64 %8, 1, !dbg !1560\l  %10 = icmp eq i64 %9, -1, !dbg !1561\l  br i1 %10, label %11, label %16, !dbg !1559\l|{<s0>T|<s1>F}}"];
	Node0x109fea0:s0 -> Node0x10a0f30;
	Node0x109fea0:s1 -> Node0x10a0f80;
	Node0x10a0f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%11:\l11:                                               \l  %12 = load i64, i64* %3, align 8, !dbg !1562, !tbaa !1548\l  %13 = load i32, i32* %4, align 4, !dbg !1563, !tbaa !1553\l  %14 = zext i32 %13 to i64, !dbg !1564\l  %15 = ashr i64 %12, %14, !dbg !1564\l  br label %33, !dbg !1559\l}"];
	Node0x10a0f30 -> Node0x10a0fd0;
	Node0x10a0f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%16:\l16:                                               \l  %17 = load i64, i64* %3, align 8, !dbg !1565, !tbaa !1548\l  %18 = load i64, i64* %3, align 8, !dbg !1566, !tbaa !1548\l  %19 = icmp slt i64 %18, 0, !dbg !1567\l  %20 = zext i1 %19 to i32, !dbg !1567\l  %21 = sext i32 %20 to i64, !dbg !1568\l  %22 = add nsw i64 %17, %21, !dbg !1569\l  %23 = load i64, i64* %5, align 8, !dbg !1570, !tbaa !1548\l  %24 = load i32, i32* %4, align 4, !dbg !1571, !tbaa !1553\l  %25 = zext i32 %24 to i64, !dbg !1572\l  %26 = shl i64 %23, %25, !dbg !1572\l  %27 = sdiv i64 %22, %26, !dbg !1573\l  %28 = load i64, i64* %3, align 8, !dbg !1574, !tbaa !1548\l  %29 = icmp slt i64 %28, 0, !dbg !1575\l  %30 = zext i1 %29 to i32, !dbg !1575\l  %31 = sext i32 %30 to i64, !dbg !1576\l  %32 = sub nsw i64 %27, %31, !dbg !1577\l  br label %33, !dbg !1559\l}"];
	Node0x10a0f80 -> Node0x10a0fd0;
	Node0x10a0fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i64 [ %15, %11 ], [ %32, %16 ], !dbg !1559\l  %35 = bitcast i64* %5 to i8*, !dbg !1578\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #22, !dbg !1578\l  ret i64 %34, !dbg !1579\l}"];
}
