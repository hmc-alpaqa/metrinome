digraph "CFG for 'argmatch' function" {
	label="CFG for 'argmatch' function";

	Node0xddc8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%4:\l  %5 = alloca i64, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i8**, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i8, align 1\l  %14 = alloca i32, align 4\l  store i8* %0, i8** %6, align 8, !tbaa !1554\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1546, metadata\l... !DIExpression()), !dbg !1558\l  store i8** %1, i8*** %7, align 8, !tbaa !1554\l  call void @llvm.dbg.declare(metadata i8*** %7, metadata !1547, metadata\l... !DIExpression()), !dbg !1559\l  store i8* %2, i8** %8, align 8, !tbaa !1554\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !1548, metadata\l... !DIExpression()), !dbg !1560\l  store i64 %3, i64* %9, align 8, !tbaa !1561\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1549, metadata\l... !DIExpression()), !dbg !1563\l  %15 = bitcast i64* %10 to i8*, !dbg !1564\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #22, !dbg !1564\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1550, metadata\l... !DIExpression()), !dbg !1565\l  %16 = bitcast i64* %11 to i8*, !dbg !1566\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #22, !dbg !1566\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1551, metadata\l... !DIExpression()), !dbg !1567\l  %17 = bitcast i64* %12 to i8*, !dbg !1568\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #22, !dbg !1568\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1552, metadata\l... !DIExpression()), !dbg !1569\l  store i64 -1, i64* %12, align 8, !dbg !1569, !tbaa !1561\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #22, !dbg !1570\l  call void @llvm.dbg.declare(metadata i8* %13, metadata !1553, metadata\l... !DIExpression()), !dbg !1571\l  store i8 0, i8* %13, align 1, !dbg !1571, !tbaa !1572\l  %18 = load i8*, i8** %6, align 8, !dbg !1574, !tbaa !1554\l  %19 = call i64 @strlen(i8* noundef %18) #23, !dbg !1575\l  store i64 %19, i64* %11, align 8, !dbg !1576, !tbaa !1561\l  store i64 0, i64* %10, align 8, !dbg !1577, !tbaa !1561\l  br label %20, !dbg !1579\l}"];
	Node0xddc8b0 -> Node0xddc9a0;
	Node0xddc9a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = load i8**, i8*** %7, align 8, !dbg !1580, !tbaa !1554\l  %22 = load i64, i64* %10, align 8, !dbg !1582, !tbaa !1561\l  %23 = getelementptr inbounds i8*, i8** %21, i64 %22, !dbg !1580\l  %24 = load i8*, i8** %23, align 8, !dbg !1580, !tbaa !1554\l  %25 = icmp ne i8* %24, null, !dbg !1583\l  br i1 %25, label %26, label %75, !dbg !1583\l|{<s0>T|<s1>F}}"];
	Node0xddc9a0:s0 -> Node0xddc9f0;
	Node0xddc9a0:s1 -> Node0xddce00;
	Node0xddc9f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i8**, i8*** %7, align 8, !dbg !1584, !tbaa !1554\l  %28 = load i64, i64* %10, align 8, !dbg !1587, !tbaa !1561\l  %29 = getelementptr inbounds i8*, i8** %27, i64 %28, !dbg !1584\l  %30 = load i8*, i8** %29, align 8, !dbg !1584, !tbaa !1554\l  %31 = load i8*, i8** %6, align 8, !dbg !1588, !tbaa !1554\l  %32 = load i64, i64* %11, align 8, !dbg !1589, !tbaa !1561\l  %33 = call i32 @strncmp(i8* noundef %30, i8* noundef %31, i64 noundef %32)\l... #23, !dbg !1590\l  %34 = icmp ne i32 %33, 0, !dbg !1590\l  br i1 %34, label %71, label %35, !dbg !1591\l|{<s0>T|<s1>F}}"];
	Node0xddc9f0:s0 -> Node0xddcd60;
	Node0xddc9f0:s1 -> Node0xddca40;
	Node0xddca40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%35:\l35:                                               \l  %36 = load i8**, i8*** %7, align 8, !dbg !1592, !tbaa !1554\l  %37 = load i64, i64* %10, align 8, !dbg !1595, !tbaa !1561\l  %38 = getelementptr inbounds i8*, i8** %36, i64 %37, !dbg !1592\l  %39 = load i8*, i8** %38, align 8, !dbg !1592, !tbaa !1554\l  %40 = call i64 @strlen(i8* noundef %39) #23, !dbg !1596\l  %41 = load i64, i64* %11, align 8, !dbg !1597, !tbaa !1561\l  %42 = icmp eq i64 %40, %41, !dbg !1598\l  br i1 %42, label %43, label %45, !dbg !1599\l|{<s0>T|<s1>F}}"];
	Node0xddca40:s0 -> Node0xddca90;
	Node0xddca40:s1 -> Node0xddcae0;
	Node0xddca90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%43:\l43:                                               \l  %44 = load i64, i64* %10, align 8, !dbg !1600, !tbaa !1561\l  store i64 %44, i64* %5, align 8, !dbg !1601\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1601\l}"];
	Node0xddca90 -> Node0xddcef0;
	Node0xddcae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%45:\l45:                                               \l  %46 = load i64, i64* %12, align 8, !dbg !1602, !tbaa !1561\l  %47 = icmp eq i64 %46, -1, !dbg !1604\l  br i1 %47, label %48, label %50, !dbg !1605\l|{<s0>T|<s1>F}}"];
	Node0xddcae0:s0 -> Node0xddcb30;
	Node0xddcae0:s1 -> Node0xddcb80;
	Node0xddcb30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%48:\l48:                                               \l  %49 = load i64, i64* %10, align 8, !dbg !1606, !tbaa !1561\l  store i64 %49, i64* %12, align 8, !dbg !1607, !tbaa !1561\l  br label %69, !dbg !1608\l}"];
	Node0xddcb30 -> Node0xddccc0;
	Node0xddcb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%50:\l50:                                               \l  %51 = load i8*, i8** %8, align 8, !dbg !1609, !tbaa !1554\l  %52 = icmp eq i8* %51, null, !dbg !1612\l  br i1 %52, label %67, label %53, !dbg !1613\l|{<s0>T|<s1>F}}"];
	Node0xddcb80:s0 -> Node0xddcc20;
	Node0xddcb80:s1 -> Node0xddcbd0;
	Node0xddcbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%53:\l53:                                               \l  %54 = load i8*, i8** %8, align 8, !dbg !1614, !tbaa !1554\l  %55 = load i64, i64* %9, align 8, !dbg !1615, !tbaa !1561\l  %56 = load i64, i64* %12, align 8, !dbg !1616, !tbaa !1561\l  %57 = mul i64 %55, %56, !dbg !1617\l  %58 = getelementptr inbounds i8, i8* %54, i64 %57, !dbg !1618\l  %59 = load i8*, i8** %8, align 8, !dbg !1619, !tbaa !1554\l  %60 = load i64, i64* %9, align 8, !dbg !1620, !tbaa !1561\l  %61 = load i64, i64* %10, align 8, !dbg !1621, !tbaa !1561\l  %62 = mul i64 %60, %61, !dbg !1622\l  %63 = getelementptr inbounds i8, i8* %59, i64 %62, !dbg !1623\l  %64 = load i64, i64* %9, align 8, !dbg !1624, !tbaa !1561\l  %65 = call i32 @memcmp(i8* noundef %58, i8* noundef %63, i64 noundef %64)\l... #23, !dbg !1625\l  %66 = icmp ne i32 %65, 0, !dbg !1625\l  br i1 %66, label %67, label %68, !dbg !1626\l|{<s0>T|<s1>F}}"];
	Node0xddcbd0:s0 -> Node0xddcc20;
	Node0xddcbd0:s1 -> Node0xddcc70;
	Node0xddcc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%67:\l67:                                               \l  store i8 1, i8* %13, align 1, !dbg !1627, !tbaa !1572\l  br label %68, !dbg !1629\l}"];
	Node0xddcc20 -> Node0xddcc70;
	Node0xddcc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%68:\l68:                                               \l  br label %69\l}"];
	Node0xddcc70 -> Node0xddccc0;
	Node0xddccc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%69:\l69:                                               \l  br label %70\l}"];
	Node0xddccc0 -> Node0xddcd10;
	Node0xddcd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%70:\l70:                                               \l  br label %71, !dbg !1630\l}"];
	Node0xddcd10 -> Node0xddcd60;
	Node0xddcd60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%71:\l71:                                               \l  br label %72, !dbg !1631\l}"];
	Node0xddcd60 -> Node0xddcdb0;
	Node0xddcdb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%72:\l72:                                               \l  %73 = load i64, i64* %10, align 8, !dbg !1632, !tbaa !1561\l  %74 = add i64 %73, 1, !dbg !1632\l  store i64 %74, i64* %10, align 8, !dbg !1632, !tbaa !1561\l  br label %20, !dbg !1633, !llvm.loop !1634\l}"];
	Node0xddcdb0 -> Node0xddc9a0;
	Node0xddce00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%75:\l75:                                               \l  %76 = load i8, i8* %13, align 1, !dbg !1638, !tbaa !1572, !range !1640\l  %77 = trunc i8 %76 to i1, !dbg !1638\l  br i1 %77, label %78, label %79, !dbg !1641\l|{<s0>T|<s1>F}}"];
	Node0xddce00:s0 -> Node0xddce50;
	Node0xddce00:s1 -> Node0xddcea0;
	Node0xddce50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%78:\l78:                                               \l  store i64 -2, i64* %5, align 8, !dbg !1642\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1642\l}"];
	Node0xddce50 -> Node0xddcef0;
	Node0xddcea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%79:\l79:                                               \l  %80 = load i64, i64* %12, align 8, !dbg !1643, !tbaa !1561\l  store i64 %80, i64* %5, align 8, !dbg !1644\l  store i32 1, i32* %14, align 4\l  br label %81, !dbg !1644\l}"];
	Node0xddcea0 -> Node0xddcef0;
	Node0xddcef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%81:\l81:                                               \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #22, !dbg !1645\l  %82 = bitcast i64* %12 to i8*, !dbg !1645\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #22, !dbg !1645\l  %83 = bitcast i64* %11 to i8*, !dbg !1645\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #22, !dbg !1645\l  %84 = bitcast i64* %10 to i8*, !dbg !1645\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #22, !dbg !1645\l  %85 = load i64, i64* %5, align 8, !dbg !1645\l  ret i64 %85, !dbg !1645\l}"];
}
