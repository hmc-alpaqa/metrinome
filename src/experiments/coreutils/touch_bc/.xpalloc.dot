digraph "CFG for 'xpalloc' function" {
	label="CFG for 'xpalloc' function";

	Node0xd3c980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = alloca i8*, align 8\l  %7 = alloca i64*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  store i8* %0, i8** %6, align 8, !tbaa !1541\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !1022, metadata\l... !DIExpression()), !dbg !1545\l  store i64* %1, i64** %7, align 8, !tbaa !1541\l  call void @llvm.dbg.declare(metadata i64** %7, metadata !1023, metadata\l... !DIExpression()), !dbg !1546\l  store i64 %2, i64* %8, align 8, !tbaa !1547\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !1024, metadata\l... !DIExpression()), !dbg !1549\l  store i64 %3, i64* %9, align 8, !tbaa !1547\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !1025, metadata\l... !DIExpression()), !dbg !1550\l  store i64 %4, i64* %10, align 8, !tbaa !1547\l  call void @llvm.dbg.declare(metadata i64* %10, metadata !1026, metadata\l... !DIExpression()), !dbg !1551\l  %15 = bitcast i64* %11 to i8*, !dbg !1552\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #22, !dbg !1552\l  call void @llvm.dbg.declare(metadata i64* %11, metadata !1027, metadata\l... !DIExpression()), !dbg !1553\l  %16 = load i64*, i64** %7, align 8, !dbg !1554, !tbaa !1541\l  %17 = load i64, i64* %16, align 8, !dbg !1555, !tbaa !1547\l  store i64 %17, i64* %11, align 8, !dbg !1553, !tbaa !1547\l  %18 = bitcast i64* %12 to i8*, !dbg !1556\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #22, !dbg !1556\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !1028, metadata\l... !DIExpression()), !dbg !1557\l  %19 = load i64, i64* %11, align 8, !dbg !1558, !tbaa !1547\l  %20 = load i64, i64* %11, align 8, !dbg !1558, !tbaa !1547\l  %21 = ashr i64 %20, 1, !dbg !1558\l  %22 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %19, i64 %21), !dbg\l... !1558\l  %23 = extractvalue \{ i64, i1 \} %22, 1, !dbg !1558\l  %24 = extractvalue \{ i64, i1 \} %22, 0, !dbg !1558\l  store i64 %24, i64* %12, align 8, !dbg !1558\l  br i1 %23, label %25, label %26, !dbg !1560\l|{<s0>T|<s1>F}}"];
	Node0xd3c980:s0 -> Node0x106e7f0;
	Node0xd3c980:s1 -> Node0x106e8e0;
	Node0x106e7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%25:\l25:                                               \l  store i64 9223372036854775807, i64* %12, align 8, !dbg !1561, !tbaa !1547\l  br label %26, !dbg !1562\l}"];
	Node0x106e7f0 -> Node0x106e8e0;
	Node0x106e8e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i64, i64* %9, align 8, !dbg !1563, !tbaa !1547\l  %28 = icmp sle i64 0, %27, !dbg !1565\l  br i1 %28, label %29, label %35, !dbg !1566\l|{<s0>T|<s1>F}}"];
	Node0x106e8e0:s0 -> Node0x106e930;
	Node0x106e8e0:s1 -> Node0x106e9d0;
	Node0x106e930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%29:\l29:                                               \l  %30 = load i64, i64* %9, align 8, !dbg !1567, !tbaa !1547\l  %31 = load i64, i64* %12, align 8, !dbg !1568, !tbaa !1547\l  %32 = icmp slt i64 %30, %31, !dbg !1569\l  br i1 %32, label %33, label %35, !dbg !1570\l|{<s0>T|<s1>F}}"];
	Node0x106e930:s0 -> Node0x106e980;
	Node0x106e930:s1 -> Node0x106e9d0;
	Node0x106e980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%33:\l33:                                               \l  %34 = load i64, i64* %9, align 8, !dbg !1571, !tbaa !1547\l  store i64 %34, i64* %12, align 8, !dbg !1572, !tbaa !1547\l  br label %35, !dbg !1573\l}"];
	Node0x106e980 -> Node0x106e9d0;
	Node0x106e9d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = bitcast i64* %13 to i8*, !dbg !1574\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #22, !dbg !1574\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !1029, metadata\l... !DIExpression()), !dbg !1575\l  %37 = bitcast i64* %14 to i8*, !dbg !1576\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #22, !dbg !1576\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !1030, metadata\l... !DIExpression()), !dbg !1577\l  %38 = load i64, i64* %12, align 8, !dbg !1578, !tbaa !1547\l  %39 = load i64, i64* %10, align 8, !dbg !1578, !tbaa !1547\l  %40 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %38, i64 %39), !dbg\l... !1578\l  %41 = extractvalue \{ i64, i1 \} %40, 1, !dbg !1578\l  %42 = extractvalue \{ i64, i1 \} %40, 0, !dbg !1578\l  store i64 %42, i64* %13, align 8, !dbg !1578\l  br i1 %41, label %43, label %44, !dbg !1578\l|{<s0>T|<s1>F}}"];
	Node0x106e9d0:s0 -> Node0x106ea20;
	Node0x106e9d0:s1 -> Node0x106ea70;
	Node0x106ea20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%43:\l43:                                               \l  br label %50, !dbg !1578\l}"];
	Node0x106ea20 -> Node0x106eac0;
	Node0x106ea70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%44:\l44:                                               \l  %45 = load i64, i64* %13, align 8, !dbg !1579, !tbaa !1547\l  %46 = icmp slt i64 %45, 128, !dbg !1580\l  %47 = zext i1 %46 to i64, !dbg !1579\l  %48 = select i1 %46, i32 128, i32 0, !dbg !1579\l  %49 = sext i32 %48 to i64, !dbg !1579\l  br label %50, !dbg !1578\l}"];
	Node0x106ea70 -> Node0x106eac0;
	Node0x106eac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i64 [ 9223372036854775807, %43 ], [ %49, %44 ], !dbg !1578\l  store i64 %51, i64* %14, align 8, !dbg !1577, !tbaa !1547\l  %52 = load i64, i64* %14, align 8, !dbg !1581, !tbaa !1547\l  %53 = icmp ne i64 %52, 0, !dbg !1581\l  br i1 %53, label %54, label %63, !dbg !1583\l|{<s0>T|<s1>F}}"];
	Node0x106eac0:s0 -> Node0x106eb10;
	Node0x106eac0:s1 -> Node0x106eb60;
	Node0x106eb10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%54:\l54:                                               \l  %55 = load i64, i64* %14, align 8, !dbg !1584, !tbaa !1547\l  %56 = load i64, i64* %10, align 8, !dbg !1586, !tbaa !1547\l  %57 = sdiv i64 %55, %56, !dbg !1587\l  store i64 %57, i64* %12, align 8, !dbg !1588, !tbaa !1547\l  %58 = load i64, i64* %14, align 8, !dbg !1589, !tbaa !1547\l  %59 = load i64, i64* %14, align 8, !dbg !1590, !tbaa !1547\l  %60 = load i64, i64* %10, align 8, !dbg !1591, !tbaa !1547\l  %61 = srem i64 %59, %60, !dbg !1592\l  %62 = sub nsw i64 %58, %61, !dbg !1593\l  store i64 %62, i64* %13, align 8, !dbg !1594, !tbaa !1547\l  br label %63, !dbg !1595\l}"];
	Node0x106eb10 -> Node0x106eb60;
	Node0x106eb60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = load i8*, i8** %6, align 8, !dbg !1596, !tbaa !1541\l  %65 = icmp ne i8* %64, null, !dbg !1596\l  br i1 %65, label %68, label %66, !dbg !1598\l|{<s0>T|<s1>F}}"];
	Node0x106eb60:s0 -> Node0x106ec00;
	Node0x106eb60:s1 -> Node0x106ebb0;
	Node0x106ebb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%66:\l66:                                               \l  %67 = load i64*, i64** %7, align 8, !dbg !1599, !tbaa !1541\l  store i64 0, i64* %67, align 8, !dbg !1600, !tbaa !1547\l  br label %68, !dbg !1601\l}"];
	Node0x106ebb0 -> Node0x106ec00;
	Node0x106ec00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = load i64, i64* %12, align 8, !dbg !1602, !tbaa !1547\l  %70 = load i64, i64* %11, align 8, !dbg !1604, !tbaa !1547\l  %71 = sub nsw i64 %69, %70, !dbg !1605\l  %72 = load i64, i64* %8, align 8, !dbg !1606, !tbaa !1547\l  %73 = icmp slt i64 %71, %72, !dbg !1607\l  br i1 %73, label %74, label %94, !dbg !1608\l|{<s0>T|<s1>F}}"];
	Node0x106ec00:s0 -> Node0x106ec50;
	Node0x106ec00:s1 -> Node0x106ede0;
	Node0x106ec50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%74:\l74:                                               \l  %75 = load i64, i64* %11, align 8, !dbg !1609, !tbaa !1547\l  %76 = load i64, i64* %8, align 8, !dbg !1609, !tbaa !1547\l  %77 = call \{ i64, i1 \} @llvm.sadd.with.overflow.i64(i64 %75, i64 %76), !dbg\l... !1609\l  %78 = extractvalue \{ i64, i1 \} %77, 1, !dbg !1609\l  %79 = extractvalue \{ i64, i1 \} %77, 0, !dbg !1609\l  store i64 %79, i64* %12, align 8, !dbg !1609\l  br i1 %78, label %93, label %80, !dbg !1610\l|{<s0>T|<s1>F}}"];
	Node0x106ec50:s0 -> Node0x106ed90;
	Node0x106ec50:s1 -> Node0x106eca0;
	Node0x106eca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%80:\l80:                                               \l  %81 = load i64, i64* %9, align 8, !dbg !1611, !tbaa !1547\l  %82 = icmp sle i64 0, %81, !dbg !1612\l  br i1 %82, label %83, label %87, !dbg !1613\l|{<s0>T|<s1>F}}"];
	Node0x106eca0:s0 -> Node0x106ecf0;
	Node0x106eca0:s1 -> Node0x106ed40;
	Node0x106ecf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%83:\l83:                                               \l  %84 = load i64, i64* %9, align 8, !dbg !1614, !tbaa !1547\l  %85 = load i64, i64* %12, align 8, !dbg !1615, !tbaa !1547\l  %86 = icmp slt i64 %84, %85, !dbg !1616\l  br i1 %86, label %93, label %87, !dbg !1617\l|{<s0>T|<s1>F}}"];
	Node0x106ecf0:s0 -> Node0x106ed90;
	Node0x106ecf0:s1 -> Node0x106ed40;
	Node0x106ed40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%87:\l87:                                               \l  %88 = load i64, i64* %12, align 8, !dbg !1618, !tbaa !1547\l  %89 = load i64, i64* %10, align 8, !dbg !1618, !tbaa !1547\l  %90 = call \{ i64, i1 \} @llvm.smul.with.overflow.i64(i64 %88, i64 %89), !dbg\l... !1618\l  %91 = extractvalue \{ i64, i1 \} %90, 1, !dbg !1618\l  %92 = extractvalue \{ i64, i1 \} %90, 0, !dbg !1618\l  store i64 %92, i64* %13, align 8, !dbg !1618\l  br i1 %91, label %93, label %94, !dbg !1619\l|{<s0>T|<s1>F}}"];
	Node0x106ed40:s0 -> Node0x106ed90;
	Node0x106ed40:s1 -> Node0x106ede0;
	Node0x106ed90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%93:\l93:                                               \l  call void @xalloc_die() #23, !dbg !1620\l  unreachable, !dbg !1620\l}"];
	Node0x106ede0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  %95 = load i8*, i8** %6, align 8, !dbg !1621, !tbaa !1541\l  %96 = load i64, i64* %13, align 8, !dbg !1622, !tbaa !1547\l  %97 = call i8* @xrealloc(i8* noundef %95, i64 noundef %96) #24, !dbg !1623\l  store i8* %97, i8** %6, align 8, !dbg !1624, !tbaa !1541\l  %98 = load i64, i64* %12, align 8, !dbg !1625, !tbaa !1547\l  %99 = load i64*, i64** %7, align 8, !dbg !1626, !tbaa !1541\l  store i64 %98, i64* %99, align 8, !dbg !1627, !tbaa !1547\l  %100 = load i8*, i8** %6, align 8, !dbg !1628, !tbaa !1541\l  %101 = bitcast i64* %14 to i8*, !dbg !1629\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #22, !dbg !1629\l  %102 = bitcast i64* %13 to i8*, !dbg !1629\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #22, !dbg !1629\l  %103 = bitcast i64* %12 to i8*, !dbg !1629\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #22, !dbg !1629\l  %104 = bitcast i64* %11 to i8*, !dbg !1629\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %104) #22, !dbg !1629\l  ret i8* %100, !dbg !1630\l}"];
}
