digraph "CFG for 'hex_equal' function" {
	label="CFG for 'hex_equal' function";

	Node0x1263d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  store i8* %0, i8** %3, align 8, !tbaa !873\l  call void @llvm.dbg.declare(metadata i8** %3, metadata !112, metadata\l... !DIExpression()), !dbg !877\l  store i8* %1, i8** %4, align 8, !tbaa !873\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !113, metadata\l... !DIExpression()), !dbg !878\l  %7 = bitcast i64* %5 to i8*, !dbg !879\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #22, !dbg !879\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !114, metadata\l... !DIExpression()), !dbg !880\l  %8 = load i64, i64* @digest_hex_bytes, align 8, !dbg !881, !tbaa !882\l  %9 = udiv i64 %8, 2, !dbg !884\l  store i64 %9, i64* %5, align 8, !dbg !880, !tbaa !882\l  %10 = bitcast i64* %6 to i8*, !dbg !885\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #22, !dbg !885\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !115, metadata\l... !DIExpression()), !dbg !886\l  store i64 0, i64* %6, align 8, !dbg !887, !tbaa !882\l  br label %11, !dbg !889\l}"];
	Node0x1263d60 -> Node0x1263db0;
	Node0x1263db0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l11:                                               \l  %12 = load i64, i64* %6, align 8, !dbg !890, !tbaa !882\l  %13 = load i64, i64* %5, align 8, !dbg !892, !tbaa !882\l  %14 = icmp ult i64 %12, %13, !dbg !893\l  br i1 %14, label %15, label %59, !dbg !894\l|{<s0>T|<s1>F}}"];
	Node0x1263db0:s0 -> Node0x1263e00;
	Node0x1263db0:s1 -> Node0x1263f90;
	Node0x1263e00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%15:\l15:                                               \l  %16 = load i8*, i8** %3, align 8, !dbg !895, !tbaa !873\l  %17 = load i64, i64* %6, align 8, !dbg !898, !tbaa !882\l  %18 = mul i64 2, %17, !dbg !899\l  %19 = getelementptr inbounds i8, i8* %16, i64 %18, !dbg !895\l  %20 = load i8, i8* %19, align 1, !dbg !895, !tbaa !900\l  %21 = zext i8 %20 to i32, !dbg !895\l  %22 = call i32 @tolower(i32 noundef %21) #23, !dbg !901\l  %23 = load i8*, i8** %4, align 8, !dbg !902, !tbaa !873\l  %24 = load i64, i64* %6, align 8, !dbg !903, !tbaa !882\l  %25 = getelementptr inbounds i8, i8* %23, i64 %24, !dbg !902\l  %26 = load i8, i8* %25, align 1, !dbg !902, !tbaa !900\l  %27 = zext i8 %26 to i32, !dbg !902\l  %28 = ashr i32 %27, 4, !dbg !904\l  %29 = sext i32 %28 to i64, !dbg !905\l  %30 = getelementptr inbounds [16 x i8], [16 x i8]* @hex_equal.bin2hex, i64\l... 0, i64 %29, !dbg !905\l  %31 = load i8, i8* %30, align 1, !dbg !905, !tbaa !900\l  %32 = sext i8 %31 to i32, !dbg !905\l  %33 = icmp ne i32 %22, %32, !dbg !906\l  br i1 %33, label %54, label %34, !dbg !907\l|{<s0>T|<s1>F}}"];
	Node0x1263e00:s0 -> Node0x1263ea0;
	Node0x1263e00:s1 -> Node0x1263e50;
	Node0x1263e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%34:\l34:                                               \l  %35 = load i8*, i8** %3, align 8, !dbg !908, !tbaa !873\l  %36 = load i64, i64* %6, align 8, !dbg !909, !tbaa !882\l  %37 = mul i64 2, %36, !dbg !910\l  %38 = add i64 %37, 1, !dbg !911\l  %39 = getelementptr inbounds i8, i8* %35, i64 %38, !dbg !908\l  %40 = load i8, i8* %39, align 1, !dbg !908, !tbaa !900\l  %41 = zext i8 %40 to i32, !dbg !908\l  %42 = call i32 @tolower(i32 noundef %41) #23, !dbg !912\l  %43 = load i8*, i8** %4, align 8, !dbg !913, !tbaa !873\l  %44 = load i64, i64* %6, align 8, !dbg !914, !tbaa !882\l  %45 = getelementptr inbounds i8, i8* %43, i64 %44, !dbg !913\l  %46 = load i8, i8* %45, align 1, !dbg !913, !tbaa !900\l  %47 = zext i8 %46 to i32, !dbg !913\l  %48 = and i32 %47, 15, !dbg !915\l  %49 = sext i32 %48 to i64, !dbg !916\l  %50 = getelementptr inbounds [16 x i8], [16 x i8]* @hex_equal.bin2hex, i64\l... 0, i64 %49, !dbg !916\l  %51 = load i8, i8* %50, align 1, !dbg !916, !tbaa !900\l  %52 = sext i8 %51 to i32, !dbg !917\l  %53 = icmp ne i32 %42, %52, !dbg !918\l  br i1 %53, label %54, label %55, !dbg !919\l|{<s0>T|<s1>F}}"];
	Node0x1263e50:s0 -> Node0x1263ea0;
	Node0x1263e50:s1 -> Node0x1263ef0;
	Node0x1263ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%54:\l54:                                               \l  br label %59, !dbg !920\l}"];
	Node0x1263ea0 -> Node0x1263f90;
	Node0x1263ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%55:\l55:                                               \l  br label %56, !dbg !921\l}"];
	Node0x1263ef0 -> Node0x1263f40;
	Node0x1263f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%56:\l56:                                               \l  %57 = load i64, i64* %6, align 8, !dbg !922, !tbaa !882\l  %58 = add i64 %57, 1, !dbg !922\l  store i64 %58, i64* %6, align 8, !dbg !922, !tbaa !882\l  br label %11, !dbg !923, !llvm.loop !924\l}"];
	Node0x1263f40 -> Node0x1263db0;
	Node0x1263f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%59:\l59:                                               \l  %60 = load i64, i64* %6, align 8, !dbg !928, !tbaa !882\l  %61 = load i64, i64* %5, align 8, !dbg !929, !tbaa !882\l  %62 = icmp eq i64 %60, %61, !dbg !930\l  %63 = bitcast i64* %6 to i8*, !dbg !931\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #22, !dbg !931\l  %64 = bitcast i64* %5 to i8*, !dbg !931\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #22, !dbg !931\l  ret i1 %62, !dbg !932\l}"];
}
