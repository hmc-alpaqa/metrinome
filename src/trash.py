from sympy import *
x, T0= symbols('x T0')
init_printing(use_unicode=True)

FCAPCgamma =  T0**2*x**23/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + 3*T0**2*x**22/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + 4*T0**2*x**21/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + T0**2*x**20/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 5*T0**2*x**19/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 8*T0**2*x**18/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 7*T0**2*x**17/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 3*T0**2*x**16/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + T0**2*x**15/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + 6*T0**2*x**14/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + 9*T0**2*x**13/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + 6*T0**2*x**12/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + T0**2*x**11/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 3*T0**2*x**10/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 3*T0**2*x**9/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 3*T0**2*x**8/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 2*T0**2*x**7/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + T0**2*x**5/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + T0**2*x**4/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + 2*T0*x**25/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + 6*T0*x**24/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + 9*T0*x**23/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + 6*T0*x**22/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 2*T0*x**21/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 8*T0*x**20/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 12*T0*x**19/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 12*T0*x**18/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 8*T0*x**17/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + T0*x**16/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + 8*T0*x**15/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + T0*x**14 + 7*T0*x**14/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + T0*x**13 + 5*T0*x**13/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + 2*T0*x**12/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - T0*x**11 - T0*x**10 - 2*T0*x**10/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - T0*x**9 - 2*T0*x**9/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 2*T0*x**8 - T0*x**7 + T0*x**6 + 2*T0*x**5 + T0*x**4 + T0*x**3 - T0 + x**27/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + 3*x**26/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + 5*x**25/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + 5*x**24/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + 3*x**23/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + x**22/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 2*x**21/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 4*x**20/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 4*x**19/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - 2*x**18/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + x**16 + x**15 + x**15/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) + x**14 + x**14/(T0*x**9 + T0*x**8 - T0*x**6 - T0*x**5 - T0*x**3 + T0 + x**11 + x**10 + x**9 - x**5) - x**11 - 2*x**10 - x**9 + x**5
GETRGFgamma = (-T0*(x**11 + x**10 - x**5 + (x**5 + x**4 - 1)*(x**6 + x**5 + x**4 - 1)) + x**3*(-T0*(x**5 + x**4 - 1) + x**2*(T0*x**9 + T0*x**8 - T0*x**3 + x**11 + x**10 + x**9 - x**5 + (x**5 + x**4 - 1)*(T0*x**4 + T0*x**3 + T0*x**2 + x**6 + x**5 + x**4 - 1))))/(x**11 + x**10 - x**5 + (x**5 + x**4 - 1)*(x**6 + x**5 + x**4 - 1))

print("old fcapc")
print(simplify(FCAPCgamma))

print("getrgf:")
print(simplify(expand (GETRGFgamma)))
